   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_hash.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HASH_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	HASH_DeInit
  22              		.thumb
  23              		.thumb_func
  25              	HASH_DeInit:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @file    stm32f4xx_hash.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          functionalities of the HASH / HMAC Processor (HASH) peripheral:           
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           - Initialization and Configuration functions
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           - Message Digest generation functions
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           - context swapping functions   
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           - DMA interface function       
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           - Interrupts and flags management       
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *  @verbatim
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                               
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          ===================================================================      
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                                   How to use this driver
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          ===================================================================
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          HASH operation : 
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          ----------------                   
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         1. Enable the HASH controller clock using 
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_HASH, ENABLE) function.
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         2. Initialise the HASH using HASH_Init() function. 
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *               
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         3 . Reset the HASH processor core, so that the HASH will be ready 
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             to compute he message digest of a new message by using 
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             HASH_Reset() function.
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         4. Enable the HASH controller using the HASH_Cmd() function. 
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         5. if using DMA for Data input transfer, Activate the DMA Request 
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            using HASH_DMACmd() function 
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                    
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         6. if DMA is not used for data transfer, use HASH_DataIn() function 
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            to enter data to IN FIFO.
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         7. Configure the Number of valid bits in last word of the message 
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            using HASH_SetLastWordValidBitsNbr() function.
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         8. if the message length is not an exact multiple of 512 bits, 
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            then the function HASH_StartDigest() must be called to 
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            launch the computation of the final digest.     
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         9. Once computed, the digest can be read using HASH_GetDigest() 
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            function.         
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                   
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *        10. To control HASH events you can use one of the following 
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *              two methods:
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *               a- Check on HASH flags using the HASH_GetFlagStatus() function.  
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *               b- Use HASH interrupts through the function HASH_ITConfig() at 
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                  initialization phase and HASH_GetITStatus() function into 
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                  interrupt routines in hashing phase.
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          After checking on a flag you should clear it using HASH_ClearFlag()
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          function. And after checking on an interrupt event you should 
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          clear it using HASH_ClearITPendingBit() function.     
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                     
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *        11. Save and restore hash processor context using 
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            HASH_SaveContext() and HASH_RestoreContext() functions.     
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *              
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          HMAC operation : 
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          ----------------  
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          The HMAC algorithm is used for message authentication, by 
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          irreversibly binding the message being processed to a key chosen 
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          by the user. 
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          For HMAC specifications, refer to "HMAC: keyed-hashing for message 
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          authentication, H. Krawczyk, M. Bellare, R. Canetti, February 1997"
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          Basically, the HMAC algorithm consists of two nested hash operations:
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          HMAC(message) = Hash[((key | pad) XOR 0x5C) | Hash(((key | pad) XOR 0x36) | message)]
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          where:
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          - "pad" is a sequence of zeroes needed to extend the key to the 
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                  length of the underlying hash function data block (that is 
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                  512 bits for both the SHA-1 and MD5 hash algorithms)
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          - "|"   represents the concatenation operator 
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         To compute the HMAC, four different phases are required:
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                    
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         1.  Initialise the HASH using HASH_Init() function to do HMAC 
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             operation. 
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *                
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         2.  The key (to be used for the inner hash function) is then given 
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             to the core. This operation follows the same mechanism as the 
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             one used to send the message in the hash operation (that is, 
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             by HASH_DataIn() function and, finally, 
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             HASH_StartDigest() function.
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         3.  Once the last word has been entered and computation has started, 
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             the hash processor elaborates the key. It is then ready to 
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             accept the message text using the same mechanism as the one 
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             used to send the message in the hash operation.
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *       
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         4.  After the first hash round, the hash processor returns "ready" 
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             to indicate that it is ready to receive the key to be used for 
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             the outer hash function (normally, this key is the same as the 
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             one used for the inner hash function). When the last word of 
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             the key is entered and computation starts, the HMAC result is 
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             made available using HASH_GetDigest() function.
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *               
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *              
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *  @endverbatim
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   ******************************************************************************
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @attention
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   ******************************************************************************  
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /* Includes ------------------------------------------------------------------*/
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** #include "stm32f4xx_hash.h"
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** #include "stm32f4xx_rcc.h"
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @defgroup HASH 
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief HASH driver modules
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */ 
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /* Private typedef -----------------------------------------------------------*/
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /* Private define ------------------------------------------------------------*/
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /* Private macro -------------------------------------------------------------*/
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /* Private variables ---------------------------------------------------------*/
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /* Private function prototypes -----------------------------------------------*/
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /* Private functions ---------------------------------------------------------*/ 
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @defgroup HASH_Private_Functions
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */ 
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @defgroup HASH_Group1 Initialization and Configuration functions
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *  @brief    Initialization and Configuration functions 
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @verbatim    
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       Initialization and Configuration functions
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================  
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   This section provides functions allowing to 
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    - Initialize the HASH peripheral
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    - Configure the HASH Processor 
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - MD5/SHA1, 
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - HASH/HMAC, 
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - datatype 
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - HMAC Key (if mode = HMAC)
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    - Reset the HASH Processor 
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @endverbatim
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Deinitializes the HASH peripheral registers to their default reset values
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  None
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_DeInit(void)
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
  28              		.loc 1 172 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Enable HASH reset state */
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_HASH, ENABLE);
  37              		.loc 1 174 0
  38 0002 2020     		movs	r0, #32
  39 0004 0121     		movs	r1, #1
  40 0006 FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
  41              	.LVL0:
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Release HASH from reset state */
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_HASH, DISABLE);
  42              		.loc 1 176 0
  43 000a 2020     		movs	r0, #32
  44 000c 0021     		movs	r1, #0
  45 000e FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
  46              	.LVL1:
  47 0012 08BD     		pop	{r3, pc}
  48              		.cfi_endproc
  49              	.LFE110:
  51              		.section	.text.HASH_Init,"ax",%progbits
  52              		.align	2
  53              		.global	HASH_Init
  54              		.thumb
  55              		.thumb_func
  57              	HASH_Init:
  58              	.LFB111:
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Initializes the HASH peripheral according to the specified parameters
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         in the HASH_InitStruct structure.
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   the hash processor is reset when calling this function so that the
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         HASH will be ready to compute the message digest of a new message.
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         There is no need to call HASH_Reset() function.           
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_InitStruct: pointer to a HASH_InitTypeDef structure that contains
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         the configuration information for the HASH peripheral.
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   The field HASH_HMACKeyType in HASH_InitTypeDef must be filled only 
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          if the algorithm mode is HMAC.       
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_Init(HASH_InitTypeDef* HASH_InitStruct)
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
  59              		.loc 1 192 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
  64              	.LVL2:
  65 0000 10B4     		push	{r4}
  66              	.LCFI1:
  67              		.cfi_def_cfa_offset 4
  68              		.cfi_offset 4, -4
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_ALGOSELECTION(HASH_InitStruct->HASH_AlgoSelection));
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_DATATYPE(HASH_InitStruct->HASH_DataType));
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_ALGOMODE(HASH_InitStruct->HASH_AlgoMode));
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Configure the Algorithm used, algorithm mode and the datatype */
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR &= ~ (HASH_CR_ALGO | HASH_CR_DATATYPE | HASH_CR_MODE);
  69              		.loc 1 199 0
  70 0002 4FF48063 		mov	r3, #1024
  71 0006 C5F20603 		movt	r3, 20486
  72 000a 1A68     		ldr	r2, [r3]
  73 000c 22F0F002 		bic	r2, r2, #240
  74 0010 1A60     		str	r2, [r3]
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR |= (HASH_InitStruct->HASH_AlgoSelection | \
  75              		.loc 1 200 0
  76 0012 1C68     		ldr	r4, [r3]
  77 0014 0268     		ldr	r2, [r0]
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                HASH_InitStruct->HASH_DataType | \
  78              		.loc 1 201 0
  79 0016 8168     		ldr	r1, [r0, #8]
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR |= (HASH_InitStruct->HASH_AlgoSelection | \
  80              		.loc 1 200 0
  81 0018 1143     		orrs	r1, r1, r2
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                HASH_InitStruct->HASH_AlgoMode);
  82              		.loc 1 202 0
  83 001a 4268     		ldr	r2, [r0, #4]
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                HASH_InitStruct->HASH_DataType | \
  84              		.loc 1 201 0
  85 001c 0A43     		orrs	r2, r2, r1
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR |= (HASH_InitStruct->HASH_AlgoSelection | \
  86              		.loc 1 200 0
  87 001e 2243     		orrs	r2, r2, r4
  88 0020 1A60     		str	r2, [r3]
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* if algorithm mode is HMAC, set the Key */  
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   if(HASH_InitStruct->HASH_AlgoMode == HASH_AlgoMode_HMAC) 
  89              		.loc 1 205 0
  90 0022 4368     		ldr	r3, [r0, #4]
  91 0024 402B     		cmp	r3, #64
  92 0026 0BD1     		bne	.L3
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     assert_param(IS_HASH_HMAC_KEYTYPE(HASH_InitStruct->HASH_HMACKeyType));
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     HASH->CR &= ~HASH_CR_LKEY;
  93              		.loc 1 208 0
  94 0028 4FF48063 		mov	r3, #1024
  95 002c C5F20603 		movt	r3, 20486
  96 0030 1A68     		ldr	r2, [r3]
  97 0032 22F48032 		bic	r2, r2, #65536
  98 0036 1A60     		str	r2, [r3]
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     HASH->CR |= HASH_InitStruct->HASH_HMACKeyType;
  99              		.loc 1 209 0
 100 0038 1968     		ldr	r1, [r3]
 101 003a C268     		ldr	r2, [r0, #12]
 102 003c 0A43     		orrs	r2, r2, r1
 103 003e 1A60     		str	r2, [r3]
 104              	.L3:
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Reset the HASH processor core, so that the HASH will be ready to compute 
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      the message digest of a new message */
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR |= HASH_CR_INIT;  
 105              		.loc 1 214 0
 106 0040 4FF48063 		mov	r3, #1024
 107 0044 C5F20603 		movt	r3, 20486
 108 0048 1A68     		ldr	r2, [r3]
 109 004a 42F00402 		orr	r2, r2, #4
 110 004e 1A60     		str	r2, [r3]
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 111              		.loc 1 215 0
 112 0050 5DF8044B 		ldr	r4, [sp], #4
 113 0054 7047     		bx	lr
 114              		.cfi_endproc
 115              	.LFE111:
 117 0056 00BF     		.section	.text.HASH_StructInit,"ax",%progbits
 118              		.align	2
 119              		.global	HASH_StructInit
 120              		.thumb
 121              		.thumb_func
 123              	HASH_StructInit:
 124              	.LFB112:
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Fills each HASH_InitStruct member with its default value.
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_InitStruct : pointer to a HASH_InitTypeDef structure which will
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          be initialized.  
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *  @note  The default values set are : Processor mode is HASH, Algorithm selected is SHA1,
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          Data type selected is 32b and HMAC Key Type is short key.  
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_StructInit(HASH_InitTypeDef* HASH_InitStruct)
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 125              		.loc 1 226 0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              		@ link register save eliminated.
 130              	.LVL3:
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Initialize the HASH_AlgoSelection member */
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_InitStruct->HASH_AlgoSelection = HASH_AlgoSelection_SHA1;
 131              		.loc 1 228 0
 132 0000 0023     		movs	r3, #0
 133 0002 0360     		str	r3, [r0]
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Initialize the HASH_AlgoMode member */
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_InitStruct->HASH_AlgoMode = HASH_AlgoMode_HASH;
 134              		.loc 1 231 0
 135 0004 4360     		str	r3, [r0, #4]
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Initialize the HASH_DataType member */
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_InitStruct->HASH_DataType = HASH_DataType_32b;
 136              		.loc 1 234 0
 137 0006 8360     		str	r3, [r0, #8]
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Initialize the HASH_HMACKeyType member */
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_InitStruct->HASH_HMACKeyType = HASH_HMACKeyType_ShortKey;
 138              		.loc 1 237 0
 139 0008 C360     		str	r3, [r0, #12]
 140 000a 7047     		bx	lr
 141              		.cfi_endproc
 142              	.LFE112:
 144              		.section	.text.HASH_Reset,"ax",%progbits
 145              		.align	2
 146              		.global	HASH_Reset
 147              		.thumb
 148              		.thumb_func
 150              	HASH_Reset:
 151              	.LFB113:
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Resets the HASH processor core, so that the HASH will be ready
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         to compute the message digest of a new message.
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   Calling this function will clear the HASH_SR_DCIS (Digest calculation 
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         completion interrupt status) bit corresponding to HASH_IT_DCI 
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         interrupt and HASH_FLAG_DCIS flag. 
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  None
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_Reset(void)
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 152              		.loc 1 250 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Reset the HASH processor core */
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR |= HASH_CR_INIT;
 157              		.loc 1 252 0
 158 0000 4FF48063 		mov	r3, #1024
 159 0004 C5F20603 		movt	r3, 20486
 160 0008 1A68     		ldr	r2, [r3]
 161 000a 42F00402 		orr	r2, r2, #4
 162 000e 1A60     		str	r2, [r3]
 163 0010 7047     		bx	lr
 164              		.cfi_endproc
 165              	.LFE113:
 167 0012 00BF     		.section	.text.HASH_SetLastWordValidBitsNbr,"ax",%progbits
 168              		.align	2
 169              		.global	HASH_SetLastWordValidBitsNbr
 170              		.thumb
 171              		.thumb_func
 173              	HASH_SetLastWordValidBitsNbr:
 174              	.LFB114:
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @}
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @defgroup HASH_Group2 Message Digest generation functions
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *  @brief    Message Digest generation functions
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @verbatim    
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       Message Digest generation functions
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================  
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   This section provides functions allowing the generation of message digest: 
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   - Push data in the IN FIFO : using HASH_DataIn()
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   - Get the number of words set in IN FIFO, use HASH_GetInFIFOWordsNbr()  
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   - set the last word valid bits number using HASH_SetLastWordValidBitsNbr() 
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   - start digest calculation : using HASH_StartDigest()
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   - Get the Digest message : using HASH_GetDigest()
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @endverbatim
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Configure the Number of valid bits in last word of the message
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  ValidNumber: Number of valid bits in last word of the message.
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           This parameter must be a number between 0 and 0x1F.
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             - 0x00: All 32 bits of the last data written are valid
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             - 0x01: Only bit [0] of the last data written is valid
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             - 0x02: Only bits[1:0] of the last data written are valid
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             - 0x03: Only bits[2:0] of the last data written are valid
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             - ...
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *             - 0x1F: Only bits[30:0] of the last data written are valid    
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   The Number of valid bits must be set before to start the message 
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         digest competition (in Hash and HMAC) and key treatment(in HMAC).    
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_SetLastWordValidBitsNbr(uint16_t ValidNumber)
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 175              		.loc 1 292 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 180              	.LVL4:
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_VALIDBITSNUMBER(ValidNumber));
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Configure the Number of valid bits in last word of the message */
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->STR &= ~(HASH_STR_NBW);
 181              		.loc 1 297 0
 182 0000 4FF48063 		mov	r3, #1024
 183 0004 C5F20603 		movt	r3, 20486
 184 0008 9A68     		ldr	r2, [r3, #8]
 185 000a 22F01F02 		bic	r2, r2, #31
 186 000e 9A60     		str	r2, [r3, #8]
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->STR |= ValidNumber;
 187              		.loc 1 298 0
 188 0010 9A68     		ldr	r2, [r3, #8]
 189 0012 1043     		orrs	r0, r0, r2
 190              	.LVL5:
 191 0014 9860     		str	r0, [r3, #8]
 192 0016 7047     		bx	lr
 193              		.cfi_endproc
 194              	.LFE114:
 196              		.section	.text.HASH_DataIn,"ax",%progbits
 197              		.align	2
 198              		.global	HASH_DataIn
 199              		.thumb
 200              		.thumb_func
 202              	HASH_DataIn:
 203              	.LFB115:
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Writes data in the Data Input FIFO
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  Data: new data of the message to be processed.
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_DataIn(uint32_t Data)
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 204              		.loc 1 307 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209              	.LVL6:
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Write in the DIN register a new data */
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->DIN = Data;
 210              		.loc 1 309 0
 211 0000 4FF48063 		mov	r3, #1024
 212 0004 C5F20603 		movt	r3, 20486
 213 0008 5860     		str	r0, [r3, #4]
 214 000a 7047     		bx	lr
 215              		.cfi_endproc
 216              	.LFE115:
 218              		.section	.text.HASH_GetInFIFOWordsNbr,"ax",%progbits
 219              		.align	2
 220              		.global	HASH_GetInFIFOWordsNbr
 221              		.thumb
 222              		.thumb_func
 224              	HASH_GetInFIFOWordsNbr:
 225              	.LFB116:
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Returns the number of words already pushed into the IN FIFO.
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  None
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval The value of words already pushed into the IN FIFO.
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** uint8_t HASH_GetInFIFOWordsNbr(void)
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 226              		.loc 1 318 0
 227              		.cfi_startproc
 228              		@ args = 0, pretend = 0, frame = 0
 229              		@ frame_needed = 0, uses_anonymous_args = 0
 230              		@ link register save eliminated.
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Return the value of NBW bits */
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   return ((HASH->CR & HASH_CR_NBW) >> 8);
 231              		.loc 1 320 0
 232 0000 4FF48063 		mov	r3, #1024
 233 0004 C5F20603 		movt	r3, 20486
 234 0008 1868     		ldr	r0, [r3]
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 235              		.loc 1 321 0
 236 000a C0F30320 		ubfx	r0, r0, #8, #4
 237 000e 7047     		bx	lr
 238              		.cfi_endproc
 239              	.LFE116:
 241              		.section	.text.HASH_GetDigest,"ax",%progbits
 242              		.align	2
 243              		.global	HASH_GetDigest
 244              		.thumb
 245              		.thumb_func
 247              	HASH_GetDigest:
 248              	.LFB117:
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Provides the message digest result.
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   In MD5 mode, Data[4] filed of HASH_MsgDigest structure is not used
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         and is read as zero.  
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_MessageDigest: pointer to a HASH_MsgDigest structure which will 
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         hold the message digest result 
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_GetDigest(HASH_MsgDigest* HASH_MessageDigest)
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 249              		.loc 1 332 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 254              	.LVL7:
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Get the data field */
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[0] = HASH->HR[0];
 255              		.loc 1 334 0
 256 0000 4FF48063 		mov	r3, #1024
 257 0004 C5F20603 		movt	r3, 20486
 258 0008 DA68     		ldr	r2, [r3, #12]
 259 000a 0260     		str	r2, [r0]
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[1] = HASH->HR[1];
 260              		.loc 1 335 0
 261 000c 1A69     		ldr	r2, [r3, #16]
 262 000e 4260     		str	r2, [r0, #4]
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[2] = HASH->HR[2];
 263              		.loc 1 336 0
 264 0010 5A69     		ldr	r2, [r3, #20]
 265 0012 8260     		str	r2, [r0, #8]
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[3] = HASH->HR[3];
 266              		.loc 1 337 0
 267 0014 9A69     		ldr	r2, [r3, #24]
 268 0016 C260     		str	r2, [r0, #12]
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_MessageDigest->Data[4] = HASH->HR[4];
 269              		.loc 1 338 0
 270 0018 DB69     		ldr	r3, [r3, #28]
 271 001a 0361     		str	r3, [r0, #16]
 272 001c 7047     		bx	lr
 273              		.cfi_endproc
 274              	.LFE117:
 276 001e 00BF     		.section	.text.HASH_StartDigest,"ax",%progbits
 277              		.align	2
 278              		.global	HASH_StartDigest
 279              		.thumb
 280              		.thumb_func
 282              	HASH_StartDigest:
 283              	.LFB118:
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Starts the message padding and calculation of the final message     
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  None
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_StartDigest(void)
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 284              		.loc 1 347 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              		@ link register save eliminated.
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Start the Digest calculation */
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->STR |= HASH_STR_DCAL;
 289              		.loc 1 349 0
 290 0000 4FF48063 		mov	r3, #1024
 291 0004 C5F20603 		movt	r3, 20486
 292 0008 9A68     		ldr	r2, [r3, #8]
 293 000a 42F48072 		orr	r2, r2, #256
 294 000e 9A60     		str	r2, [r3, #8]
 295 0010 7047     		bx	lr
 296              		.cfi_endproc
 297              	.LFE118:
 299 0012 00BF     		.section	.text.HASH_SaveContext,"ax",%progbits
 300              		.align	2
 301              		.global	HASH_SaveContext
 302              		.thumb
 303              		.thumb_func
 305              	HASH_SaveContext:
 306              	.LFB119:
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @}
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @defgroup HASH_Group3 Context swapping functions
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *  @brief   Context swapping functions
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @verbatim   
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                              Context swapping functions
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================  
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   This section provides functions allowing to save and store HASH Context
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   It is possible to interrupt a HASH/HMAC process to perform another processing 
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   with a higher priority, and to complete the interrupted process later on, when 
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   the higher priority task is complete. To do so, the context of the interrupted 
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   task must be saved from the HASH registers to memory, and then be restored 
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   from memory to the HASH registers.
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   1. To save the current context, use HASH_SaveContext() function
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   2. To restore the saved context, use HASH_RestoreContext() function 
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @endverbatim
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Save the Hash peripheral Context. 
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   The context can be saved only when no block is currently being 
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         processed. So user must wait for DINIS = 1 (the last block has been 
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         processed and the input FIFO is empty) or NBW != 0 (the FIFO is not 
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         full and no processing is ongoing).   
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_ContextSave: pointer to a HASH_Context structure that contains
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         the repository for current context.
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_SaveContext(HASH_Context* HASH_ContextSave)
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 307              		.loc 1 390 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              		@ link register save eliminated.
 312              	.LVL8:
 313 0000 10B4     		push	{r4}
 314              	.LCFI2:
 315              		.cfi_def_cfa_offset 4
 316              		.cfi_offset 4, -4
 317              	.LVL9:
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   uint8_t i = 0;
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* save context registers */
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_ContextSave->HASH_IMR = HASH->IMR;  
 318              		.loc 1 394 0
 319 0002 4FF48063 		mov	r3, #1024
 320 0006 C5F20603 		movt	r3, 20486
 321 000a 1A6A     		ldr	r2, [r3, #32]
 322 000c 0260     		str	r2, [r0]
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_ContextSave->HASH_STR = HASH->STR;      
 323              		.loc 1 395 0
 324 000e 9A68     		ldr	r2, [r3, #8]
 325 0010 4260     		str	r2, [r0, #4]
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH_ContextSave->HASH_CR  = HASH->CR;     
 326              		.loc 1 396 0
 327 0012 1B68     		ldr	r3, [r3]
 328 0014 8360     		str	r3, [r0, #8]
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   for(i=0; i<=50;i++)
 329              		.loc 1 397 0
 330 0016 0023     		movs	r3, #0
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      HASH_ContextSave->HASH_CSR[i] = HASH->CSR[i];
 331              		.loc 1 399 0
 332 0018 4FF48064 		mov	r4, #1024
 333 001c C5F20604 		movt	r4, 20486
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   for(i=0; i<=50;i++)
 334              		.loc 1 397 0
 335 0020 08E0     		b	.L12
 336              	.LVL10:
 337              	.L13:
 338              		.loc 1 399 0 discriminator 2
 339 0022 03F13E02 		add	r2, r3, #62
 340 0026 54F82210 		ldr	r1, [r4, r2, lsl #2]
 341 002a 00EB8302 		add	r2, r0, r3, lsl #2
 342 002e D160     		str	r1, [r2, #12]
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   for(i=0; i<=50;i++)
 343              		.loc 1 397 0 discriminator 2
 344 0030 0133     		adds	r3, r3, #1
 345              	.LVL11:
 346 0032 DBB2     		uxtb	r3, r3
 347              	.LVL12:
 348              	.L12:
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   for(i=0; i<=50;i++)
 349              		.loc 1 397 0 is_stmt 0 discriminator 1
 350 0034 322B     		cmp	r3, #50
 351 0036 F4D9     		bls	.L13
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }   
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 352              		.loc 1 401 0 is_stmt 1
 353 0038 5DF8044B 		ldr	r4, [sp], #4
 354 003c 7047     		bx	lr
 355              		.cfi_endproc
 356              	.LFE119:
 358 003e 00BF     		.section	.text.HASH_RestoreContext,"ax",%progbits
 359              		.align	2
 360              		.global	HASH_RestoreContext
 361              		.thumb
 362              		.thumb_func
 364              	HASH_RestoreContext:
 365              	.LFB120:
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Restore the Hash peripheral Context.  
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   After calling this function, user can restart the processing from the
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         point where it has been interrupted.  
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_ContextRestore: pointer to a HASH_Context structure that contains
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *         the repository for saved context.
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_RestoreContext(HASH_Context* HASH_ContextRestore)  
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 366              		.loc 1 412 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 0
 369              		@ frame_needed = 0, uses_anonymous_args = 0
 370              		@ link register save eliminated.
 371              	.LVL13:
 372 0000 10B4     		push	{r4}
 373              	.LCFI3:
 374              		.cfi_def_cfa_offset 4
 375              		.cfi_offset 4, -4
 376              	.LVL14:
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   uint8_t i = 0;
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* restore context registers */
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->IMR = HASH_ContextRestore->HASH_IMR;   
 377              		.loc 1 416 0
 378 0002 0268     		ldr	r2, [r0]
 379 0004 4FF48063 		mov	r3, #1024
 380 0008 C5F20603 		movt	r3, 20486
 381 000c 1A62     		str	r2, [r3, #32]
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->STR = HASH_ContextRestore->HASH_STR;     
 382              		.loc 1 417 0
 383 000e 4268     		ldr	r2, [r0, #4]
 384 0010 9A60     		str	r2, [r3, #8]
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR = HASH_ContextRestore->HASH_CR;
 385              		.loc 1 418 0
 386 0012 8268     		ldr	r2, [r0, #8]
 387 0014 1A60     		str	r2, [r3]
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Initialize the hash processor */
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->CR |= HASH_CR_INIT; 
 388              		.loc 1 421 0
 389 0016 1A68     		ldr	r2, [r3]
 390 0018 42F00402 		orr	r2, r2, #4
 391 001c 1A60     		str	r2, [r3]
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    /* continue restoring context registers */     
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   for(i=0; i<=50;i++)
 392              		.loc 1 424 0
 393 001e 0023     		movs	r3, #0
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      HASH->CSR[i] = HASH_ContextRestore->HASH_CSR[i];
 394              		.loc 1 426 0
 395 0020 4FF48064 		mov	r4, #1024
 396 0024 C5F20604 		movt	r4, 20486
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 397              		.loc 1 424 0
 398 0028 08E0     		b	.L15
 399              	.LVL15:
 400              	.L16:
 401              		.loc 1 426 0 discriminator 2
 402 002a 00EB8302 		add	r2, r0, r3, lsl #2
 403 002e D168     		ldr	r1, [r2, #12]
 404 0030 03F13E02 		add	r2, r3, #62
 405 0034 44F82210 		str	r1, [r4, r2, lsl #2]
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 406              		.loc 1 424 0 discriminator 2
 407 0038 0133     		adds	r3, r3, #1
 408              	.LVL16:
 409 003a DBB2     		uxtb	r3, r3
 410              	.LVL17:
 411              	.L15:
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 412              		.loc 1 424 0 is_stmt 0 discriminator 1
 413 003c 322B     		cmp	r3, #50
 414 003e F4D9     		bls	.L16
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }   
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 415              		.loc 1 428 0 is_stmt 1
 416 0040 5DF8044B 		ldr	r4, [sp], #4
 417 0044 7047     		bx	lr
 418              		.cfi_endproc
 419              	.LFE120:
 421 0046 00BF     		.section	.text.HASH_DMACmd,"ax",%progbits
 422              		.align	2
 423              		.global	HASH_DMACmd
 424              		.thumb
 425              		.thumb_func
 427              	HASH_DMACmd:
 428              	.LFB121:
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @}
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @defgroup HASH_Group4 HASH's DMA interface Configuration function
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *  @brief   HASH's DMA interface Configuration function 
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @verbatim   
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                    HASH's DMA interface Configuration function
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================  
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   This section provides functions allowing to configure the DMA interface for 
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH/ HMAC data input transfer.
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   When the DMA mode is enabled (using the HASH_DMACmd() function), data can be 
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   sent to the IN FIFO using the DMA peripheral.
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @endverbatim
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Enables or disables the HASH DMA interface.
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @note   The DMA is disabled by hardware after the end of transfer.
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  NewState: new state of the selected HASH DMA transfer request.
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          This parameter can be: ENABLE or DISABLE.
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_DMACmd(FunctionalState NewState)
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 429              		.loc 1 461 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 0, uses_anonymous_args = 0
 433              		@ link register save eliminated.
 434              	.LVL18:
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   if (NewState != DISABLE)
 435              		.loc 1 465 0
 436 0000 40B1     		cbz	r0, .L18
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* Enable the HASH DMA request */
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     HASH->CR |= HASH_CR_DMAE;
 437              		.loc 1 468 0
 438 0002 4FF48063 		mov	r3, #1024
 439 0006 C5F20603 		movt	r3, 20486
 440 000a 1A68     		ldr	r2, [r3]
 441 000c 42F00802 		orr	r2, r2, #8
 442 0010 1A60     		str	r2, [r3]
 443 0012 7047     		bx	lr
 444              	.L18:
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   else
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* Disable the HASH DMA request */
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     HASH->CR &= ~HASH_CR_DMAE;
 445              		.loc 1 473 0
 446 0014 4FF48063 		mov	r3, #1024
 447 0018 C5F20603 		movt	r3, 20486
 448 001c 1A68     		ldr	r2, [r3]
 449 001e 22F00802 		bic	r2, r2, #8
 450 0022 1A60     		str	r2, [r3]
 451 0024 7047     		bx	lr
 452              		.cfi_endproc
 453              	.LFE121:
 455 0026 00BF     		.section	.text.HASH_ITConfig,"ax",%progbits
 456              		.align	2
 457              		.global	HASH_ITConfig
 458              		.thumb
 459              		.thumb_func
 461              	HASH_ITConfig:
 462              	.LFB122:
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @}
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /** @defgroup HASH_Group5 Interrupts and flags management functions
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *  @brief   Interrupts and flags management functions
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  *
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @verbatim   
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                    Interrupts and flags management functions
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****  ===============================================================================  
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   This section provides functions allowing to configure the HASH Interrupts and 
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   to get the status and clear flags and Interrupts pending bits.
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   The HASH provides 2 Interrupts sources and 5 Flags:
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   Flags :
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   ---------- 
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      1. HASH_FLAG_DINIS : set when 16 locations are free in the Data IN FIFO 
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           which means that a  new block (512 bit) can be entered 
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           into the input buffer.
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      2. HASH_FLAG_DCIS :  set when Digest calculation is complete
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      3. HASH_FLAG_DMAS :  set when HASH's DMA interface is enabled (DMAE=1) or 
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           a transfer is ongoing.
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           This Flag is cleared only by hardware.
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                            
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      4. HASH_FLAG_BUSY :  set when The hash core is processing a block of data
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           This Flag is cleared only by hardware. 
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                            
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      5. HASH_FLAG_DINNE : set when Data IN FIFO is not empty which means that 
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           the Data IN FIFO contains at least one word of data.
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                           This Flag is cleared only by hardware.
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****      
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   Interrupts :
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   ------------
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    1. HASH_IT_DINI  : if enabled, this interrupt source is pending when 16 
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       locations are free in the Data IN FIFO  which means that 
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       a new block (512 bit) can be entered into the input buffer.
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       This interrupt source is cleared using 
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       HASH_ClearITPendingBit(HASH_IT_DINI) function.
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****    2. HASH_IT_DCI   : if enabled, this interrupt source is pending when Digest 
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       calculation is complete.
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       This interrupt source is cleared using 
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                       HASH_ClearITPendingBit(HASH_IT_DCI) function.
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   Managing the HASH controller events :
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   ------------------------------------ 
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   The user should identify which mode will be used in his application to manage 
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   the HASH controller events: Polling mode or Interrupt mode.
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   1.  In the Polling Mode it is advised to use the following functions:
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - HASH_GetFlagStatus() : to check if flags events occur. 
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - HASH_ClearFlag()     : to clear the flags events.
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   2.  In the Interrupt Mode it is advised to use the following functions:
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - HASH_ITConfig()       : to enable or disable the interrupt source.
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - HASH_GetITStatus()    : to check if Interrupt occurs.
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****       - HASH_ClearITPendingBit() : to clear the Interrupt pending Bit 
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****                                 (corresponding Flag). 
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** @endverbatim
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @{
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */ 
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Enables or disables the specified HASH interrupts.
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_IT: specifies the HASH interrupt source to be enabled or disabled.
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          This parameter can be any combination of the following values:
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DINI: Data Input interrupt
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DCI: Digest Calculation Completion Interrupt
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  NewState: new state of the specified HASH interrupt.
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *           This parameter can be: ENABLE or DISABLE.
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_ITConfig(uint8_t HASH_IT, FunctionalState NewState)
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 463              		.loc 1 556 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 468              	.LVL19:
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_IT(HASH_IT));
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   if (NewState != DISABLE)
 469              		.loc 1 561 0
 470 0000 39B1     		cbz	r1, .L21
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* Enable the selected HASH interrupt */
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     HASH->IMR |= HASH_IT;
 471              		.loc 1 564 0
 472 0002 4FF48063 		mov	r3, #1024
 473 0006 C5F20603 		movt	r3, 20486
 474 000a 1A6A     		ldr	r2, [r3, #32]
 475 000c 1043     		orrs	r0, r0, r2
 476              	.LVL20:
 477 000e 1862     		str	r0, [r3, #32]
 478 0010 7047     		bx	lr
 479              	.LVL21:
 480              	.L21:
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   else
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* Disable the selected HASH interrupt */
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     HASH->IMR &= (uint8_t) ~HASH_IT;
 481              		.loc 1 569 0
 482 0012 4FF48063 		mov	r3, #1024
 483 0016 C5F20603 		movt	r3, 20486
 484 001a 1A6A     		ldr	r2, [r3, #32]
 485 001c 22EA0000 		bic	r0, r2, r0
 486              	.LVL22:
 487 0020 00F0FF00 		and	r0, r0, #255
 488 0024 1862     		str	r0, [r3, #32]
 489 0026 7047     		bx	lr
 490              		.cfi_endproc
 491              	.LFE122:
 493              		.section	.text.HASH_GetFlagStatus,"ax",%progbits
 494              		.align	2
 495              		.global	HASH_GetFlagStatus
 496              		.thumb
 497              		.thumb_func
 499              	HASH_GetFlagStatus:
 500              	.LFB123:
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Checks whether the specified HASH flag is set or not.
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_FLAG: specifies the HASH flag to check.
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          This parameter can be one of the following values:
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DINIS: Data input interrupt status flag
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DCIS: Digest calculation completion interrupt status flag
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_BUSY: Busy flag
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DMAS: DMAS Status flag
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DINNE: Data Input register (DIN) not empty status flag
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval The new state of HASH_FLAG (SET or RESET)
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** FlagStatus HASH_GetFlagStatus(uint16_t HASH_FLAG)
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 501              		.loc 1 585 0
 502              		.cfi_startproc
 503              		@ args = 0, pretend = 0, frame = 0
 504              		@ frame_needed = 0, uses_anonymous_args = 0
 505              		@ link register save eliminated.
 506              	.LVL23:
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   FlagStatus bitstatus = RESET;
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   uint32_t tempreg = 0;
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_GET_FLAG(HASH_FLAG));
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* check if the FLAG is in CR register */
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   if ((HASH_FLAG & HASH_FLAG_DINNE) != (uint16_t)RESET ) 
 507              		.loc 1 593 0
 508 0000 00F48053 		and	r3, r0, #4096
 509 0004 9BB2     		uxth	r3, r3
 510 0006 2BB1     		cbz	r3, .L24
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     tempreg = HASH->CR;
 511              		.loc 1 595 0
 512 0008 4FF48063 		mov	r3, #1024
 513 000c C5F20603 		movt	r3, 20486
 514 0010 1B68     		ldr	r3, [r3]
 515              	.LVL24:
 516 0012 04E0     		b	.L25
 517              	.LVL25:
 518              	.L24:
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   else /* The FLAG is in SR register */
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     tempreg = HASH->SR;
 519              		.loc 1 599 0
 520 0014 4FF48063 		mov	r3, #1024
 521 0018 C5F20603 		movt	r3, 20486
 522 001c 5B6A     		ldr	r3, [r3, #36]
 523              	.LVL26:
 524              	.L25:
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the status of the specified HASH flag */
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   if ((tempreg & HASH_FLAG) != (uint16_t)RESET)
 525              		.loc 1 603 0
 526 001e 1840     		ands	r0, r0, r3
 527              	.LVL27:
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* HASH is set */
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     bitstatus = SET;
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   else
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* HASH_FLAG is reset */
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     bitstatus = RESET;
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Return the HASH_FLAG status */
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   return  bitstatus;
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 528              		.loc 1 616 0
 529 0020 0030     		adds	r0, r0, #0
 530 0022 18BF     		it	ne
 531 0024 0120     		movne	r0, #1
 532              	.LVL28:
 533 0026 7047     		bx	lr
 534              		.cfi_endproc
 535              	.LFE123:
 537              		.section	.text.HASH_ClearFlag,"ax",%progbits
 538              		.align	2
 539              		.global	HASH_ClearFlag
 540              		.thumb
 541              		.thumb_func
 543              	HASH_ClearFlag:
 544              	.LFB124:
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Clears the HASH flags.
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_FLAG: specifies the flag to clear. 
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          This parameter can be any combination of the following values:
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DINIS: Data Input Flag
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_FLAG_DCIS: Digest Calculation Completion Flag                       
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_ClearFlag(uint16_t HASH_FLAG)
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 545              		.loc 1 626 0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 0
 548              		@ frame_needed = 0, uses_anonymous_args = 0
 549              		@ link register save eliminated.
 550              	.LVL29:
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_CLEAR_FLAG(HASH_FLAG));
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Clear the selected HASH flags */
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->SR = ~(uint32_t)HASH_FLAG;
 551              		.loc 1 631 0
 552 0000 C043     		mvns	r0, r0
 553              	.LVL30:
 554 0002 4FF48063 		mov	r3, #1024
 555 0006 C5F20603 		movt	r3, 20486
 556 000a 5862     		str	r0, [r3, #36]
 557 000c 7047     		bx	lr
 558              		.cfi_endproc
 559              	.LFE124:
 561 000e 00BF     		.section	.text.HASH_GetITStatus,"ax",%progbits
 562              		.align	2
 563              		.global	HASH_GetITStatus
 564              		.thumb
 565              		.thumb_func
 567              	HASH_GetITStatus:
 568              	.LFB125:
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Checks whether the specified HASH interrupt has occurred or not.
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_IT: specifies the HASH interrupt source to check.
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          This parameter can be one of the following values:
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DINI: Data Input interrupt
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DCI: Digest Calculation Completion Interrupt
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval The new state of HASH_IT (SET or RESET).
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** ITStatus HASH_GetITStatus(uint8_t HASH_IT)
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 569              		.loc 1 642 0
 570              		.cfi_startproc
 571              		@ args = 0, pretend = 0, frame = 0
 572              		@ frame_needed = 0, uses_anonymous_args = 0
 573              		@ link register save eliminated.
 574              	.LVL31:
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   ITStatus bitstatus = RESET;
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   uint32_t tmpreg = 0;
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_GET_IT(HASH_IT));  
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the status of the specified HASH interrupt */
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   tmpreg =  HASH->SR;
 575              		.loc 1 651 0
 576 0000 4FF48062 		mov	r2, #1024
 577 0004 C5F20602 		movt	r2, 20486
 578 0008 536A     		ldr	r3, [r2, #36]
 579              	.LVL32:
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   if (((HASH->IMR & tmpreg) & HASH_IT) != RESET)
 580              		.loc 1 653 0
 581 000a 126A     		ldr	r2, [r2, #32]
 582 000c 1340     		ands	r3, r3, r2
 583              	.LVL33:
 584 000e 0340     		ands	r3, r3, r0
 585              	.LVL34:
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* HASH_IT is set */
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     bitstatus = SET;
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   else
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   {
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     /* HASH_IT is reset */
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****     bitstatus = RESET;
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   }
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Return the HASH_IT status */
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   return bitstatus;
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** }
 586              		.loc 1 665 0
 587 0010 181C     		adds	r0, r3, #0
 588              	.LVL35:
 589 0012 18BF     		it	ne
 590 0014 0120     		movne	r0, #1
 591 0016 7047     		bx	lr
 592              		.cfi_endproc
 593              	.LFE125:
 595              		.section	.text.HASH_ClearITPendingBit,"ax",%progbits
 596              		.align	2
 597              		.global	HASH_ClearITPendingBit
 598              		.thumb
 599              		.thumb_func
 601              	HASH_ClearITPendingBit:
 602              	.LFB126:
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** /**
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @brief  Clears the HASH interrupt pending bit(s).
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @param  HASH_IT: specifies the HASH interrupt pending bit(s) to clear.
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *          This parameter can be any combination of the following values:
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DINI: Data Input interrupt
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   *            @arg HASH_IT_DCI: Digest Calculation Completion Interrupt
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   * @retval None
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   */
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** void HASH_ClearITPendingBit(uint8_t HASH_IT)
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** {
 603              		.loc 1 676 0
 604              		.cfi_startproc
 605              		@ args = 0, pretend = 0, frame = 0
 606              		@ frame_needed = 0, uses_anonymous_args = 0
 607              		@ link register save eliminated.
 608              	.LVL36:
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Check the parameters */
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   assert_param(IS_HASH_IT(HASH_IT));
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c **** 
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   /* Clear the selected HASH interrupt pending bit */
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash.c ****   HASH->SR = (uint8_t)~HASH_IT;
 609              		.loc 1 681 0
 610 0000 C043     		mvns	r0, r0
 611              	.LVL37:
 612 0002 C0B2     		uxtb	r0, r0
 613 0004 4FF48063 		mov	r3, #1024
 614 0008 C5F20603 		movt	r3, 20486
 615 000c 5862     		str	r0, [r3, #36]
 616 000e 7047     		bx	lr
 617              		.cfi_endproc
 618              	.LFE126:
 620              		.text
 621              	.Letext0:
 622              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 623              		.file 3 "/usr/include/newlib/stdint.h"
 624              		.file 4 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 625              		.file 5 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_hash.h"
 626              		.file 6 "libs/CMSIS/Include/core_cm4.h"
 627              		.file 7 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hash.c
     /tmp/ccD6BQGc.s:20     .text.HASH_DeInit:0000000000000000 $t
     /tmp/ccD6BQGc.s:25     .text.HASH_DeInit:0000000000000000 HASH_DeInit
     /tmp/ccD6BQGc.s:52     .text.HASH_Init:0000000000000000 $t
     /tmp/ccD6BQGc.s:57     .text.HASH_Init:0000000000000000 HASH_Init
     /tmp/ccD6BQGc.s:118    .text.HASH_StructInit:0000000000000000 $t
     /tmp/ccD6BQGc.s:123    .text.HASH_StructInit:0000000000000000 HASH_StructInit
     /tmp/ccD6BQGc.s:145    .text.HASH_Reset:0000000000000000 $t
     /tmp/ccD6BQGc.s:150    .text.HASH_Reset:0000000000000000 HASH_Reset
     /tmp/ccD6BQGc.s:168    .text.HASH_SetLastWordValidBitsNbr:0000000000000000 $t
     /tmp/ccD6BQGc.s:173    .text.HASH_SetLastWordValidBitsNbr:0000000000000000 HASH_SetLastWordValidBitsNbr
     /tmp/ccD6BQGc.s:197    .text.HASH_DataIn:0000000000000000 $t
     /tmp/ccD6BQGc.s:202    .text.HASH_DataIn:0000000000000000 HASH_DataIn
     /tmp/ccD6BQGc.s:219    .text.HASH_GetInFIFOWordsNbr:0000000000000000 $t
     /tmp/ccD6BQGc.s:224    .text.HASH_GetInFIFOWordsNbr:0000000000000000 HASH_GetInFIFOWordsNbr
     /tmp/ccD6BQGc.s:242    .text.HASH_GetDigest:0000000000000000 $t
     /tmp/ccD6BQGc.s:247    .text.HASH_GetDigest:0000000000000000 HASH_GetDigest
     /tmp/ccD6BQGc.s:277    .text.HASH_StartDigest:0000000000000000 $t
     /tmp/ccD6BQGc.s:282    .text.HASH_StartDigest:0000000000000000 HASH_StartDigest
     /tmp/ccD6BQGc.s:300    .text.HASH_SaveContext:0000000000000000 $t
     /tmp/ccD6BQGc.s:305    .text.HASH_SaveContext:0000000000000000 HASH_SaveContext
     /tmp/ccD6BQGc.s:359    .text.HASH_RestoreContext:0000000000000000 $t
     /tmp/ccD6BQGc.s:364    .text.HASH_RestoreContext:0000000000000000 HASH_RestoreContext
     /tmp/ccD6BQGc.s:422    .text.HASH_DMACmd:0000000000000000 $t
     /tmp/ccD6BQGc.s:427    .text.HASH_DMACmd:0000000000000000 HASH_DMACmd
     /tmp/ccD6BQGc.s:456    .text.HASH_ITConfig:0000000000000000 $t
     /tmp/ccD6BQGc.s:461    .text.HASH_ITConfig:0000000000000000 HASH_ITConfig
     /tmp/ccD6BQGc.s:494    .text.HASH_GetFlagStatus:0000000000000000 $t
     /tmp/ccD6BQGc.s:499    .text.HASH_GetFlagStatus:0000000000000000 HASH_GetFlagStatus
     /tmp/ccD6BQGc.s:538    .text.HASH_ClearFlag:0000000000000000 $t
     /tmp/ccD6BQGc.s:543    .text.HASH_ClearFlag:0000000000000000 HASH_ClearFlag
     /tmp/ccD6BQGc.s:562    .text.HASH_GetITStatus:0000000000000000 $t
     /tmp/ccD6BQGc.s:567    .text.HASH_GetITStatus:0000000000000000 HASH_GetITStatus
     /tmp/ccD6BQGc.s:596    .text.HASH_ClearITPendingBit:0000000000000000 $t
     /tmp/ccD6BQGc.s:601    .text.HASH_ClearITPendingBit:0000000000000000 HASH_ClearITPendingBit
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.1.7402b5479d3fa4780665141f585fc0ee
                           .group:0000000000000000 wm4.stm32f4xx.h.48.a3308e16720c7afc3eb28e585e628ce6
                           .group:0000000000000000 wm4.core_cm4.h.32.5f62939b60122629d60d85d0c4a14709
                           .group:0000000000000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:0000000000000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:0000000000000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:0000000000000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:0000000000000000 wm4.core_cm4_simd.h.29.b4a3fdfb606cb3b26119424324d4b963
                           .group:0000000000000000 wm4.core_cm4.h.153.5393ef7e6cebf34dd51ca528f9218ab3
                           .group:0000000000000000 wm4.stm32f4xx.h.282.95bae448a91bccfbf24a6f9d95904bb8
                           .group:0000000000000000 wm4.stm32f4xx_adc.h.102.2061aa73008746f3c2cc6ce8f635cad3
                           .group:0000000000000000 wm4.stm32f4xx_can.h.25.87f18ca48b2692d39f76e87b1f07c953
                           .group:0000000000000000 wm4.stm32f4xx_cryp.h.25.db1951c06ee684df97ea3a11aba6cb51
                           .group:0000000000000000 wm4.stm32f4xx_dac.h.25.c43557a6416ea4dfa986c1209c2558d6
                           .group:0000000000000000 wm4.stm32f4xx_dbgmcu.h.24.7aedfdcf091890b5cb96019bd29a2bfc
                           .group:0000000000000000 wm4.stm32f4xx_dcmi.h.24.64883d9be802a535b1d7770d14da73e0
                           .group:0000000000000000 wm4.stm32f4xx_dma.h.25.c1fa1d44ae0bc9c2b3a0d1d355d8c1e6
                           .group:0000000000000000 wm4.stm32f4xx_exti.h.25.620998268d5d3d9042a8297fbe07d507
                           .group:0000000000000000 wm4.stm32f4xx_flash.h.25.65d4f351b72ee41355279f70305f361a
                           .group:0000000000000000 wm4.stm32f4xx_fsmc.h.25.b907ac7bd9bec46e02d06b137d53cfd8
                           .group:0000000000000000 wm4.stm32f4xx_gpio.h.25.5bd1d790d742a307b55aea5fa8fcdae8
                           .group:0000000000000000 wm4.stm32f4xx_i2c.h.25.8fcdb817a00a67d4624d79bab0d9275f
                           .group:0000000000000000 wm4.stm32f4xx_iwdg.h.25.3013e8d2058415cb9d51af77f748a146
                           .group:0000000000000000 wm4.stm32f4xx_pwr.h.25.48b68c1f3a894ab012f9c2a2c222f159
                           .group:0000000000000000 wm4.stm32f4xx_rcc.h.24.c15e7c8dc065bb29146f29591b195c87
                           .group:0000000000000000 wm4.stm32f4xx_rng.h.25.cdb5c5c07de6a48aedfde608da3f447e
                           .group:0000000000000000 wm4.stm32f4xx_rtc.h.25.4809a79ad46ad97b4a01e735a96738eb
                           .group:0000000000000000 wm4.stm32f4xx_sdio.h.25.406302aabae34eada94e5f2cde635a3e
                           .group:0000000000000000 wm4.stm32f4xx_spi.h.25.46c61b79ff8408da93e2e90cf9b717d6
                           .group:0000000000000000 wm4.stm32f4xx_syscfg.h.25.9d5caab5677661b69e959531364e23d7
                           .group:0000000000000000 wm4.stm32f4xx_tim.h.25.948f7fc943f34bd206e29758e77ee0a2
                           .group:0000000000000000 wm4.stm32f4xx_usart.h.25.b64697dad017ba547dd272c2cdb5846a
                           .group:0000000000000000 wm4.stm32f4xx_wwdg.h.25.09d70b7849c6894ddf1e83c8e86b70e1
                           .group:0000000000000000 wm4.misc.h.25.a0cb758c1f091b46f201b19cec9e63a1
                           .group:0000000000000000 wm4.stm32f4xx.h.6913.da011404ccb203790556c86f10c46b18
                           .group:0000000000000000 wm4.stm32f4xx_hash.h.89.9ba18c49c32633e81d41c07ca4cb2830

UNDEFINED SYMBOLS
RCC_AHB2PeriphResetCmd
