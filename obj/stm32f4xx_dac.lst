   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_dac.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.DAC_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	DAC_DeInit
  22              		.thumb
  23              		.thumb_func
  25              	DAC_DeInit:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @file    stm32f4xx_dac.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****    * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          functionalities of the Digital-to-Analog Converter (DAC) peripheral: 
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - DAC channels configuration: trigger, output buffer, data format
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - DMA management      
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *           - Interrupts and flags management
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *  @verbatim
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *    
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                             DAC Peripheral features
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Channels
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============  
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The device integrates two 12-bit Digital Analog Converters that can 
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          be used independently or simultaneously (dual mode):
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            1- DAC channel1 with DAC_OUT1 (PA4) as output
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            1- DAC channel2 with DAC_OUT2 (PA5) as output
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Triggers
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Digital to Analog conversion can be non-triggered using DAC_Trigger_None
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          and DAC_OUT1/DAC_OUT2 is available once writing to DHRx register 
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          using DAC_SetChannel1Data() / DAC_SetChannel2Data() functions.
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *   
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         Digital to Analog conversion can be triggered by:
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- External event: EXTI Line 9 (any GPIOx_Pin9) using DAC_Trigger_Ext_IT9.
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                The used pin (GPIOx_Pin9) must be configured in input mode.
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- Timers TRGO: TIM2, TIM4, TIM5, TIM6, TIM7 and TIM8 
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                (DAC_Trigger_T2_TRGO, DAC_Trigger_T4_TRGO...)
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                The timer TRGO event should be selected using TIM_SelectOutputTrigger()
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             3- Software using DAC_Trigger_Software
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC Buffer mode feature
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ========================  
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Each DAC channel integrates an output buffer that can be used to 
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          reduce the output impedance, and to drive external loads directly
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          without having to add an external operational amplifier.
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          To enable, the output buffer use  
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              DAC_InitStructure.DAC_OutputBuffer = DAC_OutputBuffer_Enable;
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Refer to the device datasheet for more details about output 
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          impedance value with and without output buffer.
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC wave generation feature
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============================      
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Both DAC channels can be used to generate
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- Noise wave using DAC_WaveGeneration_Noise
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- Triangle wave using DAC_WaveGeneration_Triangle
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *        
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Wave generation can be disabled using DAC_WaveGeneration_None
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC data format
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ================   
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The DAC data format can be:
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- 8-bit right alignment using DAC_Align_8b_R
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- 12-bit left alignment using DAC_Align_12b_L
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             3- 12-bit right alignment using DAC_Align_12b_R
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC data value to voltage correspondence  
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ========================================  
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          The analog output voltage on each DAC channel pin is determined
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          by the following equation: 
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC_OUTx = VREF+ * DOR / 4095
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          with  DOR is the Data Output Register
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                VEF+ is the input voltage reference (refer to the device datasheet)
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          e.g. To set DAC_OUT1 to 0.7V, use
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            DAC_SetChannel1Data(DAC_Align_12b_R, 868);
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          Assuming that VREF+ = 3.3V, DAC_OUT1 = (3.3 * 868) / 4095 = 0.7V
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DMA requests 
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          =============    
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          A DMA1 request can be generated when an external trigger (but not
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          a software trigger) occurs if DMA1 requests are enabled using
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC_DMACmd()
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DMA1 requests are mapped as following:
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             1- DAC channel1 : mapped on DMA1 Stream5 channel7 which must be 
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                               already configured
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *             2- DAC channel2 : mapped on DMA1 Stream6 channel7 which must be 
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                               already configured
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================      
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *                              How to use this driver 
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          ===================================================================          
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - DAC APB clock must be enabled to get write access to DAC
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              registers using
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *              RCC_APB1PeriphClockCmd(RCC_APB1Periph_DAC, ENABLE)
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Configure DAC_OUTx (DAC_OUT1: PA4, DAC_OUT2: PA5) in analog mode.
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Configure the DAC channel using DAC_Init() function
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            - Enable the DAC channel using DAC_Cmd() function
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * 
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *  @endverbatim
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *    
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @attention
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ******************************************************************************  
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Includes ------------------------------------------------------------------*/
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #include "stm32f4xx_dac.h"
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #include "stm32f4xx_rcc.h"
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC 
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief DAC driver modules
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private typedef -----------------------------------------------------------*/
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private define ------------------------------------------------------------*/
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* CR register Mask */
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define CR_CLEAR_MASK              ((uint32_t)0x00000FFE)
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DAC Dual Channels SWTRIG masks */
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DUAL_SWTRIG_SET            ((uint32_t)0x00000003)
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DUAL_SWTRIG_RESET          ((uint32_t)0xFFFFFFFC)
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DHR registers offsets */
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12R1_OFFSET             ((uint32_t)0x00000008)
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12R2_OFFSET             ((uint32_t)0x00000014)
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DHR12RD_OFFSET             ((uint32_t)0x00000020)
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* DOR register offset */
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** #define DOR_OFFSET                 ((uint32_t)0x0000002C)
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private macro -------------------------------------------------------------*/
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private variables ---------------------------------------------------------*/
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private function prototypes -----------------------------------------------*/
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /* Private functions ---------------------------------------------------------*/
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Private_Functions
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group1 DAC channels configuration
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   DAC channels configuration: trigger, output buffer, data format 
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****           DAC channels configuration: trigger, output buffer, data format
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Deinitializes the DAC peripheral registers to their default reset values.
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  None
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DeInit(void)
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
  28              		.loc 1 175 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Enable DAC reset state */
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, ENABLE);
  37              		.loc 1 177 0
  38 0002 4FF00050 		mov	r0, #536870912
  39 0006 0121     		movs	r1, #1
  40 0008 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  41              	.LVL0:
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Release DAC from reset state */
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   RCC_APB1PeriphResetCmd(RCC_APB1Periph_DAC, DISABLE);
  42              		.loc 1 179 0
  43 000c 4FF00050 		mov	r0, #536870912
  44 0010 0021     		movs	r1, #0
  45 0012 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  46              	.LVL1:
  47 0016 08BD     		pop	{r3, pc}
  48              		.cfi_endproc
  49              	.LFE110:
  51              		.section	.text.DAC_Init,"ax",%progbits
  52              		.align	2
  53              		.global	DAC_Init
  54              		.thumb
  55              		.thumb_func
  57              	DAC_Init:
  58              	.LFB111:
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Initializes the DAC peripheral according to the specified parameters
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         in the DAC_InitStruct.
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: the selected DAC channel. 
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_InitStruct: pointer to a DAC_InitTypeDef structure that contains
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         the configuration information for the  specified DAC channel.
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_Init(uint32_t DAC_Channel, DAC_InitTypeDef* DAC_InitStruct)
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
  59              		.loc 1 194 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
  64              	.LVL2:
  65 0000 30B4     		push	{r4, r5}
  66              	.LCFI1:
  67              		.cfi_def_cfa_offset 8
  68              		.cfi_offset 4, -8
  69              		.cfi_offset 5, -4
  70              	.LVL3:
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the DAC parameters */
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_TRIGGER(DAC_InitStruct->DAC_Trigger));
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_GENERATE_WAVE(DAC_InitStruct->DAC_WaveGeneration));
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_LFSR_UNMASK_TRIANGLE_AMPLITUDE(DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitu
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_OUTPUT_BUFFER_STATE(DAC_InitStruct->DAC_OutputBuffer));
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /*---------------------------- DAC CR Configuration --------------------------*/
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Get the DAC CR value */
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 = DAC->CR;
  71              		.loc 1 205 0
  72 0002 4FF4E843 		mov	r3, #29696
  73 0006 C4F20003 		movt	r3, 16384
  74 000a 1A68     		ldr	r2, [r3]
  75              	.LVL4:
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 &= ~(CR_CLEAR_MASK << DAC_Channel);
  76              		.loc 1 207 0
  77 000c 40F6FE75 		movw	r5, #4094
  78 0010 8540     		lsls	r5, r5, r0
  79 0012 22EA0505 		bic	r5, r2, r5
  80              	.LVL5:
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Configure for the selected DAC channel: buffer output, trigger, 
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****      wave generation, mask/amplitude for wave generation */
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set TSELx and TENx bits according to DAC_Trigger value */
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set WAVEx bits according to DAC_WaveGeneration value */
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set MAMPx bits according to DAC_LFSRUnmask_TriangleAmplitude value */ 
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set BOFFx bit according to DAC_OutputBuffer value */   
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg2 = (DAC_InitStruct->DAC_Trigger | DAC_InitStruct->DAC_WaveGeneration |
  81              		.loc 1 214 0
  82 0016 0C68     		ldr	r4, [r1]
  83 0018 4A68     		ldr	r2, [r1, #4]
  84 001a 1443     		orrs	r4, r4, r2
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****              DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude | \
  85              		.loc 1 215 0
  86 001c 8A68     		ldr	r2, [r1, #8]
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****              DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude | \
  87              		.loc 1 214 0
  88 001e 2243     		orrs	r2, r2, r4
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****              DAC_InitStruct->DAC_OutputBuffer);
  89              		.loc 1 216 0
  90 0020 C968     		ldr	r1, [r1, #12]
  91              	.LVL6:
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****              DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude | \
  92              		.loc 1 214 0
  93 0022 0A43     		orrs	r2, r2, r1
  94              	.LVL7:
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Calculate CR register value depending on DAC_Channel */
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmpreg1 |= tmpreg2 << DAC_Channel;
  95              		.loc 1 218 0
  96 0024 02FA00F0 		lsl	r0, r2, r0
  97              	.LVL8:
  98 0028 2843     		orrs	r0, r0, r5
  99              	.LVL9:
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Write to DAC CR */
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->CR = tmpreg1;
 100              		.loc 1 220 0
 101 002a 1860     		str	r0, [r3]
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 102              		.loc 1 221 0
 103 002c 30BC     		pop	{r4, r5}
 104 002e 7047     		bx	lr
 105              		.cfi_endproc
 106              	.LFE111:
 108              		.section	.text.DAC_StructInit,"ax",%progbits
 109              		.align	2
 110              		.global	DAC_StructInit
 111              		.thumb
 112              		.thumb_func
 114              	DAC_StructInit:
 115              	.LFB112:
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Fills each DAC_InitStruct member with its default value.
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_InitStruct: pointer to a DAC_InitTypeDef structure which will 
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         be initialized.
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_StructInit(DAC_InitTypeDef* DAC_InitStruct)
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 116              		.loc 1 230 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 121              	.LVL10:
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /*--------------- Reset DAC init structure parameters values -----------------*/
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_Trigger member */
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_Trigger = DAC_Trigger_None;
 122              		.loc 1 233 0
 123 0000 0023     		movs	r3, #0
 124 0002 0360     		str	r3, [r0]
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_WaveGeneration member */
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_WaveGeneration = DAC_WaveGeneration_None;
 125              		.loc 1 235 0
 126 0004 4360     		str	r3, [r0, #4]
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_LFSRUnmask_TriangleAmplitude member */
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_LFSRUnmask_TriangleAmplitude = DAC_LFSRUnmask_Bit0;
 127              		.loc 1 237 0
 128 0006 8360     		str	r3, [r0, #8]
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Initialize the DAC_OutputBuffer member */
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC_InitStruct->DAC_OutputBuffer = DAC_OutputBuffer_Enable;
 129              		.loc 1 239 0
 130 0008 C360     		str	r3, [r0, #12]
 131 000a 7047     		bx	lr
 132              		.cfi_endproc
 133              	.LFE112:
 135              		.section	.text.DAC_Cmd,"ax",%progbits
 136              		.align	2
 137              		.global	DAC_Cmd
 138              		.thumb
 139              		.thumb_func
 141              	DAC_Cmd:
 142              	.LFB113:
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC channel.
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the DAC channel. 
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   When the DAC channel is enabled the trigger source can no more be modified.
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_Cmd(uint32_t DAC_Channel, FunctionalState NewState)
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 143              		.loc 1 254 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 148              	.LVL11:
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 149              		.loc 1 259 0
 150 0000 51B1     		cbz	r1, .L5
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC channel */
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= (DAC_CR_EN1 << DAC_Channel);
 151              		.loc 1 262 0
 152 0002 4FF4E843 		mov	r3, #29696
 153 0006 C4F20003 		movt	r3, 16384
 154 000a 1A68     		ldr	r2, [r3]
 155 000c 0121     		movs	r1, #1
 156              	.LVL12:
 157 000e 01FA00F0 		lsl	r0, r1, r0
 158              	.LVL13:
 159 0012 1043     		orrs	r0, r0, r2
 160 0014 1860     		str	r0, [r3]
 161 0016 7047     		bx	lr
 162              	.LVL14:
 163              	.L5:
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC channel */
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(DAC_CR_EN1 << DAC_Channel));
 164              		.loc 1 267 0
 165 0018 4FF4E843 		mov	r3, #29696
 166 001c C4F20003 		movt	r3, 16384
 167 0020 1A68     		ldr	r2, [r3]
 168 0022 0121     		movs	r1, #1
 169              	.LVL15:
 170 0024 01FA00F0 		lsl	r0, r1, r0
 171              	.LVL16:
 172 0028 22EA0000 		bic	r0, r2, r0
 173 002c 1860     		str	r0, [r3]
 174 002e 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE113:
 178              		.section	.text.DAC_SoftwareTriggerCmd,"ax",%progbits
 179              		.align	2
 180              		.global	DAC_SoftwareTriggerCmd
 181              		.thumb
 182              		.thumb_func
 184              	DAC_SoftwareTriggerCmd:
 185              	.LFB114:
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the selected DAC channel software trigger.
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel software trigger.
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SoftwareTriggerCmd(uint32_t DAC_Channel, FunctionalState NewState)
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 186              		.loc 1 282 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 191              	.LVL17:
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 192              		.loc 1 287 0
 193 0000 59B1     		cbz	r1, .L8
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable software trigger for the selected DAC channel */
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1 << (DAC_Channel >> 4);
 194              		.loc 1 290 0
 195 0002 4FF4E843 		mov	r3, #29696
 196 0006 C4F20003 		movt	r3, 16384
 197 000a 5A68     		ldr	r2, [r3, #4]
 198 000c 0009     		lsrs	r0, r0, #4
 199              	.LVL18:
 200 000e 0121     		movs	r1, #1
 201              	.LVL19:
 202 0010 01FA00F0 		lsl	r0, r1, r0
 203 0014 1043     		orrs	r0, r0, r2
 204 0016 5860     		str	r0, [r3, #4]
 205 0018 7047     		bx	lr
 206              	.LVL20:
 207              	.L8:
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable software trigger for the selected DAC channel */
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR &= ~((uint32_t)DAC_SWTRIGR_SWTRIG1 << (DAC_Channel >> 4));
 208              		.loc 1 295 0
 209 001a 4FF4E843 		mov	r3, #29696
 210 001e C4F20003 		movt	r3, 16384
 211 0022 5A68     		ldr	r2, [r3, #4]
 212 0024 0009     		lsrs	r0, r0, #4
 213              	.LVL21:
 214 0026 0121     		movs	r1, #1
 215              	.LVL22:
 216 0028 01FA00F0 		lsl	r0, r1, r0
 217 002c 22EA0000 		bic	r0, r2, r0
 218 0030 5860     		str	r0, [r3, #4]
 219 0032 7047     		bx	lr
 220              		.cfi_endproc
 221              	.LFE114:
 223              		.section	.text.DAC_DualSoftwareTriggerCmd,"ax",%progbits
 224              		.align	2
 225              		.global	DAC_DualSoftwareTriggerCmd
 226              		.thumb
 227              		.thumb_func
 229              	DAC_DualSoftwareTriggerCmd:
 230              	.LFB115:
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables simultaneously the two DAC channels software triggers.
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the DAC channels software triggers.
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DualSoftwareTriggerCmd(FunctionalState NewState)
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 231              		.loc 1 306 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              		@ link register save eliminated.
 236              	.LVL23:
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 237              		.loc 1 310 0
 238 0000 40B1     		cbz	r0, .L11
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable software trigger for both DAC channels */
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR |= DUAL_SWTRIG_SET;
 239              		.loc 1 313 0
 240 0002 4FF4E843 		mov	r3, #29696
 241 0006 C4F20003 		movt	r3, 16384
 242 000a 5A68     		ldr	r2, [r3, #4]
 243 000c 42F00302 		orr	r2, r2, #3
 244 0010 5A60     		str	r2, [r3, #4]
 245 0012 7047     		bx	lr
 246              	.L11:
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable software trigger for both DAC channels */
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->SWTRIGR &= DUAL_SWTRIG_RESET;
 247              		.loc 1 318 0
 248 0014 4FF4E843 		mov	r3, #29696
 249 0018 C4F20003 		movt	r3, 16384
 250 001c 5A68     		ldr	r2, [r3, #4]
 251 001e 22F00302 		bic	r2, r2, #3
 252 0022 5A60     		str	r2, [r3, #4]
 253 0024 7047     		bx	lr
 254              		.cfi_endproc
 255              	.LFE115:
 257 0026 00BF     		.section	.text.DAC_WaveGenerationCmd,"ax",%progbits
 258              		.align	2
 259              		.global	DAC_WaveGenerationCmd
 260              		.thumb
 261              		.thumb_func
 263              	DAC_WaveGenerationCmd:
 264              	.LFB116:
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the selected DAC channel wave generation.
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Wave: specifies the wave type to enable or disable.
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Wave_Noise: noise wave generation
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Wave_Triangle: triangle wave generation
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel wave generation.
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.  
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_WaveGenerationCmd(uint32_t DAC_Channel, uint32_t DAC_Wave, FunctionalState NewState)
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 265              		.loc 1 337 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              		@ link register save eliminated.
 270              	.LVL24:
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_WAVE(DAC_Wave)); 
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 271              		.loc 1 343 0
 272 0000 52B1     		cbz	r2, .L14
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected wave generation for the selected DAC channel */
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= DAC_Wave << DAC_Channel;
 273              		.loc 1 346 0
 274 0002 4FF4E843 		mov	r3, #29696
 275 0006 C4F20003 		movt	r3, 16384
 276 000a 1A68     		ldr	r2, [r3]
 277              	.LVL25:
 278 000c 01FA00F0 		lsl	r0, r1, r0
 279              	.LVL26:
 280 0010 42EA0001 		orr	r1, r2, r0
 281              	.LVL27:
 282 0014 1960     		str	r1, [r3]
 283 0016 7047     		bx	lr
 284              	.LVL28:
 285              	.L14:
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected wave generation for the selected DAC channel */
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= ~(DAC_Wave << DAC_Channel);
 286              		.loc 1 351 0
 287 0018 4FF4E843 		mov	r3, #29696
 288 001c C4F20003 		movt	r3, 16384
 289 0020 1A68     		ldr	r2, [r3]
 290              	.LVL29:
 291 0022 8140     		lsls	r1, r1, r0
 292              	.LVL30:
 293 0024 22EA0101 		bic	r1, r2, r1
 294 0028 1960     		str	r1, [r3]
 295 002a 7047     		bx	lr
 296              		.cfi_endproc
 297              	.LFE116:
 299              		.section	.text.DAC_SetChannel1Data,"ax",%progbits
 300              		.align	2
 301              		.global	DAC_SetChannel1Data
 302              		.thumb
 303              		.thumb_func
 305              	DAC_SetChannel1Data:
 306              	.LFB117:
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for DAC channel1.
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for DAC channel1.
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data: Data to be loaded in the selected data holding register.
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetChannel1Data(uint32_t DAC_Align, uint16_t Data)
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {  
 307              		.loc 1 366 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 8
 310              		@ frame_needed = 0, uses_anonymous_args = 0
 311              		@ link register save eliminated.
 312              	.LVL31:
 313 0000 82B0     		sub	sp, sp, #8
 314              	.LCFI2:
 315              		.cfi_def_cfa_offset 8
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 316              		.loc 1 367 0
 317 0002 0023     		movs	r3, #0
 318 0004 0193     		str	r3, [sp, #4]
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data));
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE; 
 319              		.loc 1 373 0
 320 0006 4FF4E843 		mov	r3, #29696
 321 000a C4F20003 		movt	r3, 16384
 322 000e 0193     		str	r3, [sp, #4]
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12R1_OFFSET + DAC_Align;
 323              		.loc 1 374 0
 324 0010 019B     		ldr	r3, [sp, #4]
 325 0012 1844     		add	r0, r0, r3
 326              	.LVL32:
 327 0014 00F10803 		add	r3, r0, #8
 328 0018 0193     		str	r3, [sp, #4]
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the DAC channel1 selected data holding register */
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *) tmp = Data;
 329              		.loc 1 377 0
 330 001a 019B     		ldr	r3, [sp, #4]
 331 001c 1960     		str	r1, [r3]
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 332              		.loc 1 378 0
 333 001e 02B0     		add	sp, sp, #8
 334              		@ sp needed
 335 0020 7047     		bx	lr
 336              		.cfi_endproc
 337              	.LFE117:
 339 0022 00BF     		.section	.text.DAC_SetChannel2Data,"ax",%progbits
 340              		.align	2
 341              		.global	DAC_SetChannel2Data
 342              		.thumb
 343              		.thumb_func
 345              	DAC_SetChannel2Data:
 346              	.LFB118:
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for DAC channel2.
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for DAC channel2.
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data: Data to be loaded in the selected data holding register.
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetChannel2Data(uint32_t DAC_Align, uint16_t Data)
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 347              		.loc 1 391 0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 8
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 351              		@ link register save eliminated.
 352              	.LVL33:
 353 0000 82B0     		sub	sp, sp, #8
 354              	.LCFI3:
 355              		.cfi_def_cfa_offset 8
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 356              		.loc 1 392 0
 357 0002 0023     		movs	r3, #0
 358 0004 0193     		str	r3, [sp, #4]
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data));
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE;
 359              		.loc 1 398 0
 360 0006 4FF4E843 		mov	r3, #29696
 361 000a C4F20003 		movt	r3, 16384
 362 000e 0193     		str	r3, [sp, #4]
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12R2_OFFSET + DAC_Align;
 363              		.loc 1 399 0
 364 0010 019B     		ldr	r3, [sp, #4]
 365 0012 1844     		add	r0, r0, r3
 366              	.LVL34:
 367 0014 00F11403 		add	r3, r0, #20
 368 0018 0193     		str	r3, [sp, #4]
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the DAC channel2 selected data holding register */
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *)tmp = Data;
 369              		.loc 1 402 0
 370 001a 019B     		ldr	r3, [sp, #4]
 371 001c 1960     		str	r1, [r3]
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 372              		.loc 1 403 0
 373 001e 02B0     		add	sp, sp, #8
 374              		@ sp needed
 375 0020 7047     		bx	lr
 376              		.cfi_endproc
 377              	.LFE118:
 379 0022 00BF     		.section	.text.DAC_SetDualChannelData,"ax",%progbits
 380              		.align	2
 381              		.global	DAC_SetDualChannelData
 382              		.thumb
 383              		.thumb_func
 385              	DAC_SetDualChannelData:
 386              	.LFB119:
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Set the specified data holding register value for dual channel DAC.
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Align: Specifies the data alignment for dual channel DAC.
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_8b_R: 8bit right data alignment selected
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_L: 12bit left data alignment selected
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Align_12b_R: 12bit right data alignment selected
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data2: Data for DAC Channel2 to be loaded in the selected data holding register.
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  Data1: Data for DAC Channel1 to be loaded in the selected data  holding register.
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   In dual mode, a unique register access is required to write in both
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          DAC channels at the same time.
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_SetDualChannelData(uint32_t DAC_Align, uint16_t Data2, uint16_t Data1)
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 387              		.loc 1 419 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              		@ link register save eliminated.
 392              	.LVL35:
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t data = 0, tmp = 0;
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_ALIGN(DAC_Align));
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data1));
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_DATA(Data2));
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Calculate and set dual DAC data holding register value */
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (DAC_Align == DAC_Align_8b_R)
 393              		.loc 1 428 0
 394 0000 0828     		cmp	r0, #8
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     data = ((uint32_t)Data2 << 8) | Data1; 
 395              		.loc 1 430 0
 396 0002 0CBF     		ite	eq
 397 0004 42EA0121 		orreq	r1, r2, r1, lsl #8
 398              	.LVL36:
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     data = ((uint32_t)Data2 << 16) | Data1;
 399              		.loc 1 434 0
 400 0008 42EA0141 		orrne	r1, r2, r1, lsl #16
 401              	.LVL37:
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t)DAC_BASE;
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DHR12RD_OFFSET + DAC_Align;
 402              		.loc 1 438 0
 403 000c 47F22043 		movw	r3, #29728
 404 0010 C4F20003 		movt	r3, 16384
 405              	.LVL38:
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Set the dual DAC selected data holding register */
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *(__IO uint32_t *)tmp = data;
 406              		.loc 1 441 0
 407 0014 C150     		str	r1, [r0, r3]
 408 0016 7047     		bx	lr
 409              		.cfi_endproc
 410              	.LFE119:
 412              		.section	.text.DAC_GetDataOutputValue,"ax",%progbits
 413              		.align	2
 414              		.global	DAC_GetDataOutputValue
 415              		.thumb
 416              		.thumb_func
 418              	DAC_GetDataOutputValue:
 419              	.LFB120:
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Returns the last data output value of the selected DAC channel.
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The selected DAC channel data output value.
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** uint16_t DAC_GetDataOutputValue(uint32_t DAC_Channel)
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 420              		.loc 1 453 0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 8
 423              		@ frame_needed = 0, uses_anonymous_args = 0
 424              		@ link register save eliminated.
 425              	.LVL39:
 426 0000 82B0     		sub	sp, sp, #8
 427              	.LCFI4:
 428              		.cfi_def_cfa_offset 8
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   __IO uint32_t tmp = 0;
 429              		.loc 1 454 0
 430 0002 0023     		movs	r3, #0
 431 0004 0193     		str	r3, [sp, #4]
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp = (uint32_t) DAC_BASE ;
 432              		.loc 1 459 0
 433 0006 4FF4E843 		mov	r3, #29696
 434 000a C4F20003 		movt	r3, 16384
 435 000e 0193     		str	r3, [sp, #4]
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   tmp += DOR_OFFSET + ((uint32_t)DAC_Channel >> 2);
 436              		.loc 1 460 0
 437 0010 019B     		ldr	r3, [sp, #4]
 438 0012 03EB9000 		add	r0, r3, r0, lsr #2
 439              	.LVL40:
 440 0016 00F12C03 		add	r3, r0, #44
 441 001a 0193     		str	r3, [sp, #4]
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Returns the DAC channel data output register value */
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return (uint16_t) (*(__IO uint32_t*) tmp);
 442              		.loc 1 463 0
 443 001c 019B     		ldr	r3, [sp, #4]
 444 001e 1868     		ldr	r0, [r3]
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 445              		.loc 1 464 0
 446 0020 80B2     		uxth	r0, r0
 447 0022 02B0     		add	sp, sp, #8
 448              		@ sp needed
 449 0024 7047     		bx	lr
 450              		.cfi_endproc
 451              	.LFE120:
 453 0026 00BF     		.section	.text.DAC_DMACmd,"ax",%progbits
 454              		.align	2
 455              		.global	DAC_DMACmd
 456              		.thumb
 457              		.thumb_func
 459              	DAC_DMACmd:
 460              	.LFB121:
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @}
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group2 DMA management functions
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   DMA management functions
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****                           DMA management functions
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC channel DMA request.
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   When enabled DMA1 is generated when an external trigger (EXTI Line9,
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         TIM2, TIM4, TIM5, TIM6, TIM7 or TIM8  but not a software trigger) occurs.
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the selected DAC channel DMA request.
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DAC channel1 is mapped on DMA1 Stream 5 channel7 which must be
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          already configured.
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DAC channel2 is mapped on DMA1 Stream 6 channel7 which must be
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          already configured.    
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_DMACmd(uint32_t DAC_Channel, FunctionalState NewState)
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 461              		.loc 1 498 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465              		@ link register save eliminated.
 466              	.LVL41:
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 467              		.loc 1 503 0
 468 0000 59B1     		cbz	r1, .L23
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC channel DMA request */
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |= (DAC_CR_DMAEN1 << DAC_Channel);
 469              		.loc 1 506 0
 470 0002 4FF4E843 		mov	r3, #29696
 471 0006 C4F20003 		movt	r3, 16384
 472 000a 1A68     		ldr	r2, [r3]
 473 000c 4FF48051 		mov	r1, #4096
 474              	.LVL42:
 475 0010 01FA00F0 		lsl	r0, r1, r0
 476              	.LVL43:
 477 0014 1043     		orrs	r0, r0, r2
 478 0016 1860     		str	r0, [r3]
 479 0018 7047     		bx	lr
 480              	.LVL44:
 481              	.L23:
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC channel DMA request */
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(DAC_CR_DMAEN1 << DAC_Channel));
 482              		.loc 1 511 0
 483 001a 4FF4E843 		mov	r3, #29696
 484 001e C4F20003 		movt	r3, 16384
 485 0022 1A68     		ldr	r2, [r3]
 486 0024 4FF48051 		mov	r1, #4096
 487              	.LVL45:
 488 0028 01FA00F0 		lsl	r0, r1, r0
 489              	.LVL46:
 490 002c 22EA0000 		bic	r0, r2, r0
 491 0030 1860     		str	r0, [r3]
 492 0032 7047     		bx	lr
 493              		.cfi_endproc
 494              	.LFE121:
 496              		.section	.text.DAC_ITConfig,"ax",%progbits
 497              		.align	2
 498              		.global	DAC_ITConfig
 499              		.thumb
 500              		.thumb_func
 502              	DAC_ITConfig:
 503              	.LFB122:
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @}
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /** @defgroup DAC_Group3 Interrupts and flags management functions
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *  @brief   Interrupts and flags management functions
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  *
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @verbatim   
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****                    Interrupts and flags management functions
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****  ===============================================================================  
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** @endverbatim
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @{
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Enables or disables the specified DAC interrupts.
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt sources to be enabled or disabled. 
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  NewState: new state of the specified DAC interrupts.
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be: ENABLE or DISABLE.
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */ 
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ITConfig(uint32_t DAC_Channel, uint32_t DAC_IT, FunctionalState NewState)  
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 504              		.loc 1 546 0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 0
 507              		@ frame_needed = 0, uses_anonymous_args = 0
 508              		@ link register save eliminated.
 509              	.LVL47:
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT)); 
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (NewState != DISABLE)
 510              		.loc 1 552 0
 511 0000 52B1     		cbz	r2, .L26
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Enable the selected DAC interrupts */
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR |=  (DAC_IT << DAC_Channel);
 512              		.loc 1 555 0
 513 0002 4FF4E843 		mov	r3, #29696
 514 0006 C4F20003 		movt	r3, 16384
 515 000a 1A68     		ldr	r2, [r3]
 516              	.LVL48:
 517 000c 01FA00F0 		lsl	r0, r1, r0
 518              	.LVL49:
 519 0010 42EA0001 		orr	r1, r2, r0
 520              	.LVL50:
 521 0014 1960     		str	r1, [r3]
 522 0016 7047     		bx	lr
 523              	.LVL51:
 524              	.L26:
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* Disable the selected DAC interrupts */
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     DAC->CR &= (~(uint32_t)(DAC_IT << DAC_Channel));
 525              		.loc 1 560 0
 526 0018 4FF4E843 		mov	r3, #29696
 527 001c C4F20003 		movt	r3, 16384
 528 0020 1A68     		ldr	r2, [r3]
 529              	.LVL52:
 530 0022 8140     		lsls	r1, r1, r0
 531              	.LVL53:
 532 0024 22EA0101 		bic	r1, r2, r1
 533 0028 1960     		str	r1, [r3]
 534 002a 7047     		bx	lr
 535              		.cfi_endproc
 536              	.LFE122:
 538              		.section	.text.DAC_GetFlagStatus,"ax",%progbits
 539              		.align	2
 540              		.global	DAC_GetFlagStatus
 541              		.thumb
 542              		.thumb_func
 544              	DAC_GetFlagStatus:
 545              	.LFB123:
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Checks whether the specified DAC flag is set or not.
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_FLAG: specifies the flag to check. 
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be only of the following value:
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_FLAG_DMAUDR: DMA underrun flag
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The new state of DAC_FLAG (SET or RESET).
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** FlagStatus DAC_GetFlagStatus(uint32_t DAC_Channel, uint32_t DAC_FLAG)
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 546              		.loc 1 578 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 550              		@ link register save eliminated.
 551              	.LVL54:
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   FlagStatus bitstatus = RESET;
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_FLAG(DAC_FLAG));
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the status of the specified DAC flag */
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if ((DAC->SR & (DAC_FLAG << DAC_Channel)) != (uint8_t)RESET)
 552              		.loc 1 585 0
 553 0000 4FF4E843 		mov	r3, #29696
 554 0004 C4F20003 		movt	r3, 16384
 555 0008 5B6B     		ldr	r3, [r3, #52]
 556 000a 01FA00F0 		lsl	r0, r1, r0
 557              	.LVL55:
 558 000e 1840     		ands	r0, r0, r3
 559              	.LVL56:
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_FLAG is set */
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = SET;
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_FLAG is reset */
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = RESET;
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Return the DAC_FLAG status */
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return  bitstatus;
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 560              		.loc 1 597 0
 561 0010 0030     		adds	r0, r0, #0
 562 0012 18BF     		it	ne
 563 0014 0120     		movne	r0, #1
 564              	.LVL57:
 565 0016 7047     		bx	lr
 566              		.cfi_endproc
 567              	.LFE123:
 569              		.section	.text.DAC_ClearFlag,"ax",%progbits
 570              		.align	2
 571              		.global	DAC_ClearFlag
 572              		.thumb
 573              		.thumb_func
 575              	DAC_ClearFlag:
 576              	.LFB124:
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Clears the DAC channel's pending flags.
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_FLAG: specifies the flag to clear. 
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be of the following value:
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_FLAG_DMAUDR: DMA underrun flag 
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).            
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ClearFlag(uint32_t DAC_Channel, uint32_t DAC_FLAG)
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 577              		.loc 1 613 0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 0
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 581              		@ link register save eliminated.
 582              	.LVL58:
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_FLAG(DAC_FLAG));
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear the selected DAC flags */
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->SR = (DAC_FLAG << DAC_Channel);
 583              		.loc 1 619 0
 584 0000 8140     		lsls	r1, r1, r0
 585              	.LVL59:
 586 0002 4FF4E843 		mov	r3, #29696
 587 0006 C4F20003 		movt	r3, 16384
 588 000a 5963     		str	r1, [r3, #52]
 589 000c 7047     		bx	lr
 590              		.cfi_endproc
 591              	.LFE124:
 593 000e 00BF     		.section	.text.DAC_GetITStatus,"ax",%progbits
 594              		.align	2
 595              		.global	DAC_GetITStatus
 596              		.thumb
 597              		.thumb_func
 599              	DAC_GetITStatus:
 600              	.LFB125:
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Checks whether the specified DAC interrupt has occurred or not.
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt source to check. 
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval The new state of DAC_IT (SET or RESET).
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** ITStatus DAC_GetITStatus(uint32_t DAC_Channel, uint32_t DAC_IT)
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 601              		.loc 1 636 0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 0
 604              		@ frame_needed = 0, uses_anonymous_args = 0
 605              		@ link register save eliminated.
 606              	.LVL60:
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   ITStatus bitstatus = RESET;
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   uint32_t enablestatus = 0;
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT));
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Get the DAC_IT enable bit status */
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   enablestatus = (DAC->CR & (DAC_IT << DAC_Channel)) ;
 607              		.loc 1 645 0
 608 0000 4FF4E843 		mov	r3, #29696
 609 0004 C4F20003 		movt	r3, 16384
 610 0008 1A68     		ldr	r2, [r3]
 611 000a 8140     		lsls	r1, r1, r0
 612              	.LVL61:
 613 000c 0A40     		ands	r2, r2, r1
 614              	.LVL62:
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the status of the specified DAC interrupt */
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   if (((DAC->SR & (DAC_IT << DAC_Channel)) != (uint32_t)RESET) && enablestatus)
 615              		.loc 1 648 0
 616 000e 5B6B     		ldr	r3, [r3, #52]
 617 0010 1942     		tst	r1, r3
 618 0012 03D0     		beq	.L34
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_IT is set */
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = SET;
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   else
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   {
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     /* DAC_IT is reset */
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****     bitstatus = RESET;
 619              		.loc 1 656 0 discriminator 1
 620 0014 101C     		adds	r0, r2, #0
 621              	.LVL63:
 622 0016 18BF     		it	ne
 623 0018 0120     		movne	r0, #1
 624 001a 7047     		bx	lr
 625              	.LVL64:
 626              	.L34:
 627              		.loc 1 656 0 is_stmt 0
 628 001c 0020     		movs	r0, #0
 629              	.LVL65:
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   }
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Return the DAC_IT status */
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   return  bitstatus;
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** }
 630              		.loc 1 660 0 is_stmt 1
 631 001e 7047     		bx	lr
 632              		.cfi_endproc
 633              	.LFE125:
 635              		.section	.text.DAC_ClearITPendingBit,"ax",%progbits
 636              		.align	2
 637              		.global	DAC_ClearITPendingBit
 638              		.thumb
 639              		.thumb_func
 641              	DAC_ClearITPendingBit:
 642              	.LFB126:
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** /**
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @brief  Clears the DAC channel's interrupt pending bits.
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_Channel: The selected DAC channel. 
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be one of the following values:
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_1: DAC Channel1 selected
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_Channel_2: DAC Channel2 selected
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @param  DAC_IT: specifies the DAC interrupt pending bit to clear.
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *          This parameter can be the following values:
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *            @arg DAC_IT_DMAUDR: DMA underrun interrupt mask                         
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @note   The DMA underrun occurs when a second external trigger arrives before the 
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   *         acknowledgement for the first external trigger is received (first request).            
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   * @retval None
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   */
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** void DAC_ClearITPendingBit(uint32_t DAC_Channel, uint32_t DAC_IT)
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** {
 643              		.loc 1 676 0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 0
 646              		@ frame_needed = 0, uses_anonymous_args = 0
 647              		@ link register save eliminated.
 648              	.LVL66:
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Check the parameters */
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_CHANNEL(DAC_Channel));
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   assert_param(IS_DAC_IT(DAC_IT)); 
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c **** 
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   /* Clear the selected DAC interrupt pending bits */
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_dac.c ****   DAC->SR = (DAC_IT << DAC_Channel);
 649              		.loc 1 682 0
 650 0000 8140     		lsls	r1, r1, r0
 651              	.LVL67:
 652 0002 4FF4E843 		mov	r3, #29696
 653 0006 C4F20003 		movt	r3, 16384
 654 000a 5963     		str	r1, [r3, #52]
 655 000c 7047     		bx	lr
 656              		.cfi_endproc
 657              	.LFE126:
 659 000e 00BF     		.text
 660              	.Letext0:
 661              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 662              		.file 3 "/usr/include/newlib/stdint.h"
 663              		.file 4 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 664              		.file 5 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_dac.h"
 665              		.file 6 "libs/CMSIS/Include/core_cm4.h"
 666              		.file 7 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_dac.c
     /tmp/cc6Ayp09.s:20     .text.DAC_DeInit:0000000000000000 $t
     /tmp/cc6Ayp09.s:25     .text.DAC_DeInit:0000000000000000 DAC_DeInit
     /tmp/cc6Ayp09.s:52     .text.DAC_Init:0000000000000000 $t
     /tmp/cc6Ayp09.s:57     .text.DAC_Init:0000000000000000 DAC_Init
     /tmp/cc6Ayp09.s:109    .text.DAC_StructInit:0000000000000000 $t
     /tmp/cc6Ayp09.s:114    .text.DAC_StructInit:0000000000000000 DAC_StructInit
     /tmp/cc6Ayp09.s:136    .text.DAC_Cmd:0000000000000000 $t
     /tmp/cc6Ayp09.s:141    .text.DAC_Cmd:0000000000000000 DAC_Cmd
     /tmp/cc6Ayp09.s:179    .text.DAC_SoftwareTriggerCmd:0000000000000000 $t
     /tmp/cc6Ayp09.s:184    .text.DAC_SoftwareTriggerCmd:0000000000000000 DAC_SoftwareTriggerCmd
     /tmp/cc6Ayp09.s:224    .text.DAC_DualSoftwareTriggerCmd:0000000000000000 $t
     /tmp/cc6Ayp09.s:229    .text.DAC_DualSoftwareTriggerCmd:0000000000000000 DAC_DualSoftwareTriggerCmd
     /tmp/cc6Ayp09.s:258    .text.DAC_WaveGenerationCmd:0000000000000000 $t
     /tmp/cc6Ayp09.s:263    .text.DAC_WaveGenerationCmd:0000000000000000 DAC_WaveGenerationCmd
     /tmp/cc6Ayp09.s:300    .text.DAC_SetChannel1Data:0000000000000000 $t
     /tmp/cc6Ayp09.s:305    .text.DAC_SetChannel1Data:0000000000000000 DAC_SetChannel1Data
     /tmp/cc6Ayp09.s:340    .text.DAC_SetChannel2Data:0000000000000000 $t
     /tmp/cc6Ayp09.s:345    .text.DAC_SetChannel2Data:0000000000000000 DAC_SetChannel2Data
     /tmp/cc6Ayp09.s:380    .text.DAC_SetDualChannelData:0000000000000000 $t
     /tmp/cc6Ayp09.s:385    .text.DAC_SetDualChannelData:0000000000000000 DAC_SetDualChannelData
     /tmp/cc6Ayp09.s:413    .text.DAC_GetDataOutputValue:0000000000000000 $t
     /tmp/cc6Ayp09.s:418    .text.DAC_GetDataOutputValue:0000000000000000 DAC_GetDataOutputValue
     /tmp/cc6Ayp09.s:454    .text.DAC_DMACmd:0000000000000000 $t
     /tmp/cc6Ayp09.s:459    .text.DAC_DMACmd:0000000000000000 DAC_DMACmd
     /tmp/cc6Ayp09.s:497    .text.DAC_ITConfig:0000000000000000 $t
     /tmp/cc6Ayp09.s:502    .text.DAC_ITConfig:0000000000000000 DAC_ITConfig
     /tmp/cc6Ayp09.s:539    .text.DAC_GetFlagStatus:0000000000000000 $t
     /tmp/cc6Ayp09.s:544    .text.DAC_GetFlagStatus:0000000000000000 DAC_GetFlagStatus
     /tmp/cc6Ayp09.s:570    .text.DAC_ClearFlag:0000000000000000 $t
     /tmp/cc6Ayp09.s:575    .text.DAC_ClearFlag:0000000000000000 DAC_ClearFlag
     /tmp/cc6Ayp09.s:594    .text.DAC_GetITStatus:0000000000000000 $t
     /tmp/cc6Ayp09.s:599    .text.DAC_GetITStatus:0000000000000000 DAC_GetITStatus
     /tmp/cc6Ayp09.s:636    .text.DAC_ClearITPendingBit:0000000000000000 $t
     /tmp/cc6Ayp09.s:641    .text.DAC_ClearITPendingBit:0000000000000000 DAC_ClearITPendingBit
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.1.7402b5479d3fa4780665141f585fc0ee
                           .group:0000000000000000 wm4.stm32f4xx.h.48.a3308e16720c7afc3eb28e585e628ce6
                           .group:0000000000000000 wm4.core_cm4.h.32.5f62939b60122629d60d85d0c4a14709
                           .group:0000000000000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:0000000000000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:0000000000000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:0000000000000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:0000000000000000 wm4.core_cm4_simd.h.29.b4a3fdfb606cb3b26119424324d4b963
                           .group:0000000000000000 wm4.core_cm4.h.153.5393ef7e6cebf34dd51ca528f9218ab3
                           .group:0000000000000000 wm4.stm32f4xx.h.282.95bae448a91bccfbf24a6f9d95904bb8
                           .group:0000000000000000 wm4.stm32f4xx_adc.h.102.2061aa73008746f3c2cc6ce8f635cad3
                           .group:0000000000000000 wm4.stm32f4xx_can.h.25.87f18ca48b2692d39f76e87b1f07c953
                           .group:0000000000000000 wm4.stm32f4xx_cryp.h.25.db1951c06ee684df97ea3a11aba6cb51
                           .group:0000000000000000 wm4.stm32f4xx_dbgmcu.h.24.7aedfdcf091890b5cb96019bd29a2bfc
                           .group:0000000000000000 wm4.stm32f4xx_dcmi.h.24.64883d9be802a535b1d7770d14da73e0
                           .group:0000000000000000 wm4.stm32f4xx_dma.h.25.c1fa1d44ae0bc9c2b3a0d1d355d8c1e6
                           .group:0000000000000000 wm4.stm32f4xx_exti.h.25.620998268d5d3d9042a8297fbe07d507
                           .group:0000000000000000 wm4.stm32f4xx_flash.h.25.65d4f351b72ee41355279f70305f361a
                           .group:0000000000000000 wm4.stm32f4xx_fsmc.h.25.b907ac7bd9bec46e02d06b137d53cfd8
                           .group:0000000000000000 wm4.stm32f4xx_hash.h.25.633fb84f031cf2ab1bd834e536716dfa
                           .group:0000000000000000 wm4.stm32f4xx_gpio.h.25.5bd1d790d742a307b55aea5fa8fcdae8
                           .group:0000000000000000 wm4.stm32f4xx_i2c.h.25.8fcdb817a00a67d4624d79bab0d9275f
                           .group:0000000000000000 wm4.stm32f4xx_iwdg.h.25.3013e8d2058415cb9d51af77f748a146
                           .group:0000000000000000 wm4.stm32f4xx_pwr.h.25.48b68c1f3a894ab012f9c2a2c222f159
                           .group:0000000000000000 wm4.stm32f4xx_rcc.h.24.c15e7c8dc065bb29146f29591b195c87
                           .group:0000000000000000 wm4.stm32f4xx_rng.h.25.cdb5c5c07de6a48aedfde608da3f447e
                           .group:0000000000000000 wm4.stm32f4xx_rtc.h.25.4809a79ad46ad97b4a01e735a96738eb
                           .group:0000000000000000 wm4.stm32f4xx_sdio.h.25.406302aabae34eada94e5f2cde635a3e
                           .group:0000000000000000 wm4.stm32f4xx_spi.h.25.46c61b79ff8408da93e2e90cf9b717d6
                           .group:0000000000000000 wm4.stm32f4xx_syscfg.h.25.9d5caab5677661b69e959531364e23d7
                           .group:0000000000000000 wm4.stm32f4xx_tim.h.25.948f7fc943f34bd206e29758e77ee0a2
                           .group:0000000000000000 wm4.stm32f4xx_usart.h.25.b64697dad017ba547dd272c2cdb5846a
                           .group:0000000000000000 wm4.stm32f4xx_wwdg.h.25.09d70b7849c6894ddf1e83c8e86b70e1
                           .group:0000000000000000 wm4.misc.h.25.a0cb758c1f091b46f201b19cec9e63a1
                           .group:0000000000000000 wm4.stm32f4xx.h.6913.da011404ccb203790556c86f10c46b18
                           .group:0000000000000000 wm4.stm32f4xx_dac.h.75.4f919957dc5d31ec63535c317a2ce634

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
