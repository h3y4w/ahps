   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"ustime.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.get_us_time,"ax",%progbits
  20              		.align	2
  21              		.global	get_us_time
  22              		.thumb
  23              		.thumb_func
  25              	get_us_time:
  26              	.LFB110:
  27              		.file 1 "src/ustime.c"
   1:src/ustime.c  **** #include "ustime.h"
   2:src/ustime.c  **** #include <FreeRTOS.h>
   3:src/ustime.c  **** #include "stm32f4xx.h"
   4:src/ustime.c  **** 
   5:src/ustime.c  **** /**
   6:src/ustime.c  ****  * Get time count in microseconds.
   7:src/ustime.c  ****  *
   8:src/ustime.c  ****  * \note
   9:src/ustime.c  ****  *   this function must be called at least
  10:src/ustime.c  ****  *   once every 65ms to work correctly.
  11:src/ustime.c  ****  *
  12:src/ustime.c  ****  */
  13:src/ustime.c  **** uint64_t get_us_time()
  14:src/ustime.c  **** {
  28              		.loc 1 14 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  15:src/ustime.c  ****     static uint16_t t0;
  16:src/ustime.c  ****     static uint64_t tickcount;
  17:src/ustime.c  **** 
  18:src/ustime.c  ****     vPortEnterCritical();
  37              		.loc 1 18 0
  38 0002 FFF7FEFF 		bl	vPortEnterCritical
  39              	.LVL0:
  19:src/ustime.c  **** 
  20:src/ustime.c  ****     int t = TIM7->CNT;
  40              		.loc 1 20 0
  41 0006 4FF4A053 		mov	r3, #5120
  42 000a C4F20003 		movt	r3, 16384
  43 000e 596A     		ldr	r1, [r3, #36]
  44              	.LVL1:
  21:src/ustime.c  ****     if (t < t0)
  45              		.loc 1 21 0
  46 0010 40F20003 		movw	r3, #:lower16:.LANCHOR0
  47 0014 C0F20003 		movt	r3, #:upper16:.LANCHOR0
  48 0018 1B88     		ldrh	r3, [r3]
  49 001a 8B42     		cmp	r3, r1
  22:src/ustime.c  ****         t += 0x10000;
  50              		.loc 1 22 0
  51 001c C8BF     		it	gt
  52 001e 01F58031 		addgt	r1, r1, #65536
  53              	.LVL2:
  23:src/ustime.c  **** 
  24:src/ustime.c  ****     tickcount += t - t0;
  54              		.loc 1 24 0
  55 0022 C81A     		subs	r0, r1, r3
  56 0024 40F20004 		movw	r4, #:lower16:.LANCHOR1
  57 0028 C0F20004 		movt	r4, #:upper16:.LANCHOR1
  58 002c D4E90023 		ldrd	r2, [r4]
  59 0030 1218     		adds	r2, r2, r0
  60 0032 43EBE073 		adc	r3, r3, r0, asr #31
  61 0036 C4E90023 		strd	r2, [r4]
  25:src/ustime.c  ****     t0 = t;
  62              		.loc 1 25 0
  63 003a 40F20003 		movw	r3, #:lower16:.LANCHOR0
  64 003e C0F20003 		movt	r3, #:upper16:.LANCHOR0
  65 0042 1980     		strh	r1, [r3]	@ movhi
  26:src/ustime.c  **** 
  27:src/ustime.c  ****     vPortExitCritical();
  66              		.loc 1 27 0
  67 0044 FFF7FEFF 		bl	vPortExitCritical
  68              	.LVL3:
  28:src/ustime.c  **** 
  29:src/ustime.c  ****     return tickcount;
  30:src/ustime.c  **** }
  69              		.loc 1 30 0
  70 0048 D4E90001 		ldrd	r0, [r4]
  71 004c 10BD     		pop	{r4, pc}
  72              		.cfi_endproc
  73              	.LFE110:
  75 004e 00BF     		.section	.text.delay_us,"ax",%progbits
  76              		.align	2
  77              		.global	delay_us
  78              		.thumb
  79              		.thumb_func
  81              	delay_us:
  82              	.LFB111:
  31:src/ustime.c  **** 
  32:src/ustime.c  **** 
  33:src/ustime.c  **** /**
  34:src/ustime.c  ****  * Perform a microsecond delay
  35:src/ustime.c  ****  *
  36:src/ustime.c  ****  * \param  us  number of microseconds to wait.
  37:src/ustime.c  ****  * \note   The actual delay will last between us and (us-1) microseconds.
  38:src/ustime.c  ****  *         To wait _at_least_ 1 us, you should use delay_us(2).
  39:src/ustime.c  ****  */
  40:src/ustime.c  **** void delay_us(unsigned long us)
  41:src/ustime.c  **** {
  83              		.loc 1 41 0
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 0, uses_anonymous_args = 0
  87              		@ link register save eliminated.
  88              	.LVL4:
  89 0000 10B4     		push	{r4}
  90              	.LCFI1:
  91              		.cfi_def_cfa_offset 4
  92              		.cfi_offset 4, -4
  42:src/ustime.c  ****     uint16_t  t0 = TIM7->CNT;
  93              		.loc 1 42 0
  94 0002 4FF4A053 		mov	r3, #5120
  95 0006 C4F20003 		movt	r3, 16384
  96 000a 5A6A     		ldr	r2, [r3, #36]
  97 000c 92B2     		uxth	r2, r2
  98              	.LVL5:
  99              	.LBB2:
  43:src/ustime.c  ****     for (;;) {
  44:src/ustime.c  ****         int  t = TIM7->CNT;
 100              		.loc 1 44 0
 101 000e 4FF4A054 		mov	r4, #5120
 102 0012 C4F20004 		movt	r4, 16384
 103              	.LVL6:
 104              	.L6:
 105 0016 636A     		ldr	r3, [r4, #36]
 106              	.LVL7:
  45:src/ustime.c  ****         if (t < t0)
 107              		.loc 1 45 0
 108 0018 1146     		mov	r1, r2
 109 001a 9A42     		cmp	r2, r3
  46:src/ustime.c  ****             t += 0x10000;
 110              		.loc 1 46 0
 111 001c C8BF     		it	gt
 112 001e 03F58033 		addgt	r3, r3, #65536
 113              	.LVL8:
  47:src/ustime.c  **** 
  48:src/ustime.c  ****         if (us < t - t0)
 114              		.loc 1 48 0
 115 0022 9A1A     		subs	r2, r3, r2
 116              	.LVL9:
 117 0024 8242     		cmp	r2, r0
 118 0026 03D8     		bhi	.L3
  49:src/ustime.c  ****             return;
  50:src/ustime.c  **** 
  51:src/ustime.c  ****         us -= t - t0;
 119              		.loc 1 51 0
 120 0028 C91A     		subs	r1, r1, r3
 121              	.LVL10:
 122 002a 0844     		add	r0, r0, r1
 123              	.LVL11:
  52:src/ustime.c  ****         t0  = t;
 124              		.loc 1 52 0
 125 002c 9AB2     		uxth	r2, r3
 126              	.LVL12:
 127              	.LBE2:
  53:src/ustime.c  ****     }
 128              		.loc 1 53 0
 129 002e F2E7     		b	.L6
 130              	.LVL13:
 131              	.L3:
  54:src/ustime.c  **** }
 132              		.loc 1 54 0
 133 0030 5DF8044B 		ldr	r4, [sp], #4
 134 0034 7047     		bx	lr
 135              		.cfi_endproc
 136              	.LFE111:
 138 0036 00BF     		.section	.text.delay_ms,"ax",%progbits
 139              		.align	2
 140              		.global	delay_ms
 141              		.thumb
 142              		.thumb_func
 144              	delay_ms:
 145              	.LFB112:
  55:src/ustime.c  **** 
  56:src/ustime.c  **** 
  57:src/ustime.c  **** /**
  58:src/ustime.c  ****  * Perform a millisecond delay
  59:src/ustime.c  ****  *
  60:src/ustime.c  ****  * \param  ms  number of milliseconds to wait.
  61:src/ustime.c  ****  */
  62:src/ustime.c  **** void delay_ms(unsigned long ms)
  63:src/ustime.c  **** {
 146              		.loc 1 63 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              	.LVL14:
 151 0000 08B5     		push	{r3, lr}
 152              	.LCFI2:
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 3, -8
 155              		.cfi_offset 14, -4
  64:src/ustime.c  ****     delay_us(ms * 1000);
 156              		.loc 1 64 0
 157 0002 4FF47A73 		mov	r3, #1000
 158 0006 03FB00F0 		mul	r0, r3, r0
 159              	.LVL15:
 160 000a FFF7FEFF 		bl	delay_us
 161              	.LVL16:
 162 000e 08BD     		pop	{r3, pc}
 163              		.cfi_endproc
 164              	.LFE112:
 166              		.section	.text.init_us_timer,"ax",%progbits
 167              		.align	2
 168              		.global	init_us_timer
 169              		.thumb
 170              		.thumb_func
 172              	init_us_timer:
 173              	.LFB113:
  65:src/ustime.c  **** }
  66:src/ustime.c  **** 
  67:src/ustime.c  **** 
  68:src/ustime.c  **** /**
  69:src/ustime.c  ****  * Set up TIM7 as a 16bit, microsecond-timer.
  70:src/ustime.c  ****  *
  71:src/ustime.c  ****  */
  72:src/ustime.c  **** void init_us_timer()
  73:src/ustime.c  **** {
 174              		.loc 1 73 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 16
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178 0000 00B5     		push	{lr}
 179              	.LCFI3:
 180              		.cfi_def_cfa_offset 4
 181              		.cfi_offset 14, -4
 182 0002 85B0     		sub	sp, sp, #20
 183              	.LCFI4:
 184              		.cfi_def_cfa_offset 24
  74:src/ustime.c  ****     RCC_ClocksTypeDef RCC_Clocks;
  75:src/ustime.c  ****     RCC_GetClocksFreq(&RCC_Clocks);
 185              		.loc 1 75 0
 186 0004 6846     		mov	r0, sp
 187 0006 FFF7FEFF 		bl	RCC_GetClocksFreq
 188              	.LVL17:
  76:src/ustime.c  **** 
  77:src/ustime.c  ****     RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM7, ENABLE);
 189              		.loc 1 77 0
 190 000a 2020     		movs	r0, #32
 191 000c 0121     		movs	r1, #1
 192 000e FFF7FEFF 		bl	RCC_APB1PeriphClockCmd
 193              	.LVL18:
  78:src/ustime.c  **** 
  79:src/ustime.c  ****     RCC->APB1ENR |= RCC_APB1Periph_TIM7;
 194              		.loc 1 79 0
 195 0012 4FF46053 		mov	r3, #14336
 196 0016 C4F20203 		movt	r3, 16386
 197 001a 1A6C     		ldr	r2, [r3, #64]
 198 001c 42F02002 		orr	r2, r2, #32
 199 0020 1A64     		str	r2, [r3, #64]
  80:src/ustime.c  ****     TIM7->PSC = (RCC_Clocks.PCLK2_Frequency / 1000000) - 1;
 200              		.loc 1 80 0
 201 0022 4DF68363 		movw	r3, #56963
 202 0026 C4F21B33 		movt	r3, 17179
 203 002a 039A     		ldr	r2, [sp, #12]
 204 002c A3FB0213 		umull	r1, r3, r3, r2
 205 0030 9B0C     		lsrs	r3, r3, #18
 206 0032 013B     		subs	r3, r3, #1
 207 0034 9BB2     		uxth	r3, r3
 208 0036 4FF4A050 		mov	r0, #5120
 209 003a C4F20000 		movt	r0, 16384
 210 003e 0385     		strh	r3, [r0, #40]	@ movhi
  81:src/ustime.c  ****     TIM7->ARR = 0xFFFF;
 211              		.loc 1 81 0
 212 0040 4FF6FF73 		movw	r3, #65535
 213 0044 C362     		str	r3, [r0, #44]
  82:src/ustime.c  ****     TIM7->CR1 = TIM_CR1_CEN;
 214              		.loc 1 82 0
 215 0046 0121     		movs	r1, #1
 216 0048 0180     		strh	r1, [r0]	@ movhi
  83:src/ustime.c  **** 
  84:src/ustime.c  ****     TIM_Cmd(TIM7, ENABLE);
 217              		.loc 1 84 0
 218 004a FFF7FEFF 		bl	TIM_Cmd
 219              	.LVL19:
  85:src/ustime.c  **** }
 220              		.loc 1 85 0
 221 004e 05B0     		add	sp, sp, #20
 222              		@ sp needed
 223 0050 5DF804FB 		ldr	pc, [sp], #4
 224              		.cfi_endproc
 225              	.LFE113:
 227              		.section	.bss.t0.7354,"aw",%nobits
 228              		.align	1
 229              		.set	.LANCHOR0,. + 0
 232              	t0.7354:
 233 0000 0000     		.space	2
 234              		.section	.bss.tickcount.7355,"aw",%nobits
 235              		.align	3
 236              		.set	.LANCHOR1,. + 0
 239              	tickcount.7355:
 240 0000 00000000 		.space	8
 240      00000000 
 241              		.text
 242              	.Letext0:
 243              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 244              		.file 3 "/usr/include/newlib/stdint.h"
 245              		.file 4 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 246              		.file 5 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
 247              		.file 6 "FreeRTOS/Source/include/../../Source/portable/GCC/ARM_CM4F/portmacro.h"
 248              		.file 7 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
 249              		.file 8 "libs/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 ustime.c
     /tmp/ccSujqMu.s:20     .text.get_us_time:0000000000000000 $t
     /tmp/ccSujqMu.s:25     .text.get_us_time:0000000000000000 get_us_time
     /tmp/ccSujqMu.s:229    .bss.t0.7354:0000000000000000 .LANCHOR0
     /tmp/ccSujqMu.s:236    .bss.tickcount.7355:0000000000000000 .LANCHOR1
     /tmp/ccSujqMu.s:76     .text.delay_us:0000000000000000 $t
     /tmp/ccSujqMu.s:81     .text.delay_us:0000000000000000 delay_us
     /tmp/ccSujqMu.s:139    .text.delay_ms:0000000000000000 $t
     /tmp/ccSujqMu.s:144    .text.delay_ms:0000000000000000 delay_ms
     /tmp/ccSujqMu.s:167    .text.init_us_timer:0000000000000000 $t
     /tmp/ccSujqMu.s:172    .text.init_us_timer:0000000000000000 init_us_timer
     /tmp/ccSujqMu.s:228    .bss.t0.7354:0000000000000000 $d
     /tmp/ccSujqMu.s:232    .bss.t0.7354:0000000000000000 t0.7354
     /tmp/ccSujqMu.s:235    .bss.tickcount.7355:0000000000000000 $d
     /tmp/ccSujqMu.s:239    .bss.tickcount.7355:0000000000000000 tickcount.7355
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.1.7402b5479d3fa4780665141f585fc0ee
                           .group:0000000000000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:0000000000000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:0000000000000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:0000000000000000 wm4.stddef.h.39.daafd3d79fe2f3a84d2d73d7d4e706f8
                           .group:0000000000000000 wm4.projdefs.h.55.cdae9ead80b5a2ac004f41bb277aad45
                           .group:0000000000000000 wm4.FreeRTOSConfig.h.55.a343614a17c4367a6359a1f530d6d32b
                           .group:0000000000000000 wm4.stm32f4xx.h.48.a3308e16720c7afc3eb28e585e628ce6
                           .group:0000000000000000 wm4.core_cm4.h.32.5f62939b60122629d60d85d0c4a14709
                           .group:0000000000000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:0000000000000000 wm4.core_cm4_simd.h.29.b4a3fdfb606cb3b26119424324d4b963
                           .group:0000000000000000 wm4.core_cm4.h.153.5393ef7e6cebf34dd51ca528f9218ab3
                           .group:0000000000000000 wm4.stm32f4xx.h.282.95bae448a91bccfbf24a6f9d95904bb8
                           .group:0000000000000000 wm4.stm32f4xx_adc.h.102.2061aa73008746f3c2cc6ce8f635cad3
                           .group:0000000000000000 wm4.stm32f4xx_can.h.25.87f18ca48b2692d39f76e87b1f07c953
                           .group:0000000000000000 wm4.stm32f4xx_cryp.h.25.db1951c06ee684df97ea3a11aba6cb51
                           .group:0000000000000000 wm4.stm32f4xx_dac.h.25.c43557a6416ea4dfa986c1209c2558d6
                           .group:0000000000000000 wm4.stm32f4xx_dbgmcu.h.24.7aedfdcf091890b5cb96019bd29a2bfc
                           .group:0000000000000000 wm4.stm32f4xx_dcmi.h.24.64883d9be802a535b1d7770d14da73e0
                           .group:0000000000000000 wm4.stm32f4xx_dma.h.25.c1fa1d44ae0bc9c2b3a0d1d355d8c1e6
                           .group:0000000000000000 wm4.stm32f4xx_exti.h.25.620998268d5d3d9042a8297fbe07d507
                           .group:0000000000000000 wm4.stm32f4xx_flash.h.25.65d4f351b72ee41355279f70305f361a
                           .group:0000000000000000 wm4.stm32f4xx_fsmc.h.25.b907ac7bd9bec46e02d06b137d53cfd8
                           .group:0000000000000000 wm4.stm32f4xx_hash.h.25.633fb84f031cf2ab1bd834e536716dfa
                           .group:0000000000000000 wm4.stm32f4xx_gpio.h.25.5bd1d790d742a307b55aea5fa8fcdae8
                           .group:0000000000000000 wm4.stm32f4xx_i2c.h.25.8fcdb817a00a67d4624d79bab0d9275f
                           .group:0000000000000000 wm4.stm32f4xx_iwdg.h.25.3013e8d2058415cb9d51af77f748a146
                           .group:0000000000000000 wm4.stm32f4xx_pwr.h.25.48b68c1f3a894ab012f9c2a2c222f159
                           .group:0000000000000000 wm4.stm32f4xx_rcc.h.24.c15e7c8dc065bb29146f29591b195c87
                           .group:0000000000000000 wm4.stm32f4xx_rng.h.25.cdb5c5c07de6a48aedfde608da3f447e
                           .group:0000000000000000 wm4.stm32f4xx_rtc.h.25.4809a79ad46ad97b4a01e735a96738eb
                           .group:0000000000000000 wm4.stm32f4xx_sdio.h.25.406302aabae34eada94e5f2cde635a3e
                           .group:0000000000000000 wm4.stm32f4xx_spi.h.25.46c61b79ff8408da93e2e90cf9b717d6
                           .group:0000000000000000 wm4.stm32f4xx_syscfg.h.25.9d5caab5677661b69e959531364e23d7
                           .group:0000000000000000 wm4.stm32f4xx_tim.h.25.948f7fc943f34bd206e29758e77ee0a2
                           .group:0000000000000000 wm4.stm32f4xx_usart.h.25.b64697dad017ba547dd272c2cdb5846a
                           .group:0000000000000000 wm4.stm32f4xx_wwdg.h.25.09d70b7849c6894ddf1e83c8e86b70e1
                           .group:0000000000000000 wm4.misc.h.25.a0cb758c1f091b46f201b19cec9e63a1
                           .group:0000000000000000 wm4.stm32f4xx.h.6913.da011404ccb203790556c86f10c46b18
                           .group:0000000000000000 wm4.FreeRTOSConfig.h.74.fc794e36cd6c91c3b4695c74d78d9ccd
                           .group:0000000000000000 wm4.portmacro.h.69.a7e264ae32accd81a6ffb6f75a8356fe
                           .group:0000000000000000 wm4.portable.h.315.489c085dbd13c768c8594a7d23ef5545
                           .group:0000000000000000 wm4.mpu_wrappers.h.55.46a4a008a193040c38098e9a5f07ff9d
                           .group:0000000000000000 wm4.FreeRTOS.h.136.a1d4f27d190f434afd0502fdd510d30a

UNDEFINED SYMBOLS
vPortEnterCritical
vPortExitCritical
RCC_GetClocksFreq
RCC_APB1PeriphClockCmd
TIM_Cmd
