   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_i2c.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.I2C_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	I2C_DeInit
  22              		.thumb
  23              		.thumb_func
  25              	I2C_DeInit:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @file    stm32f4xx_i2c.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          functionalities of the Inter-integrated circuit (I2C)
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           - Initialization and Configuration
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           - Data transfers
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           - PEC management
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           - DMA transfers management
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           - Interrupts, events and flags management 
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *  @verbatim
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *    
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          ===================================================================
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                                 How to use this driver
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          ===================================================================
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          1. Enable peripheral clock using RCC_APB1PeriphClockCmd(RCC_APB1Periph_I2Cx, ENABLE)
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *             function for I2C1, I2C2 or I2C3.
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          2. Enable SDA, SCL  and SMBA (when used) GPIO clocks using 
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *             RCC_AHBPeriphClockCmd() function. 
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          3. Peripherals alternate function: 
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                 - Connect the pin to the desired peripherals' Alternate 
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                   Function (AF) using GPIO_PinAFConfig() function
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                 - Configure the desired pin in alternate function by:
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                 - Select the type, pull-up/pull-down and output speed via 
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                   GPIO_PuPd, GPIO_OType and GPIO_Speed members
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                 - Call GPIO_Init() function
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                 Recommended configuration is Push-Pull, Pull-up, Open-Drain.
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                 Add an external pull up if necessary (typically 4.7 KOhm).      
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *        
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          4. Program the Mode, duty cycle , Own address, Ack, Speed and Acknowledged
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *             Address using the I2C_Init() function.
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          5. Optionally you can enable/configure the following parameters without
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *             re-initialization (i.e there is no need to call again I2C_Init() function):
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *              - Enable the acknowledge feature using I2C_AcknowledgeConfig() function
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *              - Enable the dual addressing mode using I2C_DualAddressCmd() function
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *              - Enable the general call using the I2C_GeneralCallCmd() function
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *              - Enable the clock stretching using I2C_StretchClockCmd() function
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *              - Enable the fast mode duty cycle using the I2C_FastModeDutyCycleConfig()
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                function.
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *              - Configure the NACK position for Master Receiver mode in case of 
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                2 bytes reception using the function I2C_NACKPositionConfig().  
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *              - Enable the PEC Calculation using I2C_CalculatePEC() function
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *              - For SMBus Mode: 
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                   - Enable the Address Resolution Protocol (ARP) using I2C_ARPCmd() function
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                   - Configure the SMBusAlert pin using I2C_SMBusAlertConfig() function
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          6. Enable the NVIC and the corresponding interrupt using the function 
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *             I2C_ITConfig() if you need to use interrupt mode. 
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          7. When using the DMA mode 
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                   - Configure the DMA using DMA_Init() function
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                   - Active the needed channel Request using I2C_DMACmd() or
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                     I2C_DMALastTransferCmd() function.
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *              @note When using DMA mode, I2C interrupts may be used at the same time to
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                    control the communication flow (Start/Stop/Ack... events and errors).
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * 
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          8. Enable the I2C using the I2C_Cmd() function.
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * 
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          9. Enable the DMA using the DMA_Cmd() function when using DMA mode in the 
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *             transfers. 
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *  @endverbatim
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *  
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   ******************************************************************************
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @attention
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   ******************************************************************************  
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */ 
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Includes ------------------------------------------------------------------*/
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** #include "stm32f4xx_i2c.h"
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** #include "stm32f4xx_rcc.h"
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C 
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief I2C driver modules
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */ 
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private typedef -----------------------------------------------------------*/
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private define ------------------------------------------------------------*/
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** #define CR1_CLEAR_MASK    ((uint16_t)0xFBF5)      /*<! I2C registers Masks */
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** #define FLAG_MASK         ((uint32_t)0x00FFFFFF)  /*<! I2C FLAG mask */
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** #define ITEN_MASK         ((uint32_t)0x07000000)  /*<! I2C Interrupt Enable mask */
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private macro -------------------------------------------------------------*/
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private variables ---------------------------------------------------------*/
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private function prototypes -----------------------------------------------*/
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /* Private functions ---------------------------------------------------------*/
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Private_Functions
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group1 Initialization and Configuration functions
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *  @brief   Initialization and Configuration functions 
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @verbatim   
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                    Initialization and Configuration functions
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @endverbatim
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Deinitialize the I2Cx peripheral registers to their default reset values.
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_DeInit(I2C_TypeDef* I2Cx)
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
  28              		.loc 1 133 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2Cx == I2C1)
  44              		.loc 1 137 0
  45 0008 7A68     		ldr	r2, [r7, #4]
  46 000a 4FF4A843 		mov	r3, #21504
  47 000e C4F20003 		movt	r3, 16384
  48 0012 9A42     		cmp	r2, r3
  49 0014 0AD1     		bne	.L2
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable I2C1 reset state */
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C1, ENABLE);
  50              		.loc 1 140 0
  51 0016 4FF40010 		mov	r0, #2097152
  52 001a 0121     		movs	r1, #1
  53 001c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Release I2C1 from reset state */
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C1, DISABLE);    
  54              		.loc 1 142 0
  55 0020 4FF40010 		mov	r0, #2097152
  56 0024 0021     		movs	r1, #0
  57 0026 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  58 002a 22E0     		b	.L1
  59              	.L2:
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else if (I2Cx == I2C2)
  60              		.loc 1 144 0
  61 002c 7A68     		ldr	r2, [r7, #4]
  62 002e 4FF4B043 		mov	r3, #22528
  63 0032 C4F20003 		movt	r3, 16384
  64 0036 9A42     		cmp	r2, r3
  65 0038 0AD1     		bne	.L4
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable I2C2 reset state */
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C2, ENABLE);
  66              		.loc 1 147 0
  67 003a 4FF48000 		mov	r0, #4194304
  68 003e 0121     		movs	r1, #1
  69 0040 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Release I2C2 from reset state */
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C2, DISABLE);      
  70              		.loc 1 149 0
  71 0044 4FF48000 		mov	r0, #4194304
  72 0048 0021     		movs	r1, #0
  73 004a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  74 004e 10E0     		b	.L1
  75              	.L4:
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else 
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     if (I2Cx == I2C3)
  76              		.loc 1 153 0
  77 0050 7A68     		ldr	r2, [r7, #4]
  78 0052 4FF4B843 		mov	r3, #23552
  79 0056 C4F20003 		movt	r3, 16384
  80 005a 9A42     		cmp	r2, r3
  81 005c 09D1     		bne	.L1
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Enable I2C3 reset state */
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C3, ENABLE);
  82              		.loc 1 156 0
  83 005e 4FF40000 		mov	r0, #8388608
  84 0062 0121     		movs	r1, #1
  85 0064 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Release I2C3 from reset state */
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_I2C3, DISABLE);     
  86              		.loc 1 158 0
  87 0068 4FF40000 		mov	r0, #8388608
  88 006c 0021     		movs	r1, #0
  89 006e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  90              	.L1:
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
  91              		.loc 1 161 0
  92 0072 0837     		adds	r7, r7, #8
  93 0074 BD46     		mov	sp, r7
  94              		@ sp needed
  95 0076 80BD     		pop	{r7, pc}
  96              		.cfi_endproc
  97              	.LFE110:
  99              		.section	.text.I2C_Init,"ax",%progbits
 100              		.align	2
 101              		.global	I2C_Init
 102              		.thumb
 103              		.thumb_func
 105              	I2C_Init:
 106              	.LFB111:
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Initializes the I2Cx peripheral according to the specified 
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         parameters in the I2C_InitStruct.
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   To use the I2C at 400 KHz (in fast mode), the PCLK1 frequency 
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         (I2C peripheral input clock) must be a multiple of 10 MHz.  
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_InitStruct: pointer to a I2C_InitTypeDef structure that contains 
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         the configuration information for the specified I2C peripheral.
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_Init(I2C_TypeDef* I2Cx, I2C_InitTypeDef* I2C_InitStruct)
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 107              		.loc 1 176 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 40
 110              		@ frame_needed = 1, uses_anonymous_args = 0
 111 0000 80B5     		push	{r7, lr}
 112              	.LCFI3:
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 7, -8
 115              		.cfi_offset 14, -4
 116 0002 8AB0     		sub	sp, sp, #40
 117              	.LCFI4:
 118              		.cfi_def_cfa_offset 48
 119 0004 00AF     		add	r7, sp, #0
 120              	.LCFI5:
 121              		.cfi_def_cfa_register 7
 122 0006 7860     		str	r0, [r7, #4]
 123 0008 3960     		str	r1, [r7]
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint16_t tmpreg = 0, freqrange = 0;
 124              		.loc 1 177 0
 125 000a 0023     		movs	r3, #0
 126 000c FB84     		strh	r3, [r7, #38]	@ movhi
 127 000e 0023     		movs	r3, #0
 128 0010 7B84     		strh	r3, [r7, #34]	@ movhi
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint16_t result = 0x04;
 129              		.loc 1 178 0
 130 0012 0423     		movs	r3, #4
 131 0014 BB84     		strh	r3, [r7, #36]	@ movhi
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t pclk1 = 8000000;
 132              		.loc 1 179 0
 133 0016 4FF49053 		mov	r3, #4608
 134 001a C0F27A03 		movt	r3, 122
 135 001e FB61     		str	r3, [r7, #28]
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   RCC_ClocksTypeDef  rcc_clocks;
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_CLOCK_SPEED(I2C_InitStruct->I2C_ClockSpeed));
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_MODE(I2C_InitStruct->I2C_Mode));
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_DUTY_CYCLE(I2C_InitStruct->I2C_DutyCycle));
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS1(I2C_InitStruct->I2C_OwnAddress1));
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ACK_STATE(I2C_InitStruct->I2C_Ack));
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ACKNOWLEDGE_ADDRESS(I2C_InitStruct->I2C_AcknowledgedAddress));
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*---------------------------- I2Cx CR2 Configuration ------------------------*/
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the I2Cx CR2 value */
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg = I2Cx->CR2;
 136              		.loc 1 192 0
 137 0020 7B68     		ldr	r3, [r7, #4]
 138 0022 9B88     		ldrh	r3, [r3, #4]	@ movhi
 139 0024 FB84     		strh	r3, [r7, #38]	@ movhi
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear frequency FREQ[5:0] bits */
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg &= (uint16_t)~((uint16_t)I2C_CR2_FREQ);
 140              		.loc 1 194 0
 141 0026 FB8C     		ldrh	r3, [r7, #38]	@ movhi
 142 0028 23F03F03 		bic	r3, r3, #63
 143 002c FB84     		strh	r3, [r7, #38]	@ movhi
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get pclk1 frequency value */
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   RCC_GetClocksFreq(&rcc_clocks);
 144              		.loc 1 196 0
 145 002e 07F10C03 		add	r3, r7, #12
 146 0032 1846     		mov	r0, r3
 147 0034 FFF7FEFF 		bl	RCC_GetClocksFreq
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   pclk1 = rcc_clocks.PCLK1_Frequency;
 148              		.loc 1 197 0
 149 0038 7B69     		ldr	r3, [r7, #20]
 150 003a FB61     		str	r3, [r7, #28]
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Set frequency bits depending on pclk1 value */
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   freqrange = (uint16_t)(pclk1 / 1000000);
 151              		.loc 1 199 0
 152 003c FA69     		ldr	r2, [r7, #28]
 153 003e 4DF68363 		movw	r3, #56963
 154 0042 C4F21B33 		movt	r3, 17179
 155 0046 A3FB0213 		umull	r1, r3, r3, r2
 156 004a 9B0C     		lsrs	r3, r3, #18
 157 004c 7B84     		strh	r3, [r7, #34]	@ movhi
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg |= freqrange;
 158              		.loc 1 200 0
 159 004e FA8C     		ldrh	r2, [r7, #38]	@ movhi
 160 0050 7B8C     		ldrh	r3, [r7, #34]	@ movhi
 161 0052 1343     		orrs	r3, r3, r2
 162 0054 FB84     		strh	r3, [r7, #38]	@ movhi
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Write to I2Cx CR2 */
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->CR2 = tmpreg;
 163              		.loc 1 202 0
 164 0056 7B68     		ldr	r3, [r7, #4]
 165 0058 FA8C     		ldrh	r2, [r7, #38]	@ movhi
 166 005a 9A80     		strh	r2, [r3, #4]	@ movhi
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*---------------------------- I2Cx CCR Configuration ------------------------*/
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Disable the selected I2C peripheral to configure TRISE */
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_PE);
 167              		.loc 1 206 0
 168 005c 7B68     		ldr	r3, [r7, #4]
 169 005e 1B88     		ldrh	r3, [r3]	@ movhi
 170 0060 9BB2     		uxth	r3, r3
 171 0062 23F00103 		bic	r3, r3, #1
 172 0066 9AB2     		uxth	r2, r3
 173 0068 7B68     		ldr	r3, [r7, #4]
 174 006a 1A80     		strh	r2, [r3]	@ movhi
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Reset tmpreg value */
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear F/S, DUTY and CCR[11:0] bits */
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg = 0;
 175              		.loc 1 209 0
 176 006c 0023     		movs	r3, #0
 177 006e FB84     		strh	r3, [r7, #38]	@ movhi
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Configure speed in standard mode */
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_InitStruct->I2C_ClockSpeed <= 100000)
 178              		.loc 1 212 0
 179 0070 3B68     		ldr	r3, [r7]
 180 0072 1A68     		ldr	r2, [r3]
 181 0074 48F2A063 		movw	r3, #34464
 182 0078 C0F20103 		movt	r3, 1
 183 007c 9A42     		cmp	r2, r3
 184 007e 15D8     		bhi	.L6
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Standard mode speed calculate */
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     result = (uint16_t)(pclk1 / (I2C_InitStruct->I2C_ClockSpeed << 1));
 185              		.loc 1 215 0
 186 0080 3B68     		ldr	r3, [r7]
 187 0082 1B68     		ldr	r3, [r3]
 188 0084 5B00     		lsls	r3, r3, #1
 189 0086 FA69     		ldr	r2, [r7, #28]
 190 0088 B2FBF3F3 		udiv	r3, r2, r3
 191 008c BB84     		strh	r3, [r7, #36]	@ movhi
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Test if CCR value is under 0x4*/
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     if (result < 0x04)
 192              		.loc 1 217 0
 193 008e BB8C     		ldrh	r3, [r7, #36]
 194 0090 032B     		cmp	r3, #3
 195 0092 01D8     		bhi	.L7
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Set minimum allowed value */
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       result = 0x04;  
 196              		.loc 1 220 0
 197 0094 0423     		movs	r3, #4
 198 0096 BB84     		strh	r3, [r7, #36]	@ movhi
 199              	.L7:
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Set speed value for standard mode */
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     tmpreg |= result;	  
 200              		.loc 1 223 0
 201 0098 FA8C     		ldrh	r2, [r7, #38]	@ movhi
 202 009a BB8C     		ldrh	r3, [r7, #36]	@ movhi
 203 009c 1343     		orrs	r3, r3, r2
 204 009e FB84     		strh	r3, [r7, #38]	@ movhi
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Set Maximum Rise Time for standard mode */
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->TRISE = freqrange + 1; 
 205              		.loc 1 225 0
 206 00a0 7B8C     		ldrh	r3, [r7, #34]	@ movhi
 207 00a2 0133     		adds	r3, r3, #1
 208 00a4 9AB2     		uxth	r2, r3
 209 00a6 7B68     		ldr	r3, [r7, #4]
 210 00a8 1A84     		strh	r2, [r3, #32]	@ movhi
 211 00aa 43E0     		b	.L8
 212              	.L6:
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Configure speed in fast mode */
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* To use the I2C at 400 KHz (in fast mode), the PCLK1 frequency (I2C peripheral
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      input clock) must be a multiple of 10 MHz */
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else /*(I2C_InitStruct->I2C_ClockSpeed <= 400000)*/
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     if (I2C_InitStruct->I2C_DutyCycle == I2C_DutyCycle_2)
 213              		.loc 1 232 0
 214 00ac 3B68     		ldr	r3, [r7]
 215 00ae DA88     		ldrh	r2, [r3, #6]
 216 00b0 4BF6FF73 		movw	r3, #49151
 217 00b4 9A42     		cmp	r2, r3
 218 00b6 09D1     		bne	.L9
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Fast mode speed calculate: Tlow/Thigh = 2 */
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       result = (uint16_t)(pclk1 / (I2C_InitStruct->I2C_ClockSpeed * 3));
 219              		.loc 1 235 0
 220 00b8 3B68     		ldr	r3, [r7]
 221 00ba 1A68     		ldr	r2, [r3]
 222 00bc 1346     		mov	r3, r2
 223 00be 5B00     		lsls	r3, r3, #1
 224 00c0 1344     		add	r3, r3, r2
 225 00c2 FA69     		ldr	r2, [r7, #28]
 226 00c4 B2FBF3F3 		udiv	r3, r2, r3
 227 00c8 BB84     		strh	r3, [r7, #36]	@ movhi
 228 00ca 0EE0     		b	.L10
 229              	.L9:
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     else /*I2C_InitStruct->I2C_DutyCycle == I2C_DutyCycle_16_9*/
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Fast mode speed calculate: Tlow/Thigh = 16/9 */
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       result = (uint16_t)(pclk1 / (I2C_InitStruct->I2C_ClockSpeed * 25));
 230              		.loc 1 240 0
 231 00cc 3B68     		ldr	r3, [r7]
 232 00ce 1A68     		ldr	r2, [r3]
 233 00d0 1346     		mov	r3, r2
 234 00d2 9B00     		lsls	r3, r3, #2
 235 00d4 1344     		add	r3, r3, r2
 236 00d6 9A00     		lsls	r2, r3, #2
 237 00d8 1344     		add	r3, r3, r2
 238 00da FA69     		ldr	r2, [r7, #28]
 239 00dc B2FBF3F3 		udiv	r3, r2, r3
 240 00e0 BB84     		strh	r3, [r7, #36]	@ movhi
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Set DUTY bit */
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       result |= I2C_DutyCycle_16_9;
 241              		.loc 1 242 0
 242 00e2 BB8C     		ldrh	r3, [r7, #36]	@ movhi
 243 00e4 43F48043 		orr	r3, r3, #16384
 244 00e8 BB84     		strh	r3, [r7, #36]	@ movhi
 245              	.L10:
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Test if CCR value is under 0x1*/
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     if ((result & I2C_CCR_CCR) == 0)
 246              		.loc 1 246 0
 247 00ea BB8C     		ldrh	r3, [r7, #36]
 248 00ec C3F30B03 		ubfx	r3, r3, #0, #12
 249 00f0 002B     		cmp	r3, #0
 250 00f2 03D1     		bne	.L11
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     {
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       /* Set minimum allowed value */
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       result |= (uint16_t)0x0001;  
 251              		.loc 1 249 0
 252 00f4 BB8C     		ldrh	r3, [r7, #36]	@ movhi
 253 00f6 43F00103 		orr	r3, r3, #1
 254 00fa BB84     		strh	r3, [r7, #36]	@ movhi
 255              	.L11:
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     }
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Set speed value and set F/S bit for fast mode */
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     tmpreg |= (uint16_t)(result | I2C_CCR_FS);
 256              		.loc 1 252 0
 257 00fc BA8C     		ldrh	r2, [r7, #36]	@ movhi
 258 00fe FB8C     		ldrh	r3, [r7, #38]	@ movhi
 259 0100 1343     		orrs	r3, r3, r2
 260 0102 9BB2     		uxth	r3, r3
 261 0104 6FEA4343 		mvn	r3, r3, lsl #17
 262 0108 6FEA5343 		mvn	r3, r3, lsr #17
 263 010c FB84     		strh	r3, [r7, #38]	@ movhi
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Set Maximum Rise Time for fast mode */
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->TRISE = (uint16_t)(((freqrange * (uint16_t)300) / (uint16_t)1000) + (uint16_t)1);  
 264              		.loc 1 254 0
 265 010e 7B8C     		ldrh	r3, [r7, #34]
 266 0110 4FF49672 		mov	r2, #300
 267 0114 02FB03F2 		mul	r2, r2, r3
 268 0118 44F6D353 		movw	r3, #19923
 269 011c C1F26203 		movt	r3, 4194
 270 0120 83FB0213 		smull	r1, r3, r3, r2
 271 0124 9911     		asrs	r1, r3, #6
 272 0126 D317     		asrs	r3, r2, #31
 273 0128 CB1A     		subs	r3, r1, r3
 274 012a 9BB2     		uxth	r3, r3
 275 012c 0133     		adds	r3, r3, #1
 276 012e 9AB2     		uxth	r2, r3
 277 0130 7B68     		ldr	r3, [r7, #4]
 278 0132 1A84     		strh	r2, [r3, #32]	@ movhi
 279              	.L8:
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Write to I2Cx CCR */
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->CCR = tmpreg;
 280              		.loc 1 258 0
 281 0134 7B68     		ldr	r3, [r7, #4]
 282 0136 FA8C     		ldrh	r2, [r7, #38]	@ movhi
 283 0138 9A83     		strh	r2, [r3, #28]	@ movhi
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Enable the selected I2C peripheral */
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->CR1 |= I2C_CR1_PE;
 284              		.loc 1 260 0
 285 013a 7B68     		ldr	r3, [r7, #4]
 286 013c 1B88     		ldrh	r3, [r3]	@ movhi
 287 013e 9BB2     		uxth	r3, r3
 288 0140 43F00103 		orr	r3, r3, #1
 289 0144 9AB2     		uxth	r2, r3
 290 0146 7B68     		ldr	r3, [r7, #4]
 291 0148 1A80     		strh	r2, [r3]	@ movhi
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*---------------------------- I2Cx CR1 Configuration ------------------------*/
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the I2Cx CR1 value */
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg = I2Cx->CR1;
 292              		.loc 1 264 0
 293 014a 7B68     		ldr	r3, [r7, #4]
 294 014c 1B88     		ldrh	r3, [r3]	@ movhi
 295 014e FB84     		strh	r3, [r7, #38]	@ movhi
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear ACK, SMBTYPE and  SMBUS bits */
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg &= CR1_CLEAR_MASK;
 296              		.loc 1 266 0
 297 0150 FB8C     		ldrh	r3, [r7, #38]	@ movhi
 298 0152 23F48163 		bic	r3, r3, #1032
 299 0156 23F00203 		bic	r3, r3, #2
 300 015a FB84     		strh	r3, [r7, #38]	@ movhi
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Configure I2Cx: mode and acknowledgement */
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Set SMBTYPE and SMBUS bits according to I2C_Mode value */
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Set ACK bit according to I2C_Ack value */
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg |= (uint16_t)((uint32_t)I2C_InitStruct->I2C_Mode | I2C_InitStruct->I2C_Ack);
 301              		.loc 1 270 0
 302 015c 3B68     		ldr	r3, [r7]
 303 015e 9A88     		ldrh	r2, [r3, #4]
 304 0160 3B68     		ldr	r3, [r7]
 305 0162 5B89     		ldrh	r3, [r3, #10]
 306 0164 1343     		orrs	r3, r3, r2
 307 0166 9AB2     		uxth	r2, r3
 308 0168 FB8C     		ldrh	r3, [r7, #38]	@ movhi
 309 016a 1343     		orrs	r3, r3, r2
 310 016c FB84     		strh	r3, [r7, #38]	@ movhi
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Write to I2Cx CR1 */
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->CR1 = tmpreg;
 311              		.loc 1 272 0
 312 016e 7B68     		ldr	r3, [r7, #4]
 313 0170 FA8C     		ldrh	r2, [r7, #38]	@ movhi
 314 0172 1A80     		strh	r2, [r3]	@ movhi
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*---------------------------- I2Cx OAR1 Configuration -----------------------*/
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Set I2Cx Own Address1 and acknowledged address */
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->OAR1 = (I2C_InitStruct->I2C_AcknowledgedAddress | I2C_InitStruct->I2C_OwnAddress1);
 315              		.loc 1 276 0
 316 0174 3B68     		ldr	r3, [r7]
 317 0176 9A89     		ldrh	r2, [r3, #12]
 318 0178 3B68     		ldr	r3, [r7]
 319 017a 1B89     		ldrh	r3, [r3, #8]
 320 017c 1343     		orrs	r3, r3, r2
 321 017e 9AB2     		uxth	r2, r3
 322 0180 7B68     		ldr	r3, [r7, #4]
 323 0182 1A81     		strh	r2, [r3, #8]	@ movhi
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 324              		.loc 1 277 0
 325 0184 2837     		adds	r7, r7, #40
 326 0186 BD46     		mov	sp, r7
 327              		@ sp needed
 328 0188 80BD     		pop	{r7, pc}
 329              		.cfi_endproc
 330              	.LFE111:
 332 018a 00BF     		.section	.text.I2C_StructInit,"ax",%progbits
 333              		.align	2
 334              		.global	I2C_StructInit
 335              		.thumb
 336              		.thumb_func
 338              	I2C_StructInit:
 339              	.LFB112:
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Fills each I2C_InitStruct member with its default value.
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_InitStruct: pointer to an I2C_InitTypeDef structure which will be initialized.
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_StructInit(I2C_InitTypeDef* I2C_InitStruct)
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 340              		.loc 1 285 0
 341              		.cfi_startproc
 342              		@ args = 0, pretend = 0, frame = 8
 343              		@ frame_needed = 1, uses_anonymous_args = 0
 344              		@ link register save eliminated.
 345 0000 80B4     		push	{r7}
 346              	.LCFI6:
 347              		.cfi_def_cfa_offset 4
 348              		.cfi_offset 7, -4
 349 0002 83B0     		sub	sp, sp, #12
 350              	.LCFI7:
 351              		.cfi_def_cfa_offset 16
 352 0004 00AF     		add	r7, sp, #0
 353              	.LCFI8:
 354              		.cfi_def_cfa_register 7
 355 0006 7860     		str	r0, [r7, #4]
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*---------------- Reset I2C init structure parameters values ----------------*/
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* initialize the I2C_ClockSpeed member */
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_ClockSpeed = 5000;
 356              		.loc 1 288 0
 357 0008 7B68     		ldr	r3, [r7, #4]
 358 000a 41F28832 		movw	r2, #5000
 359 000e 1A60     		str	r2, [r3]
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_Mode member */
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_Mode = I2C_Mode_I2C;
 360              		.loc 1 290 0
 361 0010 7B68     		ldr	r3, [r7, #4]
 362 0012 0022     		movs	r2, #0
 363 0014 9A80     		strh	r2, [r3, #4]	@ movhi
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_DutyCycle member */
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_DutyCycle = I2C_DutyCycle_2;
 364              		.loc 1 292 0
 365 0016 7B68     		ldr	r3, [r7, #4]
 366 0018 4BF6FF72 		movw	r2, #49151
 367 001c DA80     		strh	r2, [r3, #6]	@ movhi
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_OwnAddress1 member */
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_OwnAddress1 = 0;
 368              		.loc 1 294 0
 369 001e 7B68     		ldr	r3, [r7, #4]
 370 0020 0022     		movs	r2, #0
 371 0022 1A81     		strh	r2, [r3, #8]	@ movhi
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_Ack member */
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_Ack = I2C_Ack_Disable;
 372              		.loc 1 296 0
 373 0024 7B68     		ldr	r3, [r7, #4]
 374 0026 0022     		movs	r2, #0
 375 0028 5A81     		strh	r2, [r3, #10]	@ movhi
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Initialize the I2C_AcknowledgedAddress member */
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_InitStruct->I2C_AcknowledgedAddress = I2C_AcknowledgedAddress_7bit;
 376              		.loc 1 298 0
 377 002a 7B68     		ldr	r3, [r7, #4]
 378 002c 4FF48042 		mov	r2, #16384
 379 0030 9A81     		strh	r2, [r3, #12]	@ movhi
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 380              		.loc 1 299 0
 381 0032 0C37     		adds	r7, r7, #12
 382 0034 BD46     		mov	sp, r7
 383              		@ sp needed
 384 0036 5DF8047B 		ldr	r7, [sp], #4
 385 003a 7047     		bx	lr
 386              		.cfi_endproc
 387              	.LFE112:
 389              		.section	.text.I2C_Cmd,"ax",%progbits
 390              		.align	2
 391              		.global	I2C_Cmd
 392              		.thumb
 393              		.thumb_func
 395              	I2C_Cmd:
 396              	.LFB113:
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C peripheral.
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2Cx peripheral. 
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_Cmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 397              		.loc 1 309 0
 398              		.cfi_startproc
 399              		@ args = 0, pretend = 0, frame = 8
 400              		@ frame_needed = 1, uses_anonymous_args = 0
 401              		@ link register save eliminated.
 402 0000 80B4     		push	{r7}
 403              	.LCFI9:
 404              		.cfi_def_cfa_offset 4
 405              		.cfi_offset 7, -4
 406 0002 83B0     		sub	sp, sp, #12
 407              	.LCFI10:
 408              		.cfi_def_cfa_offset 16
 409 0004 00AF     		add	r7, sp, #0
 410              	.LCFI11:
 411              		.cfi_def_cfa_register 7
 412 0006 7860     		str	r0, [r7, #4]
 413 0008 0B46     		mov	r3, r1
 414 000a FB70     		strb	r3, [r7, #3]
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 415              		.loc 1 313 0
 416 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 417 000e 002B     		cmp	r3, #0
 418 0010 08D0     		beq	.L14
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C peripheral */
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_PE;
 419              		.loc 1 316 0
 420 0012 7B68     		ldr	r3, [r7, #4]
 421 0014 1B88     		ldrh	r3, [r3]	@ movhi
 422 0016 9BB2     		uxth	r3, r3
 423 0018 43F00103 		orr	r3, r3, #1
 424 001c 9AB2     		uxth	r2, r3
 425 001e 7B68     		ldr	r3, [r7, #4]
 426 0020 1A80     		strh	r2, [r3]	@ movhi
 427 0022 07E0     		b	.L13
 428              	.L14:
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C peripheral */
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_PE);
 429              		.loc 1 321 0
 430 0024 7B68     		ldr	r3, [r7, #4]
 431 0026 1B88     		ldrh	r3, [r3]	@ movhi
 432 0028 9BB2     		uxth	r3, r3
 433 002a 23F00103 		bic	r3, r3, #1
 434 002e 9AB2     		uxth	r2, r3
 435 0030 7B68     		ldr	r3, [r7, #4]
 436 0032 1A80     		strh	r2, [r3]	@ movhi
 437              	.L13:
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 438              		.loc 1 323 0
 439 0034 0C37     		adds	r7, r7, #12
 440 0036 BD46     		mov	sp, r7
 441              		@ sp needed
 442 0038 5DF8047B 		ldr	r7, [sp], #4
 443 003c 7047     		bx	lr
 444              		.cfi_endproc
 445              	.LFE113:
 447 003e 00BF     		.section	.text.I2C_GenerateSTART,"ax",%progbits
 448              		.align	2
 449              		.global	I2C_GenerateSTART
 450              		.thumb
 451              		.thumb_func
 453              	I2C_GenerateSTART:
 454              	.LFB114:
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Generates I2Cx communication START condition.
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C START condition generation.
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None.
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_GenerateSTART(I2C_TypeDef* I2Cx, FunctionalState NewState)
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 455              		.loc 1 333 0
 456              		.cfi_startproc
 457              		@ args = 0, pretend = 0, frame = 8
 458              		@ frame_needed = 1, uses_anonymous_args = 0
 459              		@ link register save eliminated.
 460 0000 80B4     		push	{r7}
 461              	.LCFI12:
 462              		.cfi_def_cfa_offset 4
 463              		.cfi_offset 7, -4
 464 0002 83B0     		sub	sp, sp, #12
 465              	.LCFI13:
 466              		.cfi_def_cfa_offset 16
 467 0004 00AF     		add	r7, sp, #0
 468              	.LCFI14:
 469              		.cfi_def_cfa_register 7
 470 0006 7860     		str	r0, [r7, #4]
 471 0008 0B46     		mov	r3, r1
 472 000a FB70     		strb	r3, [r7, #3]
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 473              		.loc 1 337 0
 474 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 475 000e 002B     		cmp	r3, #0
 476 0010 08D0     		beq	.L17
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Generate a START condition */
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_START;
 477              		.loc 1 340 0
 478 0012 7B68     		ldr	r3, [r7, #4]
 479 0014 1B88     		ldrh	r3, [r3]	@ movhi
 480 0016 9BB2     		uxth	r3, r3
 481 0018 43F48073 		orr	r3, r3, #256
 482 001c 9AB2     		uxth	r2, r3
 483 001e 7B68     		ldr	r3, [r7, #4]
 484 0020 1A80     		strh	r2, [r3]	@ movhi
 485 0022 07E0     		b	.L16
 486              	.L17:
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the START condition generation */
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_START);
 487              		.loc 1 345 0
 488 0024 7B68     		ldr	r3, [r7, #4]
 489 0026 1B88     		ldrh	r3, [r3]	@ movhi
 490 0028 9BB2     		uxth	r3, r3
 491 002a 23F48073 		bic	r3, r3, #256
 492 002e 9AB2     		uxth	r2, r3
 493 0030 7B68     		ldr	r3, [r7, #4]
 494 0032 1A80     		strh	r2, [r3]	@ movhi
 495              	.L16:
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 496              		.loc 1 347 0
 497 0034 0C37     		adds	r7, r7, #12
 498 0036 BD46     		mov	sp, r7
 499              		@ sp needed
 500 0038 5DF8047B 		ldr	r7, [sp], #4
 501 003c 7047     		bx	lr
 502              		.cfi_endproc
 503              	.LFE114:
 505 003e 00BF     		.section	.text.I2C_GenerateSTOP,"ax",%progbits
 506              		.align	2
 507              		.global	I2C_GenerateSTOP
 508              		.thumb
 509              		.thumb_func
 511              	I2C_GenerateSTOP:
 512              	.LFB115:
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Generates I2Cx communication STOP condition.
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C STOP condition generation.
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None.
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_GenerateSTOP(I2C_TypeDef* I2Cx, FunctionalState NewState)
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 513              		.loc 1 357 0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 8
 516              		@ frame_needed = 1, uses_anonymous_args = 0
 517              		@ link register save eliminated.
 518 0000 80B4     		push	{r7}
 519              	.LCFI15:
 520              		.cfi_def_cfa_offset 4
 521              		.cfi_offset 7, -4
 522 0002 83B0     		sub	sp, sp, #12
 523              	.LCFI16:
 524              		.cfi_def_cfa_offset 16
 525 0004 00AF     		add	r7, sp, #0
 526              	.LCFI17:
 527              		.cfi_def_cfa_register 7
 528 0006 7860     		str	r0, [r7, #4]
 529 0008 0B46     		mov	r3, r1
 530 000a FB70     		strb	r3, [r7, #3]
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 531              		.loc 1 361 0
 532 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 533 000e 002B     		cmp	r3, #0
 534 0010 08D0     		beq	.L20
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Generate a STOP condition */
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_STOP;
 535              		.loc 1 364 0
 536 0012 7B68     		ldr	r3, [r7, #4]
 537 0014 1B88     		ldrh	r3, [r3]	@ movhi
 538 0016 9BB2     		uxth	r3, r3
 539 0018 43F40073 		orr	r3, r3, #512
 540 001c 9AB2     		uxth	r2, r3
 541 001e 7B68     		ldr	r3, [r7, #4]
 542 0020 1A80     		strh	r2, [r3]	@ movhi
 543 0022 07E0     		b	.L19
 544              	.L20:
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the STOP condition generation */
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_STOP);
 545              		.loc 1 369 0
 546 0024 7B68     		ldr	r3, [r7, #4]
 547 0026 1B88     		ldrh	r3, [r3]	@ movhi
 548 0028 9BB2     		uxth	r3, r3
 549 002a 23F40073 		bic	r3, r3, #512
 550 002e 9AB2     		uxth	r2, r3
 551 0030 7B68     		ldr	r3, [r7, #4]
 552 0032 1A80     		strh	r2, [r3]	@ movhi
 553              	.L19:
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 554              		.loc 1 371 0
 555 0034 0C37     		adds	r7, r7, #12
 556 0036 BD46     		mov	sp, r7
 557              		@ sp needed
 558 0038 5DF8047B 		ldr	r7, [sp], #4
 559 003c 7047     		bx	lr
 560              		.cfi_endproc
 561              	.LFE115:
 563 003e 00BF     		.section	.text.I2C_Send7bitAddress,"ax",%progbits
 564              		.align	2
 565              		.global	I2C_Send7bitAddress
 566              		.thumb
 567              		.thumb_func
 569              	I2C_Send7bitAddress:
 570              	.LFB116:
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Transmits the address byte to select the slave device.
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  Address: specifies the slave address which will be transmitted
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_Direction: specifies whether the I2C device will be a Transmitter
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         or a Receiver. 
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Direction_Transmitter: Transmitter mode
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Direction_Receiver: Receiver mode
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None.
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_Send7bitAddress(I2C_TypeDef* I2Cx, uint8_t Address, uint8_t I2C_Direction)
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 571              		.loc 1 385 0
 572              		.cfi_startproc
 573              		@ args = 0, pretend = 0, frame = 8
 574              		@ frame_needed = 1, uses_anonymous_args = 0
 575              		@ link register save eliminated.
 576 0000 80B4     		push	{r7}
 577              	.LCFI18:
 578              		.cfi_def_cfa_offset 4
 579              		.cfi_offset 7, -4
 580 0002 83B0     		sub	sp, sp, #12
 581              	.LCFI19:
 582              		.cfi_def_cfa_offset 16
 583 0004 00AF     		add	r7, sp, #0
 584              	.LCFI20:
 585              		.cfi_def_cfa_register 7
 586 0006 7860     		str	r0, [r7, #4]
 587 0008 1346     		mov	r3, r2
 588 000a 0A46     		mov	r2, r1
 589 000c FA70     		strb	r2, [r7, #3]
 590 000e BB70     		strb	r3, [r7, #2]
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_DIRECTION(I2C_Direction));
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Test on the direction to set/reset the read/write bit */
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_Direction != I2C_Direction_Transmitter)
 591              		.loc 1 390 0
 592 0010 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 593 0012 002B     		cmp	r3, #0
 594 0014 04D0     		beq	.L23
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Set the address bit0 for read */
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     Address |= I2C_OAR1_ADD0;
 595              		.loc 1 393 0
 596 0016 FB78     		ldrb	r3, [r7, #3]
 597 0018 43F00103 		orr	r3, r3, #1
 598 001c FB70     		strb	r3, [r7, #3]
 599 001e 03E0     		b	.L24
 600              	.L23:
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Reset the address bit0 for write */
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     Address &= (uint8_t)~((uint8_t)I2C_OAR1_ADD0);
 601              		.loc 1 398 0
 602 0020 FB78     		ldrb	r3, [r7, #3]
 603 0022 23F00103 		bic	r3, r3, #1
 604 0026 FB70     		strb	r3, [r7, #3]
 605              	.L24:
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Send the address */
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->DR = Address;
 606              		.loc 1 401 0
 607 0028 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 608 002a 9AB2     		uxth	r2, r3
 609 002c 7B68     		ldr	r3, [r7, #4]
 610 002e 1A82     		strh	r2, [r3, #16]	@ movhi
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 611              		.loc 1 402 0
 612 0030 0C37     		adds	r7, r7, #12
 613 0032 BD46     		mov	sp, r7
 614              		@ sp needed
 615 0034 5DF8047B 		ldr	r7, [sp], #4
 616 0038 7047     		bx	lr
 617              		.cfi_endproc
 618              	.LFE116:
 620 003a 00BF     		.section	.text.I2C_AcknowledgeConfig,"ax",%progbits
 621              		.align	2
 622              		.global	I2C_AcknowledgeConfig
 623              		.thumb
 624              		.thumb_func
 626              	I2C_AcknowledgeConfig:
 627              	.LFB117:
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C acknowledge feature.
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C Acknowledgement.
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None.
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_AcknowledgeConfig(I2C_TypeDef* I2Cx, FunctionalState NewState)
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 628              		.loc 1 412 0
 629              		.cfi_startproc
 630              		@ args = 0, pretend = 0, frame = 8
 631              		@ frame_needed = 1, uses_anonymous_args = 0
 632              		@ link register save eliminated.
 633 0000 80B4     		push	{r7}
 634              	.LCFI21:
 635              		.cfi_def_cfa_offset 4
 636              		.cfi_offset 7, -4
 637 0002 83B0     		sub	sp, sp, #12
 638              	.LCFI22:
 639              		.cfi_def_cfa_offset 16
 640 0004 00AF     		add	r7, sp, #0
 641              	.LCFI23:
 642              		.cfi_def_cfa_register 7
 643 0006 7860     		str	r0, [r7, #4]
 644 0008 0B46     		mov	r3, r1
 645 000a FB70     		strb	r3, [r7, #3]
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 646              		.loc 1 416 0
 647 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 648 000e 002B     		cmp	r3, #0
 649 0010 08D0     		beq	.L26
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the acknowledgement */
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ACK;
 650              		.loc 1 419 0
 651 0012 7B68     		ldr	r3, [r7, #4]
 652 0014 1B88     		ldrh	r3, [r3]	@ movhi
 653 0016 9BB2     		uxth	r3, r3
 654 0018 43F48063 		orr	r3, r3, #1024
 655 001c 9AB2     		uxth	r2, r3
 656 001e 7B68     		ldr	r3, [r7, #4]
 657 0020 1A80     		strh	r2, [r3]	@ movhi
 658 0022 07E0     		b	.L25
 659              	.L26:
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the acknowledgement */
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ACK);
 660              		.loc 1 424 0
 661 0024 7B68     		ldr	r3, [r7, #4]
 662 0026 1B88     		ldrh	r3, [r3]	@ movhi
 663 0028 9BB2     		uxth	r3, r3
 664 002a 23F48063 		bic	r3, r3, #1024
 665 002e 9AB2     		uxth	r2, r3
 666 0030 7B68     		ldr	r3, [r7, #4]
 667 0032 1A80     		strh	r2, [r3]	@ movhi
 668              	.L25:
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 669              		.loc 1 426 0
 670 0034 0C37     		adds	r7, r7, #12
 671 0036 BD46     		mov	sp, r7
 672              		@ sp needed
 673 0038 5DF8047B 		ldr	r7, [sp], #4
 674 003c 7047     		bx	lr
 675              		.cfi_endproc
 676              	.LFE117:
 678 003e 00BF     		.section	.text.I2C_OwnAddress2Config,"ax",%progbits
 679              		.align	2
 680              		.global	I2C_OwnAddress2Config
 681              		.thumb
 682              		.thumb_func
 684              	I2C_OwnAddress2Config:
 685              	.LFB118:
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Configures the specified I2C own address2.
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  Address: specifies the 7bit I2C own address2.
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None.
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_OwnAddress2Config(I2C_TypeDef* I2Cx, uint8_t Address)
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 686              		.loc 1 435 0
 687              		.cfi_startproc
 688              		@ args = 0, pretend = 0, frame = 16
 689              		@ frame_needed = 1, uses_anonymous_args = 0
 690              		@ link register save eliminated.
 691 0000 80B4     		push	{r7}
 692              	.LCFI24:
 693              		.cfi_def_cfa_offset 4
 694              		.cfi_offset 7, -4
 695 0002 85B0     		sub	sp, sp, #20
 696              	.LCFI25:
 697              		.cfi_def_cfa_offset 24
 698 0004 00AF     		add	r7, sp, #0
 699              	.LCFI26:
 700              		.cfi_def_cfa_register 7
 701 0006 7860     		str	r0, [r7, #4]
 702 0008 0B46     		mov	r3, r1
 703 000a FB70     		strb	r3, [r7, #3]
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint16_t tmpreg = 0;
 704              		.loc 1 436 0
 705 000c 0023     		movs	r3, #0
 706 000e FB81     		strh	r3, [r7, #14]	@ movhi
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the old register value */
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg = I2Cx->OAR2;
 707              		.loc 1 442 0
 708 0010 7B68     		ldr	r3, [r7, #4]
 709 0012 9B89     		ldrh	r3, [r3, #12]	@ movhi
 710 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Reset I2Cx Own address2 bit [7:1] */
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg &= (uint16_t)~((uint16_t)I2C_OAR2_ADD2);
 711              		.loc 1 445 0
 712 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 713 0018 23F0FE03 		bic	r3, r3, #254
 714 001c FB81     		strh	r3, [r7, #14]	@ movhi
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Set I2Cx Own address2 */
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmpreg |= (uint16_t)((uint16_t)Address & (uint16_t)0x00FE);
 715              		.loc 1 448 0
 716 001e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 717 0020 9BB2     		uxth	r3, r3
 718 0022 03F0FE03 		and	r3, r3, #254
 719 0026 9AB2     		uxth	r2, r3
 720 0028 FB89     		ldrh	r3, [r7, #14]
 721 002a 1343     		orrs	r3, r3, r2
 722 002c 9BB2     		uxth	r3, r3
 723 002e FB81     		strh	r3, [r7, #14]	@ movhi
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Store the new register value */
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->OAR2 = tmpreg;
 724              		.loc 1 451 0
 725 0030 7B68     		ldr	r3, [r7, #4]
 726 0032 FA89     		ldrh	r2, [r7, #14]	@ movhi
 727 0034 9A81     		strh	r2, [r3, #12]	@ movhi
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 728              		.loc 1 452 0
 729 0036 1437     		adds	r7, r7, #20
 730 0038 BD46     		mov	sp, r7
 731              		@ sp needed
 732 003a 5DF8047B 		ldr	r7, [sp], #4
 733 003e 7047     		bx	lr
 734              		.cfi_endproc
 735              	.LFE118:
 737              		.section	.text.I2C_DualAddressCmd,"ax",%progbits
 738              		.align	2
 739              		.global	I2C_DualAddressCmd
 740              		.thumb
 741              		.thumb_func
 743              	I2C_DualAddressCmd:
 744              	.LFB119:
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C dual addressing mode.
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C dual addressing mode.
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_DualAddressCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 745              		.loc 1 462 0
 746              		.cfi_startproc
 747              		@ args = 0, pretend = 0, frame = 8
 748              		@ frame_needed = 1, uses_anonymous_args = 0
 749              		@ link register save eliminated.
 750 0000 80B4     		push	{r7}
 751              	.LCFI27:
 752              		.cfi_def_cfa_offset 4
 753              		.cfi_offset 7, -4
 754 0002 83B0     		sub	sp, sp, #12
 755              	.LCFI28:
 756              		.cfi_def_cfa_offset 16
 757 0004 00AF     		add	r7, sp, #0
 758              	.LCFI29:
 759              		.cfi_def_cfa_register 7
 760 0006 7860     		str	r0, [r7, #4]
 761 0008 0B46     		mov	r3, r1
 762 000a FB70     		strb	r3, [r7, #3]
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 763              		.loc 1 466 0
 764 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 765 000e 002B     		cmp	r3, #0
 766 0010 08D0     		beq	.L30
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable dual addressing mode */
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->OAR2 |= I2C_OAR2_ENDUAL;
 767              		.loc 1 469 0
 768 0012 7B68     		ldr	r3, [r7, #4]
 769 0014 9B89     		ldrh	r3, [r3, #12]	@ movhi
 770 0016 9BB2     		uxth	r3, r3
 771 0018 43F00103 		orr	r3, r3, #1
 772 001c 9AB2     		uxth	r2, r3
 773 001e 7B68     		ldr	r3, [r7, #4]
 774 0020 9A81     		strh	r2, [r3, #12]	@ movhi
 775 0022 07E0     		b	.L29
 776              	.L30:
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable dual addressing mode */
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->OAR2 &= (uint16_t)~((uint16_t)I2C_OAR2_ENDUAL);
 777              		.loc 1 474 0
 778 0024 7B68     		ldr	r3, [r7, #4]
 779 0026 9B89     		ldrh	r3, [r3, #12]	@ movhi
 780 0028 9BB2     		uxth	r3, r3
 781 002a 23F00103 		bic	r3, r3, #1
 782 002e 9AB2     		uxth	r2, r3
 783 0030 7B68     		ldr	r3, [r7, #4]
 784 0032 9A81     		strh	r2, [r3, #12]	@ movhi
 785              	.L29:
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 786              		.loc 1 476 0
 787 0034 0C37     		adds	r7, r7, #12
 788 0036 BD46     		mov	sp, r7
 789              		@ sp needed
 790 0038 5DF8047B 		ldr	r7, [sp], #4
 791 003c 7047     		bx	lr
 792              		.cfi_endproc
 793              	.LFE119:
 795 003e 00BF     		.section	.text.I2C_GeneralCallCmd,"ax",%progbits
 796              		.align	2
 797              		.global	I2C_GeneralCallCmd
 798              		.thumb
 799              		.thumb_func
 801              	I2C_GeneralCallCmd:
 802              	.LFB120:
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C general call feature.
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C General call.
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_GeneralCallCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 803              		.loc 1 486 0
 804              		.cfi_startproc
 805              		@ args = 0, pretend = 0, frame = 8
 806              		@ frame_needed = 1, uses_anonymous_args = 0
 807              		@ link register save eliminated.
 808 0000 80B4     		push	{r7}
 809              	.LCFI30:
 810              		.cfi_def_cfa_offset 4
 811              		.cfi_offset 7, -4
 812 0002 83B0     		sub	sp, sp, #12
 813              	.LCFI31:
 814              		.cfi_def_cfa_offset 16
 815 0004 00AF     		add	r7, sp, #0
 816              	.LCFI32:
 817              		.cfi_def_cfa_register 7
 818 0006 7860     		str	r0, [r7, #4]
 819 0008 0B46     		mov	r3, r1
 820 000a FB70     		strb	r3, [r7, #3]
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 821              		.loc 1 490 0
 822 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 823 000e 002B     		cmp	r3, #0
 824 0010 08D0     		beq	.L33
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable generall call */
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ENGC;
 825              		.loc 1 493 0
 826 0012 7B68     		ldr	r3, [r7, #4]
 827 0014 1B88     		ldrh	r3, [r3]	@ movhi
 828 0016 9BB2     		uxth	r3, r3
 829 0018 43F04003 		orr	r3, r3, #64
 830 001c 9AB2     		uxth	r2, r3
 831 001e 7B68     		ldr	r3, [r7, #4]
 832 0020 1A80     		strh	r2, [r3]	@ movhi
 833 0022 07E0     		b	.L32
 834              	.L33:
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable generall call */
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ENGC);
 835              		.loc 1 498 0
 836 0024 7B68     		ldr	r3, [r7, #4]
 837 0026 1B88     		ldrh	r3, [r3]	@ movhi
 838 0028 9BB2     		uxth	r3, r3
 839 002a 23F04003 		bic	r3, r3, #64
 840 002e 9AB2     		uxth	r2, r3
 841 0030 7B68     		ldr	r3, [r7, #4]
 842 0032 1A80     		strh	r2, [r3]	@ movhi
 843              	.L32:
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 844              		.loc 1 500 0
 845 0034 0C37     		adds	r7, r7, #12
 846 0036 BD46     		mov	sp, r7
 847              		@ sp needed
 848 0038 5DF8047B 		ldr	r7, [sp], #4
 849 003c 7047     		bx	lr
 850              		.cfi_endproc
 851              	.LFE120:
 853 003e 00BF     		.section	.text.I2C_SoftwareResetCmd,"ax",%progbits
 854              		.align	2
 855              		.global	I2C_SoftwareResetCmd
 856              		.thumb
 857              		.thumb_func
 859              	I2C_SoftwareResetCmd:
 860              	.LFB121:
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C software reset.
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   When software reset is enabled, the I2C IOs are released (this can
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         be useful to recover from bus errors).  
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C software reset.
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_SoftwareResetCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 861              		.loc 1 512 0
 862              		.cfi_startproc
 863              		@ args = 0, pretend = 0, frame = 8
 864              		@ frame_needed = 1, uses_anonymous_args = 0
 865              		@ link register save eliminated.
 866 0000 80B4     		push	{r7}
 867              	.LCFI33:
 868              		.cfi_def_cfa_offset 4
 869              		.cfi_offset 7, -4
 870 0002 83B0     		sub	sp, sp, #12
 871              	.LCFI34:
 872              		.cfi_def_cfa_offset 16
 873 0004 00AF     		add	r7, sp, #0
 874              	.LCFI35:
 875              		.cfi_def_cfa_register 7
 876 0006 7860     		str	r0, [r7, #4]
 877 0008 0B46     		mov	r3, r1
 878 000a FB70     		strb	r3, [r7, #3]
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 879              		.loc 1 516 0
 880 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 881 000e 002B     		cmp	r3, #0
 882 0010 0AD0     		beq	.L36
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Peripheral under reset */
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_SWRST;
 883              		.loc 1 519 0
 884 0012 7B68     		ldr	r3, [r7, #4]
 885 0014 1B88     		ldrh	r3, [r3]	@ movhi
 886 0016 9BB2     		uxth	r3, r3
 887 0018 6FEA4343 		mvn	r3, r3, lsl #17
 888 001c 6FEA5343 		mvn	r3, r3, lsr #17
 889 0020 9AB2     		uxth	r2, r3
 890 0022 7B68     		ldr	r3, [r7, #4]
 891 0024 1A80     		strh	r2, [r3]	@ movhi
 892 0026 07E0     		b	.L35
 893              	.L36:
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Peripheral not under reset */
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_SWRST);
 894              		.loc 1 524 0
 895 0028 7B68     		ldr	r3, [r7, #4]
 896 002a 1B88     		ldrh	r3, [r3]	@ movhi
 897 002c 9BB2     		uxth	r3, r3
 898 002e C3F30E03 		ubfx	r3, r3, #0, #15
 899 0032 9AB2     		uxth	r2, r3
 900 0034 7B68     		ldr	r3, [r7, #4]
 901 0036 1A80     		strh	r2, [r3]	@ movhi
 902              	.L35:
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 903              		.loc 1 526 0
 904 0038 0C37     		adds	r7, r7, #12
 905 003a BD46     		mov	sp, r7
 906              		@ sp needed
 907 003c 5DF8047B 		ldr	r7, [sp], #4
 908 0040 7047     		bx	lr
 909              		.cfi_endproc
 910              	.LFE121:
 912 0042 00BF     		.section	.text.I2C_StretchClockCmd,"ax",%progbits
 913              		.align	2
 914              		.global	I2C_StretchClockCmd
 915              		.thumb
 916              		.thumb_func
 918              	I2C_StretchClockCmd:
 919              	.LFB122:
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C Clock stretching.
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2Cx Clock stretching.
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_StretchClockCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 920              		.loc 1 536 0
 921              		.cfi_startproc
 922              		@ args = 0, pretend = 0, frame = 8
 923              		@ frame_needed = 1, uses_anonymous_args = 0
 924              		@ link register save eliminated.
 925 0000 80B4     		push	{r7}
 926              	.LCFI36:
 927              		.cfi_def_cfa_offset 4
 928              		.cfi_offset 7, -4
 929 0002 83B0     		sub	sp, sp, #12
 930              	.LCFI37:
 931              		.cfi_def_cfa_offset 16
 932 0004 00AF     		add	r7, sp, #0
 933              	.LCFI38:
 934              		.cfi_def_cfa_register 7
 935 0006 7860     		str	r0, [r7, #4]
 936 0008 0B46     		mov	r3, r1
 937 000a FB70     		strb	r3, [r7, #3]
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState == DISABLE)
 938              		.loc 1 540 0
 939 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 940 000e 002B     		cmp	r3, #0
 941 0010 08D1     		bne	.L39
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C Clock stretching */
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_NOSTRETCH;
 942              		.loc 1 543 0
 943 0012 7B68     		ldr	r3, [r7, #4]
 944 0014 1B88     		ldrh	r3, [r3]	@ movhi
 945 0016 9BB2     		uxth	r3, r3
 946 0018 43F08003 		orr	r3, r3, #128
 947 001c 9AB2     		uxth	r2, r3
 948 001e 7B68     		ldr	r3, [r7, #4]
 949 0020 1A80     		strh	r2, [r3]	@ movhi
 950 0022 07E0     		b	.L38
 951              	.L39:
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C Clock stretching */
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_NOSTRETCH);
 952              		.loc 1 548 0
 953 0024 7B68     		ldr	r3, [r7, #4]
 954 0026 1B88     		ldrh	r3, [r3]	@ movhi
 955 0028 9BB2     		uxth	r3, r3
 956 002a 23F08003 		bic	r3, r3, #128
 957 002e 9AB2     		uxth	r2, r3
 958 0030 7B68     		ldr	r3, [r7, #4]
 959 0032 1A80     		strh	r2, [r3]	@ movhi
 960              	.L38:
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 961              		.loc 1 550 0
 962 0034 0C37     		adds	r7, r7, #12
 963 0036 BD46     		mov	sp, r7
 964              		@ sp needed
 965 0038 5DF8047B 		ldr	r7, [sp], #4
 966 003c 7047     		bx	lr
 967              		.cfi_endproc
 968              	.LFE122:
 970 003e 00BF     		.section	.text.I2C_FastModeDutyCycleConfig,"ax",%progbits
 971              		.align	2
 972              		.global	I2C_FastModeDutyCycleConfig
 973              		.thumb
 974              		.thumb_func
 976              	I2C_FastModeDutyCycleConfig:
 977              	.LFB123:
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Selects the specified I2C fast mode duty cycle.
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_DutyCycle: specifies the fast mode duty cycle.
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_DutyCycle_2: I2C fast mode Tlow/Thigh = 2
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_DutyCycle_16_9: I2C fast mode Tlow/Thigh = 16/9
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_FastModeDutyCycleConfig(I2C_TypeDef* I2Cx, uint16_t I2C_DutyCycle)
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 978              		.loc 1 562 0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 8
 981              		@ frame_needed = 1, uses_anonymous_args = 0
 982              		@ link register save eliminated.
 983 0000 80B4     		push	{r7}
 984              	.LCFI39:
 985              		.cfi_def_cfa_offset 4
 986              		.cfi_offset 7, -4
 987 0002 83B0     		sub	sp, sp, #12
 988              	.LCFI40:
 989              		.cfi_def_cfa_offset 16
 990 0004 00AF     		add	r7, sp, #0
 991              	.LCFI41:
 992              		.cfi_def_cfa_register 7
 993 0006 7860     		str	r0, [r7, #4]
 994 0008 0B46     		mov	r3, r1
 995 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_DUTY_CYCLE(I2C_DutyCycle));
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_DutyCycle != I2C_DutyCycle_16_9)
 996              		.loc 1 566 0
 997 000c 7B88     		ldrh	r3, [r7, #2]
 998 000e B3F5804F 		cmp	r3, #16384
 999 0012 08D0     		beq	.L42
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C fast mode Tlow/Thigh=2 */
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CCR &= I2C_DutyCycle_2;
 1000              		.loc 1 569 0
 1001 0014 7B68     		ldr	r3, [r7, #4]
 1002 0016 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1003 0018 9BB2     		uxth	r3, r3
 1004 001a 23F48043 		bic	r3, r3, #16384
 1005 001e 9AB2     		uxth	r2, r3
 1006 0020 7B68     		ldr	r3, [r7, #4]
 1007 0022 9A83     		strh	r2, [r3, #28]	@ movhi
 1008 0024 07E0     		b	.L41
 1009              	.L42:
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C fast mode Tlow/Thigh=16/9 */
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CCR |= I2C_DutyCycle_16_9;
 1010              		.loc 1 574 0
 1011 0026 7B68     		ldr	r3, [r7, #4]
 1012 0028 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1013 002a 9BB2     		uxth	r3, r3
 1014 002c 43F48043 		orr	r3, r3, #16384
 1015 0030 9AB2     		uxth	r2, r3
 1016 0032 7B68     		ldr	r3, [r7, #4]
 1017 0034 9A83     		strh	r2, [r3, #28]	@ movhi
 1018              	.L41:
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1019              		.loc 1 576 0
 1020 0036 0C37     		adds	r7, r7, #12
 1021 0038 BD46     		mov	sp, r7
 1022              		@ sp needed
 1023 003a 5DF8047B 		ldr	r7, [sp], #4
 1024 003e 7047     		bx	lr
 1025              		.cfi_endproc
 1026              	.LFE123:
 1028              		.section	.text.I2C_NACKPositionConfig,"ax",%progbits
 1029              		.align	2
 1030              		.global	I2C_NACKPositionConfig
 1031              		.thumb
 1032              		.thumb_func
 1034              	I2C_NACKPositionConfig:
 1035              	.LFB124:
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Selects the specified I2C NACK position in master receiver mode.
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   This function is useful in I2C Master Receiver mode when the number
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         of data to be received is equal to 2. In this case, this function 
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         should be called (with parameter I2C_NACKPosition_Next) before data 
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         reception starts,as described in the 2-byte reception procedure 
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         recommended in Reference Manual in Section: Master receiver.                
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_NACKPosition: specifies the NACK position. 
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_NACKPosition_Next: indicates that the next byte will be the last
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                                        received byte.  
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_NACKPosition_Current: indicates that current byte is the last 
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                                           received byte.
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note    This function configures the same bit (POS) as I2C_PECPositionConfig() 
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          but is intended to be used in I2C mode while I2C_PECPositionConfig() 
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          is intended to used in SMBUS mode. 
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_NACKPositionConfig(I2C_TypeDef* I2Cx, uint16_t I2C_NACKPosition)
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1036              		.loc 1 600 0
 1037              		.cfi_startproc
 1038              		@ args = 0, pretend = 0, frame = 8
 1039              		@ frame_needed = 1, uses_anonymous_args = 0
 1040              		@ link register save eliminated.
 1041 0000 80B4     		push	{r7}
 1042              	.LCFI42:
 1043              		.cfi_def_cfa_offset 4
 1044              		.cfi_offset 7, -4
 1045 0002 83B0     		sub	sp, sp, #12
 1046              	.LCFI43:
 1047              		.cfi_def_cfa_offset 16
 1048 0004 00AF     		add	r7, sp, #0
 1049              	.LCFI44:
 1050              		.cfi_def_cfa_register 7
 1051 0006 7860     		str	r0, [r7, #4]
 1052 0008 0B46     		mov	r3, r1
 1053 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_NACK_POSITION(I2C_NACKPosition));
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the input parameter */
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_NACKPosition == I2C_NACKPosition_Next)
 1054              		.loc 1 606 0
 1055 000c 7B88     		ldrh	r3, [r7, #2]
 1056 000e B3F5006F 		cmp	r3, #2048
 1057 0012 08D1     		bne	.L45
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Next byte in shift register is the last received byte */
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_NACKPosition_Next;
 1058              		.loc 1 609 0
 1059 0014 7B68     		ldr	r3, [r7, #4]
 1060 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1061 0018 9BB2     		uxth	r3, r3
 1062 001a 43F40063 		orr	r3, r3, #2048
 1063 001e 9AB2     		uxth	r2, r3
 1064 0020 7B68     		ldr	r3, [r7, #4]
 1065 0022 1A80     		strh	r2, [r3]	@ movhi
 1066 0024 07E0     		b	.L44
 1067              	.L45:
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Current byte in shift register is the last received byte */
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= I2C_NACKPosition_Current;
 1068              		.loc 1 614 0
 1069 0026 7B68     		ldr	r3, [r7, #4]
 1070 0028 1B88     		ldrh	r3, [r3]	@ movhi
 1071 002a 9BB2     		uxth	r3, r3
 1072 002c 23F40063 		bic	r3, r3, #2048
 1073 0030 9AB2     		uxth	r2, r3
 1074 0032 7B68     		ldr	r3, [r7, #4]
 1075 0034 1A80     		strh	r2, [r3]	@ movhi
 1076              	.L44:
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1077              		.loc 1 616 0
 1078 0036 0C37     		adds	r7, r7, #12
 1079 0038 BD46     		mov	sp, r7
 1080              		@ sp needed
 1081 003a 5DF8047B 		ldr	r7, [sp], #4
 1082 003e 7047     		bx	lr
 1083              		.cfi_endproc
 1084              	.LFE124:
 1086              		.section	.text.I2C_SMBusAlertConfig,"ax",%progbits
 1087              		.align	2
 1088              		.global	I2C_SMBusAlertConfig
 1089              		.thumb
 1090              		.thumb_func
 1092              	I2C_SMBusAlertConfig:
 1093              	.LFB125:
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Drives the SMBusAlert pin high or low for the specified I2C.
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_SMBusAlert: specifies SMBAlert pin level. 
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_SMBusAlert_Low: SMBAlert pin driven low
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_SMBusAlert_High: SMBAlert pin driven high
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_SMBusAlertConfig(I2C_TypeDef* I2Cx, uint16_t I2C_SMBusAlert)
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1094              		.loc 1 628 0
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 8
 1097              		@ frame_needed = 1, uses_anonymous_args = 0
 1098              		@ link register save eliminated.
 1099 0000 80B4     		push	{r7}
 1100              	.LCFI45:
 1101              		.cfi_def_cfa_offset 4
 1102              		.cfi_offset 7, -4
 1103 0002 83B0     		sub	sp, sp, #12
 1104              	.LCFI46:
 1105              		.cfi_def_cfa_offset 16
 1106 0004 00AF     		add	r7, sp, #0
 1107              	.LCFI47:
 1108              		.cfi_def_cfa_register 7
 1109 0006 7860     		str	r0, [r7, #4]
 1110 0008 0B46     		mov	r3, r1
 1111 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_SMBUS_ALERT(I2C_SMBusAlert));
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_SMBusAlert == I2C_SMBusAlert_Low)
 1112              		.loc 1 632 0
 1113 000c 7B88     		ldrh	r3, [r7, #2]
 1114 000e B3F5005F 		cmp	r3, #8192
 1115 0012 08D1     		bne	.L48
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Drive the SMBusAlert pin Low */
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_SMBusAlert_Low;
 1116              		.loc 1 635 0
 1117 0014 7B68     		ldr	r3, [r7, #4]
 1118 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1119 0018 9BB2     		uxth	r3, r3
 1120 001a 43F40053 		orr	r3, r3, #8192
 1121 001e 9AB2     		uxth	r2, r3
 1122 0020 7B68     		ldr	r3, [r7, #4]
 1123 0022 1A80     		strh	r2, [r3]	@ movhi
 1124 0024 07E0     		b	.L47
 1125              	.L48:
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Drive the SMBusAlert pin High  */
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= I2C_SMBusAlert_High;
 1126              		.loc 1 640 0
 1127 0026 7B68     		ldr	r3, [r7, #4]
 1128 0028 1B88     		ldrh	r3, [r3]	@ movhi
 1129 002a 9BB2     		uxth	r3, r3
 1130 002c 23F40053 		bic	r3, r3, #8192
 1131 0030 9AB2     		uxth	r2, r3
 1132 0032 7B68     		ldr	r3, [r7, #4]
 1133 0034 1A80     		strh	r2, [r3]	@ movhi
 1134              	.L47:
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1135              		.loc 1 642 0
 1136 0036 0C37     		adds	r7, r7, #12
 1137 0038 BD46     		mov	sp, r7
 1138              		@ sp needed
 1139 003a 5DF8047B 		ldr	r7, [sp], #4
 1140 003e 7047     		bx	lr
 1141              		.cfi_endproc
 1142              	.LFE125:
 1144              		.section	.text.I2C_ARPCmd,"ax",%progbits
 1145              		.align	2
 1146              		.global	I2C_ARPCmd
 1147              		.thumb
 1148              		.thumb_func
 1150              	I2C_ARPCmd:
 1151              	.LFB126:
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C ARP.
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2Cx ARP. 
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_ARPCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1152              		.loc 1 652 0
 1153              		.cfi_startproc
 1154              		@ args = 0, pretend = 0, frame = 8
 1155              		@ frame_needed = 1, uses_anonymous_args = 0
 1156              		@ link register save eliminated.
 1157 0000 80B4     		push	{r7}
 1158              	.LCFI48:
 1159              		.cfi_def_cfa_offset 4
 1160              		.cfi_offset 7, -4
 1161 0002 83B0     		sub	sp, sp, #12
 1162              	.LCFI49:
 1163              		.cfi_def_cfa_offset 16
 1164 0004 00AF     		add	r7, sp, #0
 1165              	.LCFI50:
 1166              		.cfi_def_cfa_register 7
 1167 0006 7860     		str	r0, [r7, #4]
 1168 0008 0B46     		mov	r3, r1
 1169 000a FB70     		strb	r3, [r7, #3]
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1170              		.loc 1 656 0
 1171 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1172 000e 002B     		cmp	r3, #0
 1173 0010 08D0     		beq	.L51
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C ARP */
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ENARP;
 1174              		.loc 1 659 0
 1175 0012 7B68     		ldr	r3, [r7, #4]
 1176 0014 1B88     		ldrh	r3, [r3]	@ movhi
 1177 0016 9BB2     		uxth	r3, r3
 1178 0018 43F01003 		orr	r3, r3, #16
 1179 001c 9AB2     		uxth	r2, r3
 1180 001e 7B68     		ldr	r3, [r7, #4]
 1181 0020 1A80     		strh	r2, [r3]	@ movhi
 1182 0022 07E0     		b	.L50
 1183              	.L51:
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C ARP */
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ENARP);
 1184              		.loc 1 664 0
 1185 0024 7B68     		ldr	r3, [r7, #4]
 1186 0026 1B88     		ldrh	r3, [r3]	@ movhi
 1187 0028 9BB2     		uxth	r3, r3
 1188 002a 23F01003 		bic	r3, r3, #16
 1189 002e 9AB2     		uxth	r2, r3
 1190 0030 7B68     		ldr	r3, [r7, #4]
 1191 0032 1A80     		strh	r2, [r3]	@ movhi
 1192              	.L50:
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1193              		.loc 1 666 0
 1194 0034 0C37     		adds	r7, r7, #12
 1195 0036 BD46     		mov	sp, r7
 1196              		@ sp needed
 1197 0038 5DF8047B 		ldr	r7, [sp], #4
 1198 003c 7047     		bx	lr
 1199              		.cfi_endproc
 1200              	.LFE126:
 1202 003e 00BF     		.section	.text.I2C_SendData,"ax",%progbits
 1203              		.align	2
 1204              		.global	I2C_SendData
 1205              		.thumb
 1206              		.thumb_func
 1208              	I2C_SendData:
 1209              	.LFB127:
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @}
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group2 Data transfers functions
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *  @brief   Data transfers functions 
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @verbatim   
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                         Data transfers functions
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @endverbatim
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Sends a data byte through the I2Cx peripheral.
 685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  Data: Byte to be transmitted..
 687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_SendData(I2C_TypeDef* I2Cx, uint8_t Data)
 690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1210              		.loc 1 690 0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 8
 1213              		@ frame_needed = 1, uses_anonymous_args = 0
 1214              		@ link register save eliminated.
 1215 0000 80B4     		push	{r7}
 1216              	.LCFI51:
 1217              		.cfi_def_cfa_offset 4
 1218              		.cfi_offset 7, -4
 1219 0002 83B0     		sub	sp, sp, #12
 1220              	.LCFI52:
 1221              		.cfi_def_cfa_offset 16
 1222 0004 00AF     		add	r7, sp, #0
 1223              	.LCFI53:
 1224              		.cfi_def_cfa_register 7
 1225 0006 7860     		str	r0, [r7, #4]
 1226 0008 0B46     		mov	r3, r1
 1227 000a FB70     		strb	r3, [r7, #3]
 691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Write in the DR register the data to be sent */
 694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->DR = Data;
 1228              		.loc 1 694 0
 1229 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1230 000e 9AB2     		uxth	r2, r3
 1231 0010 7B68     		ldr	r3, [r7, #4]
 1232 0012 1A82     		strh	r2, [r3, #16]	@ movhi
 695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1233              		.loc 1 695 0
 1234 0014 0C37     		adds	r7, r7, #12
 1235 0016 BD46     		mov	sp, r7
 1236              		@ sp needed
 1237 0018 5DF8047B 		ldr	r7, [sp], #4
 1238 001c 7047     		bx	lr
 1239              		.cfi_endproc
 1240              	.LFE127:
 1242 001e 00BF     		.section	.text.I2C_ReceiveData,"ax",%progbits
 1243              		.align	2
 1244              		.global	I2C_ReceiveData
 1245              		.thumb
 1246              		.thumb_func
 1248              	I2C_ReceiveData:
 1249              	.LFB128:
 696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Returns the most recent received data by the I2Cx peripheral.
 699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The value of the received data.
 701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** uint8_t I2C_ReceiveData(I2C_TypeDef* I2Cx)
 703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1250              		.loc 1 703 0
 1251              		.cfi_startproc
 1252              		@ args = 0, pretend = 0, frame = 8
 1253              		@ frame_needed = 1, uses_anonymous_args = 0
 1254              		@ link register save eliminated.
 1255 0000 80B4     		push	{r7}
 1256              	.LCFI54:
 1257              		.cfi_def_cfa_offset 4
 1258              		.cfi_offset 7, -4
 1259 0002 83B0     		sub	sp, sp, #12
 1260              	.LCFI55:
 1261              		.cfi_def_cfa_offset 16
 1262 0004 00AF     		add	r7, sp, #0
 1263              	.LCFI56:
 1264              		.cfi_def_cfa_register 7
 1265 0006 7860     		str	r0, [r7, #4]
 704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return the data in the DR register */
 707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return (uint8_t)I2Cx->DR;
 1266              		.loc 1 707 0
 1267 0008 7B68     		ldr	r3, [r7, #4]
 1268 000a 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 1269 000c 9BB2     		uxth	r3, r3
 1270 000e DBB2     		uxtb	r3, r3
 708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1271              		.loc 1 708 0
 1272 0010 1846     		mov	r0, r3
 1273 0012 0C37     		adds	r7, r7, #12
 1274 0014 BD46     		mov	sp, r7
 1275              		@ sp needed
 1276 0016 5DF8047B 		ldr	r7, [sp], #4
 1277 001a 7047     		bx	lr
 1278              		.cfi_endproc
 1279              	.LFE128:
 1281              		.section	.text.I2C_TransmitPEC,"ax",%progbits
 1282              		.align	2
 1283              		.global	I2C_TransmitPEC
 1284              		.thumb
 1285              		.thumb_func
 1287              	I2C_TransmitPEC:
 1288              	.LFB129:
 709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @}
 712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group3 PEC management functions
 715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *  @brief   PEC management functions 
 716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *
 717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @verbatim   
 718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                          PEC management functions
 720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
 721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @endverbatim
 723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C PEC transfer.
 728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C PEC transmission.
 730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_TransmitPEC(I2C_TypeDef* I2Cx, FunctionalState NewState)
 734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1289              		.loc 1 734 0
 1290              		.cfi_startproc
 1291              		@ args = 0, pretend = 0, frame = 8
 1292              		@ frame_needed = 1, uses_anonymous_args = 0
 1293              		@ link register save eliminated.
 1294 0000 80B4     		push	{r7}
 1295              	.LCFI57:
 1296              		.cfi_def_cfa_offset 4
 1297              		.cfi_offset 7, -4
 1298 0002 83B0     		sub	sp, sp, #12
 1299              	.LCFI58:
 1300              		.cfi_def_cfa_offset 16
 1301 0004 00AF     		add	r7, sp, #0
 1302              	.LCFI59:
 1303              		.cfi_def_cfa_register 7
 1304 0006 7860     		str	r0, [r7, #4]
 1305 0008 0B46     		mov	r3, r1
 1306 000a FB70     		strb	r3, [r7, #3]
 735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1307              		.loc 1 738 0
 1308 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1309 000e 002B     		cmp	r3, #0
 1310 0010 08D0     		beq	.L57
 739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C PEC transmission */
 741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_PEC;
 1311              		.loc 1 741 0
 1312 0012 7B68     		ldr	r3, [r7, #4]
 1313 0014 1B88     		ldrh	r3, [r3]	@ movhi
 1314 0016 9BB2     		uxth	r3, r3
 1315 0018 43F48053 		orr	r3, r3, #4096
 1316 001c 9AB2     		uxth	r2, r3
 1317 001e 7B68     		ldr	r3, [r7, #4]
 1318 0020 1A80     		strh	r2, [r3]	@ movhi
 1319 0022 07E0     		b	.L56
 1320              	.L57:
 742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C PEC transmission */
 746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_PEC);
 1321              		.loc 1 746 0
 1322 0024 7B68     		ldr	r3, [r7, #4]
 1323 0026 1B88     		ldrh	r3, [r3]	@ movhi
 1324 0028 9BB2     		uxth	r3, r3
 1325 002a 23F48053 		bic	r3, r3, #4096
 1326 002e 9AB2     		uxth	r2, r3
 1327 0030 7B68     		ldr	r3, [r7, #4]
 1328 0032 1A80     		strh	r2, [r3]	@ movhi
 1329              	.L56:
 747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1330              		.loc 1 748 0
 1331 0034 0C37     		adds	r7, r7, #12
 1332 0036 BD46     		mov	sp, r7
 1333              		@ sp needed
 1334 0038 5DF8047B 		ldr	r7, [sp], #4
 1335 003c 7047     		bx	lr
 1336              		.cfi_endproc
 1337              	.LFE129:
 1339 003e 00BF     		.section	.text.I2C_PECPositionConfig,"ax",%progbits
 1340              		.align	2
 1341              		.global	I2C_PECPositionConfig
 1342              		.thumb
 1343              		.thumb_func
 1345              	I2C_PECPositionConfig:
 1346              	.LFB130:
 749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Selects the specified I2C PEC position.
 752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_PECPosition: specifies the PEC position. 
 754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_PECPosition_Next: indicates that the next byte is PEC
 756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_PECPosition_Current: indicates that current byte is PEC
 757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *       
 758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note    This function configures the same bit (POS) as I2C_NACKPositionConfig()
 759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          but is intended to be used in SMBUS mode while I2C_NACKPositionConfig() 
 760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          is intended to used in I2C mode.
 761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                
 762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_PECPositionConfig(I2C_TypeDef* I2Cx, uint16_t I2C_PECPosition)
 765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1347              		.loc 1 765 0
 1348              		.cfi_startproc
 1349              		@ args = 0, pretend = 0, frame = 8
 1350              		@ frame_needed = 1, uses_anonymous_args = 0
 1351              		@ link register save eliminated.
 1352 0000 80B4     		push	{r7}
 1353              	.LCFI60:
 1354              		.cfi_def_cfa_offset 4
 1355              		.cfi_offset 7, -4
 1356 0002 83B0     		sub	sp, sp, #12
 1357              	.LCFI61:
 1358              		.cfi_def_cfa_offset 16
 1359 0004 00AF     		add	r7, sp, #0
 1360              	.LCFI62:
 1361              		.cfi_def_cfa_register 7
 1362 0006 7860     		str	r0, [r7, #4]
 1363 0008 0B46     		mov	r3, r1
 1364 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_PEC_POSITION(I2C_PECPosition));
 769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (I2C_PECPosition == I2C_PECPosition_Next)
 1365              		.loc 1 769 0
 1366 000c 7B88     		ldrh	r3, [r7, #2]
 1367 000e B3F5006F 		cmp	r3, #2048
 1368 0012 08D1     		bne	.L60
 770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Next byte in shift register is PEC */
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_PECPosition_Next;
 1369              		.loc 1 772 0
 1370 0014 7B68     		ldr	r3, [r7, #4]
 1371 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1372 0018 9BB2     		uxth	r3, r3
 1373 001a 43F40063 		orr	r3, r3, #2048
 1374 001e 9AB2     		uxth	r2, r3
 1375 0020 7B68     		ldr	r3, [r7, #4]
 1376 0022 1A80     		strh	r2, [r3]	@ movhi
 1377 0024 07E0     		b	.L59
 1378              	.L60:
 773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Current byte in shift register is PEC */
 777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= I2C_PECPosition_Current;
 1379              		.loc 1 777 0
 1380 0026 7B68     		ldr	r3, [r7, #4]
 1381 0028 1B88     		ldrh	r3, [r3]	@ movhi
 1382 002a 9BB2     		uxth	r3, r3
 1383 002c 23F40063 		bic	r3, r3, #2048
 1384 0030 9AB2     		uxth	r2, r3
 1385 0032 7B68     		ldr	r3, [r7, #4]
 1386 0034 1A80     		strh	r2, [r3]	@ movhi
 1387              	.L59:
 778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1388              		.loc 1 779 0
 1389 0036 0C37     		adds	r7, r7, #12
 1390 0038 BD46     		mov	sp, r7
 1391              		@ sp needed
 1392 003a 5DF8047B 		ldr	r7, [sp], #4
 1393 003e 7047     		bx	lr
 1394              		.cfi_endproc
 1395              	.LFE130:
 1397              		.section	.text.I2C_CalculatePEC,"ax",%progbits
 1398              		.align	2
 1399              		.global	I2C_CalculatePEC
 1400              		.thumb
 1401              		.thumb_func
 1403              	I2C_CalculatePEC:
 1404              	.LFB131:
 780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the PEC value calculation of the transferred bytes.
 783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2Cx PEC value calculation.
 785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_CalculatePEC(I2C_TypeDef* I2Cx, FunctionalState NewState)
 789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1405              		.loc 1 789 0
 1406              		.cfi_startproc
 1407              		@ args = 0, pretend = 0, frame = 8
 1408              		@ frame_needed = 1, uses_anonymous_args = 0
 1409              		@ link register save eliminated.
 1410 0000 80B4     		push	{r7}
 1411              	.LCFI63:
 1412              		.cfi_def_cfa_offset 4
 1413              		.cfi_offset 7, -4
 1414 0002 83B0     		sub	sp, sp, #12
 1415              	.LCFI64:
 1416              		.cfi_def_cfa_offset 16
 1417 0004 00AF     		add	r7, sp, #0
 1418              	.LCFI65:
 1419              		.cfi_def_cfa_register 7
 1420 0006 7860     		str	r0, [r7, #4]
 1421 0008 0B46     		mov	r3, r1
 1422 000a FB70     		strb	r3, [r7, #3]
 790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1423              		.loc 1 793 0
 1424 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1425 000e 002B     		cmp	r3, #0
 1426 0010 08D0     		beq	.L63
 794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C PEC calculation */
 796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 |= I2C_CR1_ENPEC;
 1427              		.loc 1 796 0
 1428 0012 7B68     		ldr	r3, [r7, #4]
 1429 0014 1B88     		ldrh	r3, [r3]	@ movhi
 1430 0016 9BB2     		uxth	r3, r3
 1431 0018 43F02003 		orr	r3, r3, #32
 1432 001c 9AB2     		uxth	r2, r3
 1433 001e 7B68     		ldr	r3, [r7, #4]
 1434 0020 1A80     		strh	r2, [r3]	@ movhi
 1435 0022 07E0     		b	.L62
 1436              	.L63:
 797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C PEC calculation */
 801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR1 &= (uint16_t)~((uint16_t)I2C_CR1_ENPEC);
 1437              		.loc 1 801 0
 1438 0024 7B68     		ldr	r3, [r7, #4]
 1439 0026 1B88     		ldrh	r3, [r3]	@ movhi
 1440 0028 9BB2     		uxth	r3, r3
 1441 002a 23F02003 		bic	r3, r3, #32
 1442 002e 9AB2     		uxth	r2, r3
 1443 0030 7B68     		ldr	r3, [r7, #4]
 1444 0032 1A80     		strh	r2, [r3]	@ movhi
 1445              	.L62:
 802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1446              		.loc 1 803 0
 1447 0034 0C37     		adds	r7, r7, #12
 1448 0036 BD46     		mov	sp, r7
 1449              		@ sp needed
 1450 0038 5DF8047B 		ldr	r7, [sp], #4
 1451 003c 7047     		bx	lr
 1452              		.cfi_endproc
 1453              	.LFE131:
 1455 003e 00BF     		.section	.text.I2C_GetPEC,"ax",%progbits
 1456              		.align	2
 1457              		.global	I2C_GetPEC
 1458              		.thumb
 1459              		.thumb_func
 1461              	I2C_GetPEC:
 1462              	.LFB132:
 804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Returns the PEC value for the specified I2C.
 807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The PEC value.
 809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** uint8_t I2C_GetPEC(I2C_TypeDef* I2Cx)
 811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1463              		.loc 1 811 0
 1464              		.cfi_startproc
 1465              		@ args = 0, pretend = 0, frame = 8
 1466              		@ frame_needed = 1, uses_anonymous_args = 0
 1467              		@ link register save eliminated.
 1468 0000 80B4     		push	{r7}
 1469              	.LCFI66:
 1470              		.cfi_def_cfa_offset 4
 1471              		.cfi_offset 7, -4
 1472 0002 83B0     		sub	sp, sp, #12
 1473              	.LCFI67:
 1474              		.cfi_def_cfa_offset 16
 1475 0004 00AF     		add	r7, sp, #0
 1476              	.LCFI68:
 1477              		.cfi_def_cfa_register 7
 1478 0006 7860     		str	r0, [r7, #4]
 812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return the selected I2C PEC value */
 815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return ((I2Cx->SR2) >> 8);
 1479              		.loc 1 815 0
 1480 0008 7B68     		ldr	r3, [r7, #4]
 1481 000a 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1482 000c 9BB2     		uxth	r3, r3
 1483 000e 1B0A     		lsrs	r3, r3, #8
 1484 0010 9BB2     		uxth	r3, r3
 1485 0012 DBB2     		uxtb	r3, r3
 816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1486              		.loc 1 816 0
 1487 0014 1846     		mov	r0, r3
 1488 0016 0C37     		adds	r7, r7, #12
 1489 0018 BD46     		mov	sp, r7
 1490              		@ sp needed
 1491 001a 5DF8047B 		ldr	r7, [sp], #4
 1492 001e 7047     		bx	lr
 1493              		.cfi_endproc
 1494              	.LFE132:
 1496              		.section	.text.I2C_DMACmd,"ax",%progbits
 1497              		.align	2
 1498              		.global	I2C_DMACmd
 1499              		.thumb
 1500              		.thumb_func
 1502              	I2C_DMACmd:
 1503              	.LFB133:
 817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @}
 820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group4 DMA transfers management functions
 823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *  @brief   DMA transfers management functions 
 824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *
 825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @verbatim   
 826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                          DMA transfers management functions
 828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
 829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   This section provides functions allowing to configure the I2C DMA channels 
 830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   requests.
 831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
 832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @endverbatim
 833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C DMA requests.
 838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C DMA transfer.
 840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_DMACmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1504              		.loc 1 844 0
 1505              		.cfi_startproc
 1506              		@ args = 0, pretend = 0, frame = 8
 1507              		@ frame_needed = 1, uses_anonymous_args = 0
 1508              		@ link register save eliminated.
 1509 0000 80B4     		push	{r7}
 1510              	.LCFI69:
 1511              		.cfi_def_cfa_offset 4
 1512              		.cfi_offset 7, -4
 1513 0002 83B0     		sub	sp, sp, #12
 1514              	.LCFI70:
 1515              		.cfi_def_cfa_offset 16
 1516 0004 00AF     		add	r7, sp, #0
 1517              	.LCFI71:
 1518              		.cfi_def_cfa_register 7
 1519 0006 7860     		str	r0, [r7, #4]
 1520 0008 0B46     		mov	r3, r1
 1521 000a FB70     		strb	r3, [r7, #3]
 845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1522              		.loc 1 848 0
 1523 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1524 000e 002B     		cmp	r3, #0
 1525 0010 08D0     		beq	.L68
 849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C DMA requests */
 851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 |= I2C_CR2_DMAEN;
 1526              		.loc 1 851 0
 1527 0012 7B68     		ldr	r3, [r7, #4]
 1528 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1529 0016 9BB2     		uxth	r3, r3
 1530 0018 43F40063 		orr	r3, r3, #2048
 1531 001c 9AB2     		uxth	r2, r3
 1532 001e 7B68     		ldr	r3, [r7, #4]
 1533 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 1534 0022 07E0     		b	.L67
 1535              	.L68:
 852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C DMA requests */
 856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 &= (uint16_t)~((uint16_t)I2C_CR2_DMAEN);
 1536              		.loc 1 856 0
 1537 0024 7B68     		ldr	r3, [r7, #4]
 1538 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1539 0028 9BB2     		uxth	r3, r3
 1540 002a 23F40063 		bic	r3, r3, #2048
 1541 002e 9AB2     		uxth	r2, r3
 1542 0030 7B68     		ldr	r3, [r7, #4]
 1543 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 1544              	.L67:
 857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1545              		.loc 1 858 0
 1546 0034 0C37     		adds	r7, r7, #12
 1547 0036 BD46     		mov	sp, r7
 1548              		@ sp needed
 1549 0038 5DF8047B 		ldr	r7, [sp], #4
 1550 003c 7047     		bx	lr
 1551              		.cfi_endproc
 1552              	.LFE133:
 1554 003e 00BF     		.section	.text.I2C_DMALastTransferCmd,"ax",%progbits
 1555              		.align	2
 1556              		.global	I2C_DMALastTransferCmd
 1557              		.thumb
 1558              		.thumb_func
 1560              	I2C_DMALastTransferCmd:
 1561              	.LFB134:
 859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Specifies that the next DMA transfer is the last one.
 862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
 863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the I2C DMA last transfer.
 864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
 865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
 866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_DMALastTransferCmd(I2C_TypeDef* I2Cx, FunctionalState NewState)
 868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1562              		.loc 1 868 0
 1563              		.cfi_startproc
 1564              		@ args = 0, pretend = 0, frame = 8
 1565              		@ frame_needed = 1, uses_anonymous_args = 0
 1566              		@ link register save eliminated.
 1567 0000 80B4     		push	{r7}
 1568              	.LCFI72:
 1569              		.cfi_def_cfa_offset 4
 1570              		.cfi_offset 7, -4
 1571 0002 83B0     		sub	sp, sp, #12
 1572              	.LCFI73:
 1573              		.cfi_def_cfa_offset 16
 1574 0004 00AF     		add	r7, sp, #0
 1575              	.LCFI74:
 1576              		.cfi_def_cfa_register 7
 1577 0006 7860     		str	r0, [r7, #4]
 1578 0008 0B46     		mov	r3, r1
 1579 000a FB70     		strb	r3, [r7, #3]
 869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
 870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
 871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1580              		.loc 1 872 0
 1581 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1582 000e 002B     		cmp	r3, #0
 1583 0010 08D0     		beq	.L71
 873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Next DMA transfer is the last transfer */
 875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 |= I2C_CR2_LAST;
 1584              		.loc 1 875 0
 1585 0012 7B68     		ldr	r3, [r7, #4]
 1586 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1587 0016 9BB2     		uxth	r3, r3
 1588 0018 43F48053 		orr	r3, r3, #4096
 1589 001c 9AB2     		uxth	r2, r3
 1590 001e 7B68     		ldr	r3, [r7, #4]
 1591 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 1592 0022 07E0     		b	.L70
 1593              	.L71:
 876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
 878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
 879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Next DMA transfer is not the last transfer */
 880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 &= (uint16_t)~((uint16_t)I2C_CR2_LAST);
 1594              		.loc 1 880 0
 1595 0024 7B68     		ldr	r3, [r7, #4]
 1596 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1597 0028 9BB2     		uxth	r3, r3
 1598 002a 23F48053 		bic	r3, r3, #4096
 1599 002e 9AB2     		uxth	r2, r3
 1600 0030 7B68     		ldr	r3, [r7, #4]
 1601 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 1602              	.L70:
 881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
 882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1603              		.loc 1 882 0
 1604 0034 0C37     		adds	r7, r7, #12
 1605 0036 BD46     		mov	sp, r7
 1606              		@ sp needed
 1607 0038 5DF8047B 		ldr	r7, [sp], #4
 1608 003c 7047     		bx	lr
 1609              		.cfi_endproc
 1610              	.LFE134:
 1612 003e 00BF     		.section	.text.I2C_ReadRegister,"ax",%progbits
 1613              		.align	2
 1614              		.global	I2C_ReadRegister
 1615              		.thumb
 1616              		.thumb_func
 1618              	I2C_ReadRegister:
 1619              	.LFB135:
 883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @}
 886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /** @defgroup I2C_Group5 Interrupts events and flags management functions
 889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *  @brief   Interrupts, events and flags management functions
 890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  *
 891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @verbatim   
 892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                 Interrupts, events and flags management functions
 894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
 895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   This section provides functions allowing to configure the I2C Interrupts 
 896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   sources and check or clear the flags or pending bits status.
 897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   The user should identify which mode will be used in his application to manage 
 898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   the communication: Polling mode, Interrupt mode or DMA mode. 
 899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
 901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                           I2C State Monitoring Functions                    
 902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================   
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   This I2C driver provides three different ways for I2C state monitoring
 904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   depending on the application requirements and constraints:
 905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****          
 906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****    
 907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      1. Basic state monitoring (Using I2C_CheckEvent() function)
 908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      -----------------------------------------------------------
 909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         It compares the status registers (SR1 and SR2) content to a given event
 910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         (can be the combination of one or more flags).
 911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         It returns SUCCESS if the current status includes the given flags 
 912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         and returns ERROR if one or more flags are missing in the current status.
 913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           - When to use
 915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - This function is suitable for most applications as well as for startup 
 916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                activity since the events are fully described in the product reference 
 917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                manual (RM0090).
 918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - It is also suitable for users who need to define their own events.
 919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           - Limitations
 921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - If an error occurs (ie. error flags are set besides to the monitored 
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                flags), the I2C_CheckEvent() function may return SUCCESS despite 
 923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                the communication hold or corrupted real state. 
 924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                In this case, it is advised to use error interrupts to monitor 
 925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                the error events and handle them in the interrupt IRQ handler.
 926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****          
 927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      @note 
 928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****          For error management, it is advised to use the following functions:
 929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****            - I2C_ITConfig() to configure and enable the error interrupts (I2C_IT_ERR).
 930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****            - I2Cx_ER_IRQHandler() which is called when the error interrupt occurs.
 931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              Where x is the peripheral instance (I2C1, I2C2 ...)
 932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****            - I2C_GetFlagStatus() or I2C_GetITStatus()  to be called into the 
 933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              I2Cx_ER_IRQHandler() function in order to determine which error occurred.
 934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****            - I2C_ClearFlag() or I2C_ClearITPendingBit() and/or I2C_SoftwareResetCmd() 
 935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              and/or I2C_GenerateStop() in order to clear the error flag and source 
 936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              and return to correct  communication status.
 937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              
 938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  
 939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      2. Advanced state monitoring (Using the function I2C_GetLastEvent())
 940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      -------------------------------------------------------------------- 
 941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         Using the function I2C_GetLastEvent() which returns the image of both status 
 942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         registers in a single word (uint32_t) (Status Register 2 value is shifted left 
 943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****         by 16 bits and concatenated to Status Register 1).
 944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           - When to use
 946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - This function is suitable for the same applications above but it 
 947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                allows to overcome the mentioned limitation of I2C_GetFlagStatus() 
 948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                function.
 949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - The returned value could be compared to events already defined in 
 950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                the library (stm32f4xx_i2c.h) or to custom values defined by user.
 951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                This function is suitable when multiple flags are monitored at the 
 952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                same time.
 953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - At the opposite of I2C_CheckEvent() function, this function allows 
 954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                user to choose when an event is accepted (when all events flags are 
 955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                set and no other flags are set or just when the needed flags are set 
 956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                like I2C_CheckEvent() function.
 957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           - Limitations
 959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - User may need to define his own events.
 960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - Same remark concerning the error management is applicable for this 
 961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                function if user decides to check only regular communication flags 
 962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                (and ignores error flags).
 963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       
 964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  
 965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      3. Flag-based state monitoring (Using the function I2C_GetFlagStatus())
 966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      -----------------------------------------------------------------------
 967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****      
 968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       Using the function I2C_GetFlagStatus() which simply returns the status of 
 969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****       one single flag (ie. I2C_FLAG_RXNE ...). 
 970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
 971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           - When to use
 972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - This function could be used for specific applications or in debug 
 973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                phase.
 974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - It is suitable when only one flag checking is needed (most I2C 
 975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                events are monitored through multiple flags).
 976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****           - Limitations: 
 977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - When calling this function, the Status register is accessed. 
 978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                Some flags are cleared when the status register is accessed. 
 979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                So checking the status of one Flag, may clear other ones.
 980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****              - Function may need to be called twice or more in order to monitor 
 981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                one single event.
 982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  
 983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****    For detailed description of Events, please refer to section I2C_Events in 
 984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****    stm32f4xx_i2c.h file.
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****        
 986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** @endverbatim
 987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @{
 988:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
 989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****    
 990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
 991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Reads the specified I2C register and returns its value.
 992:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_Register: specifies the register to read.
 993:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
 994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_CR1:  CR1 register.
 995:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_CR2:   CR2 register.
 996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_OAR1:  OAR1 register.
 997:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_OAR2:  OAR2 register.
 998:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_DR:    DR register.
 999:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_SR1:   SR1 register.
1000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_SR2:   SR2 register.
1001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_CCR:   CCR register.
1002:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_Register_TRISE: TRISE register.
1003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The value of the read register.
1004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** uint16_t I2C_ReadRegister(I2C_TypeDef* I2Cx, uint8_t I2C_Register)
1006:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1620              		.loc 1 1006 0
 1621              		.cfi_startproc
 1622              		@ args = 0, pretend = 0, frame = 16
 1623              		@ frame_needed = 1, uses_anonymous_args = 0
 1624              		@ link register save eliminated.
 1625 0000 80B4     		push	{r7}
 1626              	.LCFI75:
 1627              		.cfi_def_cfa_offset 4
 1628              		.cfi_offset 7, -4
 1629 0002 85B0     		sub	sp, sp, #20
 1630              	.LCFI76:
 1631              		.cfi_def_cfa_offset 24
 1632 0004 00AF     		add	r7, sp, #0
 1633              	.LCFI77:
 1634              		.cfi_def_cfa_register 7
 1635 0006 7860     		str	r0, [r7, #4]
 1636 0008 0B46     		mov	r3, r1
 1637 000a FB70     		strb	r3, [r7, #3]
1007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   __IO uint32_t tmp = 0;
 1638              		.loc 1 1007 0
 1639 000c 0023     		movs	r3, #0
 1640 000e FB60     		str	r3, [r7, #12]
1008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1010:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_REGISTER(I2C_Register));
1012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1013:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmp = (uint32_t) I2Cx;
 1641              		.loc 1 1013 0
 1642 0010 7B68     		ldr	r3, [r7, #4]
 1643 0012 FB60     		str	r3, [r7, #12]
1014:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   tmp += I2C_Register;
 1644              		.loc 1 1014 0
 1645 0014 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1646 0016 FB68     		ldr	r3, [r7, #12]
 1647 0018 1344     		add	r3, r3, r2
 1648 001a FB60     		str	r3, [r7, #12]
1015:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1016:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return the selected register value */
1017:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return (*(__IO uint16_t *) tmp);
 1649              		.loc 1 1017 0
 1650 001c FB68     		ldr	r3, [r7, #12]
 1651 001e 1B88     		ldrh	r3, [r3]	@ movhi
 1652 0020 9BB2     		uxth	r3, r3
1018:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1653              		.loc 1 1018 0
 1654 0022 1846     		mov	r0, r3
 1655 0024 1437     		adds	r7, r7, #20
 1656 0026 BD46     		mov	sp, r7
 1657              		@ sp needed
 1658 0028 5DF8047B 		ldr	r7, [sp], #4
 1659 002c 7047     		bx	lr
 1660              		.cfi_endproc
 1661              	.LFE135:
 1663 002e 00BF     		.section	.text.I2C_ITConfig,"ax",%progbits
 1664              		.align	2
 1665              		.global	I2C_ITConfig
 1666              		.thumb
 1667              		.thumb_func
 1669              	I2C_ITConfig:
 1670              	.LFB136:
1019:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1021:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Enables or disables the specified I2C interrupts.
1022:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1023:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_IT: specifies the I2C interrupts sources to be enabled or disabled. 
1024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be any combination of the following values:
1025:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_BUF: Buffer interrupt mask
1026:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_EVT: Event interrupt mask
1027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ERR: Error interrupt mask
1028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  NewState: new state of the specified I2C interrupts.
1029:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be: ENABLE or DISABLE.
1030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
1031:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1032:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_ITConfig(I2C_TypeDef* I2Cx, uint16_t I2C_IT, FunctionalState NewState)
1033:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1671              		.loc 1 1033 0
 1672              		.cfi_startproc
 1673              		@ args = 0, pretend = 0, frame = 8
 1674              		@ frame_needed = 1, uses_anonymous_args = 0
 1675              		@ link register save eliminated.
 1676 0000 80B4     		push	{r7}
 1677              	.LCFI78:
 1678              		.cfi_def_cfa_offset 4
 1679              		.cfi_offset 7, -4
 1680 0002 83B0     		sub	sp, sp, #12
 1681              	.LCFI79:
 1682              		.cfi_def_cfa_offset 16
 1683 0004 00AF     		add	r7, sp, #0
 1684              	.LCFI80:
 1685              		.cfi_def_cfa_register 7
 1686 0006 7860     		str	r0, [r7, #4]
 1687 0008 1346     		mov	r3, r2
 1688 000a 0A46     		mov	r2, r1	@ movhi
 1689 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 1690 000e 7B70     		strb	r3, [r7, #1]
1034:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1037:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_CONFIG_IT(I2C_IT));
1038:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (NewState != DISABLE)
 1691              		.loc 1 1039 0
 1692 0010 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 1693 0012 002B     		cmp	r3, #0
 1694 0014 08D0     		beq	.L76
1040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Enable the selected I2C interrupts */
1042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 |= I2C_IT;
 1695              		.loc 1 1042 0
 1696 0016 7B68     		ldr	r3, [r7, #4]
 1697 0018 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1698 001a 9AB2     		uxth	r2, r3
 1699 001c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1700 001e 1343     		orrs	r3, r3, r2
 1701 0020 9AB2     		uxth	r2, r3
 1702 0022 7B68     		ldr	r3, [r7, #4]
 1703 0024 9A80     		strh	r2, [r3, #4]	@ movhi
 1704 0026 09E0     		b	.L75
 1705              	.L76:
1043:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1044:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
1045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Disable the selected I2C interrupts */
1047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2Cx->CR2 &= (uint16_t)~I2C_IT;
 1706              		.loc 1 1047 0
 1707 0028 7B68     		ldr	r3, [r7, #4]
 1708 002a 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1709 002c 9AB2     		uxth	r2, r3
 1710 002e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1711 0030 DB43     		mvns	r3, r3
 1712 0032 9BB2     		uxth	r3, r3
 1713 0034 1340     		ands	r3, r3, r2
 1714 0036 9AB2     		uxth	r2, r3
 1715 0038 7B68     		ldr	r3, [r7, #4]
 1716 003a 9A80     		strh	r2, [r3, #4]	@ movhi
 1717              	.L75:
1048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1049:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1718              		.loc 1 1049 0
 1719 003c 0C37     		adds	r7, r7, #12
 1720 003e BD46     		mov	sp, r7
 1721              		@ sp needed
 1722 0040 5DF8047B 		ldr	r7, [sp], #4
 1723 0044 7047     		bx	lr
 1724              		.cfi_endproc
 1725              	.LFE136:
 1727 0046 00BF     		.section	.text.I2C_CheckEvent,"ax",%progbits
 1728              		.align	2
 1729              		.global	I2C_CheckEvent
 1730              		.thumb
 1731              		.thumb_func
 1733              	I2C_CheckEvent:
 1734              	.LFB137:
1050:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1051:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*
1052:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
1053:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                           1. Basic state monitoring                    
1054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
1055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  */
1056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1057:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1058:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Checks whether the last I2Cx Event is equal to the one passed
1059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         as parameter.
1060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_EVENT: specifies the event to be checked. 
1062:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
1063:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_TRANSMITTER_ADDRESS_MATCHED: EV1
1064:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_RECEIVER_ADDRESS_MATCHED: EV1
1065:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_TRANSMITTER_SECONDADDRESS_MATCHED: EV1
1066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_RECEIVER_SECONDADDRESS_MATCHED: EV1
1067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_GENERALCALLADDRESS_MATCHED: EV1
1068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_BYTE_RECEIVED: EV2
1069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_RECEIVED | I2C_FLAG_DUALF): EV2
1070:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_RECEIVED | I2C_FLAG_GENCALL): EV2
1071:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_BYTE_TRANSMITTED: EV3
1072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_TRANSMITTED | I2C_FLAG_DUALF): EV3
1073:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg (I2C_EVENT_SLAVE_BYTE_TRANSMITTED | I2C_FLAG_GENCALL): EV3
1074:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_ACK_FAILURE: EV3_2
1075:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_SLAVE_STOP_DETECTED: EV4
1076:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_MODE_SELECT: EV5
1077:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_TRANSMITTER_MODE_SELECTED: EV6     
1078:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_RECEIVER_MODE_SELECTED: EV6
1079:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_BYTE_RECEIVED: EV7
1080:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_BYTE_TRANSMITTING: EV8
1081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_BYTE_TRANSMITTED: EV8_2
1082:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_EVENT_MASTER_MODE_ADDRESS10: EV9
1083:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *     
1084:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   For detailed description of Events, please refer to section I2C_Events
1085:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         in stm32f4xx_i2c.h file.
1086:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *    
1087:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval An ErrorStatus enumeration value:
1088:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           - SUCCESS: Last event is equal to the I2C_EVENT
1089:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *           - ERROR: Last event is different from the I2C_EVENT
1090:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1091:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** ErrorStatus I2C_CheckEvent(I2C_TypeDef* I2Cx, uint32_t I2C_EVENT)
1092:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1735              		.loc 1 1092 0
 1736              		.cfi_startproc
 1737              		@ args = 0, pretend = 0, frame = 24
 1738              		@ frame_needed = 1, uses_anonymous_args = 0
 1739              		@ link register save eliminated.
 1740 0000 80B4     		push	{r7}
 1741              	.LCFI81:
 1742              		.cfi_def_cfa_offset 4
 1743              		.cfi_offset 7, -4
 1744 0002 87B0     		sub	sp, sp, #28
 1745              	.LCFI82:
 1746              		.cfi_def_cfa_offset 32
 1747 0004 00AF     		add	r7, sp, #0
 1748              	.LCFI83:
 1749              		.cfi_def_cfa_register 7
 1750 0006 7860     		str	r0, [r7, #4]
 1751 0008 3960     		str	r1, [r7]
1093:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t lastevent = 0;
 1752              		.loc 1 1093 0
 1753 000a 0023     		movs	r3, #0
 1754 000c 3B61     		str	r3, [r7, #16]
1094:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t flag1 = 0, flag2 = 0;
 1755              		.loc 1 1094 0
 1756 000e 0023     		movs	r3, #0
 1757 0010 FB60     		str	r3, [r7, #12]
 1758 0012 0023     		movs	r3, #0
 1759 0014 BB60     		str	r3, [r7, #8]
1095:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   ErrorStatus status = ERROR;
 1760              		.loc 1 1095 0
 1761 0016 0023     		movs	r3, #0
 1762 0018 FB75     		strb	r3, [r7, #23]
1096:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1097:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1098:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1099:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_EVENT(I2C_EVENT));
1100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Read the I2Cx status register */
1102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag1 = I2Cx->SR1;
 1763              		.loc 1 1102 0
 1764 001a 7B68     		ldr	r3, [r7, #4]
 1765 001c 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1766 001e 9BB2     		uxth	r3, r3
 1767 0020 FB60     		str	r3, [r7, #12]
1103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag2 = I2Cx->SR2;
 1768              		.loc 1 1103 0
 1769 0022 7B68     		ldr	r3, [r7, #4]
 1770 0024 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1771 0026 9BB2     		uxth	r3, r3
 1772 0028 BB60     		str	r3, [r7, #8]
1104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag2 = flag2 << 16;
 1773              		.loc 1 1104 0
 1774 002a BB68     		ldr	r3, [r7, #8]
 1775 002c 1B04     		lsls	r3, r3, #16
 1776 002e BB60     		str	r3, [r7, #8]
1105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the last event value from I2C status register */
1107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   lastevent = (flag1 | flag2) & FLAG_MASK;
 1777              		.loc 1 1107 0
 1778 0030 FA68     		ldr	r2, [r7, #12]
 1779 0032 BB68     		ldr	r3, [r7, #8]
 1780 0034 1343     		orrs	r3, r3, r2
 1781 0036 23F07F43 		bic	r3, r3, #-16777216
 1782 003a 3B61     		str	r3, [r7, #16]
1108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check whether the last event contains the I2C_EVENT */
1110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if ((lastevent & I2C_EVENT) == I2C_EVENT)
 1783              		.loc 1 1110 0
 1784 003c 3A69     		ldr	r2, [r7, #16]
 1785 003e 3B68     		ldr	r3, [r7]
 1786 0040 1A40     		ands	r2, r2, r3
 1787 0042 3B68     		ldr	r3, [r7]
 1788 0044 9A42     		cmp	r2, r3
 1789 0046 02D1     		bne	.L79
1111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* SUCCESS: last event is equal to I2C_EVENT */
1113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     status = SUCCESS;
 1790              		.loc 1 1113 0
 1791 0048 0123     		movs	r3, #1
 1792 004a FB75     		strb	r3, [r7, #23]
 1793 004c 01E0     		b	.L80
 1794              	.L79:
1114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
1116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* ERROR: last event is different from I2C_EVENT */
1118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     status = ERROR;
 1795              		.loc 1 1118 0
 1796 004e 0023     		movs	r3, #0
 1797 0050 FB75     		strb	r3, [r7, #23]
 1798              	.L80:
1119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return status */
1121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return status;
 1799              		.loc 1 1121 0
 1800 0052 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1801              		.loc 1 1122 0
 1802 0054 1846     		mov	r0, r3
 1803 0056 1C37     		adds	r7, r7, #28
 1804 0058 BD46     		mov	sp, r7
 1805              		@ sp needed
 1806 005a 5DF8047B 		ldr	r7, [sp], #4
 1807 005e 7047     		bx	lr
 1808              		.cfi_endproc
 1809              	.LFE137:
 1811              		.section	.text.I2C_GetLastEvent,"ax",%progbits
 1812              		.align	2
 1813              		.global	I2C_GetLastEvent
 1814              		.thumb
 1815              		.thumb_func
 1817              	I2C_GetLastEvent:
 1818              	.LFB138:
1123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*
1125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
1126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                           2. Advanced state monitoring                   
1127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
1128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  */
1129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Returns the last I2Cx Event.
1132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *     
1134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   For detailed description of Events, please refer to section I2C_Events
1135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *         in stm32f4xx_i2c.h file.
1136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *    
1137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The last event
1138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** uint32_t I2C_GetLastEvent(I2C_TypeDef* I2Cx)
1140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1819              		.loc 1 1140 0
 1820              		.cfi_startproc
 1821              		@ args = 0, pretend = 0, frame = 24
 1822              		@ frame_needed = 1, uses_anonymous_args = 0
 1823              		@ link register save eliminated.
 1824 0000 80B4     		push	{r7}
 1825              	.LCFI84:
 1826              		.cfi_def_cfa_offset 4
 1827              		.cfi_offset 7, -4
 1828 0002 87B0     		sub	sp, sp, #28
 1829              	.LCFI85:
 1830              		.cfi_def_cfa_offset 32
 1831 0004 00AF     		add	r7, sp, #0
 1832              	.LCFI86:
 1833              		.cfi_def_cfa_register 7
 1834 0006 7860     		str	r0, [r7, #4]
1141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t lastevent = 0;
 1835              		.loc 1 1141 0
 1836 0008 0023     		movs	r3, #0
 1837 000a 7B61     		str	r3, [r7, #20]
1142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t flag1 = 0, flag2 = 0;
 1838              		.loc 1 1142 0
 1839 000c 0023     		movs	r3, #0
 1840 000e 3B61     		str	r3, [r7, #16]
 1841 0010 0023     		movs	r3, #0
 1842 0012 FB60     		str	r3, [r7, #12]
1143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Read the I2Cx status register */
1148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag1 = I2Cx->SR1;
 1843              		.loc 1 1148 0
 1844 0014 7B68     		ldr	r3, [r7, #4]
 1845 0016 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 1846 0018 9BB2     		uxth	r3, r3
 1847 001a 3B61     		str	r3, [r7, #16]
1149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag2 = I2Cx->SR2;
 1848              		.loc 1 1149 0
 1849 001c 7B68     		ldr	r3, [r7, #4]
 1850 001e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1851 0020 9BB2     		uxth	r3, r3
 1852 0022 FB60     		str	r3, [r7, #12]
1150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flag2 = flag2 << 16;
 1853              		.loc 1 1150 0
 1854 0024 FB68     		ldr	r3, [r7, #12]
 1855 0026 1B04     		lsls	r3, r3, #16
 1856 0028 FB60     		str	r3, [r7, #12]
1151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the last event value from I2C status register */
1153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   lastevent = (flag1 | flag2) & FLAG_MASK;
 1857              		.loc 1 1153 0
 1858 002a 3A69     		ldr	r2, [r7, #16]
 1859 002c FB68     		ldr	r3, [r7, #12]
 1860 002e 1343     		orrs	r3, r3, r2
 1861 0030 23F07F43 		bic	r3, r3, #-16777216
 1862 0034 7B61     		str	r3, [r7, #20]
1154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return status */
1156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return lastevent;
 1863              		.loc 1 1156 0
 1864 0036 7B69     		ldr	r3, [r7, #20]
1157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1865              		.loc 1 1157 0
 1866 0038 1846     		mov	r0, r3
 1867 003a 1C37     		adds	r7, r7, #28
 1868 003c BD46     		mov	sp, r7
 1869              		@ sp needed
 1870 003e 5DF8047B 		ldr	r7, [sp], #4
 1871 0042 7047     		bx	lr
 1872              		.cfi_endproc
 1873              	.LFE138:
 1875              		.section	.text.I2C_GetFlagStatus,"ax",%progbits
 1876              		.align	2
 1877              		.global	I2C_GetFlagStatus
 1878              		.thumb
 1879              		.thumb_func
 1881              	I2C_GetFlagStatus:
 1882              	.LFB139:
1158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /*
1160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================
1161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****                           3. Flag-based state monitoring                   
1162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  ===============================================================================  
1163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****  */
1164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Checks whether the specified I2C flag is set or not.
1167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_FLAG: specifies the flag to check. 
1169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
1170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_DUALF: Dual flag (Slave mode)
1171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SMBHOST: SMBus host header (Slave mode)
1172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SMBDEFAULT: SMBus default header (Slave mode)
1173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_GENCALL: General call header flag (Slave mode)
1174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_TRA: Transmitter/Receiver flag
1175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_BUSY: Bus busy flag
1176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_MSL: Master/Slave flag
1177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SMBALERT: SMBus Alert flag
1178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_TIMEOUT: Timeout or Tlow error flag
1179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_PECERR: PEC error in reception flag
1180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_OVR: Overrun/Underrun flag (Slave mode)
1181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_AF: Acknowledge failure flag
1182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_ARLO: Arbitration lost flag (Master mode)
1183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_BERR: Bus error flag
1184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_TXE: Data register empty flag (Transmitter)
1185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_RXNE: Data register not empty (Receiver) flag
1186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_STOPF: Stop detection flag (Slave mode)
1187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_ADD10: 10-bit header sent flag (Master mode)
1188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_BTF: Byte transfer finished flag
1189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_ADDR: Address sent flag (Master mode) "ADSL"
1190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                                Address matched flag (Slave mode)"ENDAD"
1191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SB: Start bit flag (Master mode)
1192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The new state of I2C_FLAG (SET or RESET).
1193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** FlagStatus I2C_GetFlagStatus(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG)
1195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1883              		.loc 1 1195 0
 1884              		.cfi_startproc
 1885              		@ args = 0, pretend = 0, frame = 24
 1886              		@ frame_needed = 1, uses_anonymous_args = 0
 1887              		@ link register save eliminated.
 1888 0000 80B4     		push	{r7}
 1889              	.LCFI87:
 1890              		.cfi_def_cfa_offset 4
 1891              		.cfi_offset 7, -4
 1892 0002 87B0     		sub	sp, sp, #28
 1893              	.LCFI88:
 1894              		.cfi_def_cfa_offset 32
 1895 0004 00AF     		add	r7, sp, #0
 1896              	.LCFI89:
 1897              		.cfi_def_cfa_register 7
 1898 0006 7860     		str	r0, [r7, #4]
 1899 0008 3960     		str	r1, [r7]
1196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   FlagStatus bitstatus = RESET;
 1900              		.loc 1 1196 0
 1901 000a 0023     		movs	r3, #0
 1902 000c FB75     		strb	r3, [r7, #23]
1197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   __IO uint32_t i2creg = 0, i2cxbase = 0;
 1903              		.loc 1 1197 0
 1904 000e 0023     		movs	r3, #0
 1905 0010 3B61     		str	r3, [r7, #16]
 1906 0012 0023     		movs	r3, #0
 1907 0014 FB60     		str	r3, [r7, #12]
1198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_GET_FLAG(I2C_FLAG));
1202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the I2Cx peripheral base address */
1204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   i2cxbase = (uint32_t)I2Cx;
 1908              		.loc 1 1204 0
 1909 0016 7B68     		ldr	r3, [r7, #4]
 1910 0018 FB60     		str	r3, [r7, #12]
1205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Read flag register index */
1207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   i2creg = I2C_FLAG >> 28;
 1911              		.loc 1 1207 0
 1912 001a 3B68     		ldr	r3, [r7]
 1913 001c 1B0F     		lsrs	r3, r3, #28
 1914 001e 3B61     		str	r3, [r7, #16]
1208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get bit[23:0] of the flag */
1210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_FLAG &= FLAG_MASK;
 1915              		.loc 1 1210 0
 1916 0020 3B68     		ldr	r3, [r7]
 1917 0022 23F07F43 		bic	r3, r3, #-16777216
 1918 0026 3B60     		str	r3, [r7]
1211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if(i2creg != 0)
 1919              		.loc 1 1212 0
 1920 0028 3B69     		ldr	r3, [r7, #16]
 1921 002a 002B     		cmp	r3, #0
 1922 002c 03D0     		beq	.L85
1213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Get the I2Cx SR1 register address */
1215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     i2cxbase += 0x14;
 1923              		.loc 1 1215 0
 1924 002e FB68     		ldr	r3, [r7, #12]
 1925 0030 1433     		adds	r3, r3, #20
 1926 0032 FB60     		str	r3, [r7, #12]
 1927 0034 05E0     		b	.L86
 1928              	.L85:
1216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
1218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Flag in I2Cx SR2 Register */
1220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     I2C_FLAG = (uint32_t)(I2C_FLAG >> 16);
 1929              		.loc 1 1220 0
 1930 0036 3B68     		ldr	r3, [r7]
 1931 0038 1B0C     		lsrs	r3, r3, #16
 1932 003a 3B60     		str	r3, [r7]
1221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* Get the I2Cx SR2 register address */
1222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     i2cxbase += 0x18;
 1933              		.loc 1 1222 0
 1934 003c FB68     		ldr	r3, [r7, #12]
 1935 003e 1833     		adds	r3, r3, #24
 1936 0040 FB60     		str	r3, [r7, #12]
 1937              	.L86:
1223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if(((*(__IO uint32_t *)i2cxbase) & I2C_FLAG) != (uint32_t)RESET)
 1938              		.loc 1 1225 0
 1939 0042 FB68     		ldr	r3, [r7, #12]
 1940 0044 1A68     		ldr	r2, [r3]
 1941 0046 3B68     		ldr	r3, [r7]
 1942 0048 1340     		ands	r3, r3, r2
 1943 004a 002B     		cmp	r3, #0
 1944 004c 02D0     		beq	.L87
1226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C_FLAG is set */
1228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     bitstatus = SET;
 1945              		.loc 1 1228 0
 1946 004e 0123     		movs	r3, #1
 1947 0050 FB75     		strb	r3, [r7, #23]
 1948 0052 01E0     		b	.L88
 1949              	.L87:
1229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
1231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C_FLAG is reset */
1233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     bitstatus = RESET;
 1950              		.loc 1 1233 0
 1951 0054 0023     		movs	r3, #0
 1952 0056 FB75     		strb	r3, [r7, #23]
 1953              	.L88:
1234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return the I2C_FLAG status */
1237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return  bitstatus;
 1954              		.loc 1 1237 0
 1955 0058 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 1956              		.loc 1 1238 0
 1957 005a 1846     		mov	r0, r3
 1958 005c 1C37     		adds	r7, r7, #28
 1959 005e BD46     		mov	sp, r7
 1960              		@ sp needed
 1961 0060 5DF8047B 		ldr	r7, [sp], #4
 1962 0064 7047     		bx	lr
 1963              		.cfi_endproc
 1964              	.LFE139:
 1966 0066 00BF     		.section	.text.I2C_ClearFlag,"ax",%progbits
 1967              		.align	2
 1968              		.global	I2C_ClearFlag
 1969              		.thumb
 1970              		.thumb_func
 1972              	I2C_ClearFlag:
 1973              	.LFB140:
1239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Clears the I2Cx's pending flags.
1242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_FLAG: specifies the flag to clear. 
1244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be any combination of the following values:
1245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_SMBALERT: SMBus Alert flag
1246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_TIMEOUT: Timeout or Tlow error flag
1247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_PECERR: PEC error in reception flag
1248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_OVR: Overrun/Underrun flag (Slave mode)
1249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_AF: Acknowledge failure flag
1250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_ARLO: Arbitration lost flag (Master mode)
1251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_FLAG_BERR: Bus error flag
1252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *   
1253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   STOPF (STOP detection) is cleared by software sequence: a read operation 
1254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          to I2C_SR1 register (I2C_GetFlagStatus()) followed by a write operation 
1255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          to I2C_CR1 register (I2C_Cmd() to re-enable the I2C peripheral).
1256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   ADD10 (10-bit header sent) is cleared by software sequence: a read 
1257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          operation to I2C_SR1 (I2C_GetFlagStatus()) followed by writing the 
1258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          second byte of the address in DR register.
1259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   BTF (Byte Transfer Finished) is cleared by software sequence: a read 
1260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          operation to I2C_SR1 register (I2C_GetFlagStatus()) followed by a 
1261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          read/write to I2C_DR register (I2C_SendData()).
1262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   ADDR (Address sent) is cleared by software sequence: a read operation to 
1263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_SR1 register (I2C_GetFlagStatus()) followed by a read operation to 
1264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_SR2 register ((void)(I2Cx->SR2)).
1265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   SB (Start Bit) is cleared software sequence: a read operation to I2C_SR1
1266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          register (I2C_GetFlagStatus()) followed by a write operation to I2C_DR
1267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          register (I2C_SendData()).
1268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *  
1269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
1270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_ClearFlag(I2C_TypeDef* I2Cx, uint32_t I2C_FLAG)
1272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 1974              		.loc 1 1272 0
 1975              		.cfi_startproc
 1976              		@ args = 0, pretend = 0, frame = 16
 1977              		@ frame_needed = 1, uses_anonymous_args = 0
 1978              		@ link register save eliminated.
 1979 0000 80B4     		push	{r7}
 1980              	.LCFI90:
 1981              		.cfi_def_cfa_offset 4
 1982              		.cfi_offset 7, -4
 1983 0002 85B0     		sub	sp, sp, #20
 1984              	.LCFI91:
 1985              		.cfi_def_cfa_offset 24
 1986 0004 00AF     		add	r7, sp, #0
 1987              	.LCFI92:
 1988              		.cfi_def_cfa_register 7
 1989 0006 7860     		str	r0, [r7, #4]
 1990 0008 3960     		str	r1, [r7]
1273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t flagpos = 0;
 1991              		.loc 1 1273 0
 1992 000a 0023     		movs	r3, #0
 1993 000c FB60     		str	r3, [r7, #12]
1274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_CLEAR_FLAG(I2C_FLAG));
1277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the I2C flag position */
1278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flagpos = I2C_FLAG & FLAG_MASK;
 1994              		.loc 1 1278 0
 1995 000e 3B68     		ldr	r3, [r7]
 1996 0010 23F07F43 		bic	r3, r3, #-16777216
 1997 0014 FB60     		str	r3, [r7, #12]
1279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear the selected I2C flag */
1280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->SR1 = (uint16_t)~flagpos;
 1998              		.loc 1 1280 0
 1999 0016 FB68     		ldr	r3, [r7, #12]
 2000 0018 9BB2     		uxth	r3, r3
 2001 001a DB43     		mvns	r3, r3
 2002 001c 9AB2     		uxth	r2, r3
 2003 001e 7B68     		ldr	r3, [r7, #4]
 2004 0020 9A82     		strh	r2, [r3, #20]	@ movhi
1281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 2005              		.loc 1 1281 0
 2006 0022 1437     		adds	r7, r7, #20
 2007 0024 BD46     		mov	sp, r7
 2008              		@ sp needed
 2009 0026 5DF8047B 		ldr	r7, [sp], #4
 2010 002a 7047     		bx	lr
 2011              		.cfi_endproc
 2012              	.LFE140:
 2014              		.section	.text.I2C_GetITStatus,"ax",%progbits
 2015              		.align	2
 2016              		.global	I2C_GetITStatus
 2017              		.thumb
 2018              		.thumb_func
 2020              	I2C_GetITStatus:
 2021              	.LFB141:
1282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Checks whether the specified I2C interrupt has occurred or not.
1285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_IT: specifies the interrupt source to check. 
1287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be one of the following values:
1288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_SMBALERT: SMBus Alert flag
1289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_TIMEOUT: Timeout or Tlow error flag
1290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_PECERR: PEC error in reception flag
1291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_OVR: Overrun/Underrun flag (Slave mode)
1292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_AF: Acknowledge failure flag
1293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ARLO: Arbitration lost flag (Master mode)
1294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_BERR: Bus error flag
1295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_TXE: Data register empty flag (Transmitter)
1296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_RXNE: Data register not empty (Receiver) flag
1297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_STOPF: Stop detection flag (Slave mode)
1298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ADD10: 10-bit header sent flag (Master mode)
1299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_BTF: Byte transfer finished flag
1300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ADDR: Address sent flag (Master mode) "ADSL"
1301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *                              Address matched flag (Slave mode)"ENDAD"
1302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_SB: Start bit flag (Master mode)
1303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval The new state of I2C_IT (SET or RESET).
1304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** ITStatus I2C_GetITStatus(I2C_TypeDef* I2Cx, uint32_t I2C_IT)
1306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 2022              		.loc 1 1306 0
 2023              		.cfi_startproc
 2024              		@ args = 0, pretend = 0, frame = 16
 2025              		@ frame_needed = 1, uses_anonymous_args = 0
 2026              		@ link register save eliminated.
 2027 0000 80B4     		push	{r7}
 2028              	.LCFI93:
 2029              		.cfi_def_cfa_offset 4
 2030              		.cfi_offset 7, -4
 2031 0002 85B0     		sub	sp, sp, #20
 2032              	.LCFI94:
 2033              		.cfi_def_cfa_offset 24
 2034 0004 00AF     		add	r7, sp, #0
 2035              	.LCFI95:
 2036              		.cfi_def_cfa_register 7
 2037 0006 7860     		str	r0, [r7, #4]
 2038 0008 3960     		str	r1, [r7]
1307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   ITStatus bitstatus = RESET;
 2039              		.loc 1 1307 0
 2040 000a 0023     		movs	r3, #0
 2041 000c FB73     		strb	r3, [r7, #15]
1308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t enablestatus = 0;
 2042              		.loc 1 1308 0
 2043 000e 0023     		movs	r3, #0
 2044 0010 BB60     		str	r3, [r7, #8]
1309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_GET_IT(I2C_IT));
1313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check if the interrupt source is enabled or not */
1315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   enablestatus = (uint32_t)(((I2C_IT & ITEN_MASK) >> 16) & (I2Cx->CR2)) ;
 2045              		.loc 1 1315 0
 2046 0012 3B68     		ldr	r3, [r7]
 2047 0014 03F0E063 		and	r3, r3, #117440512
 2048 0018 1A0C     		lsrs	r2, r3, #16
 2049 001a 7B68     		ldr	r3, [r7, #4]
 2050 001c 9B88     		ldrh	r3, [r3, #4]	@ movhi
 2051 001e 9BB2     		uxth	r3, r3
 2052 0020 1340     		ands	r3, r3, r2
 2053 0022 BB60     		str	r3, [r7, #8]
1316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   
1317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get bit[23:0] of the flag */
1318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2C_IT &= FLAG_MASK;
 2054              		.loc 1 1318 0
 2055 0024 3B68     		ldr	r3, [r7]
 2056 0026 23F07F43 		bic	r3, r3, #-16777216
 2057 002a 3B60     		str	r3, [r7]
1319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the status of the specified I2C flag */
1321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   if (((I2Cx->SR1 & I2C_IT) != (uint32_t)RESET) && enablestatus)
 2058              		.loc 1 1321 0
 2059 002c 7B68     		ldr	r3, [r7, #4]
 2060 002e 9B8A     		ldrh	r3, [r3, #20]	@ movhi
 2061 0030 9BB2     		uxth	r3, r3
 2062 0032 1A46     		mov	r2, r3
 2063 0034 3B68     		ldr	r3, [r7]
 2064 0036 1340     		ands	r3, r3, r2
 2065 0038 002B     		cmp	r3, #0
 2066 003a 05D0     		beq	.L92
 2067              		.loc 1 1321 0 is_stmt 0 discriminator 1
 2068 003c BB68     		ldr	r3, [r7, #8]
 2069 003e 002B     		cmp	r3, #0
 2070 0040 02D0     		beq	.L92
1322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C_IT is set */
1324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     bitstatus = SET;
 2071              		.loc 1 1324 0 is_stmt 1
 2072 0042 0123     		movs	r3, #1
 2073 0044 FB73     		strb	r3, [r7, #15]
 2074 0046 01E0     		b	.L93
 2075              	.L92:
1325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   else
1327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   {
1328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     /* I2C_IT is reset */
1329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****     bitstatus = RESET;
 2076              		.loc 1 1329 0
 2077 0048 0023     		movs	r3, #0
 2078 004a FB73     		strb	r3, [r7, #15]
 2079              	.L93:
1330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   }
1331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Return the I2C_IT status */
1332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   return  bitstatus;
 2080              		.loc 1 1332 0
 2081 004c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 2082              		.loc 1 1333 0
 2083 004e 1846     		mov	r0, r3
 2084 0050 1437     		adds	r7, r7, #20
 2085 0052 BD46     		mov	sp, r7
 2086              		@ sp needed
 2087 0054 5DF8047B 		ldr	r7, [sp], #4
 2088 0058 7047     		bx	lr
 2089              		.cfi_endproc
 2090              	.LFE141:
 2092 005a 00BF     		.section	.text.I2C_ClearITPendingBit,"ax",%progbits
 2093              		.align	2
 2094              		.global	I2C_ClearITPendingBit
 2095              		.thumb
 2096              		.thumb_func
 2098              	I2C_ClearITPendingBit:
 2099              	.LFB142:
1334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** /**
1336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @brief  Clears the I2Cx's interrupt pending bits.
1337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2Cx: where x can be 1, 2 or 3 to select the I2C peripheral.
1338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @param  I2C_IT: specifies the interrupt pending bit to clear. 
1339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          This parameter can be any combination of the following values:
1340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_SMBALERT: SMBus Alert interrupt
1341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_TIMEOUT: Timeout or Tlow error interrupt
1342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_PECERR: PEC error in reception  interrupt
1343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_OVR: Overrun/Underrun interrupt (Slave mode)
1344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_AF: Acknowledge failure interrupt
1345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_ARLO: Arbitration lost interrupt (Master mode)
1346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *            @arg I2C_IT_BERR: Bus error interrupt
1347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * 
1348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   STOPF (STOP detection) is cleared by software sequence: a read operation 
1349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          to I2C_SR1 register (I2C_GetITStatus()) followed by a write operation to 
1350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_CR1 register (I2C_Cmd() to re-enable the I2C peripheral).
1351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   ADD10 (10-bit header sent) is cleared by software sequence: a read 
1352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          operation to I2C_SR1 (I2C_GetITStatus()) followed by writing the second 
1353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          byte of the address in I2C_DR register.
1354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   BTF (Byte Transfer Finished) is cleared by software sequence: a read 
1355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          operation to I2C_SR1 register (I2C_GetITStatus()) followed by a 
1356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          read/write to I2C_DR register (I2C_SendData()).
1357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   ADDR (Address sent) is cleared by software sequence: a read operation to 
1358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_SR1 register (I2C_GetITStatus()) followed by a read operation to 
1359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_SR2 register ((void)(I2Cx->SR2)).
1360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @note   SB (Start Bit) is cleared by software sequence: a read operation to 
1361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_SR1 register (I2C_GetITStatus()) followed by a write operation to 
1362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   *          I2C_DR register (I2C_SendData()).
1363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   * @retval None
1364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   */
1365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** void I2C_ClearITPendingBit(I2C_TypeDef* I2Cx, uint32_t I2C_IT)
1366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** {
 2100              		.loc 1 1366 0
 2101              		.cfi_startproc
 2102              		@ args = 0, pretend = 0, frame = 16
 2103              		@ frame_needed = 1, uses_anonymous_args = 0
 2104              		@ link register save eliminated.
 2105 0000 80B4     		push	{r7}
 2106              	.LCFI96:
 2107              		.cfi_def_cfa_offset 4
 2108              		.cfi_offset 7, -4
 2109 0002 85B0     		sub	sp, sp, #20
 2110              	.LCFI97:
 2111              		.cfi_def_cfa_offset 24
 2112 0004 00AF     		add	r7, sp, #0
 2113              	.LCFI98:
 2114              		.cfi_def_cfa_register 7
 2115 0006 7860     		str	r0, [r7, #4]
 2116 0008 3960     		str	r1, [r7]
1367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   uint32_t flagpos = 0;
 2117              		.loc 1 1367 0
 2118 000a 0023     		movs	r3, #0
 2119 000c FB60     		str	r3, [r7, #12]
1368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Check the parameters */
1369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_ALL_PERIPH(I2Cx));
1370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   assert_param(IS_I2C_CLEAR_IT(I2C_IT));
1371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Get the I2C flag position */
1373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   flagpos = I2C_IT & FLAG_MASK;
 2120              		.loc 1 1373 0
 2121 000e 3B68     		ldr	r3, [r7]
 2122 0010 23F07F43 		bic	r3, r3, #-16777216
 2123 0014 FB60     		str	r3, [r7, #12]
1374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** 
1375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   /* Clear the selected I2C flag */
1376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c ****   I2Cx->SR1 = (uint16_t)~flagpos;
 2124              		.loc 1 1376 0
 2125 0016 FB68     		ldr	r3, [r7, #12]
 2126 0018 9BB2     		uxth	r3, r3
 2127 001a DB43     		mvns	r3, r3
 2128 001c 9AB2     		uxth	r2, r3
 2129 001e 7B68     		ldr	r3, [r7, #4]
 2130 0020 9A82     		strh	r2, [r3, #20]	@ movhi
1377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_i2c.c **** }
 2131              		.loc 1 1377 0
 2132 0022 1437     		adds	r7, r7, #20
 2133 0024 BD46     		mov	sp, r7
 2134              		@ sp needed
 2135 0026 5DF8047B 		ldr	r7, [sp], #4
 2136 002a 7047     		bx	lr
 2137              		.cfi_endproc
 2138              	.LFE142:
 2140              		.text
 2141              	.Letext0:
 2142              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2143              		.file 3 "/usr/include/newlib/stdint.h"
 2144              		.file 4 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 2145              		.file 5 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
 2146              		.file 6 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_i2c.h"
 2147              		.file 7 "libs/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_i2c.c
     /tmp/ccLw91sO.s:20     .text.I2C_DeInit:0000000000000000 $t
     /tmp/ccLw91sO.s:25     .text.I2C_DeInit:0000000000000000 I2C_DeInit
     /tmp/ccLw91sO.s:100    .text.I2C_Init:0000000000000000 $t
     /tmp/ccLw91sO.s:105    .text.I2C_Init:0000000000000000 I2C_Init
     /tmp/ccLw91sO.s:333    .text.I2C_StructInit:0000000000000000 $t
     /tmp/ccLw91sO.s:338    .text.I2C_StructInit:0000000000000000 I2C_StructInit
     /tmp/ccLw91sO.s:390    .text.I2C_Cmd:0000000000000000 $t
     /tmp/ccLw91sO.s:395    .text.I2C_Cmd:0000000000000000 I2C_Cmd
     /tmp/ccLw91sO.s:448    .text.I2C_GenerateSTART:0000000000000000 $t
     /tmp/ccLw91sO.s:453    .text.I2C_GenerateSTART:0000000000000000 I2C_GenerateSTART
     /tmp/ccLw91sO.s:506    .text.I2C_GenerateSTOP:0000000000000000 $t
     /tmp/ccLw91sO.s:511    .text.I2C_GenerateSTOP:0000000000000000 I2C_GenerateSTOP
     /tmp/ccLw91sO.s:564    .text.I2C_Send7bitAddress:0000000000000000 $t
     /tmp/ccLw91sO.s:569    .text.I2C_Send7bitAddress:0000000000000000 I2C_Send7bitAddress
     /tmp/ccLw91sO.s:621    .text.I2C_AcknowledgeConfig:0000000000000000 $t
     /tmp/ccLw91sO.s:626    .text.I2C_AcknowledgeConfig:0000000000000000 I2C_AcknowledgeConfig
     /tmp/ccLw91sO.s:679    .text.I2C_OwnAddress2Config:0000000000000000 $t
     /tmp/ccLw91sO.s:684    .text.I2C_OwnAddress2Config:0000000000000000 I2C_OwnAddress2Config
     /tmp/ccLw91sO.s:738    .text.I2C_DualAddressCmd:0000000000000000 $t
     /tmp/ccLw91sO.s:743    .text.I2C_DualAddressCmd:0000000000000000 I2C_DualAddressCmd
     /tmp/ccLw91sO.s:796    .text.I2C_GeneralCallCmd:0000000000000000 $t
     /tmp/ccLw91sO.s:801    .text.I2C_GeneralCallCmd:0000000000000000 I2C_GeneralCallCmd
     /tmp/ccLw91sO.s:854    .text.I2C_SoftwareResetCmd:0000000000000000 $t
     /tmp/ccLw91sO.s:859    .text.I2C_SoftwareResetCmd:0000000000000000 I2C_SoftwareResetCmd
     /tmp/ccLw91sO.s:913    .text.I2C_StretchClockCmd:0000000000000000 $t
     /tmp/ccLw91sO.s:918    .text.I2C_StretchClockCmd:0000000000000000 I2C_StretchClockCmd
     /tmp/ccLw91sO.s:971    .text.I2C_FastModeDutyCycleConfig:0000000000000000 $t
     /tmp/ccLw91sO.s:976    .text.I2C_FastModeDutyCycleConfig:0000000000000000 I2C_FastModeDutyCycleConfig
     /tmp/ccLw91sO.s:1029   .text.I2C_NACKPositionConfig:0000000000000000 $t
     /tmp/ccLw91sO.s:1034   .text.I2C_NACKPositionConfig:0000000000000000 I2C_NACKPositionConfig
     /tmp/ccLw91sO.s:1087   .text.I2C_SMBusAlertConfig:0000000000000000 $t
     /tmp/ccLw91sO.s:1092   .text.I2C_SMBusAlertConfig:0000000000000000 I2C_SMBusAlertConfig
     /tmp/ccLw91sO.s:1145   .text.I2C_ARPCmd:0000000000000000 $t
     /tmp/ccLw91sO.s:1150   .text.I2C_ARPCmd:0000000000000000 I2C_ARPCmd
     /tmp/ccLw91sO.s:1203   .text.I2C_SendData:0000000000000000 $t
     /tmp/ccLw91sO.s:1208   .text.I2C_SendData:0000000000000000 I2C_SendData
     /tmp/ccLw91sO.s:1243   .text.I2C_ReceiveData:0000000000000000 $t
     /tmp/ccLw91sO.s:1248   .text.I2C_ReceiveData:0000000000000000 I2C_ReceiveData
     /tmp/ccLw91sO.s:1282   .text.I2C_TransmitPEC:0000000000000000 $t
     /tmp/ccLw91sO.s:1287   .text.I2C_TransmitPEC:0000000000000000 I2C_TransmitPEC
     /tmp/ccLw91sO.s:1340   .text.I2C_PECPositionConfig:0000000000000000 $t
     /tmp/ccLw91sO.s:1345   .text.I2C_PECPositionConfig:0000000000000000 I2C_PECPositionConfig
     /tmp/ccLw91sO.s:1398   .text.I2C_CalculatePEC:0000000000000000 $t
     /tmp/ccLw91sO.s:1403   .text.I2C_CalculatePEC:0000000000000000 I2C_CalculatePEC
     /tmp/ccLw91sO.s:1456   .text.I2C_GetPEC:0000000000000000 $t
     /tmp/ccLw91sO.s:1461   .text.I2C_GetPEC:0000000000000000 I2C_GetPEC
     /tmp/ccLw91sO.s:1497   .text.I2C_DMACmd:0000000000000000 $t
     /tmp/ccLw91sO.s:1502   .text.I2C_DMACmd:0000000000000000 I2C_DMACmd
     /tmp/ccLw91sO.s:1555   .text.I2C_DMALastTransferCmd:0000000000000000 $t
     /tmp/ccLw91sO.s:1560   .text.I2C_DMALastTransferCmd:0000000000000000 I2C_DMALastTransferCmd
     /tmp/ccLw91sO.s:1613   .text.I2C_ReadRegister:0000000000000000 $t
     /tmp/ccLw91sO.s:1618   .text.I2C_ReadRegister:0000000000000000 I2C_ReadRegister
     /tmp/ccLw91sO.s:1664   .text.I2C_ITConfig:0000000000000000 $t
     /tmp/ccLw91sO.s:1669   .text.I2C_ITConfig:0000000000000000 I2C_ITConfig
     /tmp/ccLw91sO.s:1728   .text.I2C_CheckEvent:0000000000000000 $t
     /tmp/ccLw91sO.s:1733   .text.I2C_CheckEvent:0000000000000000 I2C_CheckEvent
     /tmp/ccLw91sO.s:1812   .text.I2C_GetLastEvent:0000000000000000 $t
     /tmp/ccLw91sO.s:1817   .text.I2C_GetLastEvent:0000000000000000 I2C_GetLastEvent
     /tmp/ccLw91sO.s:1876   .text.I2C_GetFlagStatus:0000000000000000 $t
     /tmp/ccLw91sO.s:1881   .text.I2C_GetFlagStatus:0000000000000000 I2C_GetFlagStatus
     /tmp/ccLw91sO.s:1967   .text.I2C_ClearFlag:0000000000000000 $t
     /tmp/ccLw91sO.s:1972   .text.I2C_ClearFlag:0000000000000000 I2C_ClearFlag
     /tmp/ccLw91sO.s:2015   .text.I2C_GetITStatus:0000000000000000 $t
     /tmp/ccLw91sO.s:2020   .text.I2C_GetITStatus:0000000000000000 I2C_GetITStatus
     /tmp/ccLw91sO.s:2093   .text.I2C_ClearITPendingBit:0000000000000000 $t
     /tmp/ccLw91sO.s:2098   .text.I2C_ClearITPendingBit:0000000000000000 I2C_ClearITPendingBit
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
RCC_GetClocksFreq
