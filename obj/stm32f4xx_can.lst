   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_can.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CAN_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	CAN_DeInit
  22              		.thumb
  23              		.thumb_func
  25              	CAN_DeInit:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @file    stm32f4xx_can.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          functionalities of the Controller area network (CAN) peripheral:           
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Initialization and Configuration 
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - CAN Frames Transmission 
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - CAN Frames Reception    
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Operation modes switch  
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Error management          
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Interrupts and flags        
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @verbatim
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                               
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          ===================================================================      
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                                   How to use this driver
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          ===================================================================
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          1.  Enable the CAN controller interface clock using 
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                  RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE); for CAN1 
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              and RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN2, ENABLE); for CAN2
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @note   In case you are using CAN2 only, you have to enable the CAN1 clock.
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *     
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          2. CAN pins configuration
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Enable the clock for the CAN GPIOs using the following function:
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);   
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Connect the involved CAN pins to AF9 using the following function 
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_CANx); 
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                - Configure these CAN pins in alternate function mode by calling
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                  the function  GPIO_Init();
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *    
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          3.  Initialise and configure the CAN using CAN_Init() and 
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               CAN_FilterInit() functions.   
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          4.  Transmit the desired CAN frame using CAN_Transmit() function.
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          5.  Check the transmission of a CAN frame using CAN_TransmitStatus()
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              function.
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          6.  Cancel the transmission of a CAN frame using CAN_CancelTransmit()
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              function.  
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          7.  Receive a CAN frame using CAN_Recieve() function.
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          8.  Release the receive FIFOs using CAN_FIFORelease() function.
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          9. Return the number of pending received frames using 
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              CAN_MessagePending() function.            
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          10. To control CAN events you can use one of the following two methods:
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Check on CAN flags using the CAN_GetFlagStatus() function.  
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Use CAN interrupts through the function CAN_ITConfig() at 
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                 initialization phase and CAN_GetITStatus() function into 
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                 interrupt routines to check if the event has occurred or not.
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             After checking on a flag you should clear it using CAN_ClearFlag()
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             function. And after checking on an interrupt event you should 
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             clear it using CAN_ClearITPendingBit() function.            
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @endverbatim
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @attention
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************  
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Includes ------------------------------------------------------------------*/
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #include "stm32f4xx_can.h"
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #include "stm32f4xx_rcc.h"
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN 
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief CAN driver modules
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */ 
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private typedef -----------------------------------------------------------*/
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private define ------------------------------------------------------------*/
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Master Control Register bits */
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define MCR_DBF           ((uint32_t)0x00010000) /* software master reset */
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Mailbox Transmit Request */
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define TMIDxR_TXRQ       ((uint32_t)0x00000001) /* Transmit mailbox request */
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Filter Master Register bits */
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define FMR_FINIT         ((uint32_t)0x00000001) /* Filter init mode */
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Time out for INAK bit */
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define INAK_TIMEOUT      ((uint32_t)0x0000FFFF)
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Time out for SLAK bit */
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define SLAK_TIMEOUT      ((uint32_t)0x0000FFFF)
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in TSR register */
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_TSR     ((uint32_t)0x08000000) 
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in RF1R register */
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_RF1R    ((uint32_t)0x04000000) 
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in RF0R register */
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_RF0R    ((uint32_t)0x02000000) 
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in MSR register */
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_MSR     ((uint32_t)0x01000000) 
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in ESR register */
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_ESR     ((uint32_t)0x00F00000) 
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Mailboxes definition */
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_0   ((uint8_t)0x00)
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_1   ((uint8_t)0x01)
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_2   ((uint8_t)0x02) 
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_MODE_MASK     ((uint32_t) 0x00000003)
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private macro -------------------------------------------------------------*/
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private variables ---------------------------------------------------------*/
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private function prototypes -----------------------------------------------*/
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private functions ---------------------------------------------------------*/
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit);
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Private_Functions
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group1 Initialization and Configuration functions
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    Initialization and Configuration functions 
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       Initialization and Configuration functions
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Initialize the CAN peripherals : Prescaler, operating mode, the maximum number 
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      of time quanta to perform resynchronization, the number of time quanta in
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      Bit Segment 1 and 2 and many other modes. 
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      Refer to  @ref CAN_InitTypeDef  for more details.
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Configures the CAN reception filter.                                      
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Select the start bank filter for slave CAN.
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Enables or disables the Debug Freeze mode for CAN
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Enables or disables the CAN Time Trigger Operation communication mode
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Deinitializes the CAN peripheral registers to their default reset values.
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None.
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_DeInit(CAN_TypeDef* CANx)
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
  28              		.loc 1 163 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CANx == CAN1)
  44              		.loc 1 167 0
  45 0008 7A68     		ldr	r2, [r7, #4]
  46 000a 4FF4C843 		mov	r3, #25600
  47 000e C4F20003 		movt	r3, 16384
  48 0012 9A42     		cmp	r2, r3
  49 0014 0AD1     		bne	.L2
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable CAN1 reset state */
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, ENABLE);
  50              		.loc 1 170 0
  51 0016 4FF00070 		mov	r0, #33554432
  52 001a 0121     		movs	r1, #1
  53 001c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Release CAN1 from reset state */
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, DISABLE);
  54              		.loc 1 172 0
  55 0020 4FF00070 		mov	r0, #33554432
  56 0024 0021     		movs	r1, #0
  57 0026 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  58 002a 09E0     		b	.L1
  59              	.L2:
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {  
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable CAN2 reset state */
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, ENABLE);
  60              		.loc 1 177 0
  61 002c 4FF08060 		mov	r0, #67108864
  62 0030 0121     		movs	r1, #1
  63 0032 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Release CAN2 from reset state */
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, DISABLE);
  64              		.loc 1 179 0
  65 0036 4FF08060 		mov	r0, #67108864
  66 003a 0021     		movs	r1, #0
  67 003c FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  68              	.L1:
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
  69              		.loc 1 181 0
  70 0040 0837     		adds	r7, r7, #8
  71 0042 BD46     		mov	sp, r7
  72              		@ sp needed
  73 0044 80BD     		pop	{r7, pc}
  74              		.cfi_endproc
  75              	.LFE110:
  77 0046 00BF     		.section	.text.CAN_Init,"ax",%progbits
  78              		.align	2
  79              		.global	CAN_Init
  80              		.thumb
  81              		.thumb_func
  83              	CAN_Init:
  84              	.LFB111:
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         parameters in the CAN_InitStruct.
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure that contains
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         the configuration information for the CAN peripheral.
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval Constant indicates initialization succeed which will be 
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_InitStatus_Failed or CAN_InitStatus_Success.
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Init(CAN_TypeDef* CANx, CAN_InitTypeDef* CAN_InitStruct)
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
  85              		.loc 1 193 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 16
  88              		@ frame_needed = 1, uses_anonymous_args = 0
  89              		@ link register save eliminated.
  90 0000 80B4     		push	{r7}
  91              	.LCFI3:
  92              		.cfi_def_cfa_offset 4
  93              		.cfi_offset 7, -4
  94 0002 85B0     		sub	sp, sp, #20
  95              	.LCFI4:
  96              		.cfi_def_cfa_offset 24
  97 0004 00AF     		add	r7, sp, #0
  98              	.LCFI5:
  99              		.cfi_def_cfa_register 7
 100 0006 7860     		str	r0, [r7, #4]
 101 0008 3960     		str	r1, [r7]
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t InitStatus = CAN_InitStatus_Failed;
 102              		.loc 1 194 0
 103 000a 0023     		movs	r3, #0
 104 000c FB73     		strb	r3, [r7, #15]
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t wait_ack = 0x00000000;
 105              		.loc 1 195 0
 106 000e 0023     		movs	r3, #0
 107 0010 BB60     		str	r3, [r7, #8]
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TTCM));
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_ABOM));
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_AWUM));
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_NART));
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_RFLM));
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TXFP));
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_MODE(CAN_InitStruct->CAN_Mode));
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_SJW(CAN_InitStruct->CAN_SJW));
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BS1(CAN_InitStruct->CAN_BS1));
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BS2(CAN_InitStruct->CAN_BS2));
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_PRESCALER(CAN_InitStruct->CAN_Prescaler));
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Exit from sleep mode */
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR &= (~(uint32_t)CAN_MCR_SLEEP);
 108              		.loc 1 211 0
 109 0012 7B68     		ldr	r3, [r7, #4]
 110 0014 1B68     		ldr	r3, [r3]
 111 0016 23F00202 		bic	r2, r3, #2
 112 001a 7B68     		ldr	r3, [r7, #4]
 113 001c 1A60     		str	r2, [r3]
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Request initialisation */
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR |= CAN_MCR_INRQ ;
 114              		.loc 1 214 0
 115 001e 7B68     		ldr	r3, [r7, #4]
 116 0020 1B68     		ldr	r3, [r3]
 117 0022 43F00102 		orr	r2, r3, #1
 118 0026 7B68     		ldr	r3, [r7, #4]
 119 0028 1A60     		str	r2, [r3]
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Wait the acknowledge */
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while (((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 120              		.loc 1 217 0
 121 002a 02E0     		b	.L5
 122              	.L7:
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     wait_ack++;
 123              		.loc 1 219 0
 124 002c BB68     		ldr	r3, [r7, #8]
 125 002e 0133     		adds	r3, r3, #1
 126 0030 BB60     		str	r3, [r7, #8]
 127              	.L5:
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 128              		.loc 1 217 0 discriminator 1
 129 0032 7B68     		ldr	r3, [r7, #4]
 130 0034 5B68     		ldr	r3, [r3, #4]
 131 0036 03F00103 		and	r3, r3, #1
 132 003a 002B     		cmp	r3, #0
 133 003c 04D1     		bne	.L6
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 134              		.loc 1 217 0 is_stmt 0 discriminator 2
 135 003e BA68     		ldr	r2, [r7, #8]
 136 0040 4FF6FF73 		movw	r3, #65535
 137 0044 9A42     		cmp	r2, r3
 138 0046 F1D1     		bne	.L7
 139              	.L6:
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check acknowledge */
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK)
 140              		.loc 1 223 0 is_stmt 1
 141 0048 7B68     		ldr	r3, [r7, #4]
 142 004a 5B68     		ldr	r3, [r3, #4]
 143 004c 03F00103 		and	r3, r3, #1
 144 0050 002B     		cmp	r3, #0
 145 0052 02D1     		bne	.L8
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     InitStatus = CAN_InitStatus_Failed;
 146              		.loc 1 225 0
 147 0054 0023     		movs	r3, #0
 148 0056 FB73     		strb	r3, [r7, #15]
 149 0058 9CE0     		b	.L9
 150              	.L8:
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else 
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the time triggered communication mode */
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_TTCM == ENABLE)
 151              		.loc 1 230 0
 152 005a 3B68     		ldr	r3, [r7]
 153 005c 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 154 005e 012B     		cmp	r3, #1
 155 0060 06D1     		bne	.L10
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_TTCM;
 156              		.loc 1 232 0
 157 0062 7B68     		ldr	r3, [r7, #4]
 158 0064 1B68     		ldr	r3, [r3]
 159 0066 43F08002 		orr	r2, r3, #128
 160 006a 7B68     		ldr	r3, [r7, #4]
 161 006c 1A60     		str	r2, [r3]
 162 006e 05E0     		b	.L11
 163              	.L10:
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_TTCM;
 164              		.loc 1 236 0
 165 0070 7B68     		ldr	r3, [r7, #4]
 166 0072 1B68     		ldr	r3, [r3]
 167 0074 23F08002 		bic	r2, r3, #128
 168 0078 7B68     		ldr	r3, [r7, #4]
 169 007a 1A60     		str	r2, [r3]
 170              	.L11:
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the automatic bus-off management */
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_ABOM == ENABLE)
 171              		.loc 1 240 0
 172 007c 3B68     		ldr	r3, [r7]
 173 007e DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 174 0080 012B     		cmp	r3, #1
 175 0082 06D1     		bne	.L12
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_ABOM;
 176              		.loc 1 242 0
 177 0084 7B68     		ldr	r3, [r7, #4]
 178 0086 1B68     		ldr	r3, [r3]
 179 0088 43F04002 		orr	r2, r3, #64
 180 008c 7B68     		ldr	r3, [r7, #4]
 181 008e 1A60     		str	r2, [r3]
 182 0090 05E0     		b	.L13
 183              	.L12:
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_ABOM;
 184              		.loc 1 246 0
 185 0092 7B68     		ldr	r3, [r7, #4]
 186 0094 1B68     		ldr	r3, [r3]
 187 0096 23F04002 		bic	r2, r3, #64
 188 009a 7B68     		ldr	r3, [r7, #4]
 189 009c 1A60     		str	r2, [r3]
 190              	.L13:
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the automatic wake-up mode */
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_AWUM == ENABLE)
 191              		.loc 1 250 0
 192 009e 3B68     		ldr	r3, [r7]
 193 00a0 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 194 00a2 012B     		cmp	r3, #1
 195 00a4 06D1     		bne	.L14
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_AWUM;
 196              		.loc 1 252 0
 197 00a6 7B68     		ldr	r3, [r7, #4]
 198 00a8 1B68     		ldr	r3, [r3]
 199 00aa 43F02002 		orr	r2, r3, #32
 200 00ae 7B68     		ldr	r3, [r7, #4]
 201 00b0 1A60     		str	r2, [r3]
 202 00b2 05E0     		b	.L15
 203              	.L14:
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_AWUM;
 204              		.loc 1 256 0
 205 00b4 7B68     		ldr	r3, [r7, #4]
 206 00b6 1B68     		ldr	r3, [r3]
 207 00b8 23F02002 		bic	r2, r3, #32
 208 00bc 7B68     		ldr	r3, [r7, #4]
 209 00be 1A60     		str	r2, [r3]
 210              	.L15:
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the no automatic retransmission */
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_NART == ENABLE)
 211              		.loc 1 260 0
 212 00c0 3B68     		ldr	r3, [r7]
 213 00c2 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 214 00c4 012B     		cmp	r3, #1
 215 00c6 06D1     		bne	.L16
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_NART;
 216              		.loc 1 262 0
 217 00c8 7B68     		ldr	r3, [r7, #4]
 218 00ca 1B68     		ldr	r3, [r3]
 219 00cc 43F01002 		orr	r2, r3, #16
 220 00d0 7B68     		ldr	r3, [r7, #4]
 221 00d2 1A60     		str	r2, [r3]
 222 00d4 05E0     		b	.L17
 223              	.L16:
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_NART;
 224              		.loc 1 266 0
 225 00d6 7B68     		ldr	r3, [r7, #4]
 226 00d8 1B68     		ldr	r3, [r3]
 227 00da 23F01002 		bic	r2, r3, #16
 228 00de 7B68     		ldr	r3, [r7, #4]
 229 00e0 1A60     		str	r2, [r3]
 230              	.L17:
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the receive FIFO locked mode */
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_RFLM == ENABLE)
 231              		.loc 1 270 0
 232 00e2 3B68     		ldr	r3, [r7]
 233 00e4 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 234 00e6 012B     		cmp	r3, #1
 235 00e8 06D1     		bne	.L18
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_RFLM;
 236              		.loc 1 272 0
 237 00ea 7B68     		ldr	r3, [r7, #4]
 238 00ec 1B68     		ldr	r3, [r3]
 239 00ee 43F00802 		orr	r2, r3, #8
 240 00f2 7B68     		ldr	r3, [r7, #4]
 241 00f4 1A60     		str	r2, [r3]
 242 00f6 05E0     		b	.L19
 243              	.L18:
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_RFLM;
 244              		.loc 1 276 0
 245 00f8 7B68     		ldr	r3, [r7, #4]
 246 00fa 1B68     		ldr	r3, [r3]
 247 00fc 23F00802 		bic	r2, r3, #8
 248 0100 7B68     		ldr	r3, [r7, #4]
 249 0102 1A60     		str	r2, [r3]
 250              	.L19:
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the transmit FIFO priority */
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_TXFP == ENABLE)
 251              		.loc 1 280 0
 252 0104 3B68     		ldr	r3, [r7]
 253 0106 DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 254 0108 012B     		cmp	r3, #1
 255 010a 06D1     		bne	.L20
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_TXFP;
 256              		.loc 1 282 0
 257 010c 7B68     		ldr	r3, [r7, #4]
 258 010e 1B68     		ldr	r3, [r3]
 259 0110 43F00402 		orr	r2, r3, #4
 260 0114 7B68     		ldr	r3, [r7, #4]
 261 0116 1A60     		str	r2, [r3]
 262 0118 05E0     		b	.L21
 263              	.L20:
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_TXFP;
 264              		.loc 1 286 0
 265 011a 7B68     		ldr	r3, [r7, #4]
 266 011c 1B68     		ldr	r3, [r3]
 267 011e 23F00402 		bic	r2, r3, #4
 268 0122 7B68     		ldr	r3, [r7, #4]
 269 0124 1A60     		str	r2, [r3]
 270              	.L21:
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the bit timing register */
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 271              		.loc 1 290 0
 272 0126 3B68     		ldr	r3, [r7]
 273 0128 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 274 012a 9A07     		lsls	r2, r3, #30
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 275              		.loc 1 291 0
 276 012c 3B68     		ldr	r3, [r7]
 277 012e DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 278 0130 1B06     		lsls	r3, r3, #24
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 279              		.loc 1 290 0
 280 0132 1A43     		orrs	r2, r2, r3
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 281              		.loc 1 292 0
 282 0134 3B68     		ldr	r3, [r7]
 283 0136 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 284 0138 1B04     		lsls	r3, r3, #16
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 285              		.loc 1 291 0
 286 013a 1A43     		orrs	r2, r2, r3
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 287              		.loc 1 293 0
 288 013c 3B68     		ldr	r3, [r7]
 289 013e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 290 0140 1B05     		lsls	r3, r3, #20
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 291              		.loc 1 292 0
 292 0142 1A43     		orrs	r2, r2, r3
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                ((uint32_t)CAN_InitStruct->CAN_Prescaler - 1);
 293              		.loc 1 294 0
 294 0144 3B68     		ldr	r3, [r7]
 295 0146 1B88     		ldrh	r3, [r3]
 296 0148 013B     		subs	r3, r3, #1
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 297              		.loc 1 293 0
 298 014a 1A43     		orrs	r2, r2, r3
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 299              		.loc 1 290 0
 300 014c 7B68     		ldr	r3, [r7, #4]
 301 014e DA61     		str	r2, [r3, #28]
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request leave initialisation */
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= ~(uint32_t)CAN_MCR_INRQ;
 302              		.loc 1 297 0
 303 0150 7B68     		ldr	r3, [r7, #4]
 304 0152 1B68     		ldr	r3, [r3]
 305 0154 23F00102 		bic	r2, r3, #1
 306 0158 7B68     		ldr	r3, [r7, #4]
 307 015a 1A60     		str	r2, [r3]
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* Wait the acknowledge */
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    wait_ack = 0;
 308              		.loc 1 300 0
 309 015c 0023     		movs	r3, #0
 310 015e BB60     		str	r3, [r7, #8]
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    while (((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 311              		.loc 1 302 0
 312 0160 02E0     		b	.L22
 313              	.L24:
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    {
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      wait_ack++;
 314              		.loc 1 304 0
 315 0162 BB68     		ldr	r3, [r7, #8]
 316 0164 0133     		adds	r3, r3, #1
 317 0166 BB60     		str	r3, [r7, #8]
 318              	.L22:
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    {
 319              		.loc 1 302 0 discriminator 1
 320 0168 7B68     		ldr	r3, [r7, #4]
 321 016a 5B68     		ldr	r3, [r3, #4]
 322 016c 03F00103 		and	r3, r3, #1
 323 0170 002B     		cmp	r3, #0
 324 0172 04D0     		beq	.L23
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    {
 325              		.loc 1 302 0 is_stmt 0 discriminator 2
 326 0174 BA68     		ldr	r2, [r7, #8]
 327 0176 4FF6FF73 		movw	r3, #65535
 328 017a 9A42     		cmp	r2, r3
 329 017c F1D1     		bne	.L24
 330              	.L23:
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    }
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* ...and check acknowledged */
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK)
 331              		.loc 1 308 0 is_stmt 1
 332 017e 7B68     		ldr	r3, [r7, #4]
 333 0180 5B68     		ldr	r3, [r3, #4]
 334 0182 03F00103 		and	r3, r3, #1
 335 0186 002B     		cmp	r3, #0
 336 0188 02D0     		beq	.L25
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       InitStatus = CAN_InitStatus_Failed;
 337              		.loc 1 310 0
 338 018a 0023     		movs	r3, #0
 339 018c FB73     		strb	r3, [r7, #15]
 340 018e 01E0     		b	.L9
 341              	.L25:
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       InitStatus = CAN_InitStatus_Success ;
 342              		.loc 1 314 0
 343 0190 0123     		movs	r3, #1
 344 0192 FB73     		strb	r3, [r7, #15]
 345              	.L9:
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* At this step, return the status of initialization */
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return InitStatus;
 346              		.loc 1 319 0
 347 0194 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 348              		.loc 1 320 0
 349 0196 1846     		mov	r0, r3
 350 0198 1437     		adds	r7, r7, #20
 351 019a BD46     		mov	sp, r7
 352              		@ sp needed
 353 019c 5DF8047B 		ldr	r7, [sp], #4
 354 01a0 7047     		bx	lr
 355              		.cfi_endproc
 356              	.LFE111:
 358 01a2 00BF     		.section	.text.CAN_FilterInit,"ax",%progbits
 359              		.align	2
 360              		.global	CAN_FilterInit
 361              		.thumb
 362              		.thumb_func
 364              	CAN_FilterInit:
 365              	.LFB112:
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         parameters in the CAN_FilterInitStruct.
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FilterInitStruct: pointer to a CAN_FilterInitTypeDef structure that
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         contains the configuration information.
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_FilterInit(CAN_FilterInitTypeDef* CAN_FilterInitStruct)
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 366              		.loc 1 330 0
 367              		.cfi_startproc
 368              		@ args = 0, pretend = 0, frame = 16
 369              		@ frame_needed = 1, uses_anonymous_args = 0
 370              		@ link register save eliminated.
 371 0000 80B4     		push	{r7}
 372              	.LCFI6:
 373              		.cfi_def_cfa_offset 4
 374              		.cfi_offset 7, -4
 375 0002 85B0     		sub	sp, sp, #20
 376              	.LCFI7:
 377              		.cfi_def_cfa_offset 24
 378 0004 00AF     		add	r7, sp, #0
 379              	.LCFI8:
 380              		.cfi_def_cfa_register 7
 381 0006 7860     		str	r0, [r7, #4]
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t filter_number_bit_pos = 0;
 382              		.loc 1 331 0
 383 0008 0023     		movs	r3, #0
 384 000a FB60     		str	r3, [r7, #12]
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_NUMBER(CAN_FilterInitStruct->CAN_FilterNumber));
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_MODE(CAN_FilterInitStruct->CAN_FilterMode));
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_SCALE(CAN_FilterInitStruct->CAN_FilterScale));
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_FIFO(CAN_FilterInitStruct->CAN_FilterFIFOAssignment));
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_FilterInitStruct->CAN_FilterActivation));
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   filter_number_bit_pos = ((uint32_t)1) << CAN_FilterInitStruct->CAN_FilterNumber;
 385              		.loc 1 339 0
 386 000c 7B68     		ldr	r3, [r7, #4]
 387 000e 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 388 0010 0122     		movs	r2, #1
 389 0012 02FA03F3 		lsl	r3, r2, r3
 390 0016 FB60     		str	r3, [r7, #12]
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialisation mode for the filter */
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= FMR_FINIT;
 391              		.loc 1 342 0
 392 0018 4FF4C843 		mov	r3, #25600
 393 001c C4F20003 		movt	r3, 16384
 394 0020 4FF4C842 		mov	r2, #25600
 395 0024 C4F20002 		movt	r2, 16384
 396 0028 D2F80022 		ldr	r2, [r2, #512]
 397 002c 42F00102 		orr	r2, r2, #1
 398 0030 C3F80022 		str	r2, [r3, #512]
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Deactivation */
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FA1R &= ~(uint32_t)filter_number_bit_pos;
 399              		.loc 1 345 0
 400 0034 4FF4C843 		mov	r3, #25600
 401 0038 C4F20003 		movt	r3, 16384
 402 003c 4FF4C842 		mov	r2, #25600
 403 0040 C4F20002 		movt	r2, 16384
 404 0044 D2F81C12 		ldr	r1, [r2, #540]
 405 0048 FA68     		ldr	r2, [r7, #12]
 406 004a D243     		mvns	r2, r2
 407 004c 0A40     		ands	r2, r2, r1
 408 004e C3F81C22 		str	r2, [r3, #540]
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Scale */
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_16bit)
 409              		.loc 1 348 0
 410 0052 7B68     		ldr	r3, [r7, #4]
 411 0054 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 412 0056 002B     		cmp	r3, #0
 413 0058 2DD1     		bne	.L28
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 16-bit scale for the filter */
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FS1R &= ~(uint32_t)filter_number_bit_pos;
 414              		.loc 1 351 0
 415 005a 4FF4C843 		mov	r3, #25600
 416 005e C4F20003 		movt	r3, 16384
 417 0062 4FF4C842 		mov	r2, #25600
 418 0066 C4F20002 		movt	r2, 16384
 419 006a D2F80C12 		ldr	r1, [r2, #524]
 420 006e FA68     		ldr	r2, [r7, #12]
 421 0070 D243     		mvns	r2, r2
 422 0072 0A40     		ands	r2, r2, r1
 423 0074 C3F80C22 		str	r2, [r3, #524]
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* First 16-bit identifier and First 16-bit mask */
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Or First 16-bit identifier and Second 16-bit identifier */
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 424              		.loc 1 355 0
 425 0078 4FF4C843 		mov	r3, #25600
 426 007c C4F20003 		movt	r3, 16384
 427 0080 7A68     		ldr	r2, [r7, #4]
 428 0082 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 429              		.loc 1 356 0
 430 0084 7968     		ldr	r1, [r7, #4]
 431 0086 C988     		ldrh	r1, [r1, #6]
 432 0088 0804     		lsls	r0, r1, #16
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 433              		.loc 1 357 0
 434 008a 7968     		ldr	r1, [r7, #4]
 435 008c 4988     		ldrh	r1, [r1, #2]
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 436              		.loc 1 356 0
 437 008e 0143     		orrs	r1, r1, r0
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 438              		.loc 1 355 0
 439 0090 4832     		adds	r2, r2, #72
 440 0092 43F83210 		str	r1, [r3, r2, lsl #3]
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Second 16-bit identifier and Second 16-bit mask */
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 441              		.loc 1 361 0
 442 0096 4FF4C842 		mov	r2, #25600
 443 009a C4F20002 		movt	r2, 16384
 444 009e 7B68     		ldr	r3, [r7, #4]
 445 00a0 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 446              		.loc 1 362 0
 447 00a2 7968     		ldr	r1, [r7, #4]
 448 00a4 8988     		ldrh	r1, [r1, #4]
 449 00a6 0804     		lsls	r0, r1, #16
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh);
 450              		.loc 1 363 0
 451 00a8 7968     		ldr	r1, [r7, #4]
 452 00aa 0988     		ldrh	r1, [r1]
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 453              		.loc 1 362 0
 454 00ac 0143     		orrs	r1, r1, r0
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 455              		.loc 1 361 0
 456 00ae 4833     		adds	r3, r3, #72
 457 00b0 DB00     		lsls	r3, r3, #3
 458 00b2 1344     		add	r3, r3, r2
 459 00b4 5960     		str	r1, [r3, #4]
 460              	.L28:
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_32bit)
 461              		.loc 1 366 0
 462 00b6 7B68     		ldr	r3, [r7, #4]
 463 00b8 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 464 00ba 012B     		cmp	r3, #1
 465 00bc 2CD1     		bne	.L29
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit scale for the filter */
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FS1R |= filter_number_bit_pos;
 466              		.loc 1 369 0
 467 00be 4FF4C843 		mov	r3, #25600
 468 00c2 C4F20003 		movt	r3, 16384
 469 00c6 4FF4C842 		mov	r2, #25600
 470 00ca C4F20002 		movt	r2, 16384
 471 00ce D2F80C12 		ldr	r1, [r2, #524]
 472 00d2 FA68     		ldr	r2, [r7, #12]
 473 00d4 0A43     		orrs	r2, r2, r1
 474 00d6 C3F80C22 		str	r2, [r3, #524]
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 475              		.loc 1 371 0
 476 00da 4FF4C843 		mov	r3, #25600
 477 00de C4F20003 		movt	r3, 16384
 478 00e2 7A68     		ldr	r2, [r7, #4]
 479 00e4 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 480              		.loc 1 372 0
 481 00e6 7968     		ldr	r1, [r7, #4]
 482 00e8 0988     		ldrh	r1, [r1]
 483 00ea 0804     		lsls	r0, r1, #16
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 484              		.loc 1 373 0
 485 00ec 7968     		ldr	r1, [r7, #4]
 486 00ee 4988     		ldrh	r1, [r1, #2]
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 487              		.loc 1 372 0
 488 00f0 0143     		orrs	r1, r1, r0
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 489              		.loc 1 371 0
 490 00f2 4832     		adds	r2, r2, #72
 491 00f4 43F83210 		str	r1, [r3, r2, lsl #3]
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit mask or Second 32-bit identifier */
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 492              		.loc 1 375 0
 493 00f8 4FF4C842 		mov	r2, #25600
 494 00fc C4F20002 		movt	r2, 16384
 495 0100 7B68     		ldr	r3, [r7, #4]
 496 0102 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 497              		.loc 1 376 0
 498 0104 7968     		ldr	r1, [r7, #4]
 499 0106 8988     		ldrh	r1, [r1, #4]
 500 0108 0804     		lsls	r0, r1, #16
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow);
 501              		.loc 1 377 0
 502 010a 7968     		ldr	r1, [r7, #4]
 503 010c C988     		ldrh	r1, [r1, #6]
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 504              		.loc 1 376 0
 505 010e 0143     		orrs	r1, r1, r0
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 506              		.loc 1 375 0
 507 0110 4833     		adds	r3, r3, #72
 508 0112 DB00     		lsls	r3, r3, #3
 509 0114 1344     		add	r3, r3, r2
 510 0116 5960     		str	r1, [r3, #4]
 511              	.L29:
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Mode */
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdMask)
 512              		.loc 1 381 0
 513 0118 7B68     		ldr	r3, [r7, #4]
 514 011a DB7A     		ldrb	r3, [r3, #11]	@ zero_extendqisi2
 515 011c 002B     		cmp	r3, #0
 516 011e 0FD1     		bne	.L30
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /*Id/Mask mode for the filter*/
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FM1R &= ~(uint32_t)filter_number_bit_pos;
 517              		.loc 1 384 0
 518 0120 4FF4C843 		mov	r3, #25600
 519 0124 C4F20003 		movt	r3, 16384
 520 0128 4FF4C842 		mov	r2, #25600
 521 012c C4F20002 		movt	r2, 16384
 522 0130 D2F80412 		ldr	r1, [r2, #516]
 523 0134 FA68     		ldr	r2, [r7, #12]
 524 0136 D243     		mvns	r2, r2
 525 0138 0A40     		ands	r2, r2, r1
 526 013a C3F80422 		str	r2, [r3, #516]
 527 013e 0DE0     		b	.L31
 528              	.L30:
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /*Identifier list mode for the filter*/
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FM1R |= (uint32_t)filter_number_bit_pos;
 529              		.loc 1 389 0
 530 0140 4FF4C843 		mov	r3, #25600
 531 0144 C4F20003 		movt	r3, 16384
 532 0148 4FF4C842 		mov	r2, #25600
 533 014c C4F20002 		movt	r2, 16384
 534 0150 D2F80412 		ldr	r1, [r2, #516]
 535 0154 FA68     		ldr	r2, [r7, #12]
 536 0156 0A43     		orrs	r2, r2, r1
 537 0158 C3F80422 		str	r2, [r3, #516]
 538              	.L31:
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter FIFO assignment */
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO0)
 539              		.loc 1 393 0
 540 015c 7B68     		ldr	r3, [r7, #4]
 541 015e 1B89     		ldrh	r3, [r3, #8]
 542 0160 002B     		cmp	r3, #0
 543 0162 0ED1     		bne	.L32
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* FIFO 0 assignation for the filter */
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FFA1R &= ~(uint32_t)filter_number_bit_pos;
 544              		.loc 1 396 0
 545 0164 4FF4C843 		mov	r3, #25600
 546 0168 C4F20003 		movt	r3, 16384
 547 016c 4FF4C842 		mov	r2, #25600
 548 0170 C4F20002 		movt	r2, 16384
 549 0174 D2F81412 		ldr	r1, [r2, #532]
 550 0178 FA68     		ldr	r2, [r7, #12]
 551 017a D243     		mvns	r2, r2
 552 017c 0A40     		ands	r2, r2, r1
 553 017e C3F81422 		str	r2, [r3, #532]
 554              	.L32:
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO1)
 555              		.loc 1 399 0
 556 0182 7B68     		ldr	r3, [r7, #4]
 557 0184 1B89     		ldrh	r3, [r3, #8]
 558 0186 012B     		cmp	r3, #1
 559 0188 0DD1     		bne	.L33
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* FIFO 1 assignation for the filter */
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FFA1R |= (uint32_t)filter_number_bit_pos;
 560              		.loc 1 402 0
 561 018a 4FF4C843 		mov	r3, #25600
 562 018e C4F20003 		movt	r3, 16384
 563 0192 4FF4C842 		mov	r2, #25600
 564 0196 C4F20002 		movt	r2, 16384
 565 019a D2F81412 		ldr	r1, [r2, #532]
 566 019e FA68     		ldr	r2, [r7, #12]
 567 01a0 0A43     		orrs	r2, r2, r1
 568 01a2 C3F81422 		str	r2, [r3, #532]
 569              	.L33:
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter activation */
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterActivation == ENABLE)
 570              		.loc 1 406 0
 571 01a6 7B68     		ldr	r3, [r7, #4]
 572 01a8 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 573 01aa 012B     		cmp	r3, #1
 574 01ac 0DD1     		bne	.L34
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FA1R |= filter_number_bit_pos;
 575              		.loc 1 408 0
 576 01ae 4FF4C843 		mov	r3, #25600
 577 01b2 C4F20003 		movt	r3, 16384
 578 01b6 4FF4C842 		mov	r2, #25600
 579 01ba C4F20002 		movt	r2, 16384
 580 01be D2F81C12 		ldr	r1, [r2, #540]
 581 01c2 FA68     		ldr	r2, [r7, #12]
 582 01c4 0A43     		orrs	r2, r2, r1
 583 01c6 C3F81C22 		str	r2, [r3, #540]
 584              	.L34:
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Leave the initialisation mode for the filter */
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= ~FMR_FINIT;
 585              		.loc 1 412 0
 586 01ca 4FF4C843 		mov	r3, #25600
 587 01ce C4F20003 		movt	r3, 16384
 588 01d2 4FF4C842 		mov	r2, #25600
 589 01d6 C4F20002 		movt	r2, 16384
 590 01da D2F80022 		ldr	r2, [r2, #512]
 591 01de 22F00102 		bic	r2, r2, #1
 592 01e2 C3F80022 		str	r2, [r3, #512]
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 593              		.loc 1 413 0
 594 01e6 1437     		adds	r7, r7, #20
 595 01e8 BD46     		mov	sp, r7
 596              		@ sp needed
 597 01ea 5DF8047B 		ldr	r7, [sp], #4
 598 01ee 7047     		bx	lr
 599              		.cfi_endproc
 600              	.LFE112:
 602              		.section	.text.CAN_StructInit,"ax",%progbits
 603              		.align	2
 604              		.global	CAN_StructInit
 605              		.thumb
 606              		.thumb_func
 608              	CAN_StructInit:
 609              	.LFB113:
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Fills each CAN_InitStruct member with its default value.
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure which ill be initialized.
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_StructInit(CAN_InitTypeDef* CAN_InitStruct)
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 610              		.loc 1 421 0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 8
 613              		@ frame_needed = 1, uses_anonymous_args = 0
 614              		@ link register save eliminated.
 615 0000 80B4     		push	{r7}
 616              	.LCFI9:
 617              		.cfi_def_cfa_offset 4
 618              		.cfi_offset 7, -4
 619 0002 83B0     		sub	sp, sp, #12
 620              	.LCFI10:
 621              		.cfi_def_cfa_offset 16
 622 0004 00AF     		add	r7, sp, #0
 623              	.LCFI11:
 624              		.cfi_def_cfa_register 7
 625 0006 7860     		str	r0, [r7, #4]
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Reset CAN init structure parameters values */
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the time triggered communication mode */
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_TTCM = DISABLE;
 626              		.loc 1 425 0
 627 0008 7B68     		ldr	r3, [r7, #4]
 628 000a 0022     		movs	r2, #0
 629 000c 9A71     		strb	r2, [r3, #6]
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the automatic bus-off management */
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_ABOM = DISABLE;
 630              		.loc 1 428 0
 631 000e 7B68     		ldr	r3, [r7, #4]
 632 0010 0022     		movs	r2, #0
 633 0012 DA71     		strb	r2, [r3, #7]
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the automatic wake-up mode */
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_AWUM = DISABLE;
 634              		.loc 1 431 0
 635 0014 7B68     		ldr	r3, [r7, #4]
 636 0016 0022     		movs	r2, #0
 637 0018 1A72     		strb	r2, [r3, #8]
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the no automatic retransmission */
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_NART = DISABLE;
 638              		.loc 1 434 0
 639 001a 7B68     		ldr	r3, [r7, #4]
 640 001c 0022     		movs	r2, #0
 641 001e 5A72     		strb	r2, [r3, #9]
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the receive FIFO locked mode */
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_RFLM = DISABLE;
 642              		.loc 1 437 0
 643 0020 7B68     		ldr	r3, [r7, #4]
 644 0022 0022     		movs	r2, #0
 645 0024 9A72     		strb	r2, [r3, #10]
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the transmit FIFO priority */
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_TXFP = DISABLE;
 646              		.loc 1 440 0
 647 0026 7B68     		ldr	r3, [r7, #4]
 648 0028 0022     		movs	r2, #0
 649 002a DA72     		strb	r2, [r3, #11]
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_Mode member */
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_Mode = CAN_Mode_Normal;
 650              		.loc 1 443 0
 651 002c 7B68     		ldr	r3, [r7, #4]
 652 002e 0022     		movs	r2, #0
 653 0030 9A70     		strb	r2, [r3, #2]
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_SJW member */
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_SJW = CAN_SJW_1tq;
 654              		.loc 1 446 0
 655 0032 7B68     		ldr	r3, [r7, #4]
 656 0034 0022     		movs	r2, #0
 657 0036 DA70     		strb	r2, [r3, #3]
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_BS1 member */
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_BS1 = CAN_BS1_4tq;
 658              		.loc 1 449 0
 659 0038 7B68     		ldr	r3, [r7, #4]
 660 003a 0322     		movs	r2, #3
 661 003c 1A71     		strb	r2, [r3, #4]
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_BS2 member */
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_BS2 = CAN_BS2_3tq;
 662              		.loc 1 452 0
 663 003e 7B68     		ldr	r3, [r7, #4]
 664 0040 0222     		movs	r2, #2
 665 0042 5A71     		strb	r2, [r3, #5]
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_Prescaler member */
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_Prescaler = 1;
 666              		.loc 1 455 0
 667 0044 7B68     		ldr	r3, [r7, #4]
 668 0046 0122     		movs	r2, #1
 669 0048 1A80     		strh	r2, [r3]	@ movhi
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 670              		.loc 1 456 0
 671 004a 0C37     		adds	r7, r7, #12
 672 004c BD46     		mov	sp, r7
 673              		@ sp needed
 674 004e 5DF8047B 		ldr	r7, [sp], #4
 675 0052 7047     		bx	lr
 676              		.cfi_endproc
 677              	.LFE113:
 679              		.section	.text.CAN_SlaveStartBank,"ax",%progbits
 680              		.align	2
 681              		.global	CAN_SlaveStartBank
 682              		.thumb
 683              		.thumb_func
 685              	CAN_SlaveStartBank:
 686              	.LFB114:
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Select the start bank filter for slave CAN.
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_BankNumber: Select the start slave bank filter from 1..27.
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_SlaveStartBank(uint8_t CAN_BankNumber) 
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 687              		.loc 1 464 0
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 8
 690              		@ frame_needed = 1, uses_anonymous_args = 0
 691              		@ link register save eliminated.
 692 0000 80B4     		push	{r7}
 693              	.LCFI12:
 694              		.cfi_def_cfa_offset 4
 695              		.cfi_offset 7, -4
 696 0002 83B0     		sub	sp, sp, #12
 697              	.LCFI13:
 698              		.cfi_def_cfa_offset 16
 699 0004 00AF     		add	r7, sp, #0
 700              	.LCFI14:
 701              		.cfi_def_cfa_register 7
 702 0006 0346     		mov	r3, r0
 703 0008 FB71     		strb	r3, [r7, #7]
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BANKNUMBER(CAN_BankNumber));
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Enter Initialisation mode for the filter */
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= FMR_FINIT;
 704              		.loc 1 469 0
 705 000a 4FF4C843 		mov	r3, #25600
 706 000e C4F20003 		movt	r3, 16384
 707 0012 4FF4C842 		mov	r2, #25600
 708 0016 C4F20002 		movt	r2, 16384
 709 001a D2F80022 		ldr	r2, [r2, #512]
 710 001e 42F00102 		orr	r2, r2, #1
 711 0022 C3F80022 		str	r2, [r3, #512]
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Select the start slave bank */
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= (uint32_t)0xFFFFC0F1 ;
 712              		.loc 1 472 0
 713 0026 4FF4C843 		mov	r3, #25600
 714 002a C4F20003 		movt	r3, 16384
 715 002e 4FF4C842 		mov	r2, #25600
 716 0032 C4F20002 		movt	r2, 16384
 717 0036 D2F80022 		ldr	r2, [r2, #512]
 718 003a 22F47C52 		bic	r2, r2, #16128
 719 003e 22F00E02 		bic	r2, r2, #14
 720 0042 C3F80022 		str	r2, [r3, #512]
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= (uint32_t)(CAN_BankNumber)<<8;
 721              		.loc 1 473 0
 722 0046 4FF4C843 		mov	r3, #25600
 723 004a C4F20003 		movt	r3, 16384
 724 004e 4FF4C842 		mov	r2, #25600
 725 0052 C4F20002 		movt	r2, 16384
 726 0056 D2F80012 		ldr	r1, [r2, #512]
 727 005a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 728 005c 1202     		lsls	r2, r2, #8
 729 005e 0A43     		orrs	r2, r2, r1
 730 0060 C3F80022 		str	r2, [r3, #512]
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Leave Initialisation mode for the filter */
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= ~FMR_FINIT;
 731              		.loc 1 476 0
 732 0064 4FF4C843 		mov	r3, #25600
 733 0068 C4F20003 		movt	r3, 16384
 734 006c 4FF4C842 		mov	r2, #25600
 735 0070 C4F20002 		movt	r2, 16384
 736 0074 D2F80022 		ldr	r2, [r2, #512]
 737 0078 22F00102 		bic	r2, r2, #1
 738 007c C3F80022 		str	r2, [r3, #512]
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 739              		.loc 1 477 0
 740 0080 0C37     		adds	r7, r7, #12
 741 0082 BD46     		mov	sp, r7
 742              		@ sp needed
 743 0084 5DF8047B 		ldr	r7, [sp], #4
 744 0088 7047     		bx	lr
 745              		.cfi_endproc
 746              	.LFE114:
 748 008a 00BF     		.section	.text.CAN_DBGFreeze,"ax",%progbits
 749              		.align	2
 750              		.global	CAN_DBGFreeze
 751              		.thumb
 752              		.thumb_func
 754              	CAN_DBGFreeze:
 755              	.LFB115:
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the DBG Freeze for CAN.
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: new state of the CAN peripheral. 
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: ENABLE (CAN reception/transmission is frozen
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          during debug. Reception FIFOs can still be accessed/controlled normally) 
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          or DISABLE (CAN is working during debug).
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_DBGFreeze(CAN_TypeDef* CANx, FunctionalState NewState)
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 756              		.loc 1 489 0
 757              		.cfi_startproc
 758              		@ args = 0, pretend = 0, frame = 8
 759              		@ frame_needed = 1, uses_anonymous_args = 0
 760              		@ link register save eliminated.
 761 0000 80B4     		push	{r7}
 762              	.LCFI15:
 763              		.cfi_def_cfa_offset 4
 764              		.cfi_offset 7, -4
 765 0002 83B0     		sub	sp, sp, #12
 766              	.LCFI16:
 767              		.cfi_def_cfa_offset 16
 768 0004 00AF     		add	r7, sp, #0
 769              	.LCFI17:
 770              		.cfi_def_cfa_register 7
 771 0006 7860     		str	r0, [r7, #4]
 772 0008 0B46     		mov	r3, r1
 773 000a FB70     		strb	r3, [r7, #3]
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 774              		.loc 1 494 0
 775 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 776 000e 002B     		cmp	r3, #0
 777 0010 06D0     		beq	.L38
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable Debug Freeze  */
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR |= MCR_DBF;
 778              		.loc 1 497 0
 779 0012 7B68     		ldr	r3, [r7, #4]
 780 0014 1B68     		ldr	r3, [r3]
 781 0016 43F48032 		orr	r2, r3, #65536
 782 001a 7B68     		ldr	r3, [r7, #4]
 783 001c 1A60     		str	r2, [r3]
 784 001e 05E0     		b	.L37
 785              	.L38:
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable Debug Freeze */
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= ~MCR_DBF;
 786              		.loc 1 502 0
 787 0020 7B68     		ldr	r3, [r7, #4]
 788 0022 1B68     		ldr	r3, [r3]
 789 0024 23F48032 		bic	r2, r3, #65536
 790 0028 7B68     		ldr	r3, [r7, #4]
 791 002a 1A60     		str	r2, [r3]
 792              	.L37:
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 793              		.loc 1 504 0
 794 002c 0C37     		adds	r7, r7, #12
 795 002e BD46     		mov	sp, r7
 796              		@ sp needed
 797 0030 5DF8047B 		ldr	r7, [sp], #4
 798 0034 7047     		bx	lr
 799              		.cfi_endproc
 800              	.LFE115:
 802 0036 00BF     		.section	.text.CAN_TTComModeCmd,"ax",%progbits
 803              		.align	2
 804              		.global	CAN_TTComModeCmd
 805              		.thumb
 806              		.thumb_func
 808              	CAN_TTComModeCmd:
 809              	.LFB116:
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the CAN Time TriggerOperation communication mode.
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @note   DLC must be programmed as 8 in order Time Stamp (2 bytes) to be 
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         sent over the CAN bus.  
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: Mode new state. This parameter can be: ENABLE or DISABLE.
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         When enabled, Time stamp (TIME[15:0]) value is  sent in the last two
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         data bytes of the 8-byte message: TIME[7:0] in data byte 6 and TIME[15:8] 
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         in data byte 7. 
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_TTComModeCmd(CAN_TypeDef* CANx, FunctionalState NewState)
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 810              		.loc 1 519 0
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 8
 813              		@ frame_needed = 1, uses_anonymous_args = 0
 814              		@ link register save eliminated.
 815 0000 80B4     		push	{r7}
 816              	.LCFI18:
 817              		.cfi_def_cfa_offset 4
 818              		.cfi_offset 7, -4
 819 0002 83B0     		sub	sp, sp, #12
 820              	.LCFI19:
 821              		.cfi_def_cfa_offset 16
 822 0004 00AF     		add	r7, sp, #0
 823              	.LCFI20:
 824              		.cfi_def_cfa_register 7
 825 0006 7860     		str	r0, [r7, #4]
 826 0008 0B46     		mov	r3, r1
 827 000a FB70     		strb	r3, [r7, #3]
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 828              		.loc 1 523 0
 829 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 830 000e 002B     		cmp	r3, #0
 831 0010 1ED0     		beq	.L41
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable the TTCM mode */
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR |= CAN_MCR_TTCM;
 832              		.loc 1 526 0
 833 0012 7B68     		ldr	r3, [r7, #4]
 834 0014 1B68     		ldr	r3, [r3]
 835 0016 43F08002 		orr	r2, r3, #128
 836 001a 7B68     		ldr	r3, [r7, #4]
 837 001c 1A60     		str	r2, [r3]
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set TGT bits */
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[0].TDTR |= ((uint32_t)CAN_TDT0R_TGT);
 838              		.loc 1 529 0
 839 001e 7B68     		ldr	r3, [r7, #4]
 840 0020 D3F88431 		ldr	r3, [r3, #388]
 841 0024 43F48072 		orr	r2, r3, #256
 842 0028 7B68     		ldr	r3, [r7, #4]
 843 002a C3F88421 		str	r2, [r3, #388]
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR |= ((uint32_t)CAN_TDT1R_TGT);
 844              		.loc 1 530 0
 845 002e 7B68     		ldr	r3, [r7, #4]
 846 0030 D3F89431 		ldr	r3, [r3, #404]
 847 0034 43F48072 		orr	r2, r3, #256
 848 0038 7B68     		ldr	r3, [r7, #4]
 849 003a C3F89421 		str	r2, [r3, #404]
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR |= ((uint32_t)CAN_TDT2R_TGT);
 850              		.loc 1 531 0
 851 003e 7B68     		ldr	r3, [r7, #4]
 852 0040 D3F8A431 		ldr	r3, [r3, #420]
 853 0044 43F48072 		orr	r2, r3, #256
 854 0048 7B68     		ldr	r3, [r7, #4]
 855 004a C3F8A421 		str	r2, [r3, #420]
 856 004e 1DE0     		b	.L40
 857              	.L41:
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable the TTCM mode */
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= (uint32_t)(~(uint32_t)CAN_MCR_TTCM);
 858              		.loc 1 536 0
 859 0050 7B68     		ldr	r3, [r7, #4]
 860 0052 1B68     		ldr	r3, [r3]
 861 0054 23F08002 		bic	r2, r3, #128
 862 0058 7B68     		ldr	r3, [r7, #4]
 863 005a 1A60     		str	r2, [r3]
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Reset TGT bits */
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[0].TDTR &= ((uint32_t)~CAN_TDT0R_TGT);
 864              		.loc 1 539 0
 865 005c 7B68     		ldr	r3, [r7, #4]
 866 005e D3F88431 		ldr	r3, [r3, #388]
 867 0062 23F48072 		bic	r2, r3, #256
 868 0066 7B68     		ldr	r3, [r7, #4]
 869 0068 C3F88421 		str	r2, [r3, #388]
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR &= ((uint32_t)~CAN_TDT1R_TGT);
 870              		.loc 1 540 0
 871 006c 7B68     		ldr	r3, [r7, #4]
 872 006e D3F89431 		ldr	r3, [r3, #404]
 873 0072 23F48072 		bic	r2, r3, #256
 874 0076 7B68     		ldr	r3, [r7, #4]
 875 0078 C3F89421 		str	r2, [r3, #404]
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR &= ((uint32_t)~CAN_TDT2R_TGT);
 876              		.loc 1 541 0
 877 007c 7B68     		ldr	r3, [r7, #4]
 878 007e D3F8A431 		ldr	r3, [r3, #420]
 879 0082 23F48072 		bic	r2, r3, #256
 880 0086 7B68     		ldr	r3, [r7, #4]
 881 0088 C3F8A421 		str	r2, [r3, #420]
 882              	.L40:
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 883              		.loc 1 543 0
 884 008c 0C37     		adds	r7, r7, #12
 885 008e BD46     		mov	sp, r7
 886              		@ sp needed
 887 0090 5DF8047B 		ldr	r7, [sp], #4
 888 0094 7047     		bx	lr
 889              		.cfi_endproc
 890              	.LFE116:
 892 0096 00BF     		.section	.text.CAN_Transmit,"ax",%progbits
 893              		.align	2
 894              		.global	CAN_Transmit
 895              		.thumb
 896              		.thumb_func
 898              	CAN_Transmit:
 899              	.LFB117:
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group2 CAN Frames Transmission functions
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Frames Transmission functions 
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Frames Transmission functions
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Initiate and transmit a CAN frame message (if there is an empty mailbox).
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Check the transmission status of a CAN Frame
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Cancel a transmit request
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Initiates and transmits a CAN frame message.
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  TxMessage: pointer to a structure which contains CAN Id, CAN DLC and CAN data.
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The number of the mailbox that is used for transmission or
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_TxStatus_NoMailBox if there is no empty mailbox.
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Transmit(CAN_TypeDef* CANx, CanTxMsg* TxMessage)
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 900              		.loc 1 573 0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 16
 903              		@ frame_needed = 1, uses_anonymous_args = 0
 904              		@ link register save eliminated.
 905 0000 80B4     		push	{r7}
 906              	.LCFI21:
 907              		.cfi_def_cfa_offset 4
 908              		.cfi_offset 7, -4
 909 0002 85B0     		sub	sp, sp, #20
 910              	.LCFI22:
 911              		.cfi_def_cfa_offset 24
 912 0004 00AF     		add	r7, sp, #0
 913              	.LCFI23:
 914              		.cfi_def_cfa_register 7
 915 0006 7860     		str	r0, [r7, #4]
 916 0008 3960     		str	r1, [r7]
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t transmit_mailbox = 0;
 917              		.loc 1 574 0
 918 000a 0023     		movs	r3, #0
 919 000c FB73     		strb	r3, [r7, #15]
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IDTYPE(TxMessage->IDE));
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_RTR(TxMessage->RTR));
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_DLC(TxMessage->DLC));
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Select one empty transmit mailbox */
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->TSR&CAN_TSR_TME0) == CAN_TSR_TME0)
 920              		.loc 1 582 0
 921 000e 7B68     		ldr	r3, [r7, #4]
 922 0010 9B68     		ldr	r3, [r3, #8]
 923 0012 03F08063 		and	r3, r3, #67108864
 924 0016 002B     		cmp	r3, #0
 925 0018 02D0     		beq	.L44
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 0;
 926              		.loc 1 584 0
 927 001a 0023     		movs	r3, #0
 928 001c FB73     		strb	r3, [r7, #15]
 929 001e 13E0     		b	.L45
 930              	.L44:
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME1) == CAN_TSR_TME1)
 931              		.loc 1 586 0
 932 0020 7B68     		ldr	r3, [r7, #4]
 933 0022 9B68     		ldr	r3, [r3, #8]
 934 0024 03F00063 		and	r3, r3, #134217728
 935 0028 002B     		cmp	r3, #0
 936 002a 02D0     		beq	.L46
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 1;
 937              		.loc 1 588 0
 938 002c 0123     		movs	r3, #1
 939 002e FB73     		strb	r3, [r7, #15]
 940 0030 0AE0     		b	.L45
 941              	.L46:
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME2) == CAN_TSR_TME2)
 942              		.loc 1 590 0
 943 0032 7B68     		ldr	r3, [r7, #4]
 944 0034 9B68     		ldr	r3, [r3, #8]
 945 0036 03F08053 		and	r3, r3, #268435456
 946 003a 002B     		cmp	r3, #0
 947 003c 02D0     		beq	.L47
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 2;
 948              		.loc 1 592 0
 949 003e 0223     		movs	r3, #2
 950 0040 FB73     		strb	r3, [r7, #15]
 951 0042 01E0     		b	.L45
 952              	.L47:
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = CAN_TxStatus_NoMailBox;
 953              		.loc 1 596 0
 954 0044 0423     		movs	r3, #4
 955 0046 FB73     		strb	r3, [r7, #15]
 956              	.L45:
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (transmit_mailbox != CAN_TxStatus_NoMailBox)
 957              		.loc 1 599 0
 958 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 959 004a 042B     		cmp	r3, #4
 960 004c 00F09880 		beq	.L48
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the Id */
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR &= TMIDxR_TXRQ;
 961              		.loc 1 602 0
 962 0050 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 963 0052 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 964 0054 7968     		ldr	r1, [r7, #4]
 965 0056 1832     		adds	r2, r2, #24
 966 0058 1201     		lsls	r2, r2, #4
 967 005a 0A44     		add	r2, r2, r1
 968 005c 1268     		ldr	r2, [r2]
 969 005e 02F00102 		and	r2, r2, #1
 970 0062 7968     		ldr	r1, [r7, #4]
 971 0064 1833     		adds	r3, r3, #24
 972 0066 1B01     		lsls	r3, r3, #4
 973 0068 0B44     		add	r3, r3, r1
 974 006a 1A60     		str	r2, [r3]
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (TxMessage->IDE == CAN_Id_Standard)
 975              		.loc 1 603 0
 976 006c 3B68     		ldr	r3, [r7]
 977 006e 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 978 0070 002B     		cmp	r3, #0
 979 0072 13D1     		bne	.L49
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       assert_param(IS_CAN_STDID(TxMessage->StdId));  
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->StdId << 21) | \
 980              		.loc 1 606 0
 981 0074 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 982 0076 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 983 0078 7968     		ldr	r1, [r7, #4]
 984 007a 1832     		adds	r2, r2, #24
 985 007c 1201     		lsls	r2, r2, #4
 986 007e 0A44     		add	r2, r2, r1
 987 0080 1168     		ldr	r1, [r2]
 988 0082 3A68     		ldr	r2, [r7]
 989 0084 1268     		ldr	r2, [r2]
 990 0086 5005     		lsls	r0, r2, #21
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 991              		.loc 1 607 0
 992 0088 3A68     		ldr	r2, [r7]
 993 008a 527A     		ldrb	r2, [r2, #9]	@ zero_extendqisi2
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 994              		.loc 1 606 0
 995 008c 0243     		orrs	r2, r2, r0
 996 008e 0A43     		orrs	r2, r2, r1
 997 0090 7968     		ldr	r1, [r7, #4]
 998 0092 1833     		adds	r3, r3, #24
 999 0094 1B01     		lsls	r3, r3, #4
 1000 0096 0B44     		add	r3, r3, r1
 1001 0098 1A60     		str	r2, [r3]
 1002 009a 15E0     		b	.L50
 1003              	.L49:
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       assert_param(IS_CAN_EXTID(TxMessage->ExtId));
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 1004              		.loc 1 612 0
 1005 009c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1006 009e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1007 00a0 7968     		ldr	r1, [r7, #4]
 1008 00a2 1832     		adds	r2, r2, #24
 1009 00a4 1201     		lsls	r2, r2, #4
 1010 00a6 0A44     		add	r2, r2, r1
 1011 00a8 1168     		ldr	r1, [r2]
 1012 00aa 3A68     		ldr	r2, [r7]
 1013 00ac 5268     		ldr	r2, [r2, #4]
 1014 00ae D000     		lsls	r0, r2, #3
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 1015              		.loc 1 613 0
 1016 00b0 3A68     		ldr	r2, [r7]
 1017 00b2 127A     		ldrb	r2, [r2, #8]	@ zero_extendqisi2
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 1018              		.loc 1 612 0
 1019 00b4 1043     		orrs	r0, r0, r2
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 1020              		.loc 1 614 0
 1021 00b6 3A68     		ldr	r2, [r7]
 1022 00b8 527A     		ldrb	r2, [r2, #9]	@ zero_extendqisi2
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 1023              		.loc 1 613 0
 1024 00ba 0243     		orrs	r2, r2, r0
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 1025              		.loc 1 612 0
 1026 00bc 0A43     		orrs	r2, r2, r1
 1027 00be 7968     		ldr	r1, [r7, #4]
 1028 00c0 1833     		adds	r3, r3, #24
 1029 00c2 1B01     		lsls	r3, r3, #4
 1030 00c4 0B44     		add	r3, r3, r1
 1031 00c6 1A60     		str	r2, [r3]
 1032              	.L50:
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the DLC */
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     TxMessage->DLC &= (uint8_t)0x0000000F;
 1033              		.loc 1 618 0
 1034 00c8 3B68     		ldr	r3, [r7]
 1035 00ca 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1036 00cc 03F00F03 		and	r3, r3, #15
 1037 00d0 DAB2     		uxtb	r2, r3
 1038 00d2 3B68     		ldr	r3, [r7]
 1039 00d4 9A72     		strb	r2, [r3, #10]
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR &= (uint32_t)0xFFFFFFF0;
 1040              		.loc 1 619 0
 1041 00d6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1042 00d8 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1043 00da 7968     		ldr	r1, [r7, #4]
 1044 00dc 1832     		adds	r2, r2, #24
 1045 00de 1201     		lsls	r2, r2, #4
 1046 00e0 0A44     		add	r2, r2, r1
 1047 00e2 5268     		ldr	r2, [r2, #4]
 1048 00e4 22F00F02 		bic	r2, r2, #15
 1049 00e8 7968     		ldr	r1, [r7, #4]
 1050 00ea 1833     		adds	r3, r3, #24
 1051 00ec 1B01     		lsls	r3, r3, #4
 1052 00ee 0B44     		add	r3, r3, r1
 1053 00f0 5A60     		str	r2, [r3, #4]
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR |= TxMessage->DLC;
 1054              		.loc 1 620 0
 1055 00f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1056 00f4 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1057 00f6 7968     		ldr	r1, [r7, #4]
 1058 00f8 1832     		adds	r2, r2, #24
 1059 00fa 1201     		lsls	r2, r2, #4
 1060 00fc 0A44     		add	r2, r2, r1
 1061 00fe 5168     		ldr	r1, [r2, #4]
 1062 0100 3A68     		ldr	r2, [r7]
 1063 0102 927A     		ldrb	r2, [r2, #10]	@ zero_extendqisi2
 1064 0104 0A43     		orrs	r2, r2, r1
 1065 0106 7968     		ldr	r1, [r7, #4]
 1066 0108 1833     		adds	r3, r3, #24
 1067 010a 1B01     		lsls	r3, r3, #4
 1068 010c 0B44     		add	r3, r3, r1
 1069 010e 5A60     		str	r2, [r3, #4]
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the data field */
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 1070              		.loc 1 623 0
 1071 0110 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1072 0112 3A68     		ldr	r2, [r7]
 1073 0114 927B     		ldrb	r2, [r2, #14]	@ zero_extendqisi2
 1074 0116 1106     		lsls	r1, r2, #24
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 1075              		.loc 1 624 0
 1076 0118 3A68     		ldr	r2, [r7]
 1077 011a 527B     		ldrb	r2, [r2, #13]	@ zero_extendqisi2
 1078 011c 1204     		lsls	r2, r2, #16
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 1079              		.loc 1 623 0
 1080 011e 1143     		orrs	r1, r1, r2
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 1081              		.loc 1 625 0
 1082 0120 3A68     		ldr	r2, [r7]
 1083 0122 127B     		ldrb	r2, [r2, #12]	@ zero_extendqisi2
 1084 0124 1202     		lsls	r2, r2, #8
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 1085              		.loc 1 624 0
 1086 0126 1143     		orrs	r1, r1, r2
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[0]));
 1087              		.loc 1 626 0
 1088 0128 3A68     		ldr	r2, [r7]
 1089 012a D27A     		ldrb	r2, [r2, #11]	@ zero_extendqisi2
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 1090              		.loc 1 625 0
 1091 012c 0A43     		orrs	r2, r2, r1
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 1092              		.loc 1 623 0
 1093 012e 7968     		ldr	r1, [r7, #4]
 1094 0130 1B01     		lsls	r3, r3, #4
 1095 0132 0B44     		add	r3, r3, r1
 1096 0134 03F5C473 		add	r3, r3, #392
 1097 0138 1A60     		str	r2, [r3]
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 1098              		.loc 1 627 0
 1099 013a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1100 013c 3A68     		ldr	r2, [r7]
 1101 013e 927C     		ldrb	r2, [r2, #18]	@ zero_extendqisi2
 1102 0140 1106     		lsls	r1, r2, #24
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 1103              		.loc 1 628 0
 1104 0142 3A68     		ldr	r2, [r7]
 1105 0144 527C     		ldrb	r2, [r2, #17]	@ zero_extendqisi2
 1106 0146 1204     		lsls	r2, r2, #16
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 1107              		.loc 1 627 0
 1108 0148 1143     		orrs	r1, r1, r2
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 1109              		.loc 1 629 0
 1110 014a 3A68     		ldr	r2, [r7]
 1111 014c 127C     		ldrb	r2, [r2, #16]	@ zero_extendqisi2
 1112 014e 1202     		lsls	r2, r2, #8
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 1113              		.loc 1 628 0
 1114 0150 1143     		orrs	r1, r1, r2
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[4]));
 1115              		.loc 1 630 0
 1116 0152 3A68     		ldr	r2, [r7]
 1117 0154 D27B     		ldrb	r2, [r2, #15]	@ zero_extendqisi2
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 1118              		.loc 1 629 0
 1119 0156 0A43     		orrs	r2, r2, r1
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 1120              		.loc 1 627 0
 1121 0158 7968     		ldr	r1, [r7, #4]
 1122 015a 1B01     		lsls	r3, r3, #4
 1123 015c 0B44     		add	r3, r3, r1
 1124 015e 03F5C473 		add	r3, r3, #392
 1125 0162 5A60     		str	r2, [r3, #4]
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request transmission */
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR |= TMIDxR_TXRQ;
 1126              		.loc 1 632 0
 1127 0164 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1128 0166 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1129 0168 7968     		ldr	r1, [r7, #4]
 1130 016a 1832     		adds	r2, r2, #24
 1131 016c 1201     		lsls	r2, r2, #4
 1132 016e 0A44     		add	r2, r2, r1
 1133 0170 1268     		ldr	r2, [r2]
 1134 0172 42F00102 		orr	r2, r2, #1
 1135 0176 7968     		ldr	r1, [r7, #4]
 1136 0178 1833     		adds	r3, r3, #24
 1137 017a 1B01     		lsls	r3, r3, #4
 1138 017c 0B44     		add	r3, r3, r1
 1139 017e 1A60     		str	r2, [r3]
 1140              	.L48:
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return transmit_mailbox;
 1141              		.loc 1 634 0
 1142 0180 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1143              		.loc 1 635 0
 1144 0182 1846     		mov	r0, r3
 1145 0184 1437     		adds	r7, r7, #20
 1146 0186 BD46     		mov	sp, r7
 1147              		@ sp needed
 1148 0188 5DF8047B 		ldr	r7, [sp], #4
 1149 018c 7047     		bx	lr
 1150              		.cfi_endproc
 1151              	.LFE117:
 1153 018e 00BF     		.section	.text.CAN_TransmitStatus,"ax",%progbits
 1154              		.align	2
 1155              		.global	CAN_TransmitStatus
 1156              		.thumb
 1157              		.thumb_func
 1159              	CAN_TransmitStatus:
 1160              	.LFB118:
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks the transmission status of a CAN Frame.
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  TransmitMailbox: the number of the mailbox that is used for transmission.
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_TxStatus_Ok if the CAN driver transmits the message, 
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_TxStatus_Failed in an other case.
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_TransmitStatus(CAN_TypeDef* CANx, uint8_t TransmitMailbox)
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1161              		.loc 1 645 0
 1162              		.cfi_startproc
 1163              		@ args = 0, pretend = 0, frame = 16
 1164              		@ frame_needed = 1, uses_anonymous_args = 0
 1165              		@ link register save eliminated.
 1166 0000 80B4     		push	{r7}
 1167              	.LCFI24:
 1168              		.cfi_def_cfa_offset 4
 1169              		.cfi_offset 7, -4
 1170 0002 85B0     		sub	sp, sp, #20
 1171              	.LCFI25:
 1172              		.cfi_def_cfa_offset 24
 1173 0004 00AF     		add	r7, sp, #0
 1174              	.LCFI26:
 1175              		.cfi_def_cfa_register 7
 1176 0006 7860     		str	r0, [r7, #4]
 1177 0008 0B46     		mov	r3, r1
 1178 000a FB70     		strb	r3, [r7, #3]
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t state = 0;
 1179              		.loc 1 646 0
 1180 000c 0023     		movs	r3, #0
 1181 000e FB60     		str	r3, [r7, #12]
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(TransmitMailbox));
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (TransmitMailbox)
 1182              		.loc 1 652 0
 1183 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1184 0012 012B     		cmp	r3, #1
 1185 0014 0BD0     		beq	.L54
 1186 0016 022B     		cmp	r3, #2
 1187 0018 12D0     		beq	.L55
 1188 001a 002B     		cmp	r3, #0
 1189 001c 18D1     		bne	.L69
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_0): 
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0);
 1190              		.loc 1 655 0
 1191 001e 7B68     		ldr	r3, [r7, #4]
 1192 0020 9A68     		ldr	r2, [r3, #8]
 1193 0022 0323     		movs	r3, #3
 1194 0024 C0F20043 		movt	r3, 1024
 1195 0028 1340     		ands	r3, r3, r2
 1196 002a FB60     		str	r3, [r7, #12]
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1197              		.loc 1 656 0
 1198 002c 13E0     		b	.L57
 1199              	.L54:
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): 
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1);
 1200              		.loc 1 658 0
 1201 002e 7B68     		ldr	r3, [r7, #4]
 1202 0030 9A68     		ldr	r2, [r3, #8]
 1203 0032 4FF44073 		mov	r3, #768
 1204 0036 C0F60003 		movt	r3, 2048
 1205 003a 1340     		ands	r3, r3, r2
 1206 003c FB60     		str	r3, [r7, #12]
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1207              		.loc 1 659 0
 1208 003e 0AE0     		b	.L57
 1209              	.L55:
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): 
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2);
 1210              		.loc 1 661 0
 1211 0040 7B68     		ldr	r3, [r7, #4]
 1212 0042 9A68     		ldr	r2, [r3, #8]
 1213 0044 0023     		movs	r3, #0
 1214 0046 C1F20303 		movt	r3, 4099
 1215 004a 1340     		ands	r3, r3, r2
 1216 004c FB60     		str	r3, [r7, #12]
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1217              		.loc 1 662 0
 1218 004e 02E0     		b	.L57
 1219              	.L69:
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state = CAN_TxStatus_Failed;
 1220              		.loc 1 664 0
 1221 0050 0023     		movs	r3, #0
 1222 0052 FB60     		str	r3, [r7, #12]
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1223              		.loc 1 665 0
 1224 0054 00BF     		nop
 1225              	.L57:
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (state)
 1226              		.loc 1 667 0
 1227 0056 FB68     		ldr	r3, [r7, #12]
 1228 0058 4FF48072 		mov	r2, #256
 1229 005c C0F60002 		movt	r2, 2048
 1230 0060 9342     		cmp	r3, r2
 1231 0062 29D0     		beq	.L59
 1232 0064 4FF48072 		mov	r2, #256
 1233 0068 C0F60002 		movt	r2, 2048
 1234 006c 9342     		cmp	r3, r2
 1235 006e 0CD8     		bhi	.L60
 1236 0070 0122     		movs	r2, #1
 1237 0072 C0F20042 		movt	r2, 1024
 1238 0076 9342     		cmp	r3, r2
 1239 0078 1BD0     		beq	.L61
 1240 007a 0322     		movs	r2, #3
 1241 007c C0F20042 		movt	r2, 1024
 1242 0080 9342     		cmp	r3, r2
 1243 0082 1FD0     		beq	.L62
 1244 0084 002B     		cmp	r3, #0
 1245 0086 11D0     		beq	.L63
 1246 0088 25E0     		b	.L58
 1247              	.L60:
 1248 008a 0022     		movs	r2, #0
 1249 008c C1F20102 		movt	r2, 4097
 1250 0090 9342     		cmp	r3, r2
 1251 0092 14D0     		beq	.L64
 1252 0094 0022     		movs	r2, #0
 1253 0096 C1F20302 		movt	r2, 4099
 1254 009a 9342     		cmp	r3, r2
 1255 009c 18D0     		beq	.L65
 1256 009e 4FF44072 		mov	r2, #768
 1257 00a2 C0F60002 		movt	r2, 2048
 1258 00a6 9342     		cmp	r3, r2
 1259 00a8 0FD0     		beq	.L66
 1260 00aa 14E0     		b	.L58
 1261              	.L63:
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit pending  */
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (0x0): state = CAN_TxStatus_Pending;
 1262              		.loc 1 670 0
 1263 00ac 0223     		movs	r3, #2
 1264 00ae FB60     		str	r3, [r7, #12]
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1265              		.loc 1 671 0
 1266 00b0 14E0     		b	.L67
 1267              	.L61:
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit failed  */
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP0 | CAN_TSR_TME0): state = CAN_TxStatus_Failed;
 1268              		.loc 1 673 0
 1269 00b2 0023     		movs	r3, #0
 1270 00b4 FB60     		str	r3, [r7, #12]
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1271              		.loc 1 674 0
 1272 00b6 11E0     		b	.L67
 1273              	.L59:
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP1 | CAN_TSR_TME1): state = CAN_TxStatus_Failed;
 1274              		.loc 1 675 0
 1275 00b8 0023     		movs	r3, #0
 1276 00ba FB60     		str	r3, [r7, #12]
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1277              		.loc 1 676 0
 1278 00bc 0EE0     		b	.L67
 1279              	.L64:
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP2 | CAN_TSR_TME2): state = CAN_TxStatus_Failed;
 1280              		.loc 1 677 0
 1281 00be 0023     		movs	r3, #0
 1282 00c0 FB60     		str	r3, [r7, #12]
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1283              		.loc 1 678 0
 1284 00c2 0BE0     		b	.L67
 1285              	.L62:
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit succeeded  */
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0):state = CAN_TxStatus_Ok;
 1286              		.loc 1 680 0
 1287 00c4 0123     		movs	r3, #1
 1288 00c6 FB60     		str	r3, [r7, #12]
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1289              		.loc 1 681 0
 1290 00c8 08E0     		b	.L67
 1291              	.L66:
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1):state = CAN_TxStatus_Ok;
 1292              		.loc 1 682 0
 1293 00ca 0123     		movs	r3, #1
 1294 00cc FB60     		str	r3, [r7, #12]
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1295              		.loc 1 683 0
 1296 00ce 05E0     		b	.L67
 1297              	.L65:
 684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2):state = CAN_TxStatus_Ok;
 1298              		.loc 1 684 0
 1299 00d0 0123     		movs	r3, #1
 1300 00d2 FB60     		str	r3, [r7, #12]
 685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1301              		.loc 1 685 0
 1302 00d4 02E0     		b	.L67
 1303              	.L58:
 686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default: state = CAN_TxStatus_Failed;
 1304              		.loc 1 686 0
 1305 00d6 0023     		movs	r3, #0
 1306 00d8 FB60     		str	r3, [r7, #12]
 687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1307              		.loc 1 687 0
 1308 00da 00BF     		nop
 1309              	.L67:
 688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return (uint8_t) state;
 1310              		.loc 1 689 0
 1311 00dc FB68     		ldr	r3, [r7, #12]
 1312 00de DBB2     		uxtb	r3, r3
 690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1313              		.loc 1 690 0
 1314 00e0 1846     		mov	r0, r3
 1315 00e2 1437     		adds	r7, r7, #20
 1316 00e4 BD46     		mov	sp, r7
 1317              		@ sp needed
 1318 00e6 5DF8047B 		ldr	r7, [sp], #4
 1319 00ea 7047     		bx	lr
 1320              		.cfi_endproc
 1321              	.LFE118:
 1323              		.section	.text.CAN_CancelTransmit,"ax",%progbits
 1324              		.align	2
 1325              		.global	CAN_CancelTransmit
 1326              		.thumb
 1327              		.thumb_func
 1329              	CAN_CancelTransmit:
 1330              	.LFB119:
 691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Cancels a transmit request.
 694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  Mailbox: Mailbox number.
 696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_CancelTransmit(CAN_TypeDef* CANx, uint8_t Mailbox)
 699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1331              		.loc 1 699 0
 1332              		.cfi_startproc
 1333              		@ args = 0, pretend = 0, frame = 8
 1334              		@ frame_needed = 1, uses_anonymous_args = 0
 1335              		@ link register save eliminated.
 1336 0000 80B4     		push	{r7}
 1337              	.LCFI27:
 1338              		.cfi_def_cfa_offset 4
 1339              		.cfi_offset 7, -4
 1340 0002 83B0     		sub	sp, sp, #12
 1341              	.LCFI28:
 1342              		.cfi_def_cfa_offset 16
 1343 0004 00AF     		add	r7, sp, #0
 1344              	.LCFI29:
 1345              		.cfi_def_cfa_register 7
 1346 0006 7860     		str	r0, [r7, #4]
 1347 0008 0B46     		mov	r3, r1
 1348 000a FB70     		strb	r3, [r7, #3]
 700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(Mailbox));
 703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* abort transmission */
 704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (Mailbox)
 1349              		.loc 1 704 0
 1350 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1351 000e 012B     		cmp	r3, #1
 1352 0010 0BD0     		beq	.L72
 1353 0012 022B     		cmp	r3, #2
 1354 0014 10D0     		beq	.L73
 1355 0016 002B     		cmp	r3, #0
 1356 0018 00D0     		beq	.L74
 705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_0): CANx->TSR |= CAN_TSR_ABRQ0;
 707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): CANx->TSR |= CAN_TSR_ABRQ1;
 709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): CANx->TSR |= CAN_TSR_ABRQ2;
 711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
 713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1357              		.loc 1 713 0
 1358 001a 14E0     		b	.L70
 1359              	.L74:
 706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1360              		.loc 1 706 0
 1361 001c 7B68     		ldr	r3, [r7, #4]
 1362 001e 9B68     		ldr	r3, [r3, #8]
 1363 0020 43F08002 		orr	r2, r3, #128
 1364 0024 7B68     		ldr	r3, [r7, #4]
 1365 0026 9A60     		str	r2, [r3, #8]
 707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): CANx->TSR |= CAN_TSR_ABRQ1;
 1366              		.loc 1 707 0
 1367 0028 0DE0     		b	.L70
 1368              	.L72:
 708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1369              		.loc 1 708 0
 1370 002a 7B68     		ldr	r3, [r7, #4]
 1371 002c 9B68     		ldr	r3, [r3, #8]
 1372 002e 43F40042 		orr	r2, r3, #32768
 1373 0032 7B68     		ldr	r3, [r7, #4]
 1374 0034 9A60     		str	r2, [r3, #8]
 709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): CANx->TSR |= CAN_TSR_ABRQ2;
 1375              		.loc 1 709 0
 1376 0036 06E0     		b	.L70
 1377              	.L73:
 710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1378              		.loc 1 710 0
 1379 0038 7B68     		ldr	r3, [r7, #4]
 1380 003a 9B68     		ldr	r3, [r3, #8]
 1381 003c 43F40002 		orr	r2, r3, #8388608
 1382 0040 7B68     		ldr	r3, [r7, #4]
 1383 0042 9A60     		str	r2, [r3, #8]
 711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
 1384              		.loc 1 711 0
 1385 0044 00BF     		nop
 1386              	.L70:
 714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1387              		.loc 1 715 0
 1388 0046 0C37     		adds	r7, r7, #12
 1389 0048 BD46     		mov	sp, r7
 1390              		@ sp needed
 1391 004a 5DF8047B 		ldr	r7, [sp], #4
 1392 004e 7047     		bx	lr
 1393              		.cfi_endproc
 1394              	.LFE119:
 1396              		.section	.text.CAN_Receive,"ax",%progbits
 1397              		.align	2
 1398              		.global	CAN_Receive
 1399              		.thumb
 1400              		.thumb_func
 1402              	CAN_Receive:
 1403              	.LFB120:
 716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group3 CAN Frames Reception functions
 722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Frames Reception functions 
 723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Frames Reception functions
 727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Receive a correct CAN frame
 730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Release a specified receive FIFO (2 FIFOs are available)
 731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the number of the pending received CAN frames
 732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Receives a correct CAN frame.
 739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: Receive FIFO number, CAN_FIFO0 or CAN_FIFO1.
 741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  RxMessage: pointer to a structure receive frame which contains CAN Id,
 742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN DLC, CAN data and FMI number.
 743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_Receive(CAN_TypeDef* CANx, uint8_t FIFONumber, CanRxMsg* RxMessage)
 746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1404              		.loc 1 746 0
 1405              		.cfi_startproc
 1406              		@ args = 0, pretend = 0, frame = 16
 1407              		@ frame_needed = 1, uses_anonymous_args = 0
 1408              		@ link register save eliminated.
 1409 0000 80B4     		push	{r7}
 1410              	.LCFI30:
 1411              		.cfi_def_cfa_offset 4
 1412              		.cfi_offset 7, -4
 1413 0002 85B0     		sub	sp, sp, #20
 1414              	.LCFI31:
 1415              		.cfi_def_cfa_offset 24
 1416 0004 00AF     		add	r7, sp, #0
 1417              	.LCFI32:
 1418              		.cfi_def_cfa_register 7
 1419 0006 F860     		str	r0, [r7, #12]
 1420 0008 0B46     		mov	r3, r1
 1421 000a 7A60     		str	r2, [r7, #4]
 1422 000c FB72     		strb	r3, [r7, #11]
 747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the Id */
 751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->IDE = (uint8_t)0x04 & CANx->sFIFOMailBox[FIFONumber].RIR;
 1423              		.loc 1 751 0
 1424 000e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1425 0010 FA68     		ldr	r2, [r7, #12]
 1426 0012 1B33     		adds	r3, r3, #27
 1427 0014 1B01     		lsls	r3, r3, #4
 1428 0016 1344     		add	r3, r3, r2
 1429 0018 1B68     		ldr	r3, [r3]
 1430 001a DBB2     		uxtb	r3, r3
 1431 001c 03F00403 		and	r3, r3, #4
 1432 0020 DAB2     		uxtb	r2, r3
 1433 0022 7B68     		ldr	r3, [r7, #4]
 1434 0024 1A72     		strb	r2, [r3, #8]
 752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (RxMessage->IDE == CAN_Id_Standard)
 1435              		.loc 1 752 0
 1436 0026 7B68     		ldr	r3, [r7, #4]
 1437 0028 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 1438 002a 002B     		cmp	r3, #0
 1439 002c 09D1     		bne	.L77
 753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RxMessage->StdId = (uint32_t)0x000007FF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 21);
 1440              		.loc 1 754 0
 1441 002e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1442 0030 FA68     		ldr	r2, [r7, #12]
 1443 0032 1B33     		adds	r3, r3, #27
 1444 0034 1B01     		lsls	r3, r3, #4
 1445 0036 1344     		add	r3, r3, r2
 1446 0038 1B68     		ldr	r3, [r3]
 1447 003a 5A0D     		lsrs	r2, r3, #21
 1448 003c 7B68     		ldr	r3, [r7, #4]
 1449 003e 1A60     		str	r2, [r3]
 1450 0040 08E0     		b	.L78
 1451              	.L77:
 755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RxMessage->ExtId = (uint32_t)0x1FFFFFFF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 3);
 1452              		.loc 1 758 0
 1453 0042 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1454 0044 FA68     		ldr	r2, [r7, #12]
 1455 0046 1B33     		adds	r3, r3, #27
 1456 0048 1B01     		lsls	r3, r3, #4
 1457 004a 1344     		add	r3, r3, r2
 1458 004c 1B68     		ldr	r3, [r3]
 1459 004e DA08     		lsrs	r2, r3, #3
 1460 0050 7B68     		ldr	r3, [r7, #4]
 1461 0052 5A60     		str	r2, [r3, #4]
 1462              	.L78:
 759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->RTR = (uint8_t)0x02 & CANx->sFIFOMailBox[FIFONumber].RIR;
 1463              		.loc 1 761 0
 1464 0054 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1465 0056 FA68     		ldr	r2, [r7, #12]
 1466 0058 1B33     		adds	r3, r3, #27
 1467 005a 1B01     		lsls	r3, r3, #4
 1468 005c 1344     		add	r3, r3, r2
 1469 005e 1B68     		ldr	r3, [r3]
 1470 0060 DBB2     		uxtb	r3, r3
 1471 0062 03F00203 		and	r3, r3, #2
 1472 0066 DAB2     		uxtb	r2, r3
 1473 0068 7B68     		ldr	r3, [r7, #4]
 1474 006a 5A72     		strb	r2, [r3, #9]
 762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the DLC */
 763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->DLC = (uint8_t)0x0F & CANx->sFIFOMailBox[FIFONumber].RDTR;
 1475              		.loc 1 763 0
 1476 006c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1477 006e FA68     		ldr	r2, [r7, #12]
 1478 0070 1B33     		adds	r3, r3, #27
 1479 0072 1B01     		lsls	r3, r3, #4
 1480 0074 1344     		add	r3, r3, r2
 1481 0076 5B68     		ldr	r3, [r3, #4]
 1482 0078 DBB2     		uxtb	r3, r3
 1483 007a 03F00F03 		and	r3, r3, #15
 1484 007e DAB2     		uxtb	r2, r3
 1485 0080 7B68     		ldr	r3, [r7, #4]
 1486 0082 9A72     		strb	r2, [r3, #10]
 764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the FMI */
 765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->FMI = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDTR >> 8);
 1487              		.loc 1 765 0
 1488 0084 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1489 0086 FA68     		ldr	r2, [r7, #12]
 1490 0088 1B33     		adds	r3, r3, #27
 1491 008a 1B01     		lsls	r3, r3, #4
 1492 008c 1344     		add	r3, r3, r2
 1493 008e 5B68     		ldr	r3, [r3, #4]
 1494 0090 1B0A     		lsrs	r3, r3, #8
 1495 0092 DAB2     		uxtb	r2, r3
 1496 0094 7B68     		ldr	r3, [r7, #4]
 1497 0096 DA74     		strb	r2, [r3, #19]
 766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the data field */
 767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[0] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDLR;
 1498              		.loc 1 767 0
 1499 0098 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1500 009a FA68     		ldr	r2, [r7, #12]
 1501 009c 1B01     		lsls	r3, r3, #4
 1502 009e 1344     		add	r3, r3, r2
 1503 00a0 03F5DC73 		add	r3, r3, #440
 1504 00a4 1B68     		ldr	r3, [r3]
 1505 00a6 DAB2     		uxtb	r2, r3
 1506 00a8 7B68     		ldr	r3, [r7, #4]
 1507 00aa DA72     		strb	r2, [r3, #11]
 768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[1] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 8);
 1508              		.loc 1 768 0
 1509 00ac FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1510 00ae FA68     		ldr	r2, [r7, #12]
 1511 00b0 1B01     		lsls	r3, r3, #4
 1512 00b2 1344     		add	r3, r3, r2
 1513 00b4 03F5DC73 		add	r3, r3, #440
 1514 00b8 1B68     		ldr	r3, [r3]
 1515 00ba 1B0A     		lsrs	r3, r3, #8
 1516 00bc DAB2     		uxtb	r2, r3
 1517 00be 7B68     		ldr	r3, [r7, #4]
 1518 00c0 1A73     		strb	r2, [r3, #12]
 769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[2] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 16);
 1519              		.loc 1 769 0
 1520 00c2 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1521 00c4 FA68     		ldr	r2, [r7, #12]
 1522 00c6 1B01     		lsls	r3, r3, #4
 1523 00c8 1344     		add	r3, r3, r2
 1524 00ca 03F5DC73 		add	r3, r3, #440
 1525 00ce 1B68     		ldr	r3, [r3]
 1526 00d0 1B0C     		lsrs	r3, r3, #16
 1527 00d2 DAB2     		uxtb	r2, r3
 1528 00d4 7B68     		ldr	r3, [r7, #4]
 1529 00d6 5A73     		strb	r2, [r3, #13]
 770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[3] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 24);
 1530              		.loc 1 770 0
 1531 00d8 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1532 00da FA68     		ldr	r2, [r7, #12]
 1533 00dc 1B01     		lsls	r3, r3, #4
 1534 00de 1344     		add	r3, r3, r2
 1535 00e0 03F5DC73 		add	r3, r3, #440
 1536 00e4 1B68     		ldr	r3, [r3]
 1537 00e6 1B0E     		lsrs	r3, r3, #24
 1538 00e8 DAB2     		uxtb	r2, r3
 1539 00ea 7B68     		ldr	r3, [r7, #4]
 1540 00ec 9A73     		strb	r2, [r3, #14]
 771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[4] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDHR;
 1541              		.loc 1 771 0
 1542 00ee FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1543 00f0 FA68     		ldr	r2, [r7, #12]
 1544 00f2 1B01     		lsls	r3, r3, #4
 1545 00f4 1344     		add	r3, r3, r2
 1546 00f6 03F5DC73 		add	r3, r3, #440
 1547 00fa 5B68     		ldr	r3, [r3, #4]
 1548 00fc DAB2     		uxtb	r2, r3
 1549 00fe 7B68     		ldr	r3, [r7, #4]
 1550 0100 DA73     		strb	r2, [r3, #15]
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[5] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 8);
 1551              		.loc 1 772 0
 1552 0102 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1553 0104 FA68     		ldr	r2, [r7, #12]
 1554 0106 1B01     		lsls	r3, r3, #4
 1555 0108 1344     		add	r3, r3, r2
 1556 010a 03F5DC73 		add	r3, r3, #440
 1557 010e 5B68     		ldr	r3, [r3, #4]
 1558 0110 1B0A     		lsrs	r3, r3, #8
 1559 0112 DAB2     		uxtb	r2, r3
 1560 0114 7B68     		ldr	r3, [r7, #4]
 1561 0116 1A74     		strb	r2, [r3, #16]
 773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[6] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 16);
 1562              		.loc 1 773 0
 1563 0118 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1564 011a FA68     		ldr	r2, [r7, #12]
 1565 011c 1B01     		lsls	r3, r3, #4
 1566 011e 1344     		add	r3, r3, r2
 1567 0120 03F5DC73 		add	r3, r3, #440
 1568 0124 5B68     		ldr	r3, [r3, #4]
 1569 0126 1B0C     		lsrs	r3, r3, #16
 1570 0128 DAB2     		uxtb	r2, r3
 1571 012a 7B68     		ldr	r3, [r7, #4]
 1572 012c 5A74     		strb	r2, [r3, #17]
 774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[7] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 24);
 1573              		.loc 1 774 0
 1574 012e FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1575 0130 FA68     		ldr	r2, [r7, #12]
 1576 0132 1B01     		lsls	r3, r3, #4
 1577 0134 1344     		add	r3, r3, r2
 1578 0136 03F5DC73 		add	r3, r3, #440
 1579 013a 5B68     		ldr	r3, [r3, #4]
 1580 013c 1B0E     		lsrs	r3, r3, #24
 1581 013e DAB2     		uxtb	r2, r3
 1582 0140 7B68     		ldr	r3, [r7, #4]
 1583 0142 9A74     		strb	r2, [r3, #18]
 775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release the FIFO */
 776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO0 */
 777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 1584              		.loc 1 777 0
 1585 0144 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1586 0146 002B     		cmp	r3, #0
 1587 0148 06D1     		bne	.L79
 778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF0R |= CAN_RF0R_RFOM0;
 1588              		.loc 1 779 0
 1589 014a FB68     		ldr	r3, [r7, #12]
 1590 014c DB68     		ldr	r3, [r3, #12]
 1591 014e 43F02002 		orr	r2, r3, #32
 1592 0152 FB68     		ldr	r3, [r7, #12]
 1593 0154 DA60     		str	r2, [r3, #12]
 1594 0156 05E0     		b	.L76
 1595              	.L79:
 780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO1 */
 782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF1R |= CAN_RF1R_RFOM1;
 1596              		.loc 1 784 0
 1597 0158 FB68     		ldr	r3, [r7, #12]
 1598 015a 1B69     		ldr	r3, [r3, #16]
 1599 015c 43F02002 		orr	r2, r3, #32
 1600 0160 FB68     		ldr	r3, [r7, #12]
 1601 0162 1A61     		str	r2, [r3, #16]
 1602              	.L76:
 785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1603              		.loc 1 786 0
 1604 0164 1437     		adds	r7, r7, #20
 1605 0166 BD46     		mov	sp, r7
 1606              		@ sp needed
 1607 0168 5DF8047B 		ldr	r7, [sp], #4
 1608 016c 7047     		bx	lr
 1609              		.cfi_endproc
 1610              	.LFE120:
 1612 016e 00BF     		.section	.text.CAN_FIFORelease,"ax",%progbits
 1613              		.align	2
 1614              		.global	CAN_FIFORelease
 1615              		.thumb
 1616              		.thumb_func
 1618              	CAN_FIFORelease:
 1619              	.LFB121:
 787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Releases the specified receive FIFO.
 790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: FIFO to release, CAN_FIFO0 or CAN_FIFO1.
 792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_FIFORelease(CAN_TypeDef* CANx, uint8_t FIFONumber)
 795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1620              		.loc 1 795 0
 1621              		.cfi_startproc
 1622              		@ args = 0, pretend = 0, frame = 8
 1623              		@ frame_needed = 1, uses_anonymous_args = 0
 1624              		@ link register save eliminated.
 1625 0000 80B4     		push	{r7}
 1626              	.LCFI33:
 1627              		.cfi_def_cfa_offset 4
 1628              		.cfi_offset 7, -4
 1629 0002 83B0     		sub	sp, sp, #12
 1630              	.LCFI34:
 1631              		.cfi_def_cfa_offset 16
 1632 0004 00AF     		add	r7, sp, #0
 1633              	.LCFI35:
 1634              		.cfi_def_cfa_register 7
 1635 0006 7860     		str	r0, [r7, #4]
 1636 0008 0B46     		mov	r3, r1
 1637 000a FB70     		strb	r3, [r7, #3]
 796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO0 */
 800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 1638              		.loc 1 800 0
 1639 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1640 000e 002B     		cmp	r3, #0
 1641 0010 06D1     		bne	.L82
 801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF0R |= CAN_RF0R_RFOM0;
 1642              		.loc 1 802 0
 1643 0012 7B68     		ldr	r3, [r7, #4]
 1644 0014 DB68     		ldr	r3, [r3, #12]
 1645 0016 43F02002 		orr	r2, r3, #32
 1646 001a 7B68     		ldr	r3, [r7, #4]
 1647 001c DA60     		str	r2, [r3, #12]
 1648 001e 05E0     		b	.L81
 1649              	.L82:
 803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO1 */
 805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF1R |= CAN_RF1R_RFOM1;
 1650              		.loc 1 807 0
 1651 0020 7B68     		ldr	r3, [r7, #4]
 1652 0022 1B69     		ldr	r3, [r3, #16]
 1653 0024 43F02002 		orr	r2, r3, #32
 1654 0028 7B68     		ldr	r3, [r7, #4]
 1655 002a 1A61     		str	r2, [r3, #16]
 1656              	.L81:
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1657              		.loc 1 809 0
 1658 002c 0C37     		adds	r7, r7, #12
 1659 002e BD46     		mov	sp, r7
 1660              		@ sp needed
 1661 0030 5DF8047B 		ldr	r7, [sp], #4
 1662 0034 7047     		bx	lr
 1663              		.cfi_endproc
 1664              	.LFE121:
 1666 0036 00BF     		.section	.text.CAN_MessagePending,"ax",%progbits
 1667              		.align	2
 1668              		.global	CAN_MessagePending
 1669              		.thumb
 1670              		.thumb_func
 1672              	CAN_MessagePending:
 1673              	.LFB122:
 810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the number of pending received messages.
 813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: Receive FIFO number, CAN_FIFO0 or CAN_FIFO1.
 815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval NbMessage : which is the number of pending message.
 816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_MessagePending(CAN_TypeDef* CANx, uint8_t FIFONumber)
 818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1674              		.loc 1 818 0
 1675              		.cfi_startproc
 1676              		@ args = 0, pretend = 0, frame = 16
 1677              		@ frame_needed = 1, uses_anonymous_args = 0
 1678              		@ link register save eliminated.
 1679 0000 80B4     		push	{r7}
 1680              	.LCFI36:
 1681              		.cfi_def_cfa_offset 4
 1682              		.cfi_offset 7, -4
 1683 0002 85B0     		sub	sp, sp, #20
 1684              	.LCFI37:
 1685              		.cfi_def_cfa_offset 24
 1686 0004 00AF     		add	r7, sp, #0
 1687              	.LCFI38:
 1688              		.cfi_def_cfa_register 7
 1689 0006 7860     		str	r0, [r7, #4]
 1690 0008 0B46     		mov	r3, r1
 1691 000a FB70     		strb	r3, [r7, #3]
 819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t message_pending=0;
 1692              		.loc 1 819 0
 1693 000c 0023     		movs	r3, #0
 1694 000e FB73     		strb	r3, [r7, #15]
 820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 1695              		.loc 1 823 0
 1696 0010 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1697 0012 002B     		cmp	r3, #0
 1698 0014 06D1     		bne	.L85
 824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = (uint8_t)(CANx->RF0R&(uint32_t)0x03);
 1699              		.loc 1 825 0
 1700 0016 7B68     		ldr	r3, [r7, #4]
 1701 0018 DB68     		ldr	r3, [r3, #12]
 1702 001a DBB2     		uxtb	r3, r3
 1703 001c 03F00303 		and	r3, r3, #3
 1704 0020 FB73     		strb	r3, [r7, #15]
 1705 0022 0BE0     		b	.L86
 1706              	.L85:
 826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if (FIFONumber == CAN_FIFO1)
 1707              		.loc 1 827 0
 1708 0024 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1709 0026 012B     		cmp	r3, #1
 1710 0028 06D1     		bne	.L87
 828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = (uint8_t)(CANx->RF1R&(uint32_t)0x03);
 1711              		.loc 1 829 0
 1712 002a 7B68     		ldr	r3, [r7, #4]
 1713 002c 1B69     		ldr	r3, [r3, #16]
 1714 002e DBB2     		uxtb	r3, r3
 1715 0030 03F00303 		and	r3, r3, #3
 1716 0034 FB73     		strb	r3, [r7, #15]
 1717 0036 01E0     		b	.L86
 1718              	.L87:
 830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = 0;
 1719              		.loc 1 833 0
 1720 0038 0023     		movs	r3, #0
 1721 003a FB73     		strb	r3, [r7, #15]
 1722              	.L86:
 834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return message_pending;
 1723              		.loc 1 835 0
 1724 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1725              		.loc 1 836 0
 1726 003e 1846     		mov	r0, r3
 1727 0040 1437     		adds	r7, r7, #20
 1728 0042 BD46     		mov	sp, r7
 1729              		@ sp needed
 1730 0044 5DF8047B 		ldr	r7, [sp], #4
 1731 0048 7047     		bx	lr
 1732              		.cfi_endproc
 1733              	.LFE122:
 1735 004a 00BF     		.section	.text.CAN_OperatingModeRequest,"ax",%progbits
 1736              		.align	2
 1737              		.global	CAN_OperatingModeRequest
 1738              		.thumb
 1739              		.thumb_func
 1741              	CAN_OperatingModeRequest:
 1742              	.LFB123:
 837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group4 CAN Operation modes functions
 843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Operation modes functions 
 844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Operation modes functions
 848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to select the CAN Operation modes
 850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - sleep mode
 851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - normal mode 
 852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - initialization mode
 853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Selects the CAN Operation mode.
 861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_OperatingMode: CAN Operating Mode.
 862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         This parameter can be one of @ref CAN_OperatingMode_TypeDef enumeration.
 863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval status of the requested mode which can be 
 864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         - CAN_ModeStatus_Failed:  CAN failed entering the specific mode 
 865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         - CAN_ModeStatus_Success: CAN Succeed entering the specific mode 
 866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_OperatingModeRequest(CAN_TypeDef* CANx, uint8_t CAN_OperatingMode)
 868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1743              		.loc 1 868 0
 1744              		.cfi_startproc
 1745              		@ args = 0, pretend = 0, frame = 16
 1746              		@ frame_needed = 1, uses_anonymous_args = 0
 1747              		@ link register save eliminated.
 1748 0000 80B4     		push	{r7}
 1749              	.LCFI39:
 1750              		.cfi_def_cfa_offset 4
 1751              		.cfi_offset 7, -4
 1752 0002 85B0     		sub	sp, sp, #20
 1753              	.LCFI40:
 1754              		.cfi_def_cfa_offset 24
 1755 0004 00AF     		add	r7, sp, #0
 1756              	.LCFI41:
 1757              		.cfi_def_cfa_register 7
 1758 0006 7860     		str	r0, [r7, #4]
 1759 0008 0B46     		mov	r3, r1
 1760 000a FB70     		strb	r3, [r7, #3]
 869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t status = CAN_ModeStatus_Failed;
 1761              		.loc 1 869 0
 1762 000c 0023     		movs	r3, #0
 1763 000e FB73     		strb	r3, [r7, #15]
 870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Timeout for INAK or also for SLAK bits*/
 872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t timeout = INAK_TIMEOUT; 
 1764              		.loc 1 872 0
 1765 0010 4FF6FF73 		movw	r3, #65535
 1766 0014 BB60     		str	r3, [r7, #8]
 873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_OPERATING_MODE(CAN_OperatingMode));
 877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_OperatingMode == CAN_OperatingMode_Initialization)
 1767              		.loc 1 878 0
 1768 0016 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1769 0018 002B     		cmp	r3, #0
 1770 001a 20D1     		bne	.L90
 879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request initialisation */
 881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_SLEEP)) | CAN_MCR_INRQ);
 1771              		.loc 1 881 0
 1772 001c 7B68     		ldr	r3, [r7, #4]
 1773 001e 1B68     		ldr	r3, [r3]
 1774 0020 23F00303 		bic	r3, r3, #3
 1775 0024 43F00102 		orr	r2, r3, #1
 1776 0028 7B68     		ldr	r3, [r7, #4]
 1777 002a 1A60     		str	r2, [r3]
 882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK) && (timeout != 0))
 1778              		.loc 1 884 0
 1779 002c 02E0     		b	.L91
 1780              	.L93:
 885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 1781              		.loc 1 886 0
 1782 002e BB68     		ldr	r3, [r7, #8]
 1783 0030 013B     		subs	r3, r3, #1
 1784 0032 BB60     		str	r3, [r7, #8]
 1785              	.L91:
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1786              		.loc 1 884 0 discriminator 1
 1787 0034 7B68     		ldr	r3, [r7, #4]
 1788 0036 5B68     		ldr	r3, [r3, #4]
 1789 0038 03F00303 		and	r3, r3, #3
 1790 003c 012B     		cmp	r3, #1
 1791 003e 02D0     		beq	.L92
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1792              		.loc 1 884 0 is_stmt 0 discriminator 2
 1793 0040 BB68     		ldr	r3, [r7, #8]
 1794 0042 002B     		cmp	r3, #0
 1795 0044 F3D1     		bne	.L93
 1796              	.L92:
 887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK)
 1797              		.loc 1 888 0 is_stmt 1
 1798 0046 7B68     		ldr	r3, [r7, #4]
 1799 0048 5B68     		ldr	r3, [r3, #4]
 1800 004a 03F00303 		and	r3, r3, #3
 1801 004e 012B     		cmp	r3, #1
 1802 0050 02D0     		beq	.L94
 889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 1803              		.loc 1 890 0
 1804 0052 0023     		movs	r3, #0
 1805 0054 FB73     		strb	r3, [r7, #15]
 1806 0056 4AE0     		b	.L96
 1807              	.L94:
 891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 1808              		.loc 1 894 0
 1809 0058 0123     		movs	r3, #1
 1810 005a FB73     		strb	r3, [r7, #15]
 1811 005c 47E0     		b	.L96
 1812              	.L90:
 895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else  if (CAN_OperatingMode == CAN_OperatingMode_Normal)
 1813              		.loc 1 897 0
 1814 005e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1815 0060 012B     		cmp	r3, #1
 1816 0062 1ED1     		bne	.L97
 898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request leave initialisation and sleep mode  and enter Normal mode */
 900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= (uint32_t)(~(CAN_MCR_SLEEP|CAN_MCR_INRQ));
 1817              		.loc 1 900 0
 1818 0064 7B68     		ldr	r3, [r7, #4]
 1819 0066 1B68     		ldr	r3, [r3]
 1820 0068 23F00302 		bic	r2, r3, #3
 1821 006c 7B68     		ldr	r3, [r7, #4]
 1822 006e 1A60     		str	r2, [r3]
 901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 1823              		.loc 1 903 0
 1824 0070 02E0     		b	.L98
 1825              	.L100:
 904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 1826              		.loc 1 905 0
 1827 0072 BB68     		ldr	r3, [r7, #8]
 1828 0074 013B     		subs	r3, r3, #1
 1829 0076 BB60     		str	r3, [r7, #8]
 1830              	.L98:
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1831              		.loc 1 903 0 discriminator 1
 1832 0078 7B68     		ldr	r3, [r7, #4]
 1833 007a 5B68     		ldr	r3, [r3, #4]
 1834 007c 03F00303 		and	r3, r3, #3
 1835 0080 002B     		cmp	r3, #0
 1836 0082 02D0     		beq	.L99
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1837              		.loc 1 903 0 is_stmt 0 discriminator 2
 1838 0084 BB68     		ldr	r3, [r7, #8]
 1839 0086 002B     		cmp	r3, #0
 1840 0088 F3D1     		bne	.L100
 1841              	.L99:
 906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != 0)
 1842              		.loc 1 907 0 is_stmt 1
 1843 008a 7B68     		ldr	r3, [r7, #4]
 1844 008c 5B68     		ldr	r3, [r3, #4]
 1845 008e 03F00303 		and	r3, r3, #3
 1846 0092 002B     		cmp	r3, #0
 1847 0094 02D0     		beq	.L101
 908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 1848              		.loc 1 909 0
 1849 0096 0023     		movs	r3, #0
 1850 0098 FB73     		strb	r3, [r7, #15]
 1851 009a 28E0     		b	.L96
 1852              	.L101:
 910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 1853              		.loc 1 913 0
 1854 009c 0123     		movs	r3, #1
 1855 009e FB73     		strb	r3, [r7, #15]
 1856 00a0 25E0     		b	.L96
 1857              	.L97:
 914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else  if (CAN_OperatingMode == CAN_OperatingMode_Sleep)
 1858              		.loc 1 916 0
 1859 00a2 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1860 00a4 022B     		cmp	r3, #2
 1861 00a6 20D1     		bne	.L103
 917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request Sleep mode */
 919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
 1862              		.loc 1 919 0
 1863 00a8 7B68     		ldr	r3, [r7, #4]
 1864 00aa 1B68     		ldr	r3, [r3]
 1865 00ac 23F00303 		bic	r3, r3, #3
 1866 00b0 43F00202 		orr	r2, r3, #2
 1867 00b4 7B68     		ldr	r3, [r7, #4]
 1868 00b6 1A60     		str	r2, [r3]
 920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 1869              		.loc 1 922 0
 1870 00b8 02E0     		b	.L104
 1871              	.L106:
 923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 1872              		.loc 1 924 0
 1873 00ba BB68     		ldr	r3, [r7, #8]
 1874 00bc 013B     		subs	r3, r3, #1
 1875 00be BB60     		str	r3, [r7, #8]
 1876              	.L104:
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1877              		.loc 1 922 0 discriminator 1
 1878 00c0 7B68     		ldr	r3, [r7, #4]
 1879 00c2 5B68     		ldr	r3, [r3, #4]
 1880 00c4 03F00303 		and	r3, r3, #3
 1881 00c8 022B     		cmp	r3, #2
 1882 00ca 02D0     		beq	.L105
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1883              		.loc 1 922 0 is_stmt 0 discriminator 2
 1884 00cc BB68     		ldr	r3, [r7, #8]
 1885 00ce 002B     		cmp	r3, #0
 1886 00d0 F3D1     		bne	.L106
 1887              	.L105:
 925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK)
 1888              		.loc 1 926 0 is_stmt 1
 1889 00d2 7B68     		ldr	r3, [r7, #4]
 1890 00d4 5B68     		ldr	r3, [r3, #4]
 1891 00d6 03F00303 		and	r3, r3, #3
 1892 00da 022B     		cmp	r3, #2
 1893 00dc 02D0     		beq	.L107
 927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 1894              		.loc 1 928 0
 1895 00de 0023     		movs	r3, #0
 1896 00e0 FB73     		strb	r3, [r7, #15]
 1897 00e2 04E0     		b	.L96
 1898              	.L107:
 929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 1899              		.loc 1 932 0
 1900 00e4 0123     		movs	r3, #1
 1901 00e6 FB73     		strb	r3, [r7, #15]
 1902 00e8 01E0     		b	.L96
 1903              	.L103:
 933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     status = CAN_ModeStatus_Failed;
 1904              		.loc 1 937 0
 1905 00ea 0023     		movs	r3, #0
 1906 00ec FB73     		strb	r3, [r7, #15]
 1907              	.L96:
 938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  (uint8_t) status;
 1908              		.loc 1 940 0
 1909 00ee FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1910              		.loc 1 941 0
 1911 00f0 1846     		mov	r0, r3
 1912 00f2 1437     		adds	r7, r7, #20
 1913 00f4 BD46     		mov	sp, r7
 1914              		@ sp needed
 1915 00f6 5DF8047B 		ldr	r7, [sp], #4
 1916 00fa 7047     		bx	lr
 1917              		.cfi_endproc
 1918              	.LFE123:
 1920              		.section	.text.CAN_Sleep,"ax",%progbits
 1921              		.align	2
 1922              		.global	CAN_Sleep
 1923              		.thumb
 1924              		.thumb_func
 1926              	CAN_Sleep:
 1927              	.LFB124:
 942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enters the Sleep (low power) mode.
 945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_Sleep_Ok if sleep entered, CAN_Sleep_Failed otherwise.
 947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Sleep(CAN_TypeDef* CANx)
 949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1928              		.loc 1 949 0
 1929              		.cfi_startproc
 1930              		@ args = 0, pretend = 0, frame = 16
 1931              		@ frame_needed = 1, uses_anonymous_args = 0
 1932              		@ link register save eliminated.
 1933 0000 80B4     		push	{r7}
 1934              	.LCFI42:
 1935              		.cfi_def_cfa_offset 4
 1936              		.cfi_offset 7, -4
 1937 0002 85B0     		sub	sp, sp, #20
 1938              	.LCFI43:
 1939              		.cfi_def_cfa_offset 24
 1940 0004 00AF     		add	r7, sp, #0
 1941              	.LCFI44:
 1942              		.cfi_def_cfa_register 7
 1943 0006 7860     		str	r0, [r7, #4]
 950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t sleepstatus = CAN_Sleep_Failed;
 1944              		.loc 1 950 0
 1945 0008 0023     		movs	r3, #0
 1946 000a FB73     		strb	r3, [r7, #15]
 951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Request Sleep mode */
 956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    CANx->MCR = (((CANx->MCR) & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
 1947              		.loc 1 956 0
 1948 000c 7B68     		ldr	r3, [r7, #4]
 1949 000e 1B68     		ldr	r3, [r3]
 1950 0010 23F00303 		bic	r3, r3, #3
 1951 0014 43F00202 		orr	r2, r3, #2
 1952 0018 7B68     		ldr	r3, [r7, #4]
 1953 001a 1A60     		str	r2, [r3]
 957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Sleep mode status */
 959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->MSR & (CAN_MSR_SLAK|CAN_MSR_INAK)) == CAN_MSR_SLAK)
 1954              		.loc 1 959 0
 1955 001c 7B68     		ldr	r3, [r7, #4]
 1956 001e 5B68     		ldr	r3, [r3, #4]
 1957 0020 03F00303 		and	r3, r3, #3
 1958 0024 022B     		cmp	r3, #2
 1959 0026 01D1     		bne	.L111
 960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Sleep mode not entered */
 962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     sleepstatus =  CAN_Sleep_Ok;
 1960              		.loc 1 962 0
 1961 0028 0123     		movs	r3, #1
 1962 002a FB73     		strb	r3, [r7, #15]
 1963              	.L111:
 963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* return sleep mode status */
 965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    return (uint8_t)sleepstatus;
 1964              		.loc 1 965 0
 1965 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 1966              		.loc 1 966 0
 1967 002e 1846     		mov	r0, r3
 1968 0030 1437     		adds	r7, r7, #20
 1969 0032 BD46     		mov	sp, r7
 1970              		@ sp needed
 1971 0034 5DF8047B 		ldr	r7, [sp], #4
 1972 0038 7047     		bx	lr
 1973              		.cfi_endproc
 1974              	.LFE124:
 1976 003a 00BF     		.section	.text.CAN_WakeUp,"ax",%progbits
 1977              		.align	2
 1978              		.global	CAN_WakeUp
 1979              		.thumb
 1980              		.thumb_func
 1982              	CAN_WakeUp:
 1983              	.LFB125:
 967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Wakes up the CAN peripheral from sleep mode .
 970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_WakeUp_Ok if sleep mode left, CAN_WakeUp_Failed otherwise.
 972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_WakeUp(CAN_TypeDef* CANx)
 974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 1984              		.loc 1 974 0
 1985              		.cfi_startproc
 1986              		@ args = 0, pretend = 0, frame = 16
 1987              		@ frame_needed = 1, uses_anonymous_args = 0
 1988              		@ link register save eliminated.
 1989 0000 80B4     		push	{r7}
 1990              	.LCFI45:
 1991              		.cfi_def_cfa_offset 4
 1992              		.cfi_offset 7, -4
 1993 0002 85B0     		sub	sp, sp, #20
 1994              	.LCFI46:
 1995              		.cfi_def_cfa_offset 24
 1996 0004 00AF     		add	r7, sp, #0
 1997              	.LCFI47:
 1998              		.cfi_def_cfa_register 7
 1999 0006 7860     		str	r0, [r7, #4]
 975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t wait_slak = SLAK_TIMEOUT;
 2000              		.loc 1 975 0
 2001 0008 4FF6FF73 		movw	r3, #65535
 2002 000c FB60     		str	r3, [r7, #12]
 976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t wakeupstatus = CAN_WakeUp_Failed;
 2003              		.loc 1 976 0
 2004 000e 0023     		movs	r3, #0
 2005 0010 FB72     		strb	r3, [r7, #11]
 977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Wake up request */
 982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR &= ~(uint32_t)CAN_MCR_SLEEP;
 2006              		.loc 1 982 0
 2007 0012 7B68     		ldr	r3, [r7, #4]
 2008 0014 1B68     		ldr	r3, [r3]
 2009 0016 23F00202 		bic	r2, r3, #2
 2010 001a 7B68     		ldr	r3, [r7, #4]
 2011 001c 1A60     		str	r2, [r3]
 983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Sleep mode status */
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while(((CANx->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)&&(wait_slak!=0x00))
 2012              		.loc 1 985 0
 2013 001e 02E0     		b	.L114
 2014              	.L116:
 986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    wait_slak--;
 2015              		.loc 1 987 0
 2016 0020 FB68     		ldr	r3, [r7, #12]
 2017 0022 013B     		subs	r3, r3, #1
 2018 0024 FB60     		str	r3, [r7, #12]
 2019              	.L114:
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 2020              		.loc 1 985 0 discriminator 1
 2021 0026 7B68     		ldr	r3, [r7, #4]
 2022 0028 5B68     		ldr	r3, [r3, #4]
 2023 002a 03F00203 		and	r3, r3, #2
 2024 002e 002B     		cmp	r3, #0
 2025 0030 02D0     		beq	.L115
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 2026              		.loc 1 985 0 is_stmt 0 discriminator 2
 2027 0032 FB68     		ldr	r3, [r7, #12]
 2028 0034 002B     		cmp	r3, #0
 2029 0036 F3D1     		bne	.L116
 2030              	.L115:
 988:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if((CANx->MSR & CAN_MSR_SLAK) != CAN_MSR_SLAK)
 2031              		.loc 1 989 0 is_stmt 1
 2032 0038 7B68     		ldr	r3, [r7, #4]
 2033 003a 5B68     		ldr	r3, [r3, #4]
 2034 003c 03F00203 		and	r3, r3, #2
 2035 0040 002B     		cmp	r3, #0
 2036 0042 01D1     		bne	.L117
 990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* wake up done : Sleep mode exited */
 992:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     wakeupstatus = CAN_WakeUp_Ok;
 2037              		.loc 1 992 0
 2038 0044 0123     		movs	r3, #1
 2039 0046 FB72     		strb	r3, [r7, #11]
 2040              	.L117:
 993:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* return wakeup status */
 995:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return (uint8_t)wakeupstatus;
 2041              		.loc 1 995 0
 2042 0048 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2043              		.loc 1 996 0
 2044 004a 1846     		mov	r0, r3
 2045 004c 1437     		adds	r7, r7, #20
 2046 004e BD46     		mov	sp, r7
 2047              		@ sp needed
 2048 0050 5DF8047B 		ldr	r7, [sp], #4
 2049 0054 7047     		bx	lr
 2050              		.cfi_endproc
 2051              	.LFE125:
 2053 0056 00BF     		.section	.text.CAN_GetLastErrorCode,"ax",%progbits
 2054              		.align	2
 2055              		.global	CAN_GetLastErrorCode
 2056              		.thumb
 2057              		.thumb_func
 2059              	CAN_GetLastErrorCode:
 2060              	.LFB126:
 997:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 998:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 999:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1002:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group5 CAN Bus Error management functions
1003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Bus Error management functions 
1004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
1005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
1006:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
1007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Bus Error management functions
1008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
1009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
1010:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the CANx's last error code (LEC)
1011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the CANx Receive Error Counter (REC)
1012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the LSB of the 9-bit CANx Transmit Error Counter(TEC).
1013:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
1014:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note If TEC is greater than 255, The CAN is in bus-off state.
1015:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note if REC or TEC are greater than 96, an Error warning flag occurs.
1016:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note if REC or TEC are greater than 127, an Error Passive Flag occurs.
1017:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                         
1018:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
1019:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
1020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1021:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1022:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1023:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the CANx's last error code (LEC).
1024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
1025:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval Error code: 
1026:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_NoErr: No Error  
1027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_StuffErr: Stuff Error
1028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_FormErr: Form Error
1029:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_ACKErr : Acknowledgment Error
1030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_BitRecessiveErr: Bit Recessive Error
1031:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_BitDominantErr: Bit Dominant Error
1032:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_CRCErr: CRC Error
1033:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_SoftwareSetErr: Software Set Error  
1034:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetLastErrorCode(CAN_TypeDef* CANx)
1036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2061              		.loc 1 1036 0
 2062              		.cfi_startproc
 2063              		@ args = 0, pretend = 0, frame = 16
 2064              		@ frame_needed = 1, uses_anonymous_args = 0
 2065              		@ link register save eliminated.
 2066 0000 80B4     		push	{r7}
 2067              	.LCFI48:
 2068              		.cfi_def_cfa_offset 4
 2069              		.cfi_offset 7, -4
 2070 0002 85B0     		sub	sp, sp, #20
 2071              	.LCFI49:
 2072              		.cfi_def_cfa_offset 24
 2073 0004 00AF     		add	r7, sp, #0
 2074              	.LCFI50:
 2075              		.cfi_def_cfa_register 7
 2076 0006 7860     		str	r0, [r7, #4]
1037:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t errorcode=0;
 2077              		.loc 1 1037 0
 2078 0008 0023     		movs	r3, #0
 2079 000a FB73     		strb	r3, [r7, #15]
1038:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the error code*/
1043:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   errorcode = (((uint8_t)CANx->ESR) & (uint8_t)CAN_ESR_LEC);
 2080              		.loc 1 1043 0
 2081 000c 7B68     		ldr	r3, [r7, #4]
 2082 000e 9B69     		ldr	r3, [r3, #24]
 2083 0010 DBB2     		uxtb	r3, r3
 2084 0012 03F07003 		and	r3, r3, #112
 2085 0016 FB73     		strb	r3, [r7, #15]
1044:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the error code*/
1046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return errorcode;
 2086              		.loc 1 1046 0
 2087 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2088              		.loc 1 1047 0
 2089 001a 1846     		mov	r0, r3
 2090 001c 1437     		adds	r7, r7, #20
 2091 001e BD46     		mov	sp, r7
 2092              		@ sp needed
 2093 0020 5DF8047B 		ldr	r7, [sp], #4
 2094 0024 7047     		bx	lr
 2095              		.cfi_endproc
 2096              	.LFE126:
 2098 0026 00BF     		.section	.text.CAN_GetReceiveErrorCounter,"ax",%progbits
 2099              		.align	2
 2100              		.global	CAN_GetReceiveErrorCounter
 2101              		.thumb
 2102              		.thumb_func
 2104              	CAN_GetReceiveErrorCounter:
 2105              	.LFB127:
1048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1049:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1050:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the CANx Receive Error Counter (REC).
1051:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @note   In case of an error during reception, this counter is incremented 
1052:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         by 1 or by 8 depending on the error condition as defined by the CAN 
1053:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         standard. After every successful reception, the counter is 
1054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         decremented by 1 or reset to 120 if its value was higher than 128. 
1055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         When the counter value exceeds 127, the CAN controller enters the 
1056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         error passive state.  
1057:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.  
1058:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN Receive Error Counter. 
1059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetReceiveErrorCounter(CAN_TypeDef* CANx)
1061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2106              		.loc 1 1061 0
 2107              		.cfi_startproc
 2108              		@ args = 0, pretend = 0, frame = 16
 2109              		@ frame_needed = 1, uses_anonymous_args = 0
 2110              		@ link register save eliminated.
 2111 0000 80B4     		push	{r7}
 2112              	.LCFI51:
 2113              		.cfi_def_cfa_offset 4
 2114              		.cfi_offset 7, -4
 2115 0002 85B0     		sub	sp, sp, #20
 2116              	.LCFI52:
 2117              		.cfi_def_cfa_offset 24
 2118 0004 00AF     		add	r7, sp, #0
 2119              	.LCFI53:
 2120              		.cfi_def_cfa_register 7
 2121 0006 7860     		str	r0, [r7, #4]
1062:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t counter=0;
 2122              		.loc 1 1062 0
 2123 0008 0023     		movs	r3, #0
 2124 000a FB73     		strb	r3, [r7, #15]
1063:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1064:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1065:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the Receive Error Counter*/
1068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   counter = (uint8_t)((CANx->ESR & CAN_ESR_REC)>> 24);
 2125              		.loc 1 1068 0
 2126 000c 7B68     		ldr	r3, [r7, #4]
 2127 000e 9B69     		ldr	r3, [r3, #24]
 2128 0010 1B0E     		lsrs	r3, r3, #24
 2129 0012 FB73     		strb	r3, [r7, #15]
1069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1070:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the Receive Error Counter*/
1071:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return counter;
 2130              		.loc 1 1071 0
 2131 0014 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2132              		.loc 1 1072 0
 2133 0016 1846     		mov	r0, r3
 2134 0018 1437     		adds	r7, r7, #20
 2135 001a BD46     		mov	sp, r7
 2136              		@ sp needed
 2137 001c 5DF8047B 		ldr	r7, [sp], #4
 2138 0020 7047     		bx	lr
 2139              		.cfi_endproc
 2140              	.LFE127:
 2142 0022 00BF     		.section	.text.CAN_GetLSBTransmitErrorCounter,"ax",%progbits
 2143              		.align	2
 2144              		.global	CAN_GetLSBTransmitErrorCounter
 2145              		.thumb
 2146              		.thumb_func
 2148              	CAN_GetLSBTransmitErrorCounter:
 2149              	.LFB128:
1073:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1074:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1075:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1076:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the LSB of the 9-bit CANx Transmit Error Counter(TEC).
1077:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1078:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval LSB of the 9-bit CAN Transmit Error Counter. 
1079:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1080:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetLSBTransmitErrorCounter(CAN_TypeDef* CANx)
1081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2150              		.loc 1 1081 0
 2151              		.cfi_startproc
 2152              		@ args = 0, pretend = 0, frame = 16
 2153              		@ frame_needed = 1, uses_anonymous_args = 0
 2154              		@ link register save eliminated.
 2155 0000 80B4     		push	{r7}
 2156              	.LCFI54:
 2157              		.cfi_def_cfa_offset 4
 2158              		.cfi_offset 7, -4
 2159 0002 85B0     		sub	sp, sp, #20
 2160              	.LCFI55:
 2161              		.cfi_def_cfa_offset 24
 2162 0004 00AF     		add	r7, sp, #0
 2163              	.LCFI56:
 2164              		.cfi_def_cfa_register 7
 2165 0006 7860     		str	r0, [r7, #4]
1082:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t counter=0;
 2166              		.loc 1 1082 0
 2167 0008 0023     		movs	r3, #0
 2168 000a FB73     		strb	r3, [r7, #15]
1083:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1084:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1085:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1086:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1087:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the LSB of the 9-bit CANx Transmit Error Counter(TEC) */
1088:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   counter = (uint8_t)((CANx->ESR & CAN_ESR_TEC)>> 16);
 2169              		.loc 1 1088 0
 2170 000c 7B68     		ldr	r3, [r7, #4]
 2171 000e 9B69     		ldr	r3, [r3, #24]
 2172 0010 03F47F03 		and	r3, r3, #16711680
 2173 0014 1B0C     		lsrs	r3, r3, #16
 2174 0016 FB73     		strb	r3, [r7, #15]
1089:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1090:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the LSB of the 9-bit CANx Transmit Error Counter(TEC) */
1091:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return counter;
 2175              		.loc 1 1091 0
 2176 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1092:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2177              		.loc 1 1092 0
 2178 001a 1846     		mov	r0, r3
 2179 001c 1437     		adds	r7, r7, #20
 2180 001e BD46     		mov	sp, r7
 2181              		@ sp needed
 2182 0020 5DF8047B 		ldr	r7, [sp], #4
 2183 0024 7047     		bx	lr
 2184              		.cfi_endproc
 2185              	.LFE128:
 2187 0026 00BF     		.section	.text.CAN_ITConfig,"ax",%progbits
 2188              		.align	2
 2189              		.global	CAN_ITConfig
 2190              		.thumb
 2191              		.thumb_func
 2193              	CAN_ITConfig:
 2194              	.LFB129:
1093:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1094:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
1095:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1096:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1097:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group6 Interrupts and flags management functions
1098:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief   Interrupts and flags management functions
1099:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
1100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim   
1101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
1102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                    Interrupts and flags management functions
1103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
1104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to configure the CAN Interrupts and 
1106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   to get the status and clear flags and Interrupts pending bits.
1107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The CAN provides 14 Interrupts sources and 15 Flags:
1109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============  
1111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       Flags :
1112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============
1113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The 15 flags can be divided on 4 groups: 
1114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    A. Transmit Flags
1116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------
1117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP0, 
1118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP1, 
1119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP2  : Request completed MailBoxes 0, 1 and 2  Flags
1120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when when the last request (transmit or abort) has 
1121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           been performed. 
1122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   B. Receive Flags
1124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------
1125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FMP0,
1127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FMP1   : FIFO 0 and 1 Message Pending Flags 
1128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set to signal that messages are pending in the receive 
1129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           FIFO.
1130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           These Flags are cleared only by hardware. 
1131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FF0,
1133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FF1    : FIFO 0 and 1 Full Flags
1134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when three messages are stored in the selected 
1135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           FIFO.                        
1136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FOV0              
1138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FOV1   : FIFO 0 and 1 Overrun Flags
1139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when a new message has been received and passed 
1140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the filter while the FIFO was full.         
1141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   C. Operating Mode Flags
1143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ----------------------- 
1144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_WKU    : Wake up Flag
1145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set to signal that a SOF bit has been detected while 
1146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the CAN hardware was in Sleep mode. 
1147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         
1148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_SLAK   : Sleep acknowledge Flag
1149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set to signal that the CAN has entered Sleep Mode. 
1150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
1151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   D. Error Flags
1152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ----------------------- 
1153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_EWG    : Error Warning Flag
1154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when the warning limit has been reached (Receive 
1155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Error Counter or Transmit Error Counter greater than 96). 
1156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                             
1158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_EPV    : Error Passive Flag
1159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when the Error Passive limit has been reached 
1160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           (Receive Error Counter or Transmit Error Counter 
1161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           greater than 127).
1162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                              
1164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_BOF    : Bus-Off Flag
1165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when CAN enters the bus-off state. The bus-off 
1166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           state is entered on TEC overflow, greater than 255.
1167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                    
1169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_LEC    : Last error code Flag
1170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set If a message has been transferred (reception or
1171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           transmission) with error, and the error code is hold.              
1172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============  
1174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    Interrupts :
1175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============
1176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The 14 interrupts can be divided on 4 groups: 
1177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    A. Transmit interrupt
1179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------   
1180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****           CAN_IT_TME   :  Transmit mailbox empty Interrupt
1181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           no transmit request are pending for Tx mailboxes.      
1183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    B. Receive Interrupts
1185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------          
1186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FMP0,
1187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FMP1    :  FIFO 0 and FIFO1 message pending Interrupts
1188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when 
1189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           messages are pending in the receive FIFO.
1190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           The corresponding interrupt pending bits are cleared 
1191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           only by hardware.
1192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 
1193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FF0,              
1194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FF1     :  FIFO 0 and FIFO1 full Interrupts
1195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when
1196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           three messages are stored in the selected FIFO.
1197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         
1198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FOV0,        
1199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FOV1    :  FIFO 0 and FIFO1 overrun Interrupts        
1200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when
1201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a new message has been received and passed the filter
1202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           while the FIFO was full.
1203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    C. Operating Mode Interrupts
1205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -------------------------------          
1206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_WKU     :  Wake-up Interrupt
1207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a SOF bit has been detected while the CAN hardware was 
1209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           in Sleep mode.
1210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                   
1211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_SLK     :  Sleep acknowledge Interrupt
1212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the CAN has entered Sleep Mode.       
1214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    D. Error Interrupts 
1216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------         
1217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_EWG     :  Error warning Interrupt 
1218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the warning limit has been reached (Receive Error 
1220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Counter or Transmit Error Counter=96). 
1221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                
1222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_EPV     :  Error passive Interrupt        
1223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the Error Passive limit has been reached (Receive 
1225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Error Counter or Transmit Error Counter>127).
1226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_BOF     :  Bus-off Interrupt
1228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           CAN enters the bus-off state. The bus-off state is 
1230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           entered on TEC overflow, greater than 255.
1231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                   
1233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_LEC     :  Last error code Interrupt        
1234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending  when
1235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a message has been transferred (reception or
1236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           transmission) with error, and the error code is hold.
1237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_ERR     :  Error Interrupt
1239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           an error condition is pending.      
1241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       
1242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   Managing the CAN controller events :
1244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ------------------------------------ 
1245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The user should identify which mode will be used in his application to manage 
1246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   the CAN controller events: Polling mode or Interrupt mode.
1247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   1.  In the Polling Mode it is advised to use the following functions:
1249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_GetFlagStatus() : to check if flags events occur. 
1250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ClearFlag()     : to clear the flags events.
1251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   2.  In the Interrupt Mode it is advised to use the following functions:
1255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ITConfig()       : to enable or disable the interrupt source.
1256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_GetITStatus()    : to check if Interrupt occurs.
1257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ClearITPendingBit() : to clear the Interrupt pending Bit (corresponding Flag).
1258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       @note  This function has no impact on CAN_IT_FMP0 and CAN_IT_FMP1 Interrupts 
1259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****              pending bits since there are cleared only by hardware. 
1260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
1262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
1263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */ 
1264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the specified CANx interrupts.
1266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the CAN interrupt sources to be enabled or disabled.
1268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: 
1269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt 
1270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP0: FIFO 0 message pending Interrupt 
1271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP1: FIFO 1 message pending Interrupt 
1274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: new state of the CAN interrupts.
1284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: ENABLE or DISABLE.
1285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ITConfig(CAN_TypeDef* CANx, uint32_t CAN_IT, FunctionalState NewState)
1288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2195              		.loc 1 1288 0
 2196              		.cfi_startproc
 2197              		@ args = 0, pretend = 0, frame = 16
 2198              		@ frame_needed = 1, uses_anonymous_args = 0
 2199              		@ link register save eliminated.
 2200 0000 80B4     		push	{r7}
 2201              	.LCFI57:
 2202              		.cfi_def_cfa_offset 4
 2203              		.cfi_offset 7, -4
 2204 0002 85B0     		sub	sp, sp, #20
 2205              	.LCFI58:
 2206              		.cfi_def_cfa_offset 24
 2207 0004 00AF     		add	r7, sp, #0
 2208              	.LCFI59:
 2209              		.cfi_def_cfa_register 7
 2210 0006 F860     		str	r0, [r7, #12]
 2211 0008 B960     		str	r1, [r7, #8]
 2212 000a 1346     		mov	r3, r2
 2213 000c FB71     		strb	r3, [r7, #7]
1289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
1292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 2214              		.loc 1 1294 0
 2215 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2216 0010 002B     		cmp	r3, #0
 2217 0012 06D0     		beq	.L126
1295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable the selected CANx interrupt */
1297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->IER |= CAN_IT;
 2218              		.loc 1 1297 0
 2219 0014 FB68     		ldr	r3, [r7, #12]
 2220 0016 5A69     		ldr	r2, [r3, #20]
 2221 0018 BB68     		ldr	r3, [r7, #8]
 2222 001a 1A43     		orrs	r2, r2, r3
 2223 001c FB68     		ldr	r3, [r7, #12]
 2224 001e 5A61     		str	r2, [r3, #20]
 2225 0020 06E0     		b	.L125
 2226              	.L126:
1298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable the selected CANx interrupt */
1302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->IER &= ~CAN_IT;
 2227              		.loc 1 1302 0
 2228 0022 FB68     		ldr	r3, [r7, #12]
 2229 0024 5A69     		ldr	r2, [r3, #20]
 2230 0026 BB68     		ldr	r3, [r7, #8]
 2231 0028 DB43     		mvns	r3, r3
 2232 002a 1A40     		ands	r2, r2, r3
 2233 002c FB68     		ldr	r3, [r7, #12]
 2234 002e 5A61     		str	r2, [r3, #20]
 2235              	.L125:
1303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2236              		.loc 1 1304 0
 2237 0030 1437     		adds	r7, r7, #20
 2238 0032 BD46     		mov	sp, r7
 2239              		@ sp needed
 2240 0034 5DF8047B 		ldr	r7, [sp], #4
 2241 0038 7047     		bx	lr
 2242              		.cfi_endproc
 2243              	.LFE129:
 2245 003a 00BF     		.section	.text.CAN_GetFlagStatus,"ax",%progbits
 2246              		.align	2
 2247              		.global	CAN_GetFlagStatus
 2248              		.thumb
 2249              		.thumb_func
 2251              	CAN_GetFlagStatus:
 2252              	.LFB130:
1305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the specified CAN flag is set or not.
1307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FLAG: specifies the flag to check.
1309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP0: Request MailBox0 Flag
1311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP1: Request MailBox1 Flag
1312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP2: Request MailBox2 Flag
1313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FMP0: FIFO 0 Message Pending Flag   
1314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF0: FIFO 0 Full Flag       
1315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV0: FIFO 0 Overrun Flag 
1316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FMP1: FIFO 1 Message Pending Flag   
1317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF1: FIFO 1 Full Flag        
1318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV1: FIFO 1 Overrun Flag     
1319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_WKU: Wake up Flag
1320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_SLAK: Sleep acknowledge Flag 
1321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_EWG: Error Warning Flag
1322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_EPV: Error Passive Flag  
1323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_BOF: Bus-Off Flag    
1324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_LEC: Last error code Flag      
1325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The new state of CAN_FLAG (SET or RESET).
1326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** FlagStatus CAN_GetFlagStatus(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
1328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2253              		.loc 1 1328 0
 2254              		.cfi_startproc
 2255              		@ args = 0, pretend = 0, frame = 16
 2256              		@ frame_needed = 1, uses_anonymous_args = 0
 2257              		@ link register save eliminated.
 2258 0000 80B4     		push	{r7}
 2259              	.LCFI60:
 2260              		.cfi_def_cfa_offset 4
 2261              		.cfi_offset 7, -4
 2262 0002 85B0     		sub	sp, sp, #20
 2263              	.LCFI61:
 2264              		.cfi_def_cfa_offset 24
 2265 0004 00AF     		add	r7, sp, #0
 2266              	.LCFI62:
 2267              		.cfi_def_cfa_register 7
 2268 0006 7860     		str	r0, [r7, #4]
 2269 0008 3960     		str	r1, [r7]
1329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   FlagStatus bitstatus = RESET;
 2270              		.loc 1 1329 0
 2271 000a 0023     		movs	r3, #0
 2272 000c FB73     		strb	r3, [r7, #15]
1330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_GET_FLAG(CAN_FLAG));
1334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if((CAN_FLAG & CAN_FLAGS_ESR) != (uint32_t)RESET)
 2273              		.loc 1 1336 0
 2274 000e 3B68     		ldr	r3, [r7]
 2275 0010 03F47003 		and	r3, r3, #15728640
 2276 0014 002B     		cmp	r3, #0
 2277 0016 0DD0     		beq	.L129
1337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->ESR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2278              		.loc 1 1339 0
 2279 0018 7B68     		ldr	r3, [r7, #4]
 2280 001a 9A69     		ldr	r2, [r3, #24]
 2281 001c 3B68     		ldr	r3, [r7]
 2282 001e 1340     		ands	r3, r3, r2
 2283 0020 C3F31303 		ubfx	r3, r3, #0, #20
 2284 0024 002B     		cmp	r3, #0
 2285 0026 02D0     		beq	.L130
1340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2286              		.loc 1 1342 0
 2287 0028 0123     		movs	r3, #1
 2288 002a FB73     		strb	r3, [r7, #15]
 2289 002c 48E0     		b	.L132
 2290              	.L130:
1343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2291              		.loc 1 1347 0
 2292 002e 0023     		movs	r3, #0
 2293 0030 FB73     		strb	r3, [r7, #15]
 2294 0032 45E0     		b	.L132
 2295              	.L129:
1348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_MSR) != (uint32_t)RESET)
 2296              		.loc 1 1350 0
 2297 0034 3B68     		ldr	r3, [r7]
 2298 0036 03F08073 		and	r3, r3, #16777216
 2299 003a 002B     		cmp	r3, #0
 2300 003c 0DD0     		beq	.L133
1351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2301              		.loc 1 1353 0
 2302 003e 7B68     		ldr	r3, [r7, #4]
 2303 0040 5A68     		ldr	r2, [r3, #4]
 2304 0042 3B68     		ldr	r3, [r7]
 2305 0044 1340     		ands	r3, r3, r2
 2306 0046 C3F31303 		ubfx	r3, r3, #0, #20
 2307 004a 002B     		cmp	r3, #0
 2308 004c 02D0     		beq	.L134
1354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2309              		.loc 1 1356 0
 2310 004e 0123     		movs	r3, #1
 2311 0050 FB73     		strb	r3, [r7, #15]
 2312 0052 35E0     		b	.L132
 2313              	.L134:
1357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2314              		.loc 1 1361 0
 2315 0054 0023     		movs	r3, #0
 2316 0056 FB73     		strb	r3, [r7, #15]
 2317 0058 32E0     		b	.L132
 2318              	.L133:
1362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_TSR) != (uint32_t)RESET)
 2319              		.loc 1 1364 0
 2320 005a 3B68     		ldr	r3, [r7]
 2321 005c 03F00063 		and	r3, r3, #134217728
 2322 0060 002B     		cmp	r3, #0
 2323 0062 0DD0     		beq	.L136
1365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->TSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2324              		.loc 1 1367 0
 2325 0064 7B68     		ldr	r3, [r7, #4]
 2326 0066 9A68     		ldr	r2, [r3, #8]
 2327 0068 3B68     		ldr	r3, [r7]
 2328 006a 1340     		ands	r3, r3, r2
 2329 006c C3F31303 		ubfx	r3, r3, #0, #20
 2330 0070 002B     		cmp	r3, #0
 2331 0072 02D0     		beq	.L137
1368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2332              		.loc 1 1370 0
 2333 0074 0123     		movs	r3, #1
 2334 0076 FB73     		strb	r3, [r7, #15]
 2335 0078 22E0     		b	.L132
 2336              	.L137:
1371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2337              		.loc 1 1375 0
 2338 007a 0023     		movs	r3, #0
 2339 007c FB73     		strb	r3, [r7, #15]
 2340 007e 1FE0     		b	.L132
 2341              	.L136:
1376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_RF0R) != (uint32_t)RESET)
 2342              		.loc 1 1378 0
 2343 0080 3B68     		ldr	r3, [r7]
 2344 0082 03F00073 		and	r3, r3, #33554432
 2345 0086 002B     		cmp	r3, #0
 2346 0088 0DD0     		beq	.L139
1379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->RF0R & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2347              		.loc 1 1381 0
 2348 008a 7B68     		ldr	r3, [r7, #4]
 2349 008c DA68     		ldr	r2, [r3, #12]
 2350 008e 3B68     		ldr	r3, [r7]
 2351 0090 1340     		ands	r3, r3, r2
 2352 0092 C3F31303 		ubfx	r3, r3, #0, #20
 2353 0096 002B     		cmp	r3, #0
 2354 0098 02D0     		beq	.L140
1382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2355              		.loc 1 1384 0
 2356 009a 0123     		movs	r3, #1
 2357 009c FB73     		strb	r3, [r7, #15]
 2358 009e 0FE0     		b	.L132
 2359              	.L140:
1385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2360              		.loc 1 1389 0
 2361 00a0 0023     		movs	r3, #0
 2362 00a2 FB73     		strb	r3, [r7, #15]
 2363 00a4 0CE0     		b	.L132
 2364              	.L139:
1390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* If(CAN_FLAG & CAN_FLAGS_RF1R != (uint32_t)RESET) */
1393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((uint32_t)(CANx->RF1R & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
 2365              		.loc 1 1395 0
 2366 00a6 7B68     		ldr	r3, [r7, #4]
 2367 00a8 1A69     		ldr	r2, [r3, #16]
 2368 00aa 3B68     		ldr	r3, [r7]
 2369 00ac 1340     		ands	r3, r3, r2
 2370 00ae C3F31303 		ubfx	r3, r3, #0, #20
 2371 00b2 002B     		cmp	r3, #0
 2372 00b4 02D0     		beq	.L142
1396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
 2373              		.loc 1 1398 0
 2374 00b6 0123     		movs	r3, #1
 2375 00b8 FB73     		strb	r3, [r7, #15]
 2376 00ba 01E0     		b	.L132
 2377              	.L142:
1399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
 2378              		.loc 1 1403 0
 2379 00bc 0023     		movs	r3, #0
 2380 00be FB73     		strb	r3, [r7, #15]
 2381              	.L132:
1404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the CAN_FLAG status */
1407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  bitstatus;
 2382              		.loc 1 1407 0
 2383 00c0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2384              		.loc 1 1408 0
 2385 00c2 1846     		mov	r0, r3
 2386 00c4 1437     		adds	r7, r7, #20
 2387 00c6 BD46     		mov	sp, r7
 2388              		@ sp needed
 2389 00c8 5DF8047B 		ldr	r7, [sp], #4
 2390 00cc 7047     		bx	lr
 2391              		.cfi_endproc
 2392              	.LFE130:
 2394 00ce 00BF     		.section	.text.CAN_ClearFlag,"ax",%progbits
 2395              		.align	2
 2396              		.global	CAN_ClearFlag
 2397              		.thumb
 2398              		.thumb_func
 2400              	CAN_ClearFlag:
 2401              	.LFB131:
1409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Clears the CAN's pending flags.
1412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FLAG: specifies the flag to clear.
1414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP0: Request MailBox0 Flag
1416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP1: Request MailBox1 Flag
1417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP2: Request MailBox2 Flag 
1418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF0: FIFO 0 Full Flag       
1419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV0: FIFO 0 Overrun Flag  
1420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF1: FIFO 1 Full Flag        
1421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV1: FIFO 1 Overrun Flag     
1422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_WKU: Wake up Flag
1423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_SLAK: Sleep acknowledge Flag    
1424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_LEC: Last error code Flag        
1425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ClearFlag(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
1428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2402              		.loc 1 1428 0
 2403              		.cfi_startproc
 2404              		@ args = 0, pretend = 0, frame = 16
 2405              		@ frame_needed = 1, uses_anonymous_args = 0
 2406              		@ link register save eliminated.
 2407 0000 80B4     		push	{r7}
 2408              	.LCFI63:
 2409              		.cfi_def_cfa_offset 4
 2410              		.cfi_offset 7, -4
 2411 0002 85B0     		sub	sp, sp, #20
 2412              	.LCFI64:
 2413              		.cfi_def_cfa_offset 24
 2414 0004 00AF     		add	r7, sp, #0
 2415              	.LCFI65:
 2416              		.cfi_def_cfa_register 7
 2417 0006 7860     		str	r0, [r7, #4]
 2418 0008 3960     		str	r1, [r7]
1429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t flagtmp=0;
 2419              		.loc 1 1429 0
 2420 000a 0023     		movs	r3, #0
 2421 000c FB60     		str	r3, [r7, #12]
1430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_CLEAR_FLAG(CAN_FLAG));
1433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FLAG == CAN_FLAG_LEC) /* ESR register */
 2422              		.loc 1 1434 0
 2423 000e 3A68     		ldr	r2, [r7]
 2424 0010 7023     		movs	r3, #112
 2425 0012 C3F2F003 		movt	r3, 12528
 2426 0016 9A42     		cmp	r2, r3
 2427 0018 03D1     		bne	.L145
1435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Clear the selected CAN flags */
1437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->ESR = (uint32_t)RESET;
 2428              		.loc 1 1437 0
 2429 001a 7B68     		ldr	r3, [r7, #4]
 2430 001c 0022     		movs	r2, #0
 2431 001e 9A61     		str	r2, [r3, #24]
 2432 0020 21E0     		b	.L144
 2433              	.L145:
1438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* MSR or TSR or RF0R or RF1R */
1440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     flagtmp = CAN_FLAG & 0x000FFFFF;
 2434              		.loc 1 1441 0
 2435 0022 3B68     		ldr	r3, [r7]
 2436 0024 C3F31303 		ubfx	r3, r3, #0, #20
 2437 0028 FB60     		str	r3, [r7, #12]
1442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CAN_FLAG & CAN_FLAGS_RF0R)!=(uint32_t)RESET)
 2438              		.loc 1 1443 0
 2439 002a 3B68     		ldr	r3, [r7]
 2440 002c 03F00073 		and	r3, r3, #33554432
 2441 0030 002B     		cmp	r3, #0
 2442 0032 03D0     		beq	.L147
1444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Receive Flags */
1446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = (uint32_t)(flagtmp);
 2443              		.loc 1 1446 0
 2444 0034 7B68     		ldr	r3, [r7, #4]
 2445 0036 FA68     		ldr	r2, [r7, #12]
 2446 0038 DA60     		str	r2, [r3, #12]
 2447 003a 14E0     		b	.L144
 2448              	.L147:
1447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else if ((CAN_FLAG & CAN_FLAGS_RF1R)!=(uint32_t)RESET)
 2449              		.loc 1 1448 0
 2450 003c 3B68     		ldr	r3, [r7]
 2451 003e 03F08063 		and	r3, r3, #67108864
 2452 0042 002B     		cmp	r3, #0
 2453 0044 03D0     		beq	.L148
1449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Receive Flags */
1451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = (uint32_t)(flagtmp);
 2454              		.loc 1 1451 0
 2455 0046 7B68     		ldr	r3, [r7, #4]
 2456 0048 FA68     		ldr	r2, [r7, #12]
 2457 004a 1A61     		str	r2, [r3, #16]
 2458 004c 0BE0     		b	.L144
 2459              	.L148:
1452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else if ((CAN_FLAG & CAN_FLAGS_TSR)!=(uint32_t)RESET)
 2460              		.loc 1 1453 0
 2461 004e 3B68     		ldr	r3, [r7]
 2462 0050 03F00063 		and	r3, r3, #134217728
 2463 0054 002B     		cmp	r3, #0
 2464 0056 03D0     		beq	.L149
1454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Transmit Flags */
1456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->TSR = (uint32_t)(flagtmp);
 2465              		.loc 1 1456 0
 2466 0058 7B68     		ldr	r3, [r7, #4]
 2467 005a FA68     		ldr	r2, [r7, #12]
 2468 005c 9A60     		str	r2, [r3, #8]
 2469 005e 02E0     		b	.L144
 2470              	.L149:
1457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else /* If((CAN_FLAG & CAN_FLAGS_MSR)!=(uint32_t)RESET) */
1459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Operating mode Flags */
1461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = (uint32_t)(flagtmp);
 2471              		.loc 1 1461 0
 2472 0060 7B68     		ldr	r3, [r7, #4]
 2473 0062 FA68     		ldr	r2, [r7, #12]
 2474 0064 5A60     		str	r2, [r3, #4]
 2475              	.L144:
1462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2476              		.loc 1 1464 0
 2477 0066 1437     		adds	r7, r7, #20
 2478 0068 BD46     		mov	sp, r7
 2479              		@ sp needed
 2480 006a 5DF8047B 		ldr	r7, [sp], #4
 2481 006e 7047     		bx	lr
 2482              		.cfi_endproc
 2483              	.LFE131:
 2485              		.section	.text.CAN_GetITStatus,"ax",%progbits
 2486              		.align	2
 2487              		.global	CAN_GetITStatus
 2488              		.thumb
 2489              		.thumb_func
 2491              	CAN_GetITStatus:
 2492              	.LFB132:
1465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the specified CANx interrupt has occurred or not.
1468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the CAN interrupt source to check.
1470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt 
1472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP0: FIFO 0 message pending Interrupt 
1473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP1: FIFO 1 message pending Interrupt 
1476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The current state of CAN_IT (SET or RESET).
1486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** ITStatus CAN_GetITStatus(CAN_TypeDef* CANx, uint32_t CAN_IT)
1488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2493              		.loc 1 1488 0
 2494              		.cfi_startproc
 2495              		@ args = 0, pretend = 0, frame = 16
 2496              		@ frame_needed = 1, uses_anonymous_args = 0
 2497 0000 80B5     		push	{r7, lr}
 2498              	.LCFI66:
 2499              		.cfi_def_cfa_offset 8
 2500              		.cfi_offset 7, -8
 2501              		.cfi_offset 14, -4
 2502 0002 84B0     		sub	sp, sp, #16
 2503              	.LCFI67:
 2504              		.cfi_def_cfa_offset 24
 2505 0004 00AF     		add	r7, sp, #0
 2506              	.LCFI68:
 2507              		.cfi_def_cfa_register 7
 2508 0006 7860     		str	r0, [r7, #4]
 2509 0008 3960     		str	r1, [r7]
1489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ITStatus itstatus = RESET;
 2510              		.loc 1 1489 0
 2511 000a 0023     		movs	r3, #0
 2512 000c FB73     		strb	r3, [r7, #15]
1490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
1493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* check the interrupt enable bit */
1495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  if((CANx->IER & CAN_IT) != RESET)
 2513              		.loc 1 1495 0
 2514 000e 7B68     		ldr	r3, [r7, #4]
 2515 0010 5A69     		ldr	r2, [r3, #20]
 2516 0012 3B68     		ldr	r3, [r7]
 2517 0014 1340     		ands	r3, r3, r2
 2518 0016 002B     		cmp	r3, #0
 2519 0018 00F0B580 		beq	.L151
1496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  {
1497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* in case the Interrupt is enabled, .... */
1498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     switch (CAN_IT)
 2520              		.loc 1 1498 0
 2521 001c 3B68     		ldr	r3, [r7]
 2522 001e 402B     		cmp	r3, #64
 2523 0020 65D0     		beq	.L153
 2524 0022 402B     		cmp	r3, #64
 2525 0024 0FD8     		bhi	.L154
 2526 0026 042B     		cmp	r3, #4
 2527 0028 3DD0     		beq	.L155
 2528 002a 042B     		cmp	r3, #4
 2529 002c 04D8     		bhi	.L156
 2530 002e 012B     		cmp	r3, #1
 2531 0030 24D0     		beq	.L157
 2532 0032 022B     		cmp	r3, #2
 2533 0034 2ED0     		beq	.L158
 2534 0036 A2E0     		b	.L152
 2535              	.L156:
 2536 0038 102B     		cmp	r3, #16
 2537 003a 46D0     		beq	.L159
 2538 003c 202B     		cmp	r3, #32
 2539 003e 4DD0     		beq	.L160
 2540 0040 082B     		cmp	r3, #8
 2541 0042 39D0     		beq	.L161
 2542 0044 9BE0     		b	.L152
 2543              	.L154:
 2544 0046 B3F5006F 		cmp	r3, #2048
 2545 004a 00F08680 		beq	.L162
 2546 004e B3F5006F 		cmp	r3, #2048
 2547 0052 09D8     		bhi	.L163
 2548 0054 B3F5007F 		cmp	r3, #512
 2549 0058 6DD0     		beq	.L164
 2550 005a B3F5806F 		cmp	r3, #1024
 2551 005e 73D0     		beq	.L165
 2552 0060 B3F5807F 		cmp	r3, #256
 2553 0064 5ED0     		beq	.L166
 2554 0066 8AE0     		b	.L152
 2555              	.L163:
 2556 0068 B3F5803F 		cmp	r3, #65536
 2557 006c 48D0     		beq	.L167
 2558 006e B3F5003F 		cmp	r3, #131072
 2559 0072 4ED0     		beq	.L168
 2560 0074 B3F5004F 		cmp	r3, #32768
 2561 0078 78D0     		beq	.L169
 2562 007a 80E0     		b	.L152
 2563              	.L157:
1499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_TME:
1501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_TSR_RQCPx bits */
1502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->TSR, CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2);  
 2564              		.loc 1 1502 0
 2565 007c 7B68     		ldr	r3, [r7, #4]
 2566 007e 9B68     		ldr	r3, [r3, #8]
 2567 0080 1846     		mov	r0, r3
 2568 0082 40F20111 		movw	r1, #257
 2569 0086 C0F20101 		movt	r1, 1
 2570 008a FFF7FEFF 		bl	CheckITStatus
 2571 008e 0346     		mov	r3, r0
 2572 0090 FB73     		strb	r3, [r7, #15]
1503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2573              		.loc 1 1503 0
 2574 0092 77E0     		b	.L170
 2575              	.L158:
1504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FMP0:
1505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FMP0 bit */
1506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FMP0);  
 2576              		.loc 1 1506 0
 2577 0094 7B68     		ldr	r3, [r7, #4]
 2578 0096 DB68     		ldr	r3, [r3, #12]
 2579 0098 1846     		mov	r0, r3
 2580 009a 0321     		movs	r1, #3
 2581 009c FFF7FEFF 		bl	CheckITStatus
 2582 00a0 0346     		mov	r3, r0
 2583 00a2 FB73     		strb	r3, [r7, #15]
1507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2584              		.loc 1 1507 0
 2585 00a4 6EE0     		b	.L170
 2586              	.L155:
1508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FF0:
1509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FULL0 bit */
1510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FULL0);  
 2587              		.loc 1 1510 0
 2588 00a6 7B68     		ldr	r3, [r7, #4]
 2589 00a8 DB68     		ldr	r3, [r3, #12]
 2590 00aa 1846     		mov	r0, r3
 2591 00ac 0821     		movs	r1, #8
 2592 00ae FFF7FEFF 		bl	CheckITStatus
 2593 00b2 0346     		mov	r3, r0
 2594 00b4 FB73     		strb	r3, [r7, #15]
1511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2595              		.loc 1 1511 0
 2596 00b6 65E0     		b	.L170
 2597              	.L161:
1512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FOV0:
1513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FOVR0 bit */
1514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FOVR0);  
 2598              		.loc 1 1514 0
 2599 00b8 7B68     		ldr	r3, [r7, #4]
 2600 00ba DB68     		ldr	r3, [r3, #12]
 2601 00bc 1846     		mov	r0, r3
 2602 00be 1021     		movs	r1, #16
 2603 00c0 FFF7FEFF 		bl	CheckITStatus
 2604 00c4 0346     		mov	r3, r0
 2605 00c6 FB73     		strb	r3, [r7, #15]
1515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2606              		.loc 1 1515 0
 2607 00c8 5CE0     		b	.L170
 2608              	.L159:
1516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FMP1:
1517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FMP1 bit */
1518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FMP1);  
 2609              		.loc 1 1518 0
 2610 00ca 7B68     		ldr	r3, [r7, #4]
 2611 00cc 1B69     		ldr	r3, [r3, #16]
 2612 00ce 1846     		mov	r0, r3
 2613 00d0 0321     		movs	r1, #3
 2614 00d2 FFF7FEFF 		bl	CheckITStatus
 2615 00d6 0346     		mov	r3, r0
 2616 00d8 FB73     		strb	r3, [r7, #15]
1519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2617              		.loc 1 1519 0
 2618 00da 53E0     		b	.L170
 2619              	.L160:
1520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FF1:
1521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FULL1 bit */
1522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FULL1);  
 2620              		.loc 1 1522 0
 2621 00dc 7B68     		ldr	r3, [r7, #4]
 2622 00de 1B69     		ldr	r3, [r3, #16]
 2623 00e0 1846     		mov	r0, r3
 2624 00e2 0821     		movs	r1, #8
 2625 00e4 FFF7FEFF 		bl	CheckITStatus
 2626 00e8 0346     		mov	r3, r0
 2627 00ea FB73     		strb	r3, [r7, #15]
1523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2628              		.loc 1 1523 0
 2629 00ec 4AE0     		b	.L170
 2630              	.L153:
1524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FOV1:
1525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FOVR1 bit */
1526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FOVR1);  
 2631              		.loc 1 1526 0
 2632 00ee 7B68     		ldr	r3, [r7, #4]
 2633 00f0 1B69     		ldr	r3, [r3, #16]
 2634 00f2 1846     		mov	r0, r3
 2635 00f4 1021     		movs	r1, #16
 2636 00f6 FFF7FEFF 		bl	CheckITStatus
 2637 00fa 0346     		mov	r3, r0
 2638 00fc FB73     		strb	r3, [r7, #15]
1527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2639              		.loc 1 1527 0
 2640 00fe 41E0     		b	.L170
 2641              	.L167:
1528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_WKU:
1529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_WKUI bit */
1530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_WKUI);  
 2642              		.loc 1 1530 0
 2643 0100 7B68     		ldr	r3, [r7, #4]
 2644 0102 5B68     		ldr	r3, [r3, #4]
 2645 0104 1846     		mov	r0, r3
 2646 0106 0821     		movs	r1, #8
 2647 0108 FFF7FEFF 		bl	CheckITStatus
 2648 010c 0346     		mov	r3, r0
 2649 010e FB73     		strb	r3, [r7, #15]
1531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2650              		.loc 1 1531 0
 2651 0110 38E0     		b	.L170
 2652              	.L168:
1532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_SLK:
1533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_SLAKI bit */
1534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_SLAKI);  
 2653              		.loc 1 1534 0
 2654 0112 7B68     		ldr	r3, [r7, #4]
 2655 0114 5B68     		ldr	r3, [r3, #4]
 2656 0116 1846     		mov	r0, r3
 2657 0118 1021     		movs	r1, #16
 2658 011a FFF7FEFF 		bl	CheckITStatus
 2659 011e 0346     		mov	r3, r0
 2660 0120 FB73     		strb	r3, [r7, #15]
1535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2661              		.loc 1 1535 0
 2662 0122 2FE0     		b	.L170
 2663              	.L166:
1536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_EWG:
1537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_EWGF bit */
1538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EWGF);  
 2664              		.loc 1 1538 0
 2665 0124 7B68     		ldr	r3, [r7, #4]
 2666 0126 9B69     		ldr	r3, [r3, #24]
 2667 0128 1846     		mov	r0, r3
 2668 012a 0121     		movs	r1, #1
 2669 012c FFF7FEFF 		bl	CheckITStatus
 2670 0130 0346     		mov	r3, r0
 2671 0132 FB73     		strb	r3, [r7, #15]
1539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2672              		.loc 1 1539 0
 2673 0134 26E0     		b	.L170
 2674              	.L164:
1540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_EPV:
1541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_EPVF bit */
1542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EPVF);  
 2675              		.loc 1 1542 0
 2676 0136 7B68     		ldr	r3, [r7, #4]
 2677 0138 9B69     		ldr	r3, [r3, #24]
 2678 013a 1846     		mov	r0, r3
 2679 013c 0221     		movs	r1, #2
 2680 013e FFF7FEFF 		bl	CheckITStatus
 2681 0142 0346     		mov	r3, r0
 2682 0144 FB73     		strb	r3, [r7, #15]
1543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2683              		.loc 1 1543 0
 2684 0146 1DE0     		b	.L170
 2685              	.L165:
1544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_BOF:
1545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_BOFF bit */
1546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_BOFF);  
 2686              		.loc 1 1546 0
 2687 0148 7B68     		ldr	r3, [r7, #4]
 2688 014a 9B69     		ldr	r3, [r3, #24]
 2689 014c 1846     		mov	r0, r3
 2690 014e 0421     		movs	r1, #4
 2691 0150 FFF7FEFF 		bl	CheckITStatus
 2692 0154 0346     		mov	r3, r0
 2693 0156 FB73     		strb	r3, [r7, #15]
1547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2694              		.loc 1 1547 0
 2695 0158 14E0     		b	.L170
 2696              	.L162:
1548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_LEC:
1549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_LEC bit */
1550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_LEC);  
 2697              		.loc 1 1550 0
 2698 015a 7B68     		ldr	r3, [r7, #4]
 2699 015c 9B69     		ldr	r3, [r3, #24]
 2700 015e 1846     		mov	r0, r3
 2701 0160 7021     		movs	r1, #112
 2702 0162 FFF7FEFF 		bl	CheckITStatus
 2703 0166 0346     		mov	r3, r0
 2704 0168 FB73     		strb	r3, [r7, #15]
1551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2705              		.loc 1 1551 0
 2706 016a 0BE0     		b	.L170
 2707              	.L169:
1552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_ERR:
1553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_ERRI bit */ 
1554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_ERRI); 
 2708              		.loc 1 1554 0
 2709 016c 7B68     		ldr	r3, [r7, #4]
 2710 016e 5B68     		ldr	r3, [r3, #4]
 2711 0170 1846     		mov	r0, r3
 2712 0172 0421     		movs	r1, #4
 2713 0174 FFF7FEFF 		bl	CheckITStatus
 2714 0178 0346     		mov	r3, r0
 2715 017a FB73     		strb	r3, [r7, #15]
1555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2716              		.loc 1 1555 0
 2717 017c 02E0     		b	.L170
 2718              	.L152:
1556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       default:
1557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* in case of error, return RESET */
1558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = RESET;
 2719              		.loc 1 1558 0
 2720 017e 0023     		movs	r3, #0
 2721 0180 FB73     		strb	r3, [r7, #15]
1559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 2722              		.loc 1 1559 0
 2723 0182 00BF     		nop
 2724              	.L170:
 2725 0184 01E0     		b	.L171
 2726              	.L151:
1560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* in case the Interrupt is not enabled, return RESET */
1565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     itstatus  = RESET;
 2727              		.loc 1 1565 0
 2728 0186 0023     		movs	r3, #0
 2729 0188 FB73     		strb	r3, [r7, #15]
 2730              	.L171:
1566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the CAN_IT status */
1569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  itstatus;
 2731              		.loc 1 1569 0
 2732 018a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2733              		.loc 1 1570 0
 2734 018c 1846     		mov	r0, r3
 2735 018e 1037     		adds	r7, r7, #16
 2736 0190 BD46     		mov	sp, r7
 2737              		@ sp needed
 2738 0192 80BD     		pop	{r7, pc}
 2739              		.cfi_endproc
 2740              	.LFE132:
 2742              		.section	.text.CAN_ClearITPendingBit,"ax",%progbits
 2743              		.align	2
 2744              		.global	CAN_ClearITPendingBit
 2745              		.thumb
 2746              		.thumb_func
 2748              	CAN_ClearITPendingBit:
 2749              	.LFB133:
1571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Clears the CANx's interrupt pending bits.
1574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the interrupt pending bit to clear.
1576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt
1578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt 
1589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ClearITPendingBit(CAN_TypeDef* CANx, uint32_t CAN_IT)
1592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2750              		.loc 1 1592 0
 2751              		.cfi_startproc
 2752              		@ args = 0, pretend = 0, frame = 8
 2753              		@ frame_needed = 1, uses_anonymous_args = 0
 2754              		@ link register save eliminated.
 2755 0000 80B4     		push	{r7}
 2756              	.LCFI69:
 2757              		.cfi_def_cfa_offset 4
 2758              		.cfi_offset 7, -4
 2759 0002 83B0     		sub	sp, sp, #12
 2760              	.LCFI70:
 2761              		.cfi_def_cfa_offset 16
 2762 0004 00AF     		add	r7, sp, #0
 2763              	.LCFI71:
 2764              		.cfi_def_cfa_register 7
 2765 0006 7860     		str	r0, [r7, #4]
 2766 0008 3960     		str	r1, [r7]
1593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_CLEAR_IT(CAN_IT));
1596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (CAN_IT)
 2767              		.loc 1 1597 0
 2768 000a 3B68     		ldr	r3, [r7]
 2769 000c B3F5807F 		cmp	r3, #256
 2770 0010 46D0     		beq	.L175
 2771 0012 B3F5807F 		cmp	r3, #256
 2772 0016 0DD8     		bhi	.L176
 2773 0018 082B     		cmp	r3, #8
 2774 001a 2DD0     		beq	.L177
 2775 001c 082B     		cmp	r3, #8
 2776 001e 04D8     		bhi	.L178
 2777 0020 012B     		cmp	r3, #1
 2778 0022 1ED0     		beq	.L179
 2779 0024 042B     		cmp	r3, #4
 2780 0026 23D0     		beq	.L180
1598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_TME:
1600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_TSR_RQCPx (rc_w1)*/
1601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->TSR = CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2;  
1602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FF0:
1604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF0R_FULL0 (rc_w1)*/
1605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FULL0; 
1606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FOV0:
1608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF0R_FOVR0 (rc_w1)*/
1609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FOVR0; 
1610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FF1:
1612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF1R_FULL1 (rc_w1)*/
1613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FULL1;  
1614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FOV1:
1616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF1R_FOVR1 (rc_w1)*/
1617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FOVR1; 
1618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_WKU:
1620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_WKUI (rc_w1)*/
1621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_WKUI;  
1622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_SLK:
1624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_SLAKI (rc_w1)*/ 
1625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_SLAKI;   
1626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_EWG:
1628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI;
1630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/ 
1631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_EPV:
1633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
1636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_BOF:
1638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */ 
1639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
1641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
1642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_LEC:
1643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /*  Clear LEC bits */
1644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
1645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_ERR:
1649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /*Clear LEC bits */
1650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
1651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note BOFF, EPVF and EWGF Flags are cleared by hardware depending on the CAN Bus status*/
1654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
1655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
1656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
 2781              		.loc 1 1656 0
 2782 0028 54E0     		b	.L173
 2783              	.L178:
1597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 2784              		.loc 1 1597 0
 2785 002a 202B     		cmp	r3, #32
 2786 002c 28D0     		beq	.L181
 2787 002e 402B     		cmp	r3, #64
 2788 0030 2AD0     		beq	.L182
 2789              		.loc 1 1656 0
 2790 0032 4FE0     		b	.L173
 2791              	.L176:
1597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 2792              		.loc 1 1597 0
 2793 0034 B3F5006F 		cmp	r3, #2048
 2794 0038 3ED0     		beq	.L183
 2795 003a B3F5006F 		cmp	r3, #2048
 2796 003e 06D8     		bhi	.L184
 2797 0040 B3F5007F 		cmp	r3, #512
 2798 0044 30D0     		beq	.L185
 2799 0046 B3F5806F 		cmp	r3, #1024
 2800 004a 31D0     		beq	.L186
 2801              		.loc 1 1656 0
 2802 004c 42E0     		b	.L173
 2803              	.L184:
1597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 2804              		.loc 1 1597 0
 2805 004e B3F5803F 		cmp	r3, #65536
 2806 0052 1DD0     		beq	.L187
 2807 0054 B3F5003F 		cmp	r3, #131072
 2808 0058 1ED0     		beq	.L188
 2809 005a B3F5004F 		cmp	r3, #32768
 2810 005e 32D0     		beq	.L189
 2811              		.loc 1 1656 0
 2812 0060 38E0     		b	.L173
 2813              	.L179:
1601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2814              		.loc 1 1601 0
 2815 0062 7A68     		ldr	r2, [r7, #4]
 2816 0064 40F20113 		movw	r3, #257
 2817 0068 C0F20103 		movt	r3, 1
 2818 006c 9360     		str	r3, [r2, #8]
1602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FF0:
 2819              		.loc 1 1602 0
 2820 006e 31E0     		b	.L173
 2821              	.L180:
1605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2822              		.loc 1 1605 0
 2823 0070 7B68     		ldr	r3, [r7, #4]
 2824 0072 0822     		movs	r2, #8
 2825 0074 DA60     		str	r2, [r3, #12]
1606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FOV0:
 2826              		.loc 1 1606 0
 2827 0076 2DE0     		b	.L173
 2828              	.L177:
1609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2829              		.loc 1 1609 0
 2830 0078 7B68     		ldr	r3, [r7, #4]
 2831 007a 1022     		movs	r2, #16
 2832 007c DA60     		str	r2, [r3, #12]
1610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FF1:
 2833              		.loc 1 1610 0
 2834 007e 29E0     		b	.L173
 2835              	.L181:
1613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2836              		.loc 1 1613 0
 2837 0080 7B68     		ldr	r3, [r7, #4]
 2838 0082 0822     		movs	r2, #8
 2839 0084 1A61     		str	r2, [r3, #16]
1614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FOV1:
 2840              		.loc 1 1614 0
 2841 0086 25E0     		b	.L173
 2842              	.L182:
1617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2843              		.loc 1 1617 0
 2844 0088 7B68     		ldr	r3, [r7, #4]
 2845 008a 1022     		movs	r2, #16
 2846 008c 1A61     		str	r2, [r3, #16]
1618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_WKU:
 2847              		.loc 1 1618 0
 2848 008e 21E0     		b	.L173
 2849              	.L187:
1621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2850              		.loc 1 1621 0
 2851 0090 7B68     		ldr	r3, [r7, #4]
 2852 0092 0822     		movs	r2, #8
 2853 0094 5A60     		str	r2, [r3, #4]
1622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_SLK:
 2854              		.loc 1 1622 0
 2855 0096 1DE0     		b	.L173
 2856              	.L188:
1625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2857              		.loc 1 1625 0
 2858 0098 7B68     		ldr	r3, [r7, #4]
 2859 009a 1022     		movs	r2, #16
 2860 009c 5A60     		str	r2, [r3, #4]
1626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_EWG:
 2861              		.loc 1 1626 0
 2862 009e 19E0     		b	.L173
 2863              	.L175:
1629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/ 
 2864              		.loc 1 1629 0
 2865 00a0 7B68     		ldr	r3, [r7, #4]
 2866 00a2 0422     		movs	r2, #4
 2867 00a4 5A60     		str	r2, [r3, #4]
1631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_EPV:
 2868              		.loc 1 1631 0
 2869 00a6 15E0     		b	.L173
 2870              	.L185:
1634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
 2871              		.loc 1 1634 0
 2872 00a8 7B68     		ldr	r3, [r7, #4]
 2873 00aa 0422     		movs	r2, #4
 2874 00ac 5A60     		str	r2, [r3, #4]
1636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_BOF:
 2875              		.loc 1 1636 0
 2876 00ae 11E0     		b	.L173
 2877              	.L186:
1639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
 2878              		.loc 1 1639 0
 2879 00b0 7B68     		ldr	r3, [r7, #4]
 2880 00b2 0422     		movs	r2, #4
 2881 00b4 5A60     		str	r2, [r3, #4]
1641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_LEC:
 2882              		.loc 1 1641 0
 2883 00b6 0DE0     		b	.L173
 2884              	.L183:
1644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
 2885              		.loc 1 1644 0
 2886 00b8 7B68     		ldr	r3, [r7, #4]
 2887 00ba 0022     		movs	r2, #0
 2888 00bc 9A61     		str	r2, [r3, #24]
1646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 2889              		.loc 1 1646 0
 2890 00be 7B68     		ldr	r3, [r7, #4]
 2891 00c0 0422     		movs	r2, #4
 2892 00c2 5A60     		str	r2, [r3, #4]
1647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_ERR:
 2893              		.loc 1 1647 0
 2894 00c4 06E0     		b	.L173
 2895              	.L189:
1650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
 2896              		.loc 1 1650 0
 2897 00c6 7B68     		ldr	r3, [r7, #4]
 2898 00c8 0022     		movs	r2, #0
 2899 00ca 9A61     		str	r2, [r3, #24]
1652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note BOFF, EPVF and EWGF Flags are cleared by hardware depending on the CAN Bus status*/
 2900              		.loc 1 1652 0
 2901 00cc 7B68     		ldr	r3, [r7, #4]
 2902 00ce 0422     		movs	r2, #4
 2903 00d0 5A60     		str	r2, [r3, #4]
1654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
 2904              		.loc 1 1654 0
 2905 00d2 00BF     		nop
 2906              	.L173:
1657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    }
1658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2907              		.loc 1 1658 0
 2908 00d4 0C37     		adds	r7, r7, #12
 2909 00d6 BD46     		mov	sp, r7
 2910              		@ sp needed
 2911 00d8 5DF8047B 		ldr	r7, [sp], #4
 2912 00dc 7047     		bx	lr
 2913              		.cfi_endproc
 2914              	.LFE133:
 2916 00de 00BF     		.section	.text.CheckITStatus,"ax",%progbits
 2917              		.align	2
 2918              		.thumb
 2919              		.thumb_func
 2921              	CheckITStatus:
 2922              	.LFB134:
1659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  /**
1660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
1661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the CAN interrupt has occurred or not.
1665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_Reg: specifies the CAN interrupt register to check.
1666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  It_Bit: specifies the interrupt source bit to check.
1667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The new state of the CAN Interrupt (SET or RESET).
1668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit)
1670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 2923              		.loc 1 1670 0
 2924              		.cfi_startproc
 2925              		@ args = 0, pretend = 0, frame = 16
 2926              		@ frame_needed = 1, uses_anonymous_args = 0
 2927              		@ link register save eliminated.
 2928 0000 80B4     		push	{r7}
 2929              	.LCFI72:
 2930              		.cfi_def_cfa_offset 4
 2931              		.cfi_offset 7, -4
 2932 0002 85B0     		sub	sp, sp, #20
 2933              	.LCFI73:
 2934              		.cfi_def_cfa_offset 24
 2935 0004 00AF     		add	r7, sp, #0
 2936              	.LCFI74:
 2937              		.cfi_def_cfa_register 7
 2938 0006 7860     		str	r0, [r7, #4]
 2939 0008 3960     		str	r1, [r7]
1671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ITStatus pendingbitstatus = RESET;
 2940              		.loc 1 1671 0
 2941 000a 0023     		movs	r3, #0
 2942 000c FB73     		strb	r3, [r7, #15]
1672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CAN_Reg & It_Bit) != (uint32_t)RESET)
 2943              		.loc 1 1673 0
 2944 000e 7A68     		ldr	r2, [r7, #4]
 2945 0010 3B68     		ldr	r3, [r7]
 2946 0012 1340     		ands	r3, r3, r2
 2947 0014 002B     		cmp	r3, #0
 2948 0016 02D0     		beq	.L192
1674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* CAN_IT is set */
1676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     pendingbitstatus = SET;
 2949              		.loc 1 1676 0
 2950 0018 0123     		movs	r3, #1
 2951 001a FB73     		strb	r3, [r7, #15]
 2952 001c 01E0     		b	.L193
 2953              	.L192:
1677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* CAN_IT is reset */
1681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     pendingbitstatus = RESET;
 2954              		.loc 1 1681 0
 2955 001e 0023     		movs	r3, #0
 2956 0020 FB73     		strb	r3, [r7, #15]
 2957              	.L193:
1682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return pendingbitstatus;
 2958              		.loc 1 1683 0
 2959 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 2960              		.loc 1 1684 0
 2961 0024 1846     		mov	r0, r3
 2962 0026 1437     		adds	r7, r7, #20
 2963 0028 BD46     		mov	sp, r7
 2964              		@ sp needed
 2965 002a 5DF8047B 		ldr	r7, [sp], #4
 2966 002e 7047     		bx	lr
 2967              		.cfi_endproc
 2968              	.LFE134:
 2970              		.text
 2971              	.Letext0:
 2972              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2973              		.file 3 "/usr/include/newlib/stdint.h"
 2974              		.file 4 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 2975              		.file 5 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_can.h"
 2976              		.file 6 "libs/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_can.c
     /tmp/ccosFjBU.s:20     .text.CAN_DeInit:0000000000000000 $t
     /tmp/ccosFjBU.s:25     .text.CAN_DeInit:0000000000000000 CAN_DeInit
     /tmp/ccosFjBU.s:78     .text.CAN_Init:0000000000000000 $t
     /tmp/ccosFjBU.s:83     .text.CAN_Init:0000000000000000 CAN_Init
     /tmp/ccosFjBU.s:359    .text.CAN_FilterInit:0000000000000000 $t
     /tmp/ccosFjBU.s:364    .text.CAN_FilterInit:0000000000000000 CAN_FilterInit
     /tmp/ccosFjBU.s:603    .text.CAN_StructInit:0000000000000000 $t
     /tmp/ccosFjBU.s:608    .text.CAN_StructInit:0000000000000000 CAN_StructInit
     /tmp/ccosFjBU.s:680    .text.CAN_SlaveStartBank:0000000000000000 $t
     /tmp/ccosFjBU.s:685    .text.CAN_SlaveStartBank:0000000000000000 CAN_SlaveStartBank
     /tmp/ccosFjBU.s:749    .text.CAN_DBGFreeze:0000000000000000 $t
     /tmp/ccosFjBU.s:754    .text.CAN_DBGFreeze:0000000000000000 CAN_DBGFreeze
     /tmp/ccosFjBU.s:803    .text.CAN_TTComModeCmd:0000000000000000 $t
     /tmp/ccosFjBU.s:808    .text.CAN_TTComModeCmd:0000000000000000 CAN_TTComModeCmd
     /tmp/ccosFjBU.s:893    .text.CAN_Transmit:0000000000000000 $t
     /tmp/ccosFjBU.s:898    .text.CAN_Transmit:0000000000000000 CAN_Transmit
     /tmp/ccosFjBU.s:1154   .text.CAN_TransmitStatus:0000000000000000 $t
     /tmp/ccosFjBU.s:1159   .text.CAN_TransmitStatus:0000000000000000 CAN_TransmitStatus
     /tmp/ccosFjBU.s:1324   .text.CAN_CancelTransmit:0000000000000000 $t
     /tmp/ccosFjBU.s:1329   .text.CAN_CancelTransmit:0000000000000000 CAN_CancelTransmit
     /tmp/ccosFjBU.s:1397   .text.CAN_Receive:0000000000000000 $t
     /tmp/ccosFjBU.s:1402   .text.CAN_Receive:0000000000000000 CAN_Receive
     /tmp/ccosFjBU.s:1613   .text.CAN_FIFORelease:0000000000000000 $t
     /tmp/ccosFjBU.s:1618   .text.CAN_FIFORelease:0000000000000000 CAN_FIFORelease
     /tmp/ccosFjBU.s:1667   .text.CAN_MessagePending:0000000000000000 $t
     /tmp/ccosFjBU.s:1672   .text.CAN_MessagePending:0000000000000000 CAN_MessagePending
     /tmp/ccosFjBU.s:1736   .text.CAN_OperatingModeRequest:0000000000000000 $t
     /tmp/ccosFjBU.s:1741   .text.CAN_OperatingModeRequest:0000000000000000 CAN_OperatingModeRequest
     /tmp/ccosFjBU.s:1921   .text.CAN_Sleep:0000000000000000 $t
     /tmp/ccosFjBU.s:1926   .text.CAN_Sleep:0000000000000000 CAN_Sleep
     /tmp/ccosFjBU.s:1977   .text.CAN_WakeUp:0000000000000000 $t
     /tmp/ccosFjBU.s:1982   .text.CAN_WakeUp:0000000000000000 CAN_WakeUp
     /tmp/ccosFjBU.s:2054   .text.CAN_GetLastErrorCode:0000000000000000 $t
     /tmp/ccosFjBU.s:2059   .text.CAN_GetLastErrorCode:0000000000000000 CAN_GetLastErrorCode
     /tmp/ccosFjBU.s:2099   .text.CAN_GetReceiveErrorCounter:0000000000000000 $t
     /tmp/ccosFjBU.s:2104   .text.CAN_GetReceiveErrorCounter:0000000000000000 CAN_GetReceiveErrorCounter
     /tmp/ccosFjBU.s:2143   .text.CAN_GetLSBTransmitErrorCounter:0000000000000000 $t
     /tmp/ccosFjBU.s:2148   .text.CAN_GetLSBTransmitErrorCounter:0000000000000000 CAN_GetLSBTransmitErrorCounter
     /tmp/ccosFjBU.s:2188   .text.CAN_ITConfig:0000000000000000 $t
     /tmp/ccosFjBU.s:2193   .text.CAN_ITConfig:0000000000000000 CAN_ITConfig
     /tmp/ccosFjBU.s:2246   .text.CAN_GetFlagStatus:0000000000000000 $t
     /tmp/ccosFjBU.s:2251   .text.CAN_GetFlagStatus:0000000000000000 CAN_GetFlagStatus
     /tmp/ccosFjBU.s:2395   .text.CAN_ClearFlag:0000000000000000 $t
     /tmp/ccosFjBU.s:2400   .text.CAN_ClearFlag:0000000000000000 CAN_ClearFlag
     /tmp/ccosFjBU.s:2486   .text.CAN_GetITStatus:0000000000000000 $t
     /tmp/ccosFjBU.s:2491   .text.CAN_GetITStatus:0000000000000000 CAN_GetITStatus
     /tmp/ccosFjBU.s:2921   .text.CheckITStatus:0000000000000000 CheckITStatus
     /tmp/ccosFjBU.s:2743   .text.CAN_ClearITPendingBit:0000000000000000 $t
     /tmp/ccosFjBU.s:2748   .text.CAN_ClearITPendingBit:0000000000000000 CAN_ClearITPendingBit
     /tmp/ccosFjBU.s:2917   .text.CheckITStatus:0000000000000000 $t
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
