   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_can.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CheckITStatus,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	CheckITStatus:
  25              	.LFB134:
  26              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @file    stm32f4xx_can.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          functionalities of the Controller area network (CAN) peripheral:           
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Initialization and Configuration 
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - CAN Frames Transmission 
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - CAN Frames Reception    
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Operation modes switch  
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Error management          
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *           - Interrupts and flags        
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @verbatim
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                               
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          ===================================================================      
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                                   How to use this driver
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          ===================================================================
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          1.  Enable the CAN controller interface clock using 
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                  RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN1, ENABLE); for CAN1 
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              and RCC_APB1PeriphClockCmd(RCC_APB1Periph_CAN2, ENABLE); for CAN2
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @note   In case you are using CAN2 only, you have to enable the CAN1 clock.
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *     
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          2. CAN pins configuration
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Enable the clock for the CAN GPIOs using the following function:
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);   
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Connect the involved CAN pins to AF9 using the following function 
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   GPIO_PinAFConfig(GPIOx, GPIO_PinSourcex, GPIO_AF_CANx); 
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                - Configure these CAN pins in alternate function mode by calling
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                  the function  GPIO_Init();
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *    
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          3.  Initialise and configure the CAN using CAN_Init() and 
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               CAN_FilterInit() functions.   
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          4.  Transmit the desired CAN frame using CAN_Transmit() function.
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          5.  Check the transmission of a CAN frame using CAN_TransmitStatus()
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              function.
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          6.  Cancel the transmission of a CAN frame using CAN_CancelTransmit()
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              function.  
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          7.  Receive a CAN frame using CAN_Recieve() function.
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          8.  Release the receive FIFOs using CAN_FIFORelease() function.
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          9. Return the number of pending received frames using 
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              CAN_MessagePending() function.            
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                   
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          10. To control CAN events you can use one of the following two methods:
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Check on CAN flags using the CAN_GetFlagStatus() function.  
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               - Use CAN interrupts through the function CAN_ITConfig() at 
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                 initialization phase and CAN_GetITStatus() function into 
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *                 interrupt routines to check if the event has occurred or not.
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             After checking on a flag you should clear it using CAN_ClearFlag()
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             function. And after checking on an interrupt event you should 
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *             clear it using CAN_ClearITPendingBit() function.            
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *               
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *              
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *  @endverbatim
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @attention
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ******************************************************************************  
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Includes ------------------------------------------------------------------*/
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #include "stm32f4xx_can.h"
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #include "stm32f4xx_rcc.h"
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN 
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief CAN driver modules
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */ 
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private typedef -----------------------------------------------------------*/
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private define ------------------------------------------------------------*/
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Master Control Register bits */
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define MCR_DBF           ((uint32_t)0x00010000) /* software master reset */
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Mailbox Transmit Request */
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define TMIDxR_TXRQ       ((uint32_t)0x00000001) /* Transmit mailbox request */
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* CAN Filter Master Register bits */
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define FMR_FINIT         ((uint32_t)0x00000001) /* Filter init mode */
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Time out for INAK bit */
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define INAK_TIMEOUT      ((uint32_t)0x0000FFFF)
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Time out for SLAK bit */
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define SLAK_TIMEOUT      ((uint32_t)0x0000FFFF)
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in TSR register */
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_TSR     ((uint32_t)0x08000000) 
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in RF1R register */
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_RF1R    ((uint32_t)0x04000000) 
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in RF0R register */
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_RF0R    ((uint32_t)0x02000000) 
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in MSR register */
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_MSR     ((uint32_t)0x01000000) 
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Flags in ESR register */
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_FLAGS_ESR     ((uint32_t)0x00F00000) 
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Mailboxes definition */
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_0   ((uint8_t)0x00)
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_1   ((uint8_t)0x01)
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_TXMAILBOX_2   ((uint8_t)0x02) 
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** #define CAN_MODE_MASK     ((uint32_t) 0x00000003)
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private macro -------------------------------------------------------------*/
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private variables ---------------------------------------------------------*/
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private function prototypes -----------------------------------------------*/
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /* Private functions ---------------------------------------------------------*/
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit);
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Private_Functions
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group1 Initialization and Configuration functions
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    Initialization and Configuration functions 
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       Initialization and Configuration functions
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Initialize the CAN peripherals : Prescaler, operating mode, the maximum number 
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      of time quanta to perform resynchronization, the number of time quanta in
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      Bit Segment 1 and 2 and many other modes. 
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      Refer to  @ref CAN_InitTypeDef  for more details.
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Configures the CAN reception filter.                                      
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Select the start bank filter for slave CAN.
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Enables or disables the Debug Freeze mode for CAN
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Enables or disables the CAN Time Trigger Operation communication mode
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Deinitializes the CAN peripheral registers to their default reset values.
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None.
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_DeInit(CAN_TypeDef* CANx)
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CANx == CAN1)
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable CAN1 reset state */
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, ENABLE);
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Release CAN1 from reset state */
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN1, DISABLE);
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {  
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable CAN2 reset state */
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, ENABLE);
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Release CAN2 from reset state */
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_CAN2, DISABLE);
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         parameters in the CAN_InitStruct.
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure that contains
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         the configuration information for the CAN peripheral.
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval Constant indicates initialization succeed which will be 
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_InitStatus_Failed or CAN_InitStatus_Success.
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Init(CAN_TypeDef* CANx, CAN_InitTypeDef* CAN_InitStruct)
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t InitStatus = CAN_InitStatus_Failed;
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t wait_ack = 0x00000000;
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TTCM));
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_ABOM));
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_AWUM));
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_NART));
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_RFLM));
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_InitStruct->CAN_TXFP));
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_MODE(CAN_InitStruct->CAN_Mode));
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_SJW(CAN_InitStruct->CAN_SJW));
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BS1(CAN_InitStruct->CAN_BS1));
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BS2(CAN_InitStruct->CAN_BS2));
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_PRESCALER(CAN_InitStruct->CAN_Prescaler));
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Exit from sleep mode */
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR &= (~(uint32_t)CAN_MCR_SLEEP);
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Request initialisation */
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR |= CAN_MCR_INRQ ;
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Wait the acknowledge */
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while (((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     wait_ack++;
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check acknowledge */
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->MSR & CAN_MSR_INAK) != CAN_MSR_INAK)
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     InitStatus = CAN_InitStatus_Failed;
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else 
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the time triggered communication mode */
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_TTCM == ENABLE)
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_TTCM;
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_TTCM;
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the automatic bus-off management */
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_ABOM == ENABLE)
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_ABOM;
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_ABOM;
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the automatic wake-up mode */
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_AWUM == ENABLE)
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_AWUM;
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_AWUM;
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the no automatic retransmission */
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_NART == ENABLE)
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_NART;
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_NART;
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the receive FIFO locked mode */
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_RFLM == ENABLE)
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_RFLM;
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_RFLM;
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the transmit FIFO priority */
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (CAN_InitStruct->CAN_TXFP == ENABLE)
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR |= CAN_MCR_TXFP;
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MCR &= ~(uint32_t)CAN_MCR_TXFP;
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set the bit timing register */
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->BTR = (uint32_t)((uint32_t)CAN_InitStruct->CAN_Mode << 30) | \
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                ((uint32_t)CAN_InitStruct->CAN_Prescaler - 1);
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request leave initialisation */
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= ~(uint32_t)CAN_MCR_INRQ;
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* Wait the acknowledge */
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    wait_ack = 0;
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    while (((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK) && (wait_ack != INAK_TIMEOUT))
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    {
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      wait_ack++;
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    }
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* ...and check acknowledged */
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MSR_INAK) == CAN_MSR_INAK)
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       InitStatus = CAN_InitStatus_Failed;
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       InitStatus = CAN_InitStatus_Success ;
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* At this step, return the status of initialization */
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return InitStatus;
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         parameters in the CAN_FilterInitStruct.
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FilterInitStruct: pointer to a CAN_FilterInitTypeDef structure that
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         contains the configuration information.
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_FilterInit(CAN_FilterInitTypeDef* CAN_FilterInitStruct)
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t filter_number_bit_pos = 0;
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_NUMBER(CAN_FilterInitStruct->CAN_FilterNumber));
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_MODE(CAN_FilterInitStruct->CAN_FilterMode));
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_SCALE(CAN_FilterInitStruct->CAN_FilterScale));
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FILTER_FIFO(CAN_FilterInitStruct->CAN_FilterFIFOAssignment));
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(CAN_FilterInitStruct->CAN_FilterActivation));
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   filter_number_bit_pos = ((uint32_t)1) << CAN_FilterInitStruct->CAN_FilterNumber;
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialisation mode for the filter */
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= FMR_FINIT;
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Deactivation */
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FA1R &= ~(uint32_t)filter_number_bit_pos;
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Scale */
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_16bit)
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 16-bit scale for the filter */
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FS1R &= ~(uint32_t)filter_number_bit_pos;
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* First 16-bit identifier and First 16-bit mask */
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Or First 16-bit identifier and Second 16-bit identifier */
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Second 16-bit identifier and Second 16-bit mask */
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh);
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterScale == CAN_FilterScale_32bit)
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit scale for the filter */
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FS1R |= filter_number_bit_pos;
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR1 = 
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit mask or Second 32-bit identifier */
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->sFilterRegister[CAN_FilterInitStruct->CAN_FilterNumber].FR2 = 
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow);
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter Mode */
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdMask)
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /*Id/Mask mode for the filter*/
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FM1R &= ~(uint32_t)filter_number_bit_pos;
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /*Identifier list mode for the filter*/
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FM1R |= (uint32_t)filter_number_bit_pos;
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter FIFO assignment */
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO0)
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* FIFO 0 assignation for the filter */
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FFA1R &= ~(uint32_t)filter_number_bit_pos;
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterFIFOAssignment == CAN_Filter_FIFO1)
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* FIFO 1 assignation for the filter */
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FFA1R |= (uint32_t)filter_number_bit_pos;
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Filter activation */
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FilterInitStruct->CAN_FilterActivation == ENABLE)
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CAN1->FA1R |= filter_number_bit_pos;
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Leave the initialisation mode for the filter */
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= ~FMR_FINIT;
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Fills each CAN_InitStruct member with its default value.
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_InitStruct: pointer to a CAN_InitTypeDef structure which ill be initialized.
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_StructInit(CAN_InitTypeDef* CAN_InitStruct)
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Reset CAN init structure parameters values */
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the time triggered communication mode */
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_TTCM = DISABLE;
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the automatic bus-off management */
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_ABOM = DISABLE;
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the automatic wake-up mode */
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_AWUM = DISABLE;
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the no automatic retransmission */
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_NART = DISABLE;
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the receive FIFO locked mode */
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_RFLM = DISABLE;
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the transmit FIFO priority */
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_TXFP = DISABLE;
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_Mode member */
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_Mode = CAN_Mode_Normal;
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_SJW member */
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_SJW = CAN_SJW_1tq;
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_BS1 member */
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_BS1 = CAN_BS1_4tq;
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_BS2 member */
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_BS2 = CAN_BS2_3tq;
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Initialize the CAN_Prescaler member */
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN_InitStruct->CAN_Prescaler = 1;
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Select the start bank filter for slave CAN.
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_BankNumber: Select the start slave bank filter from 1..27.
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_SlaveStartBank(uint8_t CAN_BankNumber) 
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_BANKNUMBER(CAN_BankNumber));
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Enter Initialisation mode for the filter */
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= FMR_FINIT;
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Select the start slave bank */
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= (uint32_t)0xFFFFC0F1 ;
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= (uint32_t)(CAN_BankNumber)<<8;
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Leave Initialisation mode for the filter */
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR &= ~FMR_FINIT;
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the DBG Freeze for CAN.
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: new state of the CAN peripheral. 
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: ENABLE (CAN reception/transmission is frozen
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          during debug. Reception FIFOs can still be accessed/controlled normally) 
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          or DISABLE (CAN is working during debug).
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_DBGFreeze(CAN_TypeDef* CANx, FunctionalState NewState)
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable Debug Freeze  */
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR |= MCR_DBF;
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable Debug Freeze */
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= ~MCR_DBF;
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the CAN Time TriggerOperation communication mode.
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @note   DLC must be programmed as 8 in order Time Stamp (2 bytes) to be 
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         sent over the CAN bus.  
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: Mode new state. This parameter can be: ENABLE or DISABLE.
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         When enabled, Time stamp (TIME[15:0]) value is  sent in the last two
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         data bytes of the 8-byte message: TIME[7:0] in data byte 6 and TIME[15:8] 
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         in data byte 7. 
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_TTComModeCmd(CAN_TypeDef* CANx, FunctionalState NewState)
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable the TTCM mode */
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR |= CAN_MCR_TTCM;
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set TGT bits */
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[0].TDTR |= ((uint32_t)CAN_TDT0R_TGT);
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR |= ((uint32_t)CAN_TDT1R_TGT);
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR |= ((uint32_t)CAN_TDT2R_TGT);
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable the TTCM mode */
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= (uint32_t)(~(uint32_t)CAN_MCR_TTCM);
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Reset TGT bits */
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[0].TDTR &= ((uint32_t)~CAN_TDT0R_TGT);
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR &= ((uint32_t)~CAN_TDT1R_TGT);
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR &= ((uint32_t)~CAN_TDT2R_TGT);
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group2 CAN Frames Transmission functions
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Frames Transmission functions 
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Frames Transmission functions
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Initiate and transmit a CAN frame message (if there is an empty mailbox).
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Check the transmission status of a CAN Frame
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    - Cancel a transmit request
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Initiates and transmits a CAN frame message.
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  TxMessage: pointer to a structure which contains CAN Id, CAN DLC and CAN data.
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The number of the mailbox that is used for transmission or
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_TxStatus_NoMailBox if there is no empty mailbox.
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Transmit(CAN_TypeDef* CANx, CanTxMsg* TxMessage)
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t transmit_mailbox = 0;
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IDTYPE(TxMessage->IDE));
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_RTR(TxMessage->RTR));
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_DLC(TxMessage->DLC));
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Select one empty transmit mailbox */
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->TSR&CAN_TSR_TME0) == CAN_TSR_TME0)
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 0;
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME1) == CAN_TSR_TME1)
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 1;
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if ((CANx->TSR&CAN_TSR_TME2) == CAN_TSR_TME2)
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = 2;
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     transmit_mailbox = CAN_TxStatus_NoMailBox;
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (transmit_mailbox != CAN_TxStatus_NoMailBox)
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the Id */
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR &= TMIDxR_TXRQ;
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (TxMessage->IDE == CAN_Id_Standard)
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       assert_param(IS_CAN_STDID(TxMessage->StdId));  
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->StdId << 21) | \
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       assert_param(IS_CAN_EXTID(TxMessage->ExtId));
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->sTxMailBox[transmit_mailbox].TIR |= ((TxMessage->ExtId << 3) | \
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the DLC */
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     TxMessage->DLC &= (uint8_t)0x0000000F;
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR &= (uint32_t)0xFFFFFFF0;
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR |= TxMessage->DLC;
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Set up the data field */
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDLR = (((uint32_t)TxMessage->Data[3] << 24) | 
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[0]));
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[4]));
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request transmission */
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TIR |= TMIDxR_TXRQ;
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return transmit_mailbox;
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks the transmission status of a CAN Frame.
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  TransmitMailbox: the number of the mailbox that is used for transmission.
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_TxStatus_Ok if the CAN driver transmits the message, 
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN_TxStatus_Failed in an other case.
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_TransmitStatus(CAN_TypeDef* CANx, uint8_t TransmitMailbox)
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t state = 0;
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(TransmitMailbox));
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (TransmitMailbox)
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_0): 
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0);
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): 
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1);
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): 
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state =   CANx->TSR &  (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2);
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       state = CAN_TxStatus_Failed;
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (state)
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit pending  */
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (0x0): state = CAN_TxStatus_Pending;
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit failed  */
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP0 | CAN_TSR_TME0): state = CAN_TxStatus_Failed;
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP1 | CAN_TSR_TME1): state = CAN_TxStatus_Failed;
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****      case (CAN_TSR_RQCP2 | CAN_TSR_TME2): state = CAN_TxStatus_Failed;
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* transmit succeeded  */
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP0 | CAN_TSR_TXOK0 | CAN_TSR_TME0):state = CAN_TxStatus_Ok;
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1):state = CAN_TxStatus_Ok;
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2):state = CAN_TxStatus_Ok;
 685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default: state = CAN_TxStatus_Failed;
 687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return (uint8_t) state;
 690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Cancels a transmit request.
 694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  Mailbox: Mailbox number.
 696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_CancelTransmit(CAN_TypeDef* CANx, uint8_t Mailbox)
 699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_TRANSMITMAILBOX(Mailbox));
 703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* abort transmission */
 704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (Mailbox)
 705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_0): CANx->TSR |= CAN_TSR_ABRQ0;
 707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): CANx->TSR |= CAN_TSR_ABRQ1;
 709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): CANx->TSR |= CAN_TSR_ABRQ2;
 711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
 713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group3 CAN Frames Reception functions
 722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Frames Reception functions 
 723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Frames Reception functions
 727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
 729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Receive a correct CAN frame
 730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Release a specified receive FIFO (2 FIFOs are available)
 731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the number of the pending received CAN frames
 732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Receives a correct CAN frame.
 739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: Receive FIFO number, CAN_FIFO0 or CAN_FIFO1.
 741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  RxMessage: pointer to a structure receive frame which contains CAN Id,
 742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         CAN DLC, CAN data and FMI number.
 743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_Receive(CAN_TypeDef* CANx, uint8_t FIFONumber, CanRxMsg* RxMessage)
 746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the Id */
 751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->IDE = (uint8_t)0x04 & CANx->sFIFOMailBox[FIFONumber].RIR;
 752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (RxMessage->IDE == CAN_Id_Standard)
 753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RxMessage->StdId = (uint32_t)0x000007FF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 21);
 755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     RxMessage->ExtId = (uint32_t)0x1FFFFFFF & (CANx->sFIFOMailBox[FIFONumber].RIR >> 3);
 759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->RTR = (uint8_t)0x02 & CANx->sFIFOMailBox[FIFONumber].RIR;
 762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the DLC */
 763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->DLC = (uint8_t)0x0F & CANx->sFIFOMailBox[FIFONumber].RDTR;
 764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the FMI */
 765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->FMI = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDTR >> 8);
 766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the data field */
 767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[0] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDLR;
 768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[1] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 8);
 769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[2] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 16);
 770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[3] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 24);
 771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[4] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDHR;
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[5] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 8);
 773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[6] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 16);
 774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[7] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 24);
 775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release the FIFO */
 776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO0 */
 777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF0R |= CAN_RF0R_RFOM0;
 780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO1 */
 782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF1R |= CAN_RF1R_RFOM1;
 785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Releases the specified receive FIFO.
 790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: FIFO to release, CAN_FIFO0 or CAN_FIFO1.
 792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
 793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_FIFORelease(CAN_TypeDef* CANx, uint8_t FIFONumber)
 795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO0 */
 800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF0R |= CAN_RF0R_RFOM0;
 803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release FIFO1 */
 805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* FIFONumber == CAN_FIFO1 */
 806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->RF1R |= CAN_RF1R_RFOM1;
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the number of pending received messages.
 813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  FIFONumber: Receive FIFO number, CAN_FIFO0 or CAN_FIFO1.
 815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval NbMessage : which is the number of pending message.
 816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_MessagePending(CAN_TypeDef* CANx, uint8_t FIFONumber)
 818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t message_pending=0;
 820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_FIFO(FIFONumber));
 823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (FIFONumber == CAN_FIFO0)
 824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = (uint8_t)(CANx->RF0R&(uint32_t)0x03);
 826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if (FIFONumber == CAN_FIFO1)
 828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = (uint8_t)(CANx->RF1R&(uint32_t)0x03);
 830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     message_pending = 0;
 834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return message_pending;
 836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group4 CAN Operation modes functions
 843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Operation modes functions 
 844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
 845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
 846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
 847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Operation modes functions
 848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
 849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to select the CAN Operation modes
 850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - sleep mode
 851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - normal mode 
 852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   - initialization mode
 853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
 855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
 856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Selects the CAN Operation mode.
 861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_OperatingMode: CAN Operating Mode.
 862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         This parameter can be one of @ref CAN_OperatingMode_TypeDef enumeration.
 863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval status of the requested mode which can be 
 864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         - CAN_ModeStatus_Failed:  CAN failed entering the specific mode 
 865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         - CAN_ModeStatus_Success: CAN Succeed entering the specific mode 
 866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_OperatingModeRequest(CAN_TypeDef* CANx, uint8_t CAN_OperatingMode)
 868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t status = CAN_ModeStatus_Failed;
 870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Timeout for INAK or also for SLAK bits*/
 872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t timeout = INAK_TIMEOUT; 
 873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_OPERATING_MODE(CAN_OperatingMode));
 877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_OperatingMode == CAN_OperatingMode_Initialization)
 879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request initialisation */
 881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_SLEEP)) | CAN_MCR_INRQ);
 882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK) && (timeout != 0))
 885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_INAK)
 889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else  if (CAN_OperatingMode == CAN_OperatingMode_Normal)
 898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request leave initialisation and sleep mode  and enter Normal mode */
 900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR &= (uint32_t)(~(CAN_MCR_SLEEP|CAN_MCR_INRQ));
 901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != 0) && (timeout!=0))
 904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != 0)
 908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else  if (CAN_OperatingMode == CAN_OperatingMode_Sleep)
 917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request Sleep mode */
 919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->MCR = (uint32_t)((CANx->MCR & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
 920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Wait the acknowledge */
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     while (((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK) && (timeout!=0))
 923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       timeout--;
 925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & CAN_MODE_MASK) != CAN_MSR_SLAK)
 927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Failed;
 929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
 931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       status = CAN_ModeStatus_Success;
 933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
 936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     status = CAN_ModeStatus_Failed;
 938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  (uint8_t) status;
 941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enters the Sleep (low power) mode.
 945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_Sleep_Ok if sleep entered, CAN_Sleep_Failed otherwise.
 947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_Sleep(CAN_TypeDef* CANx)
 949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t sleepstatus = CAN_Sleep_Failed;
 951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Request Sleep mode */
 956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    CANx->MCR = (((CANx->MCR) & (uint32_t)(~(uint32_t)CAN_MCR_INRQ)) | CAN_MCR_SLEEP);
 957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Sleep mode status */
 959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CANx->MSR & (CAN_MSR_SLAK|CAN_MSR_INAK)) == CAN_MSR_SLAK)
 960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Sleep mode not entered */
 962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     sleepstatus =  CAN_Sleep_Ok;
 963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* return sleep mode status */
 965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    return (uint8_t)sleepstatus;
 966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Wakes up the CAN peripheral from sleep mode .
 970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
 971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN_WakeUp_Ok if sleep mode left, CAN_WakeUp_Failed otherwise.
 972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
 973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_WakeUp(CAN_TypeDef* CANx)
 974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
 975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t wait_slak = SLAK_TIMEOUT;
 976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t wakeupstatus = CAN_WakeUp_Failed;
 977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
 980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Wake up request */
 982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CANx->MCR &= ~(uint32_t)CAN_MCR_SLEEP;
 983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Sleep mode status */
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   while(((CANx->MSR & CAN_MSR_SLAK) == CAN_MSR_SLAK)&&(wait_slak!=0x00))
 986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    wait_slak--;
 988:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if((CANx->MSR & CAN_MSR_SLAK) != CAN_MSR_SLAK)
 990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* wake up done : Sleep mode exited */
 992:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     wakeupstatus = CAN_WakeUp_Ok;
 993:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* return wakeup status */
 995:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return (uint8_t)wakeupstatus;
 996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 997:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 998:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
 999:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1002:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group5 CAN Bus Error management functions
1003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief    CAN Bus Error management functions 
1004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
1005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim    
1006:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
1007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       CAN Bus Error management functions
1008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
1009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to 
1010:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the CANx's last error code (LEC)
1011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the CANx Receive Error Counter (REC)
1012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    -  Return the LSB of the 9-bit CANx Transmit Error Counter(TEC).
1013:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
1014:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note If TEC is greater than 255, The CAN is in bus-off state.
1015:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note if REC or TEC are greater than 96, an Error warning flag occurs.
1016:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    @note if REC or TEC are greater than 127, an Error Passive Flag occurs.
1017:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                         
1018:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
1019:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
1020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1021:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1022:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1023:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the CANx's last error code (LEC).
1024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to select the CAN peripheral.
1025:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval Error code: 
1026:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_NoErr: No Error  
1027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_StuffErr: Stuff Error
1028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_FormErr: Form Error
1029:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_ACKErr : Acknowledgment Error
1030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_BitRecessiveErr: Bit Recessive Error
1031:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_BitDominantErr: Bit Dominant Error
1032:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_CRCErr: CRC Error
1033:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          - CAN_ERRORCODE_SoftwareSetErr: Software Set Error  
1034:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetLastErrorCode(CAN_TypeDef* CANx)
1036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
1037:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t errorcode=0;
1038:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the error code*/
1043:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   errorcode = (((uint8_t)CANx->ESR) & (uint8_t)CAN_ESR_LEC);
1044:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the error code*/
1046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return errorcode;
1047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
1048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1049:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1050:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the CANx Receive Error Counter (REC).
1051:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @note   In case of an error during reception, this counter is incremented 
1052:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         by 1 or by 8 depending on the error condition as defined by the CAN 
1053:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         standard. After every successful reception, the counter is 
1054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         decremented by 1 or reset to 120 if its value was higher than 128. 
1055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         When the counter value exceeds 127, the CAN controller enters the 
1056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *         error passive state.  
1057:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.  
1058:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval CAN Receive Error Counter. 
1059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetReceiveErrorCounter(CAN_TypeDef* CANx)
1061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
1062:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t counter=0;
1063:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1064:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1065:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the Receive Error Counter*/
1068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   counter = (uint8_t)((CANx->ESR & CAN_ESR_REC)>> 24);
1069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1070:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the Receive Error Counter*/
1071:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return counter;
1072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
1073:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1074:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1075:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1076:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Returns the LSB of the 9-bit CANx Transmit Error Counter(TEC).
1077:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1078:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval LSB of the 9-bit CAN Transmit Error Counter. 
1079:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1080:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** uint8_t CAN_GetLSBTransmitErrorCounter(CAN_TypeDef* CANx)
1081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
1082:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t counter=0;
1083:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1084:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1085:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1086:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1087:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the LSB of the 9-bit CANx Transmit Error Counter(TEC) */
1088:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   counter = (uint8_t)((CANx->ESR & CAN_ESR_TEC)>> 16);
1089:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1090:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the LSB of the 9-bit CANx Transmit Error Counter(TEC) */
1091:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return counter;
1092:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
1093:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1094:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
1095:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1096:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1097:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /** @defgroup CAN_Group6 Interrupts and flags management functions
1098:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *  @brief   Interrupts and flags management functions
1099:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  *
1100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @verbatim   
1101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================
1102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                    Interrupts and flags management functions
1103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  ===============================================================================  
1104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   This section provides functions allowing to configure the CAN Interrupts and 
1106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   to get the status and clear flags and Interrupts pending bits.
1107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The CAN provides 14 Interrupts sources and 15 Flags:
1109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============  
1111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       Flags :
1112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============
1113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The 15 flags can be divided on 4 groups: 
1114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    A. Transmit Flags
1116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------
1117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP0, 
1118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP1, 
1119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_RQCP2  : Request completed MailBoxes 0, 1 and 2  Flags
1120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when when the last request (transmit or abort) has 
1121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           been performed. 
1122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   B. Receive Flags
1124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------
1125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FMP0,
1127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FMP1   : FIFO 0 and 1 Message Pending Flags 
1128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set to signal that messages are pending in the receive 
1129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           FIFO.
1130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           These Flags are cleared only by hardware. 
1131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FF0,
1133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FF1    : FIFO 0 and 1 Full Flags
1134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when three messages are stored in the selected 
1135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           FIFO.                        
1136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FOV0              
1138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_FOV1   : FIFO 0 and 1 Overrun Flags
1139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when a new message has been received and passed 
1140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the filter while the FIFO was full.         
1141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   C. Operating Mode Flags
1143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ----------------------- 
1144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_WKU    : Wake up Flag
1145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set to signal that a SOF bit has been detected while 
1146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the CAN hardware was in Sleep mode. 
1147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         
1148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_SLAK   : Sleep acknowledge Flag
1149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set to signal that the CAN has entered Sleep Mode. 
1150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
1151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   D. Error Flags
1152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ----------------------- 
1153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_EWG    : Error Warning Flag
1154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when the warning limit has been reached (Receive 
1155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Error Counter or Transmit Error Counter greater than 96). 
1156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                             
1158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_EPV    : Error Passive Flag
1159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Set when the Error Passive limit has been reached 
1160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           (Receive Error Counter or Transmit Error Counter 
1161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           greater than 127).
1162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                              
1164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_BOF    : Bus-Off Flag
1165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set when CAN enters the bus-off state. The bus-off 
1166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           state is entered on TEC overflow, greater than 255.
1167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                    
1169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_FLAG_LEC    : Last error code Flag
1170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           set If a message has been transferred (reception or
1171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           transmission) with error, and the error code is hold.              
1172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============  
1174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    Interrupts :
1175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ===============
1176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The 14 interrupts can be divided on 4 groups: 
1177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    A. Transmit interrupt
1179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------   
1180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****           CAN_IT_TME   :  Transmit mailbox empty Interrupt
1181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           no transmit request are pending for Tx mailboxes.      
1183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    B. Receive Interrupts
1185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------          
1186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FMP0,
1187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FMP1    :  FIFO 0 and FIFO1 message pending Interrupts
1188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when 
1189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           messages are pending in the receive FIFO.
1190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           The corresponding interrupt pending bits are cleared 
1191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           only by hardware.
1192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 
1193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FF0,              
1194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FF1     :  FIFO 0 and FIFO1 full Interrupts
1195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when
1196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           three messages are stored in the selected FIFO.
1197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         
1198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FOV0,        
1199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_FOV1    :  FIFO 0 and FIFO1 overrun Interrupts        
1200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, these interrupt sources are pending when
1201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a new message has been received and passed the filter
1202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           while the FIFO was full.
1203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    C. Operating Mode Interrupts
1205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -------------------------------          
1206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_WKU     :  Wake-up Interrupt
1207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a SOF bit has been detected while the CAN hardware was 
1209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           in Sleep mode.
1210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                   
1211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_SLK     :  Sleep acknowledge Interrupt
1212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the CAN has entered Sleep Mode.       
1214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    D. Error Interrupts 
1216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   -----------------------         
1217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_EWG     :  Error warning Interrupt 
1218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the warning limit has been reached (Receive Error 
1220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Counter or Transmit Error Counter=96). 
1221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                
1222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_EPV     :  Error passive Interrupt        
1223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           the Error Passive limit has been reached (Receive 
1225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           Error Counter or Transmit Error Counter>127).
1226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_BOF     :  Bus-off Interrupt
1228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when
1229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           CAN enters the bus-off state. The bus-off state is 
1230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           entered on TEC overflow, greater than 255.
1231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           This Flag is cleared only by hardware.
1232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                   
1233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_LEC     :  Last error code Interrupt        
1234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending  when
1235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           a message has been transferred (reception or
1236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           transmission) with error, and the error code is hold.
1237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           
1238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         CAN_IT_ERR     :  Error Interrupt
1239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           if enabled, this interrupt source is pending when 
1240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                           an error condition is pending.      
1241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                       
1242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   Managing the CAN controller events :
1244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ------------------------------------ 
1245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   The user should identify which mode will be used in his application to manage 
1246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   the CAN controller events: Polling mode or Interrupt mode.
1247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   1.  In the Polling Mode it is advised to use the following functions:
1249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_GetFlagStatus() : to check if flags events occur. 
1250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ClearFlag()     : to clear the flags events.
1251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   2.  In the Interrupt Mode it is advised to use the following functions:
1255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ITConfig()       : to enable or disable the interrupt source.
1256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_GetITStatus()    : to check if Interrupt occurs.
1257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       - CAN_ClearITPendingBit() : to clear the Interrupt pending Bit (corresponding Flag).
1258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       @note  This function has no impact on CAN_IT_FMP0 and CAN_IT_FMP1 Interrupts 
1259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****              pending bits since there are cleared only by hardware. 
1260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** @endverbatim
1262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @{
1263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */ 
1264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Enables or disables the specified CANx interrupts.
1266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the CAN interrupt sources to be enabled or disabled.
1268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: 
1269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt 
1270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP0: FIFO 0 message pending Interrupt 
1271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP1: FIFO 1 message pending Interrupt 
1274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  NewState: new state of the CAN interrupts.
1284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be: ENABLE or DISABLE.
1285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ITConfig(CAN_TypeDef* CANx, uint32_t CAN_IT, FunctionalState NewState)
1288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
1289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
1292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (NewState != DISABLE)
1295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Enable the selected CANx interrupt */
1297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->IER |= CAN_IT;
1298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Disable the selected CANx interrupt */
1302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->IER &= ~CAN_IT;
1303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
1305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the specified CAN flag is set or not.
1307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FLAG: specifies the flag to check.
1309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP0: Request MailBox0 Flag
1311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP1: Request MailBox1 Flag
1312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP2: Request MailBox2 Flag
1313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FMP0: FIFO 0 Message Pending Flag   
1314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF0: FIFO 0 Full Flag       
1315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV0: FIFO 0 Overrun Flag 
1316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FMP1: FIFO 1 Message Pending Flag   
1317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF1: FIFO 1 Full Flag        
1318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV1: FIFO 1 Overrun Flag     
1319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_WKU: Wake up Flag
1320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_SLAK: Sleep acknowledge Flag 
1321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_EWG: Error Warning Flag
1322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_EPV: Error Passive Flag  
1323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_BOF: Bus-Off Flag    
1324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_LEC: Last error code Flag      
1325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The new state of CAN_FLAG (SET or RESET).
1326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** FlagStatus CAN_GetFlagStatus(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
1328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
1329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   FlagStatus bitstatus = RESET;
1330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_GET_FLAG(CAN_FLAG));
1334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if((CAN_FLAG & CAN_FLAGS_ESR) != (uint32_t)RESET)
1337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->ESR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
1340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
1343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
1348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_MSR) != (uint32_t)RESET)
1351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->MSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
1354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
1357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
1362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_TSR) != (uint32_t)RESET)
1365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->TSR & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
1368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
1371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
1376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else if((CAN_FLAG & CAN_FLAGS_RF0R) != (uint32_t)RESET)
1379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CANx->RF0R & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
1382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
1385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
1390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* If(CAN_FLAG & CAN_FLAGS_RF1R != (uint32_t)RESET) */
1393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
1394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Check the status of the specified CAN flag */
1395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((uint32_t)(CANx->RF1R & (CAN_FLAG & 0x000FFFFF)) != (uint32_t)RESET)
1396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is set */
1398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = SET;
1399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else
1401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
1402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* CAN_FLAG is reset */
1403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       bitstatus = RESET;
1404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the CAN_FLAG status */
1407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  bitstatus;
1408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
1409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Clears the CAN's pending flags.
1412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_FLAG: specifies the flag to clear.
1414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP0: Request MailBox0 Flag
1416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP1: Request MailBox1 Flag
1417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_RQCP2: Request MailBox2 Flag 
1418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF0: FIFO 0 Full Flag       
1419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV0: FIFO 0 Overrun Flag  
1420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FF1: FIFO 1 Full Flag        
1421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_FOV1: FIFO 1 Overrun Flag     
1422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_WKU: Wake up Flag
1423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_SLAK: Sleep acknowledge Flag    
1424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_FLAG_LEC: Last error code Flag        
1425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ClearFlag(CAN_TypeDef* CANx, uint32_t CAN_FLAG)
1428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
1429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t flagtmp=0;
1430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_CLEAR_FLAG(CAN_FLAG));
1433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (CAN_FLAG == CAN_FLAG_LEC) /* ESR register */
1435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Clear the selected CAN flags */
1437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->ESR = (uint32_t)RESET;
1438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else /* MSR or TSR or RF0R or RF1R */
1440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     flagtmp = CAN_FLAG & 0x000FFFFF;
1442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if ((CAN_FLAG & CAN_FLAGS_RF0R)!=(uint32_t)RESET)
1444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Receive Flags */
1446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = (uint32_t)(flagtmp);
1447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else if ((CAN_FLAG & CAN_FLAGS_RF1R)!=(uint32_t)RESET)
1449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Receive Flags */
1451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = (uint32_t)(flagtmp);
1452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else if ((CAN_FLAG & CAN_FLAGS_TSR)!=(uint32_t)RESET)
1454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Transmit Flags */
1456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->TSR = (uint32_t)(flagtmp);
1457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     else /* If((CAN_FLAG & CAN_FLAGS_MSR)!=(uint32_t)RESET) */
1459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Operating mode Flags */
1461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = (uint32_t)(flagtmp);
1462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
1465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the specified CANx interrupt has occurred or not.
1468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the CAN interrupt source to check.
1470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt 
1472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP0: FIFO 0 message pending Interrupt 
1473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FMP1: FIFO 1 message pending Interrupt 
1476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt
1485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The current state of CAN_IT (SET or RESET).
1486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** ITStatus CAN_GetITStatus(CAN_TypeDef* CANx, uint32_t CAN_IT)
1488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
1489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ITStatus itstatus = RESET;
1490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_IT(CAN_IT));
1493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* check the interrupt enable bit */
1495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  if((CANx->IER & CAN_IT) != RESET)
1496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  {
1497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* in case the Interrupt is enabled, .... */
1498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     switch (CAN_IT)
1499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
1500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_TME:
1501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_TSR_RQCPx bits */
1502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->TSR, CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2);  
1503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FMP0:
1505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FMP0 bit */
1506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FMP0);  
1507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FF0:
1509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FULL0 bit */
1510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FULL0);  
1511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FOV0:
1513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF0R_FOVR0 bit */
1514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF0R, CAN_RF0R_FOVR0);  
1515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FMP1:
1517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FMP1 bit */
1518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FMP1);  
1519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FF1:
1521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FULL1 bit */
1522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FULL1);  
1523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FOV1:
1525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_RF1R_FOVR1 bit */
1526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->RF1R, CAN_RF1R_FOVR1);  
1527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_WKU:
1529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_WKUI bit */
1530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_WKUI);  
1531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_SLK:
1533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_SLAKI bit */
1534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_SLAKI);  
1535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_EWG:
1537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_EWGF bit */
1538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EWGF);  
1539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_EPV:
1541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_EPVF bit */
1542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_EPVF);  
1543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_BOF:
1545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_BOFF bit */
1546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_BOFF);  
1547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_LEC:
1549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_ESR_LEC bit */
1550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->ESR, CAN_ESR_LEC);  
1551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_ERR:
1553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* Check CAN_MSR_ERRI bit */ 
1554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = CheckITStatus(CANx->MSR, CAN_MSR_ERRI); 
1555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       default:
1557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         /* in case of error, return RESET */
1558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         itstatus = RESET;
1559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
1560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
1561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    /* in case the Interrupt is not enabled, return RESET */
1565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     itstatus  = RESET;
1566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Return the CAN_IT status */
1569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return  itstatus;
1570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
1571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Clears the CANx's interrupt pending bits.
1574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CANx: where x can be 1 or 2 to to select the CAN peripheral.
1575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_IT: specifies the interrupt pending bit to clear.
1576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *          This parameter can be one of the following values:
1577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_TME: Transmit mailbox empty Interrupt
1578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF0: FIFO 0 full Interrupt
1579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV0: FIFO 0 overrun Interrupt
1580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FF1: FIFO 1 full Interrupt
1581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_FOV1: FIFO 1 overrun Interrupt
1582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_WKU: Wake-up Interrupt
1583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_SLK: Sleep acknowledge Interrupt  
1584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EWG: Error warning Interrupt
1585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_EPV: Error passive Interrupt
1586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_BOF: Bus-off Interrupt  
1587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_LEC: Last error code Interrupt
1588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   *            @arg CAN_IT_ERR: Error Interrupt 
1589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval None
1590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** void CAN_ClearITPendingBit(CAN_TypeDef* CANx, uint32_t CAN_IT)
1592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
1593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
1594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_ALL_PERIPH(CANx));
1595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   assert_param(IS_CAN_CLEAR_IT(CAN_IT));
1596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   switch (CAN_IT)
1598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_TME:
1600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_TSR_RQCPx (rc_w1)*/
1601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->TSR = CAN_TSR_RQCP0|CAN_TSR_RQCP1|CAN_TSR_RQCP2;  
1602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FF0:
1604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF0R_FULL0 (rc_w1)*/
1605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FULL0; 
1606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FOV0:
1608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF0R_FOVR0 (rc_w1)*/
1609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF0R = CAN_RF0R_FOVR0; 
1610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FF1:
1612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF1R_FULL1 (rc_w1)*/
1613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FULL1;  
1614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FOV1:
1616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_RF1R_FOVR1 (rc_w1)*/
1617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->RF1R = CAN_RF1R_FOVR1; 
1618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_WKU:
1620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_WKUI (rc_w1)*/
1621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_WKUI;  
1622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_SLK:
1624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_SLAKI (rc_w1)*/ 
1625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_SLAKI;   
1626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_EWG:
1628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI;
1630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/ 
1631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_EPV:
1633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
1636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_BOF:
1638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */ 
1639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
1641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
1642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_LEC:
1643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /*  Clear LEC bits */
1644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
1645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
1648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_ERR:
1649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /*Clear LEC bits */
1650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->ESR = RESET; 
1651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
1652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       CANx->MSR = CAN_MSR_ERRI; 
1653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note BOFF, EPVF and EWGF Flags are cleared by hardware depending on the CAN Bus status*/
1654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
1655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
1656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        break;
1657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    }
1658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
1659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  /**
1660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @}
1661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
1663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
1664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @brief  Checks whether the CAN interrupt has occurred or not.
1665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  CAN_Reg: specifies the CAN interrupt register to check.
1666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @param  It_Bit: specifies the interrupt source bit to check.
1667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   * @retval The new state of the CAN Interrupt (SET or RESET).
1668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   */
1669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** static ITStatus CheckITStatus(uint32_t CAN_Reg, uint32_t It_Bit)
1670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** {
  27              		.loc 1 1670 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
1671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ITStatus pendingbitstatus = RESET;
1672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
1673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if ((CAN_Reg & It_Bit) != (uint32_t)RESET)
  33              		.loc 1 1673 0
  34 0000 0840     		ands	r0, r0, r1
  35              	.LVL1:
1674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* CAN_IT is set */
1676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     pendingbitstatus = SET;
1677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   else
1679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
1680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* CAN_IT is reset */
1681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     pendingbitstatus = RESET;
1682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
1683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   return pendingbitstatus;
1684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
  36              		.loc 1 1684 0
  37 0002 0030     		adds	r0, r0, #0
  38 0004 18BF     		it	ne
  39 0006 0120     		movne	r0, #1
  40              	.LVL2:
  41 0008 7047     		bx	lr
  42              		.cfi_endproc
  43              	.LFE134:
  45              		.section	.text.CAN_DeInit,"ax",%progbits
  46              		.align	2
  47              		.global	CAN_DeInit
  48              		.thumb
  49              		.thumb_func
  51              	CAN_DeInit:
  52              	.LFB110:
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
  53              		.loc 1 163 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              	.LVL3:
  58 0000 08B5     		push	{r3, lr}
  59              	.LCFI0:
  60              		.cfi_def_cfa_offset 8
  61              		.cfi_offset 3, -8
  62              		.cfi_offset 14, -4
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
  63              		.loc 1 167 0
  64 0002 4FF4C843 		mov	r3, #25600
  65 0006 C4F20003 		movt	r3, 16384
  66 000a 9842     		cmp	r0, r3
  67 000c 0AD1     		bne	.L5
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Release CAN1 from reset state */
  68              		.loc 1 170 0
  69 000e 4FF00070 		mov	r0, #33554432
  70              	.LVL4:
  71 0012 0121     		movs	r1, #1
  72 0014 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  73              	.LVL5:
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
  74              		.loc 1 172 0
  75 0018 4FF00070 		mov	r0, #33554432
  76 001c 0021     		movs	r1, #0
  77 001e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  78              	.LVL6:
  79 0022 08BD     		pop	{r3, pc}
  80              	.LVL7:
  81              	.L5:
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Release CAN2 from reset state */
  82              		.loc 1 177 0
  83 0024 4FF08060 		mov	r0, #67108864
  84              	.LVL8:
  85 0028 0121     		movs	r1, #1
  86 002a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  87              	.LVL9:
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
  88              		.loc 1 179 0
  89 002e 4FF08060 		mov	r0, #67108864
  90 0032 0021     		movs	r1, #0
  91 0034 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  92              	.LVL10:
  93 0038 08BD     		pop	{r3, pc}
  94              		.cfi_endproc
  95              	.LFE110:
  97 003a 00BF     		.section	.text.CAN_Init,"ax",%progbits
  98              		.align	2
  99              		.global	CAN_Init
 100              		.thumb
 101              		.thumb_func
 103              	CAN_Init:
 104              	.LFB111:
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t InitStatus = CAN_InitStatus_Failed;
 105              		.loc 1 193 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110              	.LVL11:
 111 0000 10B4     		push	{r4}
 112              	.LCFI1:
 113              		.cfi_def_cfa_offset 4
 114              		.cfi_offset 4, -4
 115              	.LVL12:
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 116              		.loc 1 211 0
 117 0002 0368     		ldr	r3, [r0]
 118 0004 23F00203 		bic	r3, r3, #2
 119 0008 0360     		str	r3, [r0]
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 120              		.loc 1 214 0
 121 000a 0368     		ldr	r3, [r0]
 122 000c 43F00103 		orr	r3, r3, #1
 123 0010 0360     		str	r3, [r0]
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 124              		.loc 1 195 0
 125 0012 0023     		movs	r3, #0
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 126              		.loc 1 217 0
 127 0014 4FF6FF74 		movw	r4, #65535
 128 0018 00E0     		b	.L8
 129              	.LVL13:
 130              	.L10:
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 131              		.loc 1 219 0
 132 001a 0133     		adds	r3, r3, #1
 133              	.LVL14:
 134              	.L8:
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 135              		.loc 1 217 0 discriminator 1
 136 001c 4268     		ldr	r2, [r0, #4]
 137 001e 12F0010F 		tst	r2, #1
 138 0022 01D1     		bne	.L9
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 139              		.loc 1 217 0 is_stmt 0 discriminator 2
 140 0024 A342     		cmp	r3, r4
 141 0026 F8D1     		bne	.L10
 142              	.L9:
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 143              		.loc 1 223 0 is_stmt 1
 144 0028 4368     		ldr	r3, [r0, #4]
 145              	.LVL15:
 146 002a 13F0010F 		tst	r3, #1
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 147              		.loc 1 225 0
 148 002e 08BF     		it	eq
 149 0030 0020     		moveq	r0, #0
 150              	.LVL16:
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 151              		.loc 1 223 0
 152 0032 59D0     		beq	.L11
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 153              		.loc 1 230 0
 154 0034 8B79     		ldrb	r3, [r1, #6]	@ zero_extendqisi2
 155 0036 012B     		cmp	r3, #1
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 156              		.loc 1 232 0
 157 0038 0368     		ldr	r3, [r0]
 158 003a 0CBF     		ite	eq
 159 003c 43F08003 		orreq	r3, r3, #128
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 160              		.loc 1 236 0
 161 0040 23F08003 		bicne	r3, r3, #128
 162 0044 0360     		str	r3, [r0]
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 163              		.loc 1 240 0
 164 0046 CB79     		ldrb	r3, [r1, #7]	@ zero_extendqisi2
 165 0048 012B     		cmp	r3, #1
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 166              		.loc 1 242 0
 167 004a 0368     		ldr	r3, [r0]
 168 004c 0CBF     		ite	eq
 169 004e 43F04003 		orreq	r3, r3, #64
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 170              		.loc 1 246 0
 171 0052 23F04003 		bicne	r3, r3, #64
 172 0056 0360     		str	r3, [r0]
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 173              		.loc 1 250 0
 174 0058 0B7A     		ldrb	r3, [r1, #8]	@ zero_extendqisi2
 175 005a 012B     		cmp	r3, #1
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 176              		.loc 1 252 0
 177 005c 0368     		ldr	r3, [r0]
 178 005e 0CBF     		ite	eq
 179 0060 43F02003 		orreq	r3, r3, #32
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 180              		.loc 1 256 0
 181 0064 23F02003 		bicne	r3, r3, #32
 182 0068 0360     		str	r3, [r0]
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 183              		.loc 1 260 0
 184 006a 4B7A     		ldrb	r3, [r1, #9]	@ zero_extendqisi2
 185 006c 012B     		cmp	r3, #1
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 186              		.loc 1 262 0
 187 006e 0368     		ldr	r3, [r0]
 188 0070 0CBF     		ite	eq
 189 0072 43F01003 		orreq	r3, r3, #16
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 190              		.loc 1 266 0
 191 0076 23F01003 		bicne	r3, r3, #16
 192 007a 0360     		str	r3, [r0]
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 193              		.loc 1 270 0
 194 007c 8B7A     		ldrb	r3, [r1, #10]	@ zero_extendqisi2
 195 007e 012B     		cmp	r3, #1
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 196              		.loc 1 272 0
 197 0080 0368     		ldr	r3, [r0]
 198 0082 0CBF     		ite	eq
 199 0084 43F00803 		orreq	r3, r3, #8
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 200              		.loc 1 276 0
 201 0088 23F00803 		bicne	r3, r3, #8
 202 008c 0360     		str	r3, [r0]
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 203              		.loc 1 280 0
 204 008e CB7A     		ldrb	r3, [r1, #11]	@ zero_extendqisi2
 205 0090 012B     		cmp	r3, #1
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 206              		.loc 1 282 0
 207 0092 0368     		ldr	r3, [r0]
 208 0094 0CBF     		ite	eq
 209 0096 43F00403 		orreq	r3, r3, #4
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 210              		.loc 1 286 0
 211 009a 23F00403 		bicne	r3, r3, #4
 212 009e 0360     		str	r3, [r0]
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 213              		.loc 1 290 0
 214 00a0 8A78     		ldrb	r2, [r1, #2]	@ zero_extendqisi2
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 215              		.loc 1 291 0
 216 00a2 CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 217 00a4 1B06     		lsls	r3, r3, #24
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 218              		.loc 1 290 0
 219 00a6 43EA8273 		orr	r3, r3, r2, lsl #30
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 220              		.loc 1 292 0
 221 00aa 0A79     		ldrb	r2, [r1, #4]	@ zero_extendqisi2
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS1 << 16) | \
 222              		.loc 1 291 0
 223 00ac 43EA0243 		orr	r3, r3, r2, lsl #16
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                ((uint32_t)CAN_InitStruct->CAN_Prescaler - 1);
 224              		.loc 1 293 0
 225 00b0 4A79     		ldrb	r2, [r1, #5]	@ zero_extendqisi2
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_BS2 << 20) | \
 226              		.loc 1 292 0
 227 00b2 43EA0252 		orr	r2, r3, r2, lsl #20
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 228              		.loc 1 294 0
 229 00b6 0B88     		ldrh	r3, [r1]
 230 00b8 013B     		subs	r3, r3, #1
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                ((uint32_t)CAN_InitStruct->CAN_Prescaler - 1);
 231              		.loc 1 293 0
 232 00ba 1343     		orrs	r3, r3, r2
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                 ((uint32_t)CAN_InitStruct->CAN_SJW << 24) | \
 233              		.loc 1 290 0
 234 00bc C361     		str	r3, [r0, #28]
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 235              		.loc 1 297 0
 236 00be 0368     		ldr	r3, [r0]
 237 00c0 23F00103 		bic	r3, r3, #1
 238 00c4 0360     		str	r3, [r0]
 239              	.LVL17:
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 240              		.loc 1 300 0
 241 00c6 0023     		movs	r3, #0
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    {
 242              		.loc 1 302 0
 243 00c8 4FF6FF71 		movw	r1, #65535
 244              	.LVL18:
 245 00cc 00E0     		b	.L24
 246              	.LVL19:
 247              	.L26:
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    }
 248              		.loc 1 304 0
 249 00ce 0133     		adds	r3, r3, #1
 250              	.LVL20:
 251              	.L24:
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    {
 252              		.loc 1 302 0 discriminator 1
 253 00d0 4268     		ldr	r2, [r0, #4]
 254 00d2 12F0010F 		tst	r2, #1
 255 00d6 01D0     		beq	.L25
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    {
 256              		.loc 1 302 0 is_stmt 0 discriminator 2
 257 00d8 8B42     		cmp	r3, r1
 258 00da F8D1     		bne	.L26
 259              	.L25:
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 260              		.loc 1 308 0 is_stmt 1
 261 00dc 4068     		ldr	r0, [r0, #4]
 262 00de 00F00100 		and	r0, r0, #1
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 263              		.loc 1 310 0
 264 00e2 80F00100 		eor	r0, r0, #1
 265 00e6 FFE7     		b	.L11
 266              	.LVL21:
 267              	.L11:
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 268              		.loc 1 320 0
 269 00e8 5DF8044B 		ldr	r4, [sp], #4
 270 00ec 7047     		bx	lr
 271              		.cfi_endproc
 272              	.LFE111:
 274 00ee 00BF     		.section	.text.CAN_FilterInit,"ax",%progbits
 275              		.align	2
 276              		.global	CAN_FilterInit
 277              		.thumb
 278              		.thumb_func
 280              	CAN_FilterInit:
 281              	.LFB112:
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t filter_number_bit_pos = 0;
 282              		.loc 1 330 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		@ link register save eliminated.
 287              	.LVL22:
 288 0000 70B4     		push	{r4, r5, r6}
 289              	.LCFI2:
 290              		.cfi_def_cfa_offset 12
 291              		.cfi_offset 4, -12
 292              		.cfi_offset 5, -8
 293              		.cfi_offset 6, -4
 294              	.LVL23:
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 295              		.loc 1 339 0
 296 0002 837A     		ldrb	r3, [r0, #10]	@ zero_extendqisi2
 297 0004 0121     		movs	r1, #1
 298 0006 9940     		lsls	r1, r1, r3
 299              	.LVL24:
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 300              		.loc 1 342 0
 301 0008 4FF4C843 		mov	r3, #25600
 302 000c C4F20003 		movt	r3, 16384
 303 0010 D3F80022 		ldr	r2, [r3, #512]
 304 0014 42F00102 		orr	r2, r2, #1
 305 0018 C3F80022 		str	r2, [r3, #512]
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 306              		.loc 1 345 0
 307 001c D3F81C42 		ldr	r4, [r3, #540]
 308 0020 CA43     		mvns	r2, r1
 309 0022 1440     		ands	r4, r4, r2
 310 0024 C3F81C42 		str	r4, [r3, #540]
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 311              		.loc 1 348 0
 312 0028 037B     		ldrb	r3, [r0, #12]	@ zero_extendqisi2
 313 002a CBB9     		cbnz	r3, .L30
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 314              		.loc 1 351 0
 315 002c 4FF4C843 		mov	r3, #25600
 316 0030 C4F20003 		movt	r3, 16384
 317 0034 D3F80C42 		ldr	r4, [r3, #524]
 318 0038 1440     		ands	r4, r4, r2
 319 003a C3F80C42 		str	r4, [r3, #524]
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 320              		.loc 1 355 0
 321 003e 847A     		ldrb	r4, [r0, #10]	@ zero_extendqisi2
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 322              		.loc 1 356 0
 323 0040 C688     		ldrh	r6, [r0, #6]
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 324              		.loc 1 357 0
 325 0042 4588     		ldrh	r5, [r0, #2]
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 326              		.loc 1 356 0
 327 0044 45EA0645 		orr	r5, r5, r6, lsl #16
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow) << 16) |
 328              		.loc 1 355 0
 329 0048 4834     		adds	r4, r4, #72
 330 004a 43F83450 		str	r5, [r3, r4, lsl #3]
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 331              		.loc 1 361 0
 332 004e 857A     		ldrb	r5, [r0, #10]	@ zero_extendqisi2
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh);
 333              		.loc 1 362 0
 334 0050 8688     		ldrh	r6, [r0, #4]
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 335              		.loc 1 363 0
 336 0052 0488     		ldrh	r4, [r0]
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh);
 337              		.loc 1 362 0
 338 0054 44EA0644 		orr	r4, r4, r6, lsl #16
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 339              		.loc 1 361 0
 340 0058 4835     		adds	r5, r5, #72
 341 005a 03EBC503 		add	r3, r3, r5, lsl #3
 342 005e 5C60     		str	r4, [r3, #4]
 343              	.L30:
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 344              		.loc 1 366 0
 345 0060 037B     		ldrb	r3, [r0, #12]	@ zero_extendqisi2
 346 0062 012B     		cmp	r3, #1
 347 0064 19D1     		bne	.L31
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit identifier or First 32-bit identifier */
 348              		.loc 1 369 0
 349 0066 4FF4C843 		mov	r3, #25600
 350 006a C4F20003 		movt	r3, 16384
 351 006e D3F80C42 		ldr	r4, [r3, #524]
 352 0072 0C43     		orrs	r4, r4, r1
 353 0074 C3F80C42 		str	r4, [r3, #524]
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 354              		.loc 1 371 0
 355 0078 847A     		ldrb	r4, [r0, #10]	@ zero_extendqisi2
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 356              		.loc 1 372 0
 357 007a 0688     		ldrh	r6, [r0]
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* 32-bit mask or Second 32-bit identifier */
 358              		.loc 1 373 0
 359 007c 4588     		ldrh	r5, [r0, #2]
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdLow);
 360              		.loc 1 372 0
 361 007e 45EA0645 		orr	r5, r5, r6, lsl #16
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterIdHigh) << 16) |
 362              		.loc 1 371 0
 363 0082 4834     		adds	r4, r4, #72
 364 0084 43F83450 		str	r5, [r3, r4, lsl #3]
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 365              		.loc 1 375 0
 366 0088 857A     		ldrb	r5, [r0, #10]	@ zero_extendqisi2
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow);
 367              		.loc 1 376 0
 368 008a 8688     		ldrh	r6, [r0, #4]
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 369              		.loc 1 377 0
 370 008c C488     		ldrh	r4, [r0, #6]
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         (0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdLow);
 371              		.loc 1 376 0
 372 008e 44EA0644 		orr	r4, r4, r6, lsl #16
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        ((0x0000FFFF & (uint32_t)CAN_FilterInitStruct->CAN_FilterMaskIdHigh) << 16) |
 373              		.loc 1 375 0
 374 0092 4835     		adds	r5, r5, #72
 375 0094 03EBC503 		add	r3, r3, r5, lsl #3
 376 0098 5C60     		str	r4, [r3, #4]
 377              	.L31:
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 378              		.loc 1 381 0
 379 009a C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 380 009c 4BB9     		cbnz	r3, .L32
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 381              		.loc 1 384 0
 382 009e 4FF4C843 		mov	r3, #25600
 383 00a2 C4F20003 		movt	r3, 16384
 384 00a6 D3F80442 		ldr	r4, [r3, #516]
 385 00aa 1440     		ands	r4, r4, r2
 386 00ac C3F80442 		str	r4, [r3, #516]
 387 00b0 08E0     		b	.L33
 388              	.L32:
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 389              		.loc 1 389 0
 390 00b2 4FF4C843 		mov	r3, #25600
 391 00b6 C4F20003 		movt	r3, 16384
 392 00ba D3F80442 		ldr	r4, [r3, #516]
 393 00be 0C43     		orrs	r4, r4, r1
 394 00c0 C3F80442 		str	r4, [r3, #516]
 395              	.L33:
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 396              		.loc 1 393 0
 397 00c4 0389     		ldrh	r3, [r0, #8]
 398 00c6 43B9     		cbnz	r3, .L34
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 399              		.loc 1 396 0
 400 00c8 4FF4C843 		mov	r3, #25600
 401 00cc C4F20003 		movt	r3, 16384
 402 00d0 D3F81442 		ldr	r4, [r3, #532]
 403 00d4 2240     		ands	r2, r2, r4
 404 00d6 C3F81422 		str	r2, [r3, #532]
 405              	.L34:
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 406              		.loc 1 399 0
 407 00da 0389     		ldrh	r3, [r0, #8]
 408 00dc 012B     		cmp	r3, #1
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 409              		.loc 1 402 0
 410 00de 01BF     		itttt	eq
 411 00e0 4FF4C843 		moveq	r3, #25600
 412 00e4 C4F20003 		movteq	r3, 16384
 413 00e8 D3F81422 		ldreq	r2, [r3, #532]
 414 00ec 0A43     		orreq	r2, r2, r1
 415 00ee 08BF     		it	eq
 416 00f0 C3F81422 		streq	r2, [r3, #532]
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 417              		.loc 1 406 0
 418 00f4 437B     		ldrb	r3, [r0, #13]	@ zero_extendqisi2
 419 00f6 012B     		cmp	r3, #1
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 420              		.loc 1 408 0
 421 00f8 01BF     		itttt	eq
 422 00fa 4FF4C843 		moveq	r3, #25600
 423 00fe C4F20003 		movteq	r3, 16384
 424 0102 D3F81C22 		ldreq	r2, [r3, #540]
 425 0106 1143     		orreq	r1, r2, r1
 426              	.LVL25:
 427 0108 08BF     		it	eq
 428 010a C3F81C12 		streq	r1, [r3, #540]
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 429              		.loc 1 412 0
 430 010e 4FF4C843 		mov	r3, #25600
 431 0112 C4F20003 		movt	r3, 16384
 432 0116 D3F80022 		ldr	r2, [r3, #512]
 433 011a 22F00102 		bic	r2, r2, #1
 434 011e C3F80022 		str	r2, [r3, #512]
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 435              		.loc 1 413 0
 436 0122 70BC     		pop	{r4, r5, r6}
 437 0124 7047     		bx	lr
 438              		.cfi_endproc
 439              	.LFE112:
 441 0126 00BF     		.section	.text.CAN_StructInit,"ax",%progbits
 442              		.align	2
 443              		.global	CAN_StructInit
 444              		.thumb
 445              		.thumb_func
 447              	CAN_StructInit:
 448              	.LFB113:
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Reset CAN init structure parameters values */
 449              		.loc 1 421 0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453              		@ link register save eliminated.
 454              	.LVL26:
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 455              		.loc 1 425 0
 456 0000 0023     		movs	r3, #0
 457 0002 8371     		strb	r3, [r0, #6]
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 458              		.loc 1 428 0
 459 0004 C371     		strb	r3, [r0, #7]
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 460              		.loc 1 431 0
 461 0006 0372     		strb	r3, [r0, #8]
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 462              		.loc 1 434 0
 463 0008 4372     		strb	r3, [r0, #9]
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 464              		.loc 1 437 0
 465 000a 8372     		strb	r3, [r0, #10]
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 466              		.loc 1 440 0
 467 000c C372     		strb	r3, [r0, #11]
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 468              		.loc 1 443 0
 469 000e 8370     		strb	r3, [r0, #2]
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 470              		.loc 1 446 0
 471 0010 C370     		strb	r3, [r0, #3]
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 472              		.loc 1 449 0
 473 0012 0323     		movs	r3, #3
 474 0014 0371     		strb	r3, [r0, #4]
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 475              		.loc 1 452 0
 476 0016 0223     		movs	r3, #2
 477 0018 4371     		strb	r3, [r0, #5]
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 478              		.loc 1 455 0
 479 001a 0123     		movs	r3, #1
 480 001c 0380     		strh	r3, [r0]	@ movhi
 481 001e 7047     		bx	lr
 482              		.cfi_endproc
 483              	.LFE113:
 485              		.section	.text.CAN_SlaveStartBank,"ax",%progbits
 486              		.align	2
 487              		.global	CAN_SlaveStartBank
 488              		.thumb
 489              		.thumb_func
 491              	CAN_SlaveStartBank:
 492              	.LFB114:
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 493              		.loc 1 464 0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
 496              		@ frame_needed = 0, uses_anonymous_args = 0
 497              		@ link register save eliminated.
 498              	.LVL27:
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 499              		.loc 1 469 0
 500 0000 4FF4C843 		mov	r3, #25600
 501 0004 C4F20003 		movt	r3, 16384
 502 0008 D3F80022 		ldr	r2, [r3, #512]
 503 000c 42F00102 		orr	r2, r2, #1
 504 0010 C3F80022 		str	r2, [r3, #512]
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   CAN1->FMR |= (uint32_t)(CAN_BankNumber)<<8;
 505              		.loc 1 472 0
 506 0014 D3F80022 		ldr	r2, [r3, #512]
 507 0018 22F47C52 		bic	r2, r2, #16128
 508 001c 22F00E02 		bic	r2, r2, #14
 509 0020 C3F80022 		str	r2, [r3, #512]
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 510              		.loc 1 473 0
 511 0024 D3F80022 		ldr	r2, [r3, #512]
 512 0028 42EA0020 		orr	r0, r2, r0, lsl #8
 513              	.LVL28:
 514 002c C3F80002 		str	r0, [r3, #512]
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** }
 515              		.loc 1 476 0
 516 0030 D3F80022 		ldr	r2, [r3, #512]
 517 0034 22F00102 		bic	r2, r2, #1
 518 0038 C3F80022 		str	r2, [r3, #512]
 519 003c 7047     		bx	lr
 520              		.cfi_endproc
 521              	.LFE114:
 523 003e 00BF     		.section	.text.CAN_DBGFreeze,"ax",%progbits
 524              		.align	2
 525              		.global	CAN_DBGFreeze
 526              		.thumb
 527              		.thumb_func
 529              	CAN_DBGFreeze:
 530              	.LFB115:
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 531              		.loc 1 489 0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 0
 534              		@ frame_needed = 0, uses_anonymous_args = 0
 535              		@ link register save eliminated.
 536              	.LVL29:
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 537              		.loc 1 494 0
 538 0000 21B1     		cbz	r1, .L40
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 539              		.loc 1 497 0
 540 0002 0368     		ldr	r3, [r0]
 541 0004 43F48033 		orr	r3, r3, #65536
 542 0008 0360     		str	r3, [r0]
 543 000a 7047     		bx	lr
 544              	.L40:
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 545              		.loc 1 502 0
 546 000c 0368     		ldr	r3, [r0]
 547 000e 23F48033 		bic	r3, r3, #65536
 548 0012 0360     		str	r3, [r0]
 549 0014 7047     		bx	lr
 550              		.cfi_endproc
 551              	.LFE115:
 553 0016 00BF     		.section	.text.CAN_TTComModeCmd,"ax",%progbits
 554              		.align	2
 555              		.global	CAN_TTComModeCmd
 556              		.thumb
 557              		.thumb_func
 559              	CAN_TTComModeCmd:
 560              	.LFB116:
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 561              		.loc 1 519 0
 562              		.cfi_startproc
 563              		@ args = 0, pretend = 0, frame = 0
 564              		@ frame_needed = 0, uses_anonymous_args = 0
 565              		@ link register save eliminated.
 566              	.LVL30:
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 567              		.loc 1 523 0
 568 0000 B1B1     		cbz	r1, .L43
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 569              		.loc 1 526 0
 570 0002 0368     		ldr	r3, [r0]
 571 0004 43F08003 		orr	r3, r3, #128
 572 0008 0360     		str	r3, [r0]
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR |= ((uint32_t)CAN_TDT1R_TGT);
 573              		.loc 1 529 0
 574 000a D0F88431 		ldr	r3, [r0, #388]
 575 000e 43F48073 		orr	r3, r3, #256
 576 0012 C0F88431 		str	r3, [r0, #388]
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR |= ((uint32_t)CAN_TDT2R_TGT);
 577              		.loc 1 530 0
 578 0016 D0F89431 		ldr	r3, [r0, #404]
 579 001a 43F48073 		orr	r3, r3, #256
 580 001e C0F89431 		str	r3, [r0, #404]
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 581              		.loc 1 531 0
 582 0022 D0F8A431 		ldr	r3, [r0, #420]
 583 0026 43F48073 		orr	r3, r3, #256
 584 002a C0F8A431 		str	r3, [r0, #420]
 585 002e 7047     		bx	lr
 586              	.L43:
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 587              		.loc 1 536 0
 588 0030 0368     		ldr	r3, [r0]
 589 0032 23F08003 		bic	r3, r3, #128
 590 0036 0360     		str	r3, [r0]
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[1].TDTR &= ((uint32_t)~CAN_TDT1R_TGT);
 591              		.loc 1 539 0
 592 0038 D0F88431 		ldr	r3, [r0, #388]
 593 003c 23F48073 		bic	r3, r3, #256
 594 0040 C0F88431 		str	r3, [r0, #388]
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[2].TDTR &= ((uint32_t)~CAN_TDT2R_TGT);
 595              		.loc 1 540 0
 596 0044 D0F89431 		ldr	r3, [r0, #404]
 597 0048 23F48073 		bic	r3, r3, #256
 598 004c C0F89431 		str	r3, [r0, #404]
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 599              		.loc 1 541 0
 600 0050 D0F8A431 		ldr	r3, [r0, #420]
 601 0054 23F48073 		bic	r3, r3, #256
 602 0058 C0F8A431 		str	r3, [r0, #420]
 603 005c 7047     		bx	lr
 604              		.cfi_endproc
 605              	.LFE116:
 607 005e 00BF     		.section	.text.CAN_Transmit,"ax",%progbits
 608              		.align	2
 609              		.global	CAN_Transmit
 610              		.thumb
 611              		.thumb_func
 613              	CAN_Transmit:
 614              	.LFB117:
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t transmit_mailbox = 0;
 615              		.loc 1 573 0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 0
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 619              		@ link register save eliminated.
 620              	.LVL31:
 621 0000 F0B4     		push	{r4, r5, r6, r7}
 622              	.LCFI3:
 623              		.cfi_def_cfa_offset 16
 624              		.cfi_offset 4, -16
 625              		.cfi_offset 5, -12
 626              		.cfi_offset 6, -8
 627              		.cfi_offset 7, -4
 628 0002 0346     		mov	r3, r0
 629              	.LVL32:
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 630              		.loc 1 582 0
 631 0004 8268     		ldr	r2, [r0, #8]
 632 0006 12F0806F 		tst	r2, #67108864
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 633              		.loc 1 584 0
 634 000a 18BF     		it	ne
 635 000c 0020     		movne	r0, #0
 636              	.LVL33:
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 637              		.loc 1 582 0
 638 000e 0DD1     		bne	.L46
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 639              		.loc 1 586 0
 640 0010 9A68     		ldr	r2, [r3, #8]
 641 0012 12F0006F 		tst	r2, #134217728
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 642              		.loc 1 588 0
 643 0016 18BF     		it	ne
 644 0018 0120     		movne	r0, #1
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 645              		.loc 1 586 0
 646 001a 07D1     		bne	.L46
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 647              		.loc 1 590 0
 648 001c 9868     		ldr	r0, [r3, #8]
 649 001e 00F08050 		and	r0, r0, #268435456
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 650              		.loc 1 592 0
 651 0022 0028     		cmp	r0, #0
 652 0024 0CBF     		ite	eq
 653 0026 0420     		moveq	r0, #4
 654 0028 0220     		movne	r0, #2
 655 002a FFE7     		b	.L46
 656              	.L46:
 657              	.LVL34:
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 658              		.loc 1 599 0
 659 002c 0428     		cmp	r0, #4
 660 002e 50D0     		beq	.L47
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     if (TxMessage->IDE == CAN_Id_Standard)
 661              		.loc 1 602 0
 662 0030 0546     		mov	r5, r0
 663 0032 00F11802 		add	r2, r0, #24
 664 0036 1201     		lsls	r2, r2, #4
 665 0038 9C58     		ldr	r4, [r3, r2]
 666 003a 04F00104 		and	r4, r4, #1
 667 003e 9C50     		str	r4, [r3, r2]
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 668              		.loc 1 603 0
 669 0040 0A7A     		ldrb	r2, [r1, #8]	@ zero_extendqisi2
 670 0042 52B9     		cbnz	r2, .L48
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 671              		.loc 1 606 0
 672 0044 00F11802 		add	r2, r0, #24
 673 0048 1201     		lsls	r2, r2, #4
 674 004a 9E58     		ldr	r6, [r3, r2]
 675 004c 0C68     		ldr	r4, [r1]
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 676              		.loc 1 607 0
 677 004e 4F7A     		ldrb	r7, [r1, #9]	@ zero_extendqisi2
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 678              		.loc 1 606 0
 679 0050 47EA4454 		orr	r4, r7, r4, lsl #21
 680 0054 3443     		orrs	r4, r4, r6
 681 0056 9C50     		str	r4, [r3, r2]
 682 0058 0CE0     		b	.L49
 683              	.L48:
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 684              		.loc 1 612 0
 685 005a 00F11804 		add	r4, r0, #24
 686 005e 2401     		lsls	r4, r4, #4
 687 0060 1F59     		ldr	r7, [r3, r4]
 688 0062 4E68     		ldr	r6, [r1, #4]
 689 0064 42EAC602 		orr	r2, r2, r6, lsl #3
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 690              		.loc 1 614 0
 691 0068 91F809C0 		ldrb	ip, [r1, #9]	@ zero_extendqisi2
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->RTR);
 692              		.loc 1 613 0
 693 006c 42EA0C02 		orr	r2, r2, ip
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                                   TxMessage->IDE | \
 694              		.loc 1 612 0
 695 0070 3A43     		orrs	r2, r2, r7
 696 0072 1A51     		str	r2, [r3, r4]
 697              	.L49:
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR &= (uint32_t)0xFFFFFFF0;
 698              		.loc 1 618 0
 699 0074 8A7A     		ldrb	r2, [r1, #10]	@ zero_extendqisi2
 700 0076 02F00F02 		and	r2, r2, #15
 701 007a 8A72     		strb	r2, [r1, #10]
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDTR |= TxMessage->DLC;
 702              		.loc 1 619 0
 703 007c 05F11804 		add	r4, r5, #24
 704 0080 2401     		lsls	r4, r4, #4
 705 0082 1A19     		adds	r2, r3, r4
 706 0084 5668     		ldr	r6, [r2, #4]
 707 0086 26F00F06 		bic	r6, r6, #15
 708 008a 5660     		str	r6, [r2, #4]
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 709              		.loc 1 620 0
 710 008c 5768     		ldr	r7, [r2, #4]
 711 008e 8E7A     		ldrb	r6, [r1, #10]	@ zero_extendqisi2
 712 0090 3E43     		orrs	r6, r6, r7
 713 0092 5660     		str	r6, [r2, #4]
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 714              		.loc 1 623 0
 715 0094 8A7B     		ldrb	r2, [r1, #14]	@ zero_extendqisi2
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 716              		.loc 1 624 0
 717 0096 4E7B     		ldrb	r6, [r1, #13]	@ zero_extendqisi2
 718 0098 3604     		lsls	r6, r6, #16
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 719              		.loc 1 623 0
 720 009a 46EA0266 		orr	r6, r6, r2, lsl #24
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[0]));
 721              		.loc 1 625 0
 722 009e 0A7B     		ldrb	r2, [r1, #12]	@ zero_extendqisi2
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[1] << 8) | 
 723              		.loc 1 624 0
 724 00a0 46EA0226 		orr	r6, r6, r2, lsl #8
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     CANx->sTxMailBox[transmit_mailbox].TDHR = (((uint32_t)TxMessage->Data[7] << 24) | 
 725              		.loc 1 626 0
 726 00a4 CA7A     		ldrb	r2, [r1, #11]	@ zero_extendqisi2
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[0]));
 727              		.loc 1 625 0
 728 00a6 1643     		orrs	r6, r6, r2
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[2] << 16) |
 729              		.loc 1 623 0
 730 00a8 03EB0512 		add	r2, r3, r5, lsl #4
 731 00ac 02F5C475 		add	r5, r2, #392
 732 00b0 C2F88861 		str	r6, [r2, #392]
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 733              		.loc 1 627 0
 734 00b4 8E7C     		ldrb	r6, [r1, #18]	@ zero_extendqisi2
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 735              		.loc 1 628 0
 736 00b6 4A7C     		ldrb	r2, [r1, #17]	@ zero_extendqisi2
 737 00b8 1204     		lsls	r2, r2, #16
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 738              		.loc 1 627 0
 739 00ba 42EA0662 		orr	r2, r2, r6, lsl #24
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[4]));
 740              		.loc 1 629 0
 741 00be 0E7C     		ldrb	r6, [r1, #16]	@ zero_extendqisi2
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[5] << 8) |
 742              		.loc 1 628 0
 743 00c0 42EA0622 		orr	r2, r2, r6, lsl #8
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     /* Request transmission */
 744              		.loc 1 630 0
 745 00c4 C97B     		ldrb	r1, [r1, #15]	@ zero_extendqisi2
 746              	.LVL35:
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[4]));
 747              		.loc 1 629 0
 748 00c6 0A43     		orrs	r2, r2, r1
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****                                              ((uint32_t)TxMessage->Data[6] << 16) |
 749              		.loc 1 627 0
 750 00c8 6A60     		str	r2, [r5, #4]
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 751              		.loc 1 632 0
 752 00ca 1A59     		ldr	r2, [r3, r4]
 753 00cc 42F00102 		orr	r2, r2, #1
 754 00d0 1A51     		str	r2, [r3, r4]
 755              	.L47:
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 756              		.loc 1 635 0
 757 00d2 F0BC     		pop	{r4, r5, r6, r7}
 758 00d4 7047     		bx	lr
 759              		.cfi_endproc
 760              	.LFE117:
 762 00d6 00BF     		.section	.text.CAN_TransmitStatus,"ax",%progbits
 763              		.align	2
 764              		.global	CAN_TransmitStatus
 765              		.thumb
 766              		.thumb_func
 768              	CAN_TransmitStatus:
 769              	.LFB118:
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t state = 0;
 770              		.loc 1 645 0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              		@ link register save eliminated.
 775              	.LVL36:
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 776              		.loc 1 652 0
 777 0000 0129     		cmp	r1, #1
 778 0002 09D0     		beq	.L55
 779 0004 11B1     		cbz	r1, .L56
 780 0006 0229     		cmp	r1, #2
 781 0008 0DD0     		beq	.L57
 782 000a 12E0     		b	.L66
 783              	.L56:
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 784              		.loc 1 655 0
 785 000c 8268     		ldr	r2, [r0, #8]
 786 000e 0323     		movs	r3, #3
 787 0010 C0F20043 		movt	r3, 1024
 788              	.LVL37:
 789 0014 1340     		ands	r3, r3, r2
 790              	.LVL38:
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): 
 791              		.loc 1 656 0
 792 0016 0DE0     		b	.L54
 793              	.LVL39:
 794              	.L55:
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 795              		.loc 1 658 0
 796 0018 8268     		ldr	r2, [r0, #8]
 797 001a 4FF44073 		mov	r3, #768
 798 001e C0F60003 		movt	r3, 2048
 799              	.LVL40:
 800 0022 1340     		ands	r3, r3, r2
 801              	.LVL41:
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): 
 802              		.loc 1 659 0
 803 0024 06E0     		b	.L54
 804              	.LVL42:
 805              	.L57:
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 806              		.loc 1 661 0
 807 0026 8268     		ldr	r2, [r0, #8]
 808 0028 0023     		movs	r3, #0
 809 002a C1F20303 		movt	r3, 4099
 810              	.LVL43:
 811 002e 1340     		ands	r3, r3, r2
 812              	.LVL44:
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default:
 813              		.loc 1 662 0
 814 0030 00E0     		b	.L54
 815              	.LVL45:
 816              	.L66:
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 817              		.loc 1 664 0
 818 0032 0023     		movs	r3, #0
 819              	.LVL46:
 820              	.L54:
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 821              		.loc 1 667 0
 822 0034 0322     		movs	r2, #3
 823 0036 C0F20042 		movt	r2, 1024
 824 003a 9342     		cmp	r3, r2
 825 003c 14D0     		beq	.L59
 826 003e 0322     		movs	r2, #3
 827 0040 C0F20042 		movt	r2, 1024
 828 0044 9342     		cmp	r3, r2
 829 0046 01D8     		bhi	.L60
 830 0048 63B1     		cbz	r3, .L61
 831 004a 13E0     		b	.L65
 832              	.L60:
 833 004c 4FF44072 		mov	r2, #768
 834 0050 C0F60002 		movt	r2, 2048
 835 0054 9342     		cmp	r3, r2
 836 0056 09D0     		beq	.L62
 837 0058 0022     		movs	r2, #0
 838 005a C1F20302 		movt	r2, 4099
 839 005e 9342     		cmp	r3, r2
 840 0060 06D0     		beq	.L63
 841 0062 07E0     		b	.L65
 842              	.L61:
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 843              		.loc 1 670 0
 844 0064 0220     		movs	r0, #2
 845              	.LVL47:
 846 0066 7047     		bx	lr
 847              	.LVL48:
 848              	.L59:
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 849              		.loc 1 680 0
 850 0068 0120     		movs	r0, #1
 851              	.LVL49:
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP1 | CAN_TSR_TXOK1 | CAN_TSR_TME1):state = CAN_TxStatus_Ok;
 852              		.loc 1 681 0
 853 006a 7047     		bx	lr
 854              	.LVL50:
 855              	.L62:
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 856              		.loc 1 682 0
 857 006c 0120     		movs	r0, #1
 858              	.LVL51:
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TSR_RQCP2 | CAN_TSR_TXOK2 | CAN_TSR_TME2):state = CAN_TxStatus_Ok;
 859              		.loc 1 683 0
 860 006e 7047     		bx	lr
 861              	.LVL52:
 862              	.L63:
 684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 863              		.loc 1 684 0
 864 0070 0120     		movs	r0, #1
 865              	.LVL53:
 685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     default: state = CAN_TxStatus_Failed;
 866              		.loc 1 685 0
 867 0072 7047     		bx	lr
 868              	.LVL54:
 869              	.L65:
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 870              		.loc 1 673 0
 871 0074 0020     		movs	r0, #0
 872              	.LVL55:
 690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 873              		.loc 1 690 0
 874 0076 7047     		bx	lr
 875              		.cfi_endproc
 876              	.LFE118:
 878              		.section	.text.CAN_CancelTransmit,"ax",%progbits
 879              		.align	2
 880              		.global	CAN_CancelTransmit
 881              		.thumb
 882              		.thumb_func
 884              	CAN_CancelTransmit:
 885              	.LFB119:
 699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 886              		.loc 1 699 0
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 0
 889              		@ frame_needed = 0, uses_anonymous_args = 0
 890              		@ link register save eliminated.
 891              	.LVL56:
 704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 892              		.loc 1 704 0
 893 0000 0129     		cmp	r1, #1
 894 0002 08D0     		beq	.L69
 895 0004 11B1     		cbz	r1, .L70
 896 0006 0229     		cmp	r1, #2
 897 0008 0AD0     		beq	.L71
 898 000a 7047     		bx	lr
 899              	.L70:
 706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 900              		.loc 1 706 0
 901 000c 8368     		ldr	r3, [r0, #8]
 902 000e 43F08003 		orr	r3, r3, #128
 903 0012 8360     		str	r3, [r0, #8]
 707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_1): CANx->TSR |= CAN_TSR_ABRQ1;
 904              		.loc 1 707 0
 905 0014 7047     		bx	lr
 906              	.L69:
 708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 907              		.loc 1 708 0
 908 0016 8368     		ldr	r3, [r0, #8]
 909 0018 43F40043 		orr	r3, r3, #32768
 910 001c 8360     		str	r3, [r0, #8]
 709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case (CAN_TXMAILBOX_2): CANx->TSR |= CAN_TSR_ABRQ2;
 911              		.loc 1 709 0
 912 001e 7047     		bx	lr
 913              	.L71:
 710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 914              		.loc 1 710 0
 915 0020 8368     		ldr	r3, [r0, #8]
 916 0022 43F40003 		orr	r3, r3, #8388608
 917 0026 8360     		str	r3, [r0, #8]
 918 0028 7047     		bx	lr
 919              		.cfi_endproc
 920              	.LFE119:
 922 002a 00BF     		.section	.text.CAN_Receive,"ax",%progbits
 923              		.align	2
 924              		.global	CAN_Receive
 925              		.thumb
 926              		.thumb_func
 928              	CAN_Receive:
 929              	.LFB120:
 746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 930              		.loc 1 746 0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 0
 933              		@ frame_needed = 0, uses_anonymous_args = 0
 934              		@ link register save eliminated.
 935              	.LVL57:
 936 0000 30B4     		push	{r4, r5}
 937              	.LCFI4:
 938              		.cfi_def_cfa_offset 8
 939              		.cfi_offset 4, -8
 940              		.cfi_offset 5, -4
 751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   if (RxMessage->IDE == CAN_Id_Standard)
 941              		.loc 1 751 0
 942 0002 01F11B03 		add	r3, r1, #27
 943 0006 1B01     		lsls	r3, r3, #4
 944 0008 C358     		ldr	r3, [r0, r3]
 945 000a 03F00403 		and	r3, r3, #4
 946 000e DBB2     		uxtb	r3, r3
 947 0010 1372     		strb	r3, [r2, #8]
 752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 948              		.loc 1 752 0
 949 0012 33B9     		cbnz	r3, .L73
 754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 950              		.loc 1 754 0
 951 0014 01F11B03 		add	r3, r1, #27
 952 0018 1B01     		lsls	r3, r3, #4
 953 001a C358     		ldr	r3, [r0, r3]
 954 001c 5B0D     		lsrs	r3, r3, #21
 955 001e 1360     		str	r3, [r2]
 956 0020 05E0     		b	.L74
 957              	.L73:
 758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 958              		.loc 1 758 0
 959 0022 01F11B03 		add	r3, r1, #27
 960 0026 1B01     		lsls	r3, r3, #4
 961 0028 C358     		ldr	r3, [r0, r3]
 962 002a DB08     		lsrs	r3, r3, #3
 963 002c 5360     		str	r3, [r2, #4]
 964              	.L74:
 761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the DLC */
 965              		.loc 1 761 0
 966 002e 01F11B04 		add	r4, r1, #27
 967 0032 2401     		lsls	r4, r4, #4
 968 0034 0319     		adds	r3, r0, r4
 969 0036 0459     		ldr	r4, [r0, r4]
 970 0038 04F00204 		and	r4, r4, #2
 971 003c 5472     		strb	r4, [r2, #9]
 763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the FMI */
 972              		.loc 1 763 0
 973 003e 5C68     		ldr	r4, [r3, #4]
 974 0040 04F00F04 		and	r4, r4, #15
 975 0044 9472     		strb	r4, [r2, #10]
 765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Get the data field */
 976              		.loc 1 765 0
 977 0046 5B68     		ldr	r3, [r3, #4]
 978 0048 1B0A     		lsrs	r3, r3, #8
 979 004a D374     		strb	r3, [r2, #19]
 767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[1] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 8);
 980              		.loc 1 767 0
 981 004c 00EB0113 		add	r3, r0, r1, lsl #4
 982 0050 03F5DC74 		add	r4, r3, #440
 983 0054 D3F8B851 		ldr	r5, [r3, #440]
 984 0058 D572     		strb	r5, [r2, #11]
 768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[2] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 16);
 985              		.loc 1 768 0
 986 005a D3F8B851 		ldr	r5, [r3, #440]
 987 005e 2D0A     		lsrs	r5, r5, #8
 988 0060 1573     		strb	r5, [r2, #12]
 769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[3] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDLR >> 24);
 989              		.loc 1 769 0
 990 0062 D3F8B851 		ldr	r5, [r3, #440]
 991 0066 2D0C     		lsrs	r5, r5, #16
 992 0068 5573     		strb	r5, [r2, #13]
 770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[4] = (uint8_t)0xFF & CANx->sFIFOMailBox[FIFONumber].RDHR;
 993              		.loc 1 770 0
 994 006a D3F8B831 		ldr	r3, [r3, #440]
 995 006e 1B0E     		lsrs	r3, r3, #24
 996 0070 9373     		strb	r3, [r2, #14]
 771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[5] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 8);
 997              		.loc 1 771 0
 998 0072 6368     		ldr	r3, [r4, #4]
 999 0074 D373     		strb	r3, [r2, #15]
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[6] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 16);
 1000              		.loc 1 772 0
 1001 0076 6368     		ldr	r3, [r4, #4]
 1002 0078 1B0A     		lsrs	r3, r3, #8
 1003 007a 1374     		strb	r3, [r2, #16]
 773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   RxMessage->Data[7] = (uint8_t)0xFF & (CANx->sFIFOMailBox[FIFONumber].RDHR >> 24);
 1004              		.loc 1 773 0
 1005 007c 6368     		ldr	r3, [r4, #4]
 1006 007e 1B0C     		lsrs	r3, r3, #16
 1007 0080 5374     		strb	r3, [r2, #17]
 774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Release the FIFO */
 1008              		.loc 1 774 0
 1009 0082 6368     		ldr	r3, [r4, #4]
 1010 0084 1B0E     		lsrs	r3, r3, #24
 1011 0086 9374     		strb	r3, [r2, #18]
 777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 1012              		.loc 1 777 0
 1013 0088 21B9     		cbnz	r1, .L75
 779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 1014              		.loc 1 779 0
 1015 008a C368     		ldr	r3, [r0, #12]
 1016 008c 43F02003 		orr	r3, r3, #32
 1017 0090 C360     		str	r3, [r0, #12]
 1018 0092 03E0     		b	.L72
 1019              	.L75:
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 1020              		.loc 1 784 0
 1021 0094 0369     		ldr	r3, [r0, #16]
 1022 0096 43F02003 		orr	r3, r3, #32
 1023 009a 0361     		str	r3, [r0, #16]
 1024              	.L72:
 786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 1025              		.loc 1 786 0
 1026 009c 30BC     		pop	{r4, r5}
 1027 009e 7047     		bx	lr
 1028              		.cfi_endproc
 1029              	.LFE120:
 1031              		.section	.text.CAN_FIFORelease,"ax",%progbits
 1032              		.align	2
 1033              		.global	CAN_FIFORelease
 1034              		.thumb
 1035              		.thumb_func
 1037              	CAN_FIFORelease:
 1038              	.LFB121:
 795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 1039              		.loc 1 795 0
 1040              		.cfi_startproc
 1041              		@ args = 0, pretend = 0, frame = 0
 1042              		@ frame_needed = 0, uses_anonymous_args = 0
 1043              		@ link register save eliminated.
 1044              	.LVL58:
 800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 1045              		.loc 1 800 0
 1046 0000 21B9     		cbnz	r1, .L78
 802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 1047              		.loc 1 802 0
 1048 0002 C368     		ldr	r3, [r0, #12]
 1049 0004 43F02003 		orr	r3, r3, #32
 1050 0008 C360     		str	r3, [r0, #12]
 1051 000a 7047     		bx	lr
 1052              	.L78:
 807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 1053              		.loc 1 807 0
 1054 000c 0369     		ldr	r3, [r0, #16]
 1055 000e 43F02003 		orr	r3, r3, #32
 1056 0012 0361     		str	r3, [r0, #16]
 1057 0014 7047     		bx	lr
 1058              		.cfi_endproc
 1059              	.LFE121:
 1061 0016 00BF     		.section	.text.CAN_MessagePending,"ax",%progbits
 1062              		.align	2
 1063              		.global	CAN_MessagePending
 1064              		.thumb
 1065              		.thumb_func
 1067              	CAN_MessagePending:
 1068              	.LFB122:
 818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t message_pending=0;
 1069              		.loc 1 818 0
 1070              		.cfi_startproc
 1071              		@ args = 0, pretend = 0, frame = 0
 1072              		@ frame_needed = 0, uses_anonymous_args = 0
 1073              		@ link register save eliminated.
 1074              	.LVL59:
 823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 1075              		.loc 1 823 0
 1076 0000 19B9     		cbnz	r1, .L81
 825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 1077              		.loc 1 825 0
 1078 0002 C068     		ldr	r0, [r0, #12]
 1079              	.LVL60:
 1080 0004 00F00300 		and	r0, r0, #3
 1081              	.LVL61:
 1082 0008 7047     		bx	lr
 1083              	.LVL62:
 1084              	.L81:
 827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 1085              		.loc 1 827 0
 1086 000a 0129     		cmp	r1, #1
 829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 1087              		.loc 1 829 0
 1088 000c 06BF     		itte	eq
 1089 000e 0069     		ldreq	r0, [r0, #16]
 1090              	.LVL63:
 1091 0010 00F00300 		andeq	r0, r0, #3
 1092              	.LVL64:
 833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 1093              		.loc 1 833 0
 1094 0014 0020     		movne	r0, #0
 1095              	.LVL65:
 836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 1096              		.loc 1 836 0
 1097 0016 7047     		bx	lr
 1098              		.cfi_endproc
 1099              	.LFE122:
 1101              		.section	.text.CAN_OperatingModeRequest,"ax",%progbits
 1102              		.align	2
 1103              		.global	CAN_OperatingModeRequest
 1104              		.thumb
 1105              		.thumb_func
 1107              	CAN_OperatingModeRequest:
 1108              	.LFB123:
 868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t status = CAN_ModeStatus_Failed;
 1109              		.loc 1 868 0
 1110              		.cfi_startproc
 1111              		@ args = 0, pretend = 0, frame = 0
 1112              		@ frame_needed = 0, uses_anonymous_args = 0
 1113              		@ link register save eliminated.
 1114              	.LVL66:
 878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 1115              		.loc 1 878 0
 1116 0000 C1B9     		cbnz	r1, .L85
 881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 1117              		.loc 1 881 0
 1118 0002 0368     		ldr	r3, [r0]
 1119 0004 23F00303 		bic	r3, r3, #3
 1120 0008 43F00103 		orr	r3, r3, #1
 1121 000c 0360     		str	r3, [r0]
 872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 1122              		.loc 1 872 0
 1123 000e 4FF6FF73 		movw	r3, #65535
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1124              		.loc 1 884 0
 1125 0012 00E0     		b	.L86
 1126              	.LVL67:
 1127              	.L88:
 886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 1128              		.loc 1 886 0
 1129 0014 013B     		subs	r3, r3, #1
 1130              	.LVL68:
 1131              	.L86:
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1132              		.loc 1 884 0 discriminator 1
 1133 0016 4268     		ldr	r2, [r0, #4]
 1134 0018 02F00302 		and	r2, r2, #3
 1135 001c 012A     		cmp	r2, #1
 1136 001e 01D0     		beq	.L87
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1137              		.loc 1 884 0 is_stmt 0 discriminator 2
 1138 0020 002B     		cmp	r3, #0
 1139 0022 F7D1     		bne	.L88
 1140              	.L87:
 888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1141              		.loc 1 888 0 is_stmt 1
 1142 0024 4068     		ldr	r0, [r0, #4]
 1143              	.LVL69:
 1144 0026 00F00300 		and	r0, r0, #3
 890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 1145              		.loc 1 890 0
 1146 002a 0128     		cmp	r0, #1
 1147 002c 14BF     		ite	ne
 1148 002e 0020     		movne	r0, #0
 1149 0030 0120     		moveq	r0, #1
 1150 0032 7047     		bx	lr
 1151              	.LVL70:
 1152              	.L85:
 897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 1153              		.loc 1 897 0
 1154 0034 0129     		cmp	r1, #1
 1155 0036 15D1     		bne	.L90
 900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 1156              		.loc 1 900 0
 1157 0038 0368     		ldr	r3, [r0]
 1158 003a 23F00303 		bic	r3, r3, #3
 1159 003e 0360     		str	r3, [r0]
 872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 1160              		.loc 1 872 0
 1161 0040 4FF6FF73 		movw	r3, #65535
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1162              		.loc 1 903 0
 1163 0044 00E0     		b	.L91
 1164              	.LVL71:
 1165              	.L93:
 905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 1166              		.loc 1 905 0
 1167 0046 013B     		subs	r3, r3, #1
 1168              	.LVL72:
 1169              	.L91:
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1170              		.loc 1 903 0 discriminator 1
 1171 0048 4268     		ldr	r2, [r0, #4]
 1172 004a 12F0030F 		tst	r2, #3
 1173 004e 01D0     		beq	.L92
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1174              		.loc 1 903 0 is_stmt 0 discriminator 2
 1175 0050 002B     		cmp	r3, #0
 1176 0052 F8D1     		bne	.L93
 1177              	.L92:
 907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1178              		.loc 1 907 0 is_stmt 1
 1179 0054 4068     		ldr	r0, [r0, #4]
 1180              	.LVL73:
 1181 0056 00F00300 		and	r0, r0, #3
 909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 1182              		.loc 1 909 0
 1183 005a D0F10100 		rsbs	r0, r0, #1
 1184 005e 38BF     		it	cc
 1185 0060 0020     		movcc	r0, #0
 1186 0062 7047     		bx	lr
 1187              	.LVL74:
 1188              	.L90:
 916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 1189              		.loc 1 916 0
 1190 0064 0229     		cmp	r1, #2
 1191 0066 18D1     		bne	.L99
 919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 1192              		.loc 1 919 0
 1193 0068 0368     		ldr	r3, [r0]
 1194 006a 23F00303 		bic	r3, r3, #3
 1195 006e 43F00203 		orr	r3, r3, #2
 1196 0072 0360     		str	r3, [r0]
 872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 1197              		.loc 1 872 0
 1198 0074 4FF6FF73 		movw	r3, #65535
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1199              		.loc 1 922 0
 1200 0078 00E0     		b	.L94
 1201              	.LVL75:
 1202              	.L96:
 924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 1203              		.loc 1 924 0
 1204 007a 013B     		subs	r3, r3, #1
 1205              	.LVL76:
 1206              	.L94:
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1207              		.loc 1 922 0 discriminator 1
 1208 007c 4268     		ldr	r2, [r0, #4]
 1209 007e 02F00302 		and	r2, r2, #3
 1210 0082 022A     		cmp	r2, #2
 1211 0084 01D0     		beq	.L95
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1212              		.loc 1 922 0 is_stmt 0 discriminator 2
 1213 0086 002B     		cmp	r3, #0
 1214 0088 F7D1     		bne	.L96
 1215              	.L95:
 926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1216              		.loc 1 926 0 is_stmt 1
 1217 008a 4068     		ldr	r0, [r0, #4]
 1218              	.LVL77:
 1219 008c 00F00300 		and	r0, r0, #3
 928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 1220              		.loc 1 928 0
 1221 0090 0228     		cmp	r0, #2
 1222 0092 14BF     		ite	ne
 1223 0094 0020     		movne	r0, #0
 1224 0096 0120     		moveq	r0, #1
 1225 0098 7047     		bx	lr
 1226              	.LVL78:
 1227              	.L99:
 937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 1228              		.loc 1 937 0
 1229 009a 0020     		movs	r0, #0
 1230              	.LVL79:
 941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 1231              		.loc 1 941 0
 1232 009c 7047     		bx	lr
 1233              		.cfi_endproc
 1234              	.LFE123:
 1236 009e 00BF     		.section	.text.CAN_Sleep,"ax",%progbits
 1237              		.align	2
 1238              		.global	CAN_Sleep
 1239              		.thumb
 1240              		.thumb_func
 1242              	CAN_Sleep:
 1243              	.LFB124:
 949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t sleepstatus = CAN_Sleep_Failed;
 1244              		.loc 1 949 0
 1245              		.cfi_startproc
 1246              		@ args = 0, pretend = 0, frame = 0
 1247              		@ frame_needed = 0, uses_anonymous_args = 0
 1248              		@ link register save eliminated.
 1249              	.LVL80:
 956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****    
 1250              		.loc 1 956 0
 1251 0000 0368     		ldr	r3, [r0]
 1252 0002 23F00303 		bic	r3, r3, #3
 1253 0006 43F00203 		orr	r3, r3, #2
 1254 000a 0360     		str	r3, [r0]
 959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 1255              		.loc 1 959 0
 1256 000c 4068     		ldr	r0, [r0, #4]
 1257              	.LVL81:
 1258 000e 00F00300 		and	r0, r0, #3
 1259              	.LVL82:
 966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 1260              		.loc 1 966 0
 1261 0012 0228     		cmp	r0, #2
 1262 0014 14BF     		ite	ne
 1263 0016 0020     		movne	r0, #0
 1264              	.LVL83:
 1265 0018 0120     		moveq	r0, #1
 1266 001a 7047     		bx	lr
 1267              		.cfi_endproc
 1268              	.LFE124:
 1270              		.section	.text.CAN_WakeUp,"ax",%progbits
 1271              		.align	2
 1272              		.global	CAN_WakeUp
 1273              		.thumb
 1274              		.thumb_func
 1276              	CAN_WakeUp:
 1277              	.LFB125:
 974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t wait_slak = SLAK_TIMEOUT;
 1278              		.loc 1 974 0
 1279              		.cfi_startproc
 1280              		@ args = 0, pretend = 0, frame = 0
 1281              		@ frame_needed = 0, uses_anonymous_args = 0
 1282              		@ link register save eliminated.
 1283              	.LVL84:
 982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     
 1284              		.loc 1 982 0
 1285 0000 0368     		ldr	r3, [r0]
 1286 0002 23F00203 		bic	r3, r3, #2
 1287 0006 0360     		str	r3, [r0]
 975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t wakeupstatus = CAN_WakeUp_Failed;
 1288              		.loc 1 975 0
 1289 0008 4FF6FF73 		movw	r3, #65535
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 1290              		.loc 1 985 0
 1291 000c 00E0     		b	.L105
 1292              	.LVL85:
 1293              	.L107:
 987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 1294              		.loc 1 987 0
 1295 000e 013B     		subs	r3, r3, #1
 1296              	.LVL86:
 1297              	.L105:
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 1298              		.loc 1 985 0 discriminator 1
 1299 0010 4268     		ldr	r2, [r0, #4]
 1300 0012 12F0020F 		tst	r2, #2
 1301 0016 01D0     		beq	.L106
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 1302              		.loc 1 985 0 is_stmt 0 discriminator 2
 1303 0018 002B     		cmp	r3, #0
 1304 001a F8D1     		bne	.L107
 1305              	.L106:
 989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 1306              		.loc 1 989 0 is_stmt 1
 1307 001c 4068     		ldr	r0, [r0, #4]
 1308              	.LVL87:
 1309 001e 00F00200 		and	r0, r0, #2
 1310              	.LVL88:
 996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 1311              		.loc 1 996 0
 1312 0022 D0F10100 		rsbs	r0, r0, #1
 1313              	.LVL89:
 1314 0026 38BF     		it	cc
 1315 0028 0020     		movcc	r0, #0
 1316 002a 7047     		bx	lr
 1317              		.cfi_endproc
 1318              	.LFE125:
 1320              		.section	.text.CAN_GetLastErrorCode,"ax",%progbits
 1321              		.align	2
 1322              		.global	CAN_GetLastErrorCode
 1323              		.thumb
 1324              		.thumb_func
 1326              	CAN_GetLastErrorCode:
 1327              	.LFB126:
1036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t errorcode=0;
 1328              		.loc 1 1036 0
 1329              		.cfi_startproc
 1330              		@ args = 0, pretend = 0, frame = 0
 1331              		@ frame_needed = 0, uses_anonymous_args = 0
 1332              		@ link register save eliminated.
 1333              	.LVL90:
1043:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 1334              		.loc 1 1043 0
 1335 0000 8069     		ldr	r0, [r0, #24]
 1336              	.LVL91:
1047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 1337              		.loc 1 1047 0
 1338 0002 00F07000 		and	r0, r0, #112
 1339              	.LVL92:
 1340 0006 7047     		bx	lr
 1341              		.cfi_endproc
 1342              	.LFE126:
 1344              		.section	.text.CAN_GetReceiveErrorCounter,"ax",%progbits
 1345              		.align	2
 1346              		.global	CAN_GetReceiveErrorCounter
 1347              		.thumb
 1348              		.thumb_func
 1350              	CAN_GetReceiveErrorCounter:
 1351              	.LFB127:
1061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t counter=0;
 1352              		.loc 1 1061 0
 1353              		.cfi_startproc
 1354              		@ args = 0, pretend = 0, frame = 0
 1355              		@ frame_needed = 0, uses_anonymous_args = 0
 1356              		@ link register save eliminated.
 1357              	.LVL93:
1068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 1358              		.loc 1 1068 0
 1359 0000 8069     		ldr	r0, [r0, #24]
 1360              	.LVL94:
1072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 1361              		.loc 1 1072 0
 1362 0002 000E     		lsrs	r0, r0, #24
 1363              	.LVL95:
 1364 0004 7047     		bx	lr
 1365              		.cfi_endproc
 1366              	.LFE127:
 1368 0006 00BF     		.section	.text.CAN_GetLSBTransmitErrorCounter,"ax",%progbits
 1369              		.align	2
 1370              		.global	CAN_GetLSBTransmitErrorCounter
 1371              		.thumb
 1372              		.thumb_func
 1374              	CAN_GetLSBTransmitErrorCounter:
 1375              	.LFB128:
1081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint8_t counter=0;
 1376              		.loc 1 1081 0
 1377              		.cfi_startproc
 1378              		@ args = 0, pretend = 0, frame = 0
 1379              		@ frame_needed = 0, uses_anonymous_args = 0
 1380              		@ link register save eliminated.
 1381              	.LVL96:
1088:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   
 1382              		.loc 1 1088 0
 1383 0000 8069     		ldr	r0, [r0, #24]
 1384              	.LVL97:
1092:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** /**
 1385              		.loc 1 1092 0
 1386 0002 C0F30740 		ubfx	r0, r0, #16, #8
 1387              	.LVL98:
 1388 0006 7047     		bx	lr
 1389              		.cfi_endproc
 1390              	.LFE128:
 1392              		.section	.text.CAN_ITConfig,"ax",%progbits
 1393              		.align	2
 1394              		.global	CAN_ITConfig
 1395              		.thumb
 1396              		.thumb_func
 1398              	CAN_ITConfig:
 1399              	.LFB129:
1288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 1400              		.loc 1 1288 0
 1401              		.cfi_startproc
 1402              		@ args = 0, pretend = 0, frame = 0
 1403              		@ frame_needed = 0, uses_anonymous_args = 0
 1404              		@ link register save eliminated.
 1405              	.LVL99:
1294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 1406              		.loc 1 1294 0
 1407 0000 1AB1     		cbz	r2, .L114
1297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 1408              		.loc 1 1297 0
 1409 0002 4369     		ldr	r3, [r0, #20]
 1410 0004 1943     		orrs	r1, r1, r3
 1411              	.LVL100:
 1412 0006 4161     		str	r1, [r0, #20]
 1413 0008 7047     		bx	lr
 1414              	.LVL101:
 1415              	.L114:
1302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 1416              		.loc 1 1302 0
 1417 000a 4369     		ldr	r3, [r0, #20]
 1418 000c 23EA0101 		bic	r1, r3, r1
 1419              	.LVL102:
 1420 0010 4161     		str	r1, [r0, #20]
 1421 0012 7047     		bx	lr
 1422              		.cfi_endproc
 1423              	.LFE129:
 1425              		.section	.text.CAN_GetFlagStatus,"ax",%progbits
 1426              		.align	2
 1427              		.global	CAN_GetFlagStatus
 1428              		.thumb
 1429              		.thumb_func
 1431              	CAN_GetFlagStatus:
 1432              	.LFB130:
1328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   FlagStatus bitstatus = RESET;
 1433              		.loc 1 1328 0
 1434              		.cfi_startproc
 1435              		@ args = 0, pretend = 0, frame = 0
 1436              		@ frame_needed = 0, uses_anonymous_args = 0
 1437              		@ link register save eliminated.
 1438              	.LVL103:
1336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
 1439              		.loc 1 1336 0
 1440 0000 11F4700F 		tst	r1, #15728640
 1441 0004 07D0     		beq	.L117
1339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
 1442              		.loc 1 1339 0
 1443 0006 8069     		ldr	r0, [r0, #24]
 1444              	.LVL104:
 1445 0008 0840     		ands	r0, r0, r1
 1446 000a C0F31300 		ubfx	r0, r0, #0, #20
1342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 1447              		.loc 1 1342 0
 1448 000e 0030     		adds	r0, r0, #0
 1449 0010 18BF     		it	ne
 1450 0012 0120     		movne	r0, #1
 1451 0014 7047     		bx	lr
 1452              	.LVL105:
 1453              	.L117:
1350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
 1454              		.loc 1 1350 0
 1455 0016 11F0807F 		tst	r1, #16777216
 1456 001a 07D0     		beq	.L119
1353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
 1457              		.loc 1 1353 0
 1458 001c 4068     		ldr	r0, [r0, #4]
 1459              	.LVL106:
 1460 001e 0840     		ands	r0, r0, r1
 1461 0020 C0F31300 		ubfx	r0, r0, #0, #20
1356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 1462              		.loc 1 1356 0
 1463 0024 0030     		adds	r0, r0, #0
 1464 0026 18BF     		it	ne
 1465 0028 0120     		movne	r0, #1
 1466 002a 7047     		bx	lr
 1467              	.LVL107:
 1468              	.L119:
1364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
 1469              		.loc 1 1364 0
 1470 002c 11F0006F 		tst	r1, #134217728
 1471 0030 07D0     		beq	.L120
1367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
 1472              		.loc 1 1367 0
 1473 0032 8068     		ldr	r0, [r0, #8]
 1474              	.LVL108:
 1475 0034 0840     		ands	r0, r0, r1
 1476 0036 C0F31300 		ubfx	r0, r0, #0, #20
1370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 1477              		.loc 1 1370 0
 1478 003a 0030     		adds	r0, r0, #0
 1479 003c 18BF     		it	ne
 1480 003e 0120     		movne	r0, #1
 1481 0040 7047     		bx	lr
 1482              	.LVL109:
 1483              	.L120:
1378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   { 
 1484              		.loc 1 1378 0
 1485 0042 11F0007F 		tst	r1, #33554432
1381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
 1486              		.loc 1 1381 0
 1487 0046 14BF     		ite	ne
 1488 0048 C068     		ldrne	r0, [r0, #12]
 1489              	.LVL110:
1395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     { 
 1490              		.loc 1 1395 0
 1491 004a 0069     		ldreq	r0, [r0, #16]
 1492 004c 0840     		ands	r0, r0, r1
 1493 004e C0F31300 		ubfx	r0, r0, #0, #20
1398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 1494              		.loc 1 1398 0
 1495 0052 0030     		adds	r0, r0, #0
 1496 0054 18BF     		it	ne
 1497 0056 0120     		movne	r0, #1
 1498              	.LVL111:
1408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 1499              		.loc 1 1408 0
 1500 0058 7047     		bx	lr
 1501              		.cfi_endproc
 1502              	.LFE130:
 1504 005a 00BF     		.section	.text.CAN_ClearFlag,"ax",%progbits
 1505              		.align	2
 1506              		.global	CAN_ClearFlag
 1507              		.thumb
 1508              		.thumb_func
 1510              	CAN_ClearFlag:
 1511              	.LFB131:
1428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   uint32_t flagtmp=0;
 1512              		.loc 1 1428 0
 1513              		.cfi_startproc
 1514              		@ args = 0, pretend = 0, frame = 0
 1515              		@ frame_needed = 0, uses_anonymous_args = 0
 1516              		@ link register save eliminated.
 1517              	.LVL112:
1434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 1518              		.loc 1 1434 0
 1519 0000 7023     		movs	r3, #112
 1520 0002 C3F2F003 		movt	r3, 12528
 1521 0006 9942     		cmp	r1, r3
 1522 0008 02D1     		bne	.L128
1437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 1523              		.loc 1 1437 0
 1524 000a 0023     		movs	r3, #0
 1525 000c 8361     		str	r3, [r0, #24]
 1526 000e 7047     		bx	lr
 1527              	.L128:
1441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 1528              		.loc 1 1441 0
 1529 0010 C1F31303 		ubfx	r3, r1, #0, #20
 1530              	.LVL113:
1443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1531              		.loc 1 1443 0
 1532 0014 11F0007F 		tst	r1, #33554432
 1533 0018 01D0     		beq	.L130
1446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 1534              		.loc 1 1446 0
 1535 001a C360     		str	r3, [r0, #12]
 1536 001c 7047     		bx	lr
 1537              	.L130:
1448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1538              		.loc 1 1448 0
 1539 001e 11F0806F 		tst	r1, #67108864
 1540 0022 01D0     		beq	.L131
1451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 1541              		.loc 1 1451 0
 1542 0024 0361     		str	r3, [r0, #16]
 1543 0026 7047     		bx	lr
 1544              	.L131:
1453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1545              		.loc 1 1453 0
 1546 0028 11F0006F 		tst	r1, #134217728
1456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 1547              		.loc 1 1456 0
 1548 002c 14BF     		ite	ne
 1549 002e 8360     		strne	r3, [r0, #8]
1461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     }
 1550              		.loc 1 1461 0
 1551 0030 4360     		streq	r3, [r0, #4]
 1552 0032 7047     		bx	lr
 1553              		.cfi_endproc
 1554              	.LFE131:
 1556              		.section	.text.CAN_GetITStatus,"ax",%progbits
 1557              		.align	2
 1558              		.global	CAN_GetITStatus
 1559              		.thumb
 1560              		.thumb_func
 1562              	CAN_GetITStatus:
 1563              	.LFB132:
1488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   ITStatus itstatus = RESET;
 1564              		.loc 1 1488 0
 1565              		.cfi_startproc
 1566              		@ args = 0, pretend = 0, frame = 0
 1567              		@ frame_needed = 0, uses_anonymous_args = 0
 1568              	.LVL114:
 1569 0000 08B5     		push	{r3, lr}
 1570              	.LCFI5:
 1571              		.cfi_def_cfa_offset 8
 1572              		.cfi_offset 3, -8
 1573              		.cfi_offset 14, -4
 1574              	.LVL115:
1495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****  {
 1575              		.loc 1 1495 0
 1576 0002 4369     		ldr	r3, [r0, #20]
 1577 0004 0B42     		tst	r3, r1
 1578 0006 72D0     		beq	.L152
1498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     {
 1579              		.loc 1 1498 0
 1580 0008 4029     		cmp	r1, #64
 1581 000a 48D0     		beq	.L135
 1582 000c 0ED8     		bhi	.L136
 1583 000e 0429     		cmp	r1, #4
 1584 0010 31D0     		beq	.L137
 1585 0012 04D8     		bhi	.L138
 1586 0014 0129     		cmp	r1, #1
 1587 0016 21D0     		beq	.L139
 1588 0018 0229     		cmp	r1, #2
 1589 001a 27D0     		beq	.L140
 1590 001c 69E0     		b	.L153
 1591              	.L138:
 1592 001e 1029     		cmp	r1, #16
 1593 0020 33D0     		beq	.L141
 1594 0022 2029     		cmp	r1, #32
 1595 0024 36D0     		beq	.L142
 1596 0026 0829     		cmp	r1, #8
 1597 0028 63D1     		bne	.L153
 1598 002a 29E0     		b	.L143
 1599              	.L136:
 1600 002c B1F5006F 		cmp	r1, #2048
 1601 0030 53D0     		beq	.L144
 1602 0032 09D8     		bhi	.L145
 1603 0034 B1F5007F 		cmp	r1, #512
 1604 0038 45D0     		beq	.L146
 1605 003a B1F5806F 		cmp	r1, #1024
 1606 003e 47D0     		beq	.L147
 1607 0040 B1F5807F 		cmp	r1, #256
 1608 0044 55D1     		bne	.L153
 1609 0046 39E0     		b	.L148
 1610              	.L145:
 1611 0048 B1F5803F 		cmp	r1, #65536
 1612 004c 2CD0     		beq	.L149
 1613 004e B1F5003F 		cmp	r1, #131072
 1614 0052 2ED0     		beq	.L150
 1615 0054 B1F5004F 		cmp	r1, #32768
 1616 0058 4BD1     		bne	.L153
 1617 005a 43E0     		b	.L151
 1618              	.L139:
1502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1619              		.loc 1 1502 0
 1620 005c 8068     		ldr	r0, [r0, #8]
 1621              	.LVL116:
 1622 005e 40F20111 		movw	r1, #257
 1623              	.LVL117:
 1624 0062 C0F20101 		movt	r1, 1
 1625 0066 FFF7FEFF 		bl	CheckITStatus
 1626              	.LVL118:
1503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FMP0:
 1627              		.loc 1 1503 0
 1628 006a 08BD     		pop	{r3, pc}
 1629              	.LVL119:
 1630              	.L140:
1506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1631              		.loc 1 1506 0
 1632 006c C068     		ldr	r0, [r0, #12]
 1633              	.LVL120:
 1634 006e 0321     		movs	r1, #3
 1635              	.LVL121:
 1636 0070 FFF7FEFF 		bl	CheckITStatus
 1637              	.LVL122:
1507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FF0:
 1638              		.loc 1 1507 0
 1639 0074 08BD     		pop	{r3, pc}
 1640              	.LVL123:
 1641              	.L137:
1510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1642              		.loc 1 1510 0
 1643 0076 C068     		ldr	r0, [r0, #12]
 1644              	.LVL124:
 1645 0078 0821     		movs	r1, #8
 1646              	.LVL125:
 1647 007a FFF7FEFF 		bl	CheckITStatus
 1648              	.LVL126:
1511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FOV0:
 1649              		.loc 1 1511 0
 1650 007e 08BD     		pop	{r3, pc}
 1651              	.LVL127:
 1652              	.L143:
1514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1653              		.loc 1 1514 0
 1654 0080 C068     		ldr	r0, [r0, #12]
 1655              	.LVL128:
 1656 0082 1021     		movs	r1, #16
 1657              	.LVL129:
 1658 0084 FFF7FEFF 		bl	CheckITStatus
 1659              	.LVL130:
1515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FMP1:
 1660              		.loc 1 1515 0
 1661 0088 08BD     		pop	{r3, pc}
 1662              	.LVL131:
 1663              	.L141:
1518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1664              		.loc 1 1518 0
 1665 008a 0069     		ldr	r0, [r0, #16]
 1666              	.LVL132:
 1667 008c 0321     		movs	r1, #3
 1668              	.LVL133:
 1669 008e FFF7FEFF 		bl	CheckITStatus
 1670              	.LVL134:
1519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FF1:
 1671              		.loc 1 1519 0
 1672 0092 08BD     		pop	{r3, pc}
 1673              	.LVL135:
 1674              	.L142:
1522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1675              		.loc 1 1522 0
 1676 0094 0069     		ldr	r0, [r0, #16]
 1677              	.LVL136:
 1678 0096 0821     		movs	r1, #8
 1679              	.LVL137:
 1680 0098 FFF7FEFF 		bl	CheckITStatus
 1681              	.LVL138:
1523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_FOV1:
 1682              		.loc 1 1523 0
 1683 009c 08BD     		pop	{r3, pc}
 1684              	.LVL139:
 1685              	.L135:
1526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1686              		.loc 1 1526 0
 1687 009e 0069     		ldr	r0, [r0, #16]
 1688              	.LVL140:
 1689 00a0 1021     		movs	r1, #16
 1690              	.LVL141:
 1691 00a2 FFF7FEFF 		bl	CheckITStatus
 1692              	.LVL142:
1527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_WKU:
 1693              		.loc 1 1527 0
 1694 00a6 08BD     		pop	{r3, pc}
 1695              	.LVL143:
 1696              	.L149:
1530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1697              		.loc 1 1530 0
 1698 00a8 4068     		ldr	r0, [r0, #4]
 1699              	.LVL144:
 1700 00aa 0821     		movs	r1, #8
 1701              	.LVL145:
 1702 00ac FFF7FEFF 		bl	CheckITStatus
 1703              	.LVL146:
1531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_SLK:
 1704              		.loc 1 1531 0
 1705 00b0 08BD     		pop	{r3, pc}
 1706              	.LVL147:
 1707              	.L150:
1534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1708              		.loc 1 1534 0
 1709 00b2 4068     		ldr	r0, [r0, #4]
 1710              	.LVL148:
 1711 00b4 1021     		movs	r1, #16
 1712              	.LVL149:
 1713 00b6 FFF7FEFF 		bl	CheckITStatus
 1714              	.LVL150:
1535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_EWG:
 1715              		.loc 1 1535 0
 1716 00ba 08BD     		pop	{r3, pc}
 1717              	.LVL151:
 1718              	.L148:
1538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1719              		.loc 1 1538 0
 1720 00bc 8069     		ldr	r0, [r0, #24]
 1721              	.LVL152:
 1722 00be 0121     		movs	r1, #1
 1723              	.LVL153:
 1724 00c0 FFF7FEFF 		bl	CheckITStatus
 1725              	.LVL154:
1539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_EPV:
 1726              		.loc 1 1539 0
 1727 00c4 08BD     		pop	{r3, pc}
 1728              	.LVL155:
 1729              	.L146:
1542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1730              		.loc 1 1542 0
 1731 00c6 8069     		ldr	r0, [r0, #24]
 1732              	.LVL156:
 1733 00c8 0221     		movs	r1, #2
 1734              	.LVL157:
 1735 00ca FFF7FEFF 		bl	CheckITStatus
 1736              	.LVL158:
1543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_BOF:
 1737              		.loc 1 1543 0
 1738 00ce 08BD     		pop	{r3, pc}
 1739              	.LVL159:
 1740              	.L147:
1546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1741              		.loc 1 1546 0
 1742 00d0 8069     		ldr	r0, [r0, #24]
 1743              	.LVL160:
 1744 00d2 0421     		movs	r1, #4
 1745              	.LVL161:
 1746 00d4 FFF7FEFF 		bl	CheckITStatus
 1747              	.LVL162:
1547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_LEC:
 1748              		.loc 1 1547 0
 1749 00d8 08BD     		pop	{r3, pc}
 1750              	.LVL163:
 1751              	.L144:
1550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1752              		.loc 1 1550 0
 1753 00da 8069     		ldr	r0, [r0, #24]
 1754              	.LVL164:
 1755 00dc 7021     		movs	r1, #112
 1756              	.LVL165:
 1757 00de FFF7FEFF 		bl	CheckITStatus
 1758              	.LVL166:
1551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       case CAN_IT_ERR:
 1759              		.loc 1 1551 0
 1760 00e2 08BD     		pop	{r3, pc}
 1761              	.LVL167:
 1762              	.L151:
1554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1763              		.loc 1 1554 0
 1764 00e4 4068     		ldr	r0, [r0, #4]
 1765              	.LVL168:
 1766 00e6 0421     		movs	r1, #4
 1767              	.LVL169:
 1768 00e8 FFF7FEFF 		bl	CheckITStatus
 1769              	.LVL170:
1555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       default:
 1770              		.loc 1 1555 0
 1771 00ec 08BD     		pop	{r3, pc}
 1772              	.LVL171:
 1773              	.L152:
1565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   }
 1774              		.loc 1 1565 0
 1775 00ee 0020     		movs	r0, #0
 1776              	.LVL172:
 1777 00f0 08BD     		pop	{r3, pc}
 1778              	.LVL173:
 1779              	.L153:
1558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****         break;
 1780              		.loc 1 1558 0
 1781 00f2 0020     		movs	r0, #0
 1782              	.LVL174:
1570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c **** 
 1783              		.loc 1 1570 0
 1784 00f4 08BD     		pop	{r3, pc}
 1785              		.cfi_endproc
 1786              	.LFE132:
 1788 00f6 00BF     		.section	.text.CAN_ClearITPendingBit,"ax",%progbits
 1789              		.align	2
 1790              		.global	CAN_ClearITPendingBit
 1791              		.thumb
 1792              		.thumb_func
 1794              	CAN_ClearITPendingBit:
 1795              	.LFB133:
1592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   /* Check the parameters */
 1796              		.loc 1 1592 0
 1797              		.cfi_startproc
 1798              		@ args = 0, pretend = 0, frame = 0
 1799              		@ frame_needed = 0, uses_anonymous_args = 0
 1800              		@ link register save eliminated.
 1801              	.LVL175:
1597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****   {
 1802              		.loc 1 1597 0
 1803 0000 B1F5807F 		cmp	r1, #256
 1804 0004 3AD0     		beq	.L156
 1805 0006 0CD8     		bhi	.L157
 1806 0008 0829     		cmp	r1, #8
 1807 000a 28D0     		beq	.L158
 1808 000c 04D8     		bhi	.L159
 1809 000e 0129     		cmp	r1, #1
 1810 0010 1CD0     		beq	.L160
 1811 0012 0429     		cmp	r1, #4
 1812 0014 20D0     		beq	.L161
 1813 0016 7047     		bx	lr
 1814              	.L159:
 1815 0018 2029     		cmp	r1, #32
 1816 001a 23D0     		beq	.L162
 1817 001c 4029     		cmp	r1, #64
 1818 001e 24D0     		beq	.L163
 1819 0020 7047     		bx	lr
 1820              	.L157:
 1821 0022 B1F5006F 		cmp	r1, #2048
 1822 0026 32D0     		beq	.L164
 1823 0028 06D8     		bhi	.L165
 1824 002a B1F5007F 		cmp	r1, #512
 1825 002e 28D0     		beq	.L166
 1826 0030 B1F5806F 		cmp	r1, #1024
 1827 0034 28D0     		beq	.L167
 1828 0036 7047     		bx	lr
 1829              	.L165:
 1830 0038 B1F5803F 		cmp	r1, #65536
 1831 003c 18D0     		beq	.L168
 1832 003e B1F5003F 		cmp	r1, #131072
 1833 0042 18D0     		beq	.L169
 1834 0044 B1F5004F 		cmp	r1, #32768
 1835 0048 2AD1     		bne	.L154
 1836 004a 25E0     		b	.L170
 1837              	.L160:
1601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1838              		.loc 1 1601 0
 1839 004c 40F20113 		movw	r3, #257
 1840 0050 C0F20103 		movt	r3, 1
 1841 0054 8360     		str	r3, [r0, #8]
1602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FF0:
 1842              		.loc 1 1602 0
 1843 0056 7047     		bx	lr
 1844              	.L161:
1605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1845              		.loc 1 1605 0
 1846 0058 0823     		movs	r3, #8
 1847 005a C360     		str	r3, [r0, #12]
1606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FOV0:
 1848              		.loc 1 1606 0
 1849 005c 7047     		bx	lr
 1850              	.L158:
1609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1851              		.loc 1 1609 0
 1852 005e 1023     		movs	r3, #16
 1853 0060 C360     		str	r3, [r0, #12]
1610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FF1:
 1854              		.loc 1 1610 0
 1855 0062 7047     		bx	lr
 1856              	.L162:
1613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1857              		.loc 1 1613 0
 1858 0064 0823     		movs	r3, #8
 1859 0066 0361     		str	r3, [r0, #16]
1614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_FOV1:
 1860              		.loc 1 1614 0
 1861 0068 7047     		bx	lr
 1862              	.L163:
1617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1863              		.loc 1 1617 0
 1864 006a 1023     		movs	r3, #16
 1865 006c 0361     		str	r3, [r0, #16]
1618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_WKU:
 1866              		.loc 1 1618 0
 1867 006e 7047     		bx	lr
 1868              	.L168:
1621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1869              		.loc 1 1621 0
 1870 0070 0823     		movs	r3, #8
 1871 0072 4360     		str	r3, [r0, #4]
1622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_SLK:
 1872              		.loc 1 1622 0
 1873 0074 7047     		bx	lr
 1874              	.L169:
1625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1875              		.loc 1 1625 0
 1876 0076 1023     		movs	r3, #16
 1877 0078 4360     		str	r3, [r0, #4]
1626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_EWG:
 1878              		.loc 1 1626 0
 1879 007a 7047     		bx	lr
 1880              	.L156:
1629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/ 
 1881              		.loc 1 1629 0
 1882 007c 0423     		movs	r3, #4
 1883 007e 4360     		str	r3, [r0, #4]
1631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_EPV:
 1884              		.loc 1 1631 0
 1885 0080 7047     		bx	lr
 1886              	.L166:
1634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
 1887              		.loc 1 1634 0
 1888 0082 0423     		movs	r3, #4
 1889 0084 4360     		str	r3, [r0, #4]
1636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_BOF:
 1890              		.loc 1 1636 0
 1891 0086 7047     		bx	lr
 1892              	.L167:
1639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note the corresponding Flag is cleared by hardware depending on the CAN Bus status*/
 1893              		.loc 1 1639 0
 1894 0088 0423     		movs	r3, #4
 1895 008a 4360     		str	r3, [r0, #4]
1641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_LEC:
 1896              		.loc 1 1641 0
 1897 008c 7047     		bx	lr
 1898              	.L164:
1644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
 1899              		.loc 1 1644 0
 1900 008e 0023     		movs	r3, #0
 1901 0090 8361     		str	r3, [r0, #24]
1646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       break;
 1902              		.loc 1 1646 0
 1903 0092 0423     		movs	r3, #4
 1904 0094 4360     		str	r3, [r0, #4]
1647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****     case CAN_IT_ERR:
 1905              		.loc 1 1647 0
 1906 0096 7047     		bx	lr
 1907              	.L170:
1650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****       /* Clear CAN_MSR_ERRI (rc_w1) */
 1908              		.loc 1 1650 0
 1909 0098 0023     		movs	r3, #0
 1910 009a 8361     		str	r3, [r0, #24]
1652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_can.c ****        /* @note BOFF, EPVF and EWGF Flags are cleared by hardware depending on the CAN Bus status*/
 1911              		.loc 1 1652 0
 1912 009c 0423     		movs	r3, #4
 1913 009e 4360     		str	r3, [r0, #4]
 1914              	.L154:
 1915 00a0 7047     		bx	lr
 1916              		.cfi_endproc
 1917              	.LFE133:
 1919 00a2 00BF     		.text
 1920              	.Letext0:
 1921              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1922              		.file 3 "/usr/include/newlib/stdint.h"
 1923              		.file 4 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 1924              		.file 5 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_can.h"
 1925              		.file 6 "libs/CMSIS/Include/core_cm4.h"
 1926              		.file 7 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_can.c
     /tmp/cc6xsWxI.s:20     .text.CheckITStatus:0000000000000000 $t
     /tmp/cc6xsWxI.s:24     .text.CheckITStatus:0000000000000000 CheckITStatus
     /tmp/cc6xsWxI.s:46     .text.CAN_DeInit:0000000000000000 $t
     /tmp/cc6xsWxI.s:51     .text.CAN_DeInit:0000000000000000 CAN_DeInit
     /tmp/cc6xsWxI.s:98     .text.CAN_Init:0000000000000000 $t
     /tmp/cc6xsWxI.s:103    .text.CAN_Init:0000000000000000 CAN_Init
     /tmp/cc6xsWxI.s:275    .text.CAN_FilterInit:0000000000000000 $t
     /tmp/cc6xsWxI.s:280    .text.CAN_FilterInit:0000000000000000 CAN_FilterInit
     /tmp/cc6xsWxI.s:442    .text.CAN_StructInit:0000000000000000 $t
     /tmp/cc6xsWxI.s:447    .text.CAN_StructInit:0000000000000000 CAN_StructInit
     /tmp/cc6xsWxI.s:486    .text.CAN_SlaveStartBank:0000000000000000 $t
     /tmp/cc6xsWxI.s:491    .text.CAN_SlaveStartBank:0000000000000000 CAN_SlaveStartBank
     /tmp/cc6xsWxI.s:524    .text.CAN_DBGFreeze:0000000000000000 $t
     /tmp/cc6xsWxI.s:529    .text.CAN_DBGFreeze:0000000000000000 CAN_DBGFreeze
     /tmp/cc6xsWxI.s:554    .text.CAN_TTComModeCmd:0000000000000000 $t
     /tmp/cc6xsWxI.s:559    .text.CAN_TTComModeCmd:0000000000000000 CAN_TTComModeCmd
     /tmp/cc6xsWxI.s:608    .text.CAN_Transmit:0000000000000000 $t
     /tmp/cc6xsWxI.s:613    .text.CAN_Transmit:0000000000000000 CAN_Transmit
     /tmp/cc6xsWxI.s:763    .text.CAN_TransmitStatus:0000000000000000 $t
     /tmp/cc6xsWxI.s:768    .text.CAN_TransmitStatus:0000000000000000 CAN_TransmitStatus
     /tmp/cc6xsWxI.s:879    .text.CAN_CancelTransmit:0000000000000000 $t
     /tmp/cc6xsWxI.s:884    .text.CAN_CancelTransmit:0000000000000000 CAN_CancelTransmit
     /tmp/cc6xsWxI.s:923    .text.CAN_Receive:0000000000000000 $t
     /tmp/cc6xsWxI.s:928    .text.CAN_Receive:0000000000000000 CAN_Receive
     /tmp/cc6xsWxI.s:1032   .text.CAN_FIFORelease:0000000000000000 $t
     /tmp/cc6xsWxI.s:1037   .text.CAN_FIFORelease:0000000000000000 CAN_FIFORelease
     /tmp/cc6xsWxI.s:1062   .text.CAN_MessagePending:0000000000000000 $t
     /tmp/cc6xsWxI.s:1067   .text.CAN_MessagePending:0000000000000000 CAN_MessagePending
     /tmp/cc6xsWxI.s:1102   .text.CAN_OperatingModeRequest:0000000000000000 $t
     /tmp/cc6xsWxI.s:1107   .text.CAN_OperatingModeRequest:0000000000000000 CAN_OperatingModeRequest
     /tmp/cc6xsWxI.s:1237   .text.CAN_Sleep:0000000000000000 $t
     /tmp/cc6xsWxI.s:1242   .text.CAN_Sleep:0000000000000000 CAN_Sleep
     /tmp/cc6xsWxI.s:1271   .text.CAN_WakeUp:0000000000000000 $t
     /tmp/cc6xsWxI.s:1276   .text.CAN_WakeUp:0000000000000000 CAN_WakeUp
     /tmp/cc6xsWxI.s:1321   .text.CAN_GetLastErrorCode:0000000000000000 $t
     /tmp/cc6xsWxI.s:1326   .text.CAN_GetLastErrorCode:0000000000000000 CAN_GetLastErrorCode
     /tmp/cc6xsWxI.s:1345   .text.CAN_GetReceiveErrorCounter:0000000000000000 $t
     /tmp/cc6xsWxI.s:1350   .text.CAN_GetReceiveErrorCounter:0000000000000000 CAN_GetReceiveErrorCounter
     /tmp/cc6xsWxI.s:1369   .text.CAN_GetLSBTransmitErrorCounter:0000000000000000 $t
     /tmp/cc6xsWxI.s:1374   .text.CAN_GetLSBTransmitErrorCounter:0000000000000000 CAN_GetLSBTransmitErrorCounter
     /tmp/cc6xsWxI.s:1393   .text.CAN_ITConfig:0000000000000000 $t
     /tmp/cc6xsWxI.s:1398   .text.CAN_ITConfig:0000000000000000 CAN_ITConfig
     /tmp/cc6xsWxI.s:1426   .text.CAN_GetFlagStatus:0000000000000000 $t
     /tmp/cc6xsWxI.s:1431   .text.CAN_GetFlagStatus:0000000000000000 CAN_GetFlagStatus
     /tmp/cc6xsWxI.s:1505   .text.CAN_ClearFlag:0000000000000000 $t
     /tmp/cc6xsWxI.s:1510   .text.CAN_ClearFlag:0000000000000000 CAN_ClearFlag
     /tmp/cc6xsWxI.s:1557   .text.CAN_GetITStatus:0000000000000000 $t
     /tmp/cc6xsWxI.s:1562   .text.CAN_GetITStatus:0000000000000000 CAN_GetITStatus
     /tmp/cc6xsWxI.s:1789   .text.CAN_ClearITPendingBit:0000000000000000 $t
     /tmp/cc6xsWxI.s:1794   .text.CAN_ClearITPendingBit:0000000000000000 CAN_ClearITPendingBit
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.1.7402b5479d3fa4780665141f585fc0ee
                           .group:0000000000000000 wm4.stm32f4xx.h.48.a3308e16720c7afc3eb28e585e628ce6
                           .group:0000000000000000 wm4.core_cm4.h.32.5f62939b60122629d60d85d0c4a14709
                           .group:0000000000000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:0000000000000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:0000000000000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:0000000000000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:0000000000000000 wm4.core_cm4_simd.h.29.b4a3fdfb606cb3b26119424324d4b963
                           .group:0000000000000000 wm4.core_cm4.h.153.5393ef7e6cebf34dd51ca528f9218ab3
                           .group:0000000000000000 wm4.stm32f4xx.h.282.95bae448a91bccfbf24a6f9d95904bb8
                           .group:0000000000000000 wm4.stm32f4xx_adc.h.102.2061aa73008746f3c2cc6ce8f635cad3
                           .group:0000000000000000 wm4.stm32f4xx_cryp.h.25.db1951c06ee684df97ea3a11aba6cb51
                           .group:0000000000000000 wm4.stm32f4xx_dac.h.25.c43557a6416ea4dfa986c1209c2558d6
                           .group:0000000000000000 wm4.stm32f4xx_dbgmcu.h.24.7aedfdcf091890b5cb96019bd29a2bfc
                           .group:0000000000000000 wm4.stm32f4xx_dcmi.h.24.64883d9be802a535b1d7770d14da73e0
                           .group:0000000000000000 wm4.stm32f4xx_dma.h.25.c1fa1d44ae0bc9c2b3a0d1d355d8c1e6
                           .group:0000000000000000 wm4.stm32f4xx_exti.h.25.620998268d5d3d9042a8297fbe07d507
                           .group:0000000000000000 wm4.stm32f4xx_flash.h.25.65d4f351b72ee41355279f70305f361a
                           .group:0000000000000000 wm4.stm32f4xx_fsmc.h.25.b907ac7bd9bec46e02d06b137d53cfd8
                           .group:0000000000000000 wm4.stm32f4xx_hash.h.25.633fb84f031cf2ab1bd834e536716dfa
                           .group:0000000000000000 wm4.stm32f4xx_gpio.h.25.5bd1d790d742a307b55aea5fa8fcdae8
                           .group:0000000000000000 wm4.stm32f4xx_i2c.h.25.8fcdb817a00a67d4624d79bab0d9275f
                           .group:0000000000000000 wm4.stm32f4xx_iwdg.h.25.3013e8d2058415cb9d51af77f748a146
                           .group:0000000000000000 wm4.stm32f4xx_pwr.h.25.48b68c1f3a894ab012f9c2a2c222f159
                           .group:0000000000000000 wm4.stm32f4xx_rcc.h.24.c15e7c8dc065bb29146f29591b195c87
                           .group:0000000000000000 wm4.stm32f4xx_rng.h.25.cdb5c5c07de6a48aedfde608da3f447e
                           .group:0000000000000000 wm4.stm32f4xx_rtc.h.25.4809a79ad46ad97b4a01e735a96738eb
                           .group:0000000000000000 wm4.stm32f4xx_sdio.h.25.406302aabae34eada94e5f2cde635a3e
                           .group:0000000000000000 wm4.stm32f4xx_spi.h.25.46c61b79ff8408da93e2e90cf9b717d6
                           .group:0000000000000000 wm4.stm32f4xx_syscfg.h.25.9d5caab5677661b69e959531364e23d7
                           .group:0000000000000000 wm4.stm32f4xx_tim.h.25.948f7fc943f34bd206e29758e77ee0a2
                           .group:0000000000000000 wm4.stm32f4xx_usart.h.25.b64697dad017ba547dd272c2cdb5846a
                           .group:0000000000000000 wm4.stm32f4xx_wwdg.h.25.09d70b7849c6894ddf1e83c8e86b70e1
                           .group:0000000000000000 wm4.misc.h.25.a0cb758c1f091b46f201b19cec9e63a1
                           .group:0000000000000000 wm4.stm32f4xx.h.6913.da011404ccb203790556c86f10c46b18
                           .group:0000000000000000 wm4.stm32f4xx_can.h.44.c7481a9870302edec9e3d0d405631faa

UNDEFINED SYMBOLS
RCC_APB1PeriphResetCmd
