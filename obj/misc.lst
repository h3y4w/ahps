   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"misc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.NVIC_PriorityGroupConfig,"ax",%progbits
  20              		.align	2
  21              		.global	NVIC_PriorityGroupConfig
  22              		.thumb
  23              		.thumb_func
  25              	NVIC_PriorityGroupConfig:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/misc.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @file    misc.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief   This file provides all the miscellaneous firmware functions (add-on
   8:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *          to CMSIS functions).
   9:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *          
  10:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *  @verbatim   
  11:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                               
  12:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *          ===================================================================      
  13:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                        How to configure Interrupts using driver 
  14:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *          ===================================================================      
  15:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * 
  16:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *            This section provide functions allowing to configure the NVIC interrupts (IRQ).
  17:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *            The Cortex-M4 exceptions are managed by CMSIS functions.
  18:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  19:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *            1. Configure the NVIC Priority Grouping using NVIC_PriorityGroupConfig()
  20:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                function according to the following table.
  21:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****  
  22:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *  The table below gives the allowed values of the pre-emption priority and subpriority according
  23:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *  to the Priority Grouping configuration performed by NVIC_PriorityGroupConfig function
  24:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    ============================================================================================
  25:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *      NVIC_PriorityGroup   | NVIC_IRQChannelPreemptionPriority | NVIC_IRQChannelSubPriority  |  
  26:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    ============================================================================================
  27:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_0  |                0                  |            0-15             | 0
  28:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 4
  29:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    --------------------------------------------------------------------------------------------
  30:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_1  |                0-1                |            0-7              | 1
  31:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 3
  32:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    --------------------------------------------------------------------------------------------
  33:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_2  |                0-3                |            0-3              | 2
  34:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 2
  35:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    --------------------------------------------------------------------------------------------
  36:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_3  |                0-7                |            0-1              | 3
  37:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 1
  38:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    --------------------------------------------------------------------------------------------
  39:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     NVIC_PriorityGroup_4  |                0-15               |            0                | 4
  40:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                           |                                   |                             | 0
  41:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *    ============================================================================================
  42:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  43:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *            2. Enable and Configure the priority of the selected IRQ Channels using NVIC_Init() 
  44:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  45:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @note  When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible. 
  46:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *        The pending IRQ priority will be managed only by the subpriority.
  47:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  48:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @note  IRQ priority order (sorted by highest to lowest priority):
  49:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         - Lowest pre-emption priority
  50:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         - Lowest subpriority
  51:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         - Lowest hardware priority (IRQ number)
  52:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  53:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *  @endverbatim
  54:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  55:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   ******************************************************************************
  56:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @attention
  57:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  58:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  59:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  60:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  61:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  62:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  63:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  64:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *
  65:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  66:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   ******************************************************************************
  67:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
  68:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  69:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Includes ------------------------------------------------------------------*/
  70:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** #include "misc.h"
  71:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  72:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  73:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @{
  74:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
  75:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  76:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** /** @defgroup MISC 
  77:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief MISC driver modules
  78:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @{
  79:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
  80:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  81:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private typedef -----------------------------------------------------------*/
  82:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private define ------------------------------------------------------------*/
  83:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** #define AIRCR_VECTKEY_MASK    ((uint32_t)0x05FA0000)
  84:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  85:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private macro -------------------------------------------------------------*/
  86:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private variables ---------------------------------------------------------*/
  87:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private function prototypes -----------------------------------------------*/
  88:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** /* Private functions ---------------------------------------------------------*/
  89:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  90:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** /** @defgroup MISC_Private_Functions
  91:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @{
  92:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
  93:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
  94:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
  95:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief  Configures the priority grouping: pre-emption priority and subpriority.
  96:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  NVIC_PriorityGroup: specifies the priority grouping bits length. 
  97:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *   This parameter can be one of the following values:
  98:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_0: 0 bits for pre-emption priority
  99:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                                4 bits for subpriority
 100:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_1: 1 bits for pre-emption priority
 101:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                                3 bits for subpriority
 102:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_2: 2 bits for pre-emption priority
 103:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                                2 bits for subpriority
 104:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_3: 3 bits for pre-emption priority
 105:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                                1 bits for subpriority
 106:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_PriorityGroup_4: 4 bits for pre-emption priority
 107:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *                                0 bits for subpriority
 108:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible. 
 109:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         The pending IRQ priority will be managed only by the subpriority. 
 110:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 111:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
 112:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** void NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)
 113:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** {
  28              		.loc 1 113 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
 114:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 115:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(NVIC_PriorityGroup));
 116:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   
 117:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Set the PRIGROUP[10:8] bits according to NVIC_PriorityGroup value */
 118:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   SCB->AIRCR = AIRCR_VECTKEY_MASK | NVIC_PriorityGroup;
  34              		.loc 1 118 0
  35 0000 40F0BF60 		orr	r0, r0, #100139008
  36              	.LVL1:
  37 0004 40F40030 		orr	r0, r0, #131072
  38 0008 4FF46D43 		mov	r3, #60672
  39 000c CEF20003 		movt	r3, 57344
  40 0010 D860     		str	r0, [r3, #12]
  41 0012 7047     		bx	lr
  42              		.cfi_endproc
  43              	.LFE110:
  45              		.section	.text.NVIC_Init,"ax",%progbits
  46              		.align	2
  47              		.global	NVIC_Init
  48              		.thumb
  49              		.thumb_func
  51              	NVIC_Init:
  52              	.LFB111:
 119:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** }
 120:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
 121:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
 122:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief  Initializes the NVIC peripheral according to the specified
 123:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         parameters in the NVIC_InitStruct.
 124:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 125:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         function should be called before. 
 126:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  NVIC_InitStruct: pointer to a NVIC_InitTypeDef structure that contains
 127:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *         the configuration information for the specified NVIC peripheral.
 128:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 129:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
 130:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct)
 131:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** {
  53              		.loc 1 131 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
  58              	.LVL2:
  59 0000 10B4     		push	{r4}
  60              	.LCFI0:
  61              		.cfi_def_cfa_offset 4
  62              		.cfi_offset 4, -4
  63              	.LVL3:
 132:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   uint8_t tmppriority = 0x00, tmppre = 0x00, tmpsub = 0x0F;
 133:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   
 134:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 135:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
 136:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
 137:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
 138:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****     
 139:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
  64              		.loc 1 139 0
  65 0002 C378     		ldrb	r3, [r0, #3]	@ zero_extendqisi2
  66 0004 4BB3     		cbz	r3, .L3
 140:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 141:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****     /* Compute the Corresponding IRQ Priority --------------------------------*/    
 142:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority = (0x700 - ((SCB->AIRCR) & (uint32_t)0x700))>> 0x08;
  67              		.loc 1 142 0
  68 0006 4FF46D43 		mov	r3, #60672
  69 000a CEF20003 		movt	r3, 57344
  70 000e DB68     		ldr	r3, [r3, #12]
  71 0010 DB43     		mvns	r3, r3
  72 0012 C3F30223 		ubfx	r3, r3, #8, #3
  73              	.LVL4:
 143:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppre = (0x4 - tmppriority);
  74              		.loc 1 143 0
  75 0016 C3F10402 		rsb	r2, r3, #4
  76 001a D2B2     		uxtb	r2, r2
  77              	.LVL5:
 144:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmpsub = tmpsub >> tmppriority;
  78              		.loc 1 144 0
  79 001c 0F21     		movs	r1, #15
  80 001e 41FA03F3 		asr	r3, r1, r3
  81              	.LVL6:
 145:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
 146:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority = NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
  82              		.loc 1 146 0
  83 0022 4178     		ldrb	r1, [r0, #1]	@ zero_extendqisi2
  84 0024 01FA02F2 		lsl	r2, r1, r2
  85              	.LVL7:
  86 0028 D2B2     		uxtb	r2, r2
  87              	.LVL8:
 147:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority |=  (uint8_t)(NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub);
  88              		.loc 1 147 0
  89 002a 8478     		ldrb	r4, [r0, #2]	@ zero_extendqisi2
  90 002c 03EA0401 		and	r1, r3, r4
  91 0030 1143     		orrs	r1, r1, r2
  92              	.LVL9:
 148:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****         
 149:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****     tmppriority = tmppriority << 0x04;
  93              		.loc 1 149 0
  94 0032 0901     		lsls	r1, r1, #4
  95              	.LVL10:
  96 0034 C9B2     		uxtb	r1, r1
  97              	.LVL11:
 150:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****         
 151:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->IP[NVIC_InitStruct->NVIC_IRQChannel] = tmppriority;
  98              		.loc 1 151 0
  99 0036 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 100 0038 4FF46143 		mov	r3, #57600
 101              	.LVL12:
 102 003c CEF20003 		movt	r3, 57344
 103 0040 1A44     		add	r2, r2, r3
 104 0042 82F80013 		strb	r1, [r2, #768]
 152:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****     
 153:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****     /* Enable the Selected IRQ Channels --------------------------------------*/
 154:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 105              		.loc 1 154 0
 106 0046 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 107 0048 5109     		lsrs	r1, r2, #5
 108              	.LVL13:
 155:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 109              		.loc 1 155 0
 110 004a 02F01F02 		and	r2, r2, #31
 111 004e 0120     		movs	r0, #1
 112              	.LVL14:
 113 0050 00FA02F2 		lsl	r2, r0, r2
 154:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 114              		.loc 1 154 0
 115 0054 43F82120 		str	r2, [r3, r1, lsl #2]
 116 0058 0CE0     		b	.L2
 117              	.LVL15:
 118              	.L3:
 156:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   }
 157:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   else
 158:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 159:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****     /* Disable the Selected IRQ Channels -------------------------------------*/
 160:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****     NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 119              		.loc 1 160 0
 120 005a 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 121 005c 5A09     		lsrs	r2, r3, #5
 161:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 122              		.loc 1 161 0
 123 005e 03F01F03 		and	r3, r3, #31
 124 0062 0121     		movs	r1, #1
 125 0064 9940     		lsls	r1, r1, r3
 160:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****       (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 126              		.loc 1 160 0
 127 0066 4FF46143 		mov	r3, #57600
 128 006a CEF20003 		movt	r3, 57344
 129 006e 2032     		adds	r2, r2, #32
 130 0070 43F82210 		str	r1, [r3, r2, lsl #2]
 131              	.LVL16:
 132              	.L2:
 162:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   }
 163:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** }
 133              		.loc 1 163 0
 134 0074 5DF8044B 		ldr	r4, [sp], #4
 135 0078 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE111:
 139 007a 00BF     		.section	.text.NVIC_SetVectorTable,"ax",%progbits
 140              		.align	2
 141              		.global	NVIC_SetVectorTable
 142              		.thumb
 143              		.thumb_func
 145              	NVIC_SetVectorTable:
 146              	.LFB112:
 164:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
 165:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
 166:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief  Sets the vector table location and Offset.
 167:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  NVIC_VectTab: specifies if the vector table is in RAM or FLASH memory.
 168:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *   This parameter can be one of the following values:
 169:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_VectTab_RAM: Vector Table in internal SRAM.
 170:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_VectTab_FLASH: Vector Table in internal FLASH.
 171:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  Offset: Vector Table base offset field. This value must be a multiple of 0x200.
 172:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 173:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
 174:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** void NVIC_SetVectorTable(uint32_t NVIC_VectTab, uint32_t Offset)
 175:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** { 
 147              		.loc 1 175 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              		@ link register save eliminated.
 152              	.LVL17:
 176:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 177:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_VECTTAB(NVIC_VectTab));
 178:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_OFFSET(Offset));  
 179:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****    
 180:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   SCB->VTOR = NVIC_VectTab | (Offset & (uint32_t)0x1FFFFF80);
 153              		.loc 1 180 0
 154 0000 21F06041 		bic	r1, r1, #-536870912
 155              	.LVL18:
 156 0004 21F07F01 		bic	r1, r1, #127
 157 0008 0843     		orrs	r0, r0, r1
 158              	.LVL19:
 159 000a 4FF46D43 		mov	r3, #60672
 160 000e CEF20003 		movt	r3, 57344
 161 0012 9860     		str	r0, [r3, #8]
 162 0014 7047     		bx	lr
 163              		.cfi_endproc
 164              	.LFE112:
 166 0016 00BF     		.section	.text.NVIC_SystemLPConfig,"ax",%progbits
 167              		.align	2
 168              		.global	NVIC_SystemLPConfig
 169              		.thumb
 170              		.thumb_func
 172              	NVIC_SystemLPConfig:
 173              	.LFB113:
 181:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** }
 182:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
 183:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
 184:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief  Selects the condition for the system to enter low power mode.
 185:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  LowPowerMode: Specifies the new mode for the system to enter low power mode.
 186:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *   This parameter can be one of the following values:
 187:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_LP_SEVONPEND: Low Power SEV on Pend.
 188:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_LP_SLEEPDEEP: Low Power DEEPSLEEP request.
 189:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg NVIC_LP_SLEEPONEXIT: Low Power Sleep on Exit.
 190:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  NewState: new state of LP condition. This parameter can be: ENABLE or DISABLE.
 191:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 192:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
 193:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** void NVIC_SystemLPConfig(uint8_t LowPowerMode, FunctionalState NewState)
 194:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** {
 174              		.loc 1 194 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178              		@ link register save eliminated.
 179              	.LVL20:
 195:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 196:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_NVIC_LP(LowPowerMode));
 197:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));  
 198:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   
 199:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   if (NewState != DISABLE)
 180              		.loc 1 199 0
 181 0000 39B1     		cbz	r1, .L7
 200:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 201:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****     SCB->SCR |= LowPowerMode;
 182              		.loc 1 201 0
 183 0002 4FF46D43 		mov	r3, #60672
 184 0006 CEF20003 		movt	r3, 57344
 185 000a 1A69     		ldr	r2, [r3, #16]
 186 000c 1043     		orrs	r0, r0, r2
 187              	.LVL21:
 188 000e 1861     		str	r0, [r3, #16]
 189 0010 7047     		bx	lr
 190              	.LVL22:
 191              	.L7:
 202:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   }
 203:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   else
 204:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 205:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****     SCB->SCR &= (uint32_t)(~(uint32_t)LowPowerMode);
 192              		.loc 1 205 0
 193 0012 4FF46D43 		mov	r3, #60672
 194 0016 CEF20003 		movt	r3, 57344
 195 001a 1A69     		ldr	r2, [r3, #16]
 196 001c 22EA0000 		bic	r0, r2, r0
 197              	.LVL23:
 198 0020 1861     		str	r0, [r3, #16]
 199 0022 7047     		bx	lr
 200              		.cfi_endproc
 201              	.LFE113:
 203              		.section	.text.SysTick_CLKSourceConfig,"ax",%progbits
 204              		.align	2
 205              		.global	SysTick_CLKSourceConfig
 206              		.thumb
 207              		.thumb_func
 209              	SysTick_CLKSourceConfig:
 210              	.LFB114:
 206:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   }
 207:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** }
 208:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** 
 209:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** /**
 210:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @brief  Configures the SysTick clock source.
 211:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @param  SysTick_CLKSource: specifies the SysTick clock source.
 212:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *   This parameter can be one of the following values:
 213:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg SysTick_CLKSource_HCLK_Div8: AHB clock divided by 8 selected as SysTick clock source.
 214:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   *     @arg SysTick_CLKSource_HCLK: AHB clock selected as SysTick clock source.
 215:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   * @retval None
 216:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   */
 217:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** void SysTick_CLKSourceConfig(uint32_t SysTick_CLKSource)
 218:libs/STM32F4xx_StdPeriph_Driver/src/misc.c **** {
 211              		.loc 1 218 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              		@ link register save eliminated.
 216              	.LVL24:
 219:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   /* Check the parameters */
 220:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(SysTick_CLKSource));
 221:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   if (SysTick_CLKSource == SysTick_CLKSource_HCLK)
 217              		.loc 1 221 0
 218 0000 0428     		cmp	r0, #4
 222:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 223:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****     SysTick->CTRL |= SysTick_CLKSource_HCLK;
 219              		.loc 1 223 0
 220 0002 4EF21003 		movw	r3, #57360
 221 0006 CEF20003 		movt	r3, 57344
 222 000a 1A68     		ldr	r2, [r3]
 223 000c 0CBF     		ite	eq
 224 000e 42F00402 		orreq	r2, r2, #4
 224:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   }
 225:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   else
 226:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****   {
 227:libs/STM32F4xx_StdPeriph_Driver/src/misc.c ****     SysTick->CTRL &= SysTick_CLKSource_HCLK_Div8;
 225              		.loc 1 227 0
 226 0012 22F00402 		bicne	r2, r2, #4
 227 0016 1A60     		str	r2, [r3]
 228 0018 7047     		bx	lr
 229              		.cfi_endproc
 230              	.LFE114:
 232 001a 00BF     		.text
 233              	.Letext0:
 234              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 235              		.file 3 "/usr/include/newlib/stdint.h"
 236              		.file 4 "libs/CMSIS/Include/core_cm4.h"
 237              		.file 5 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 238              		.file 6 "libs/STM32F4xx_StdPeriph_Driver/inc/misc.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 misc.c
     /tmp/ccN6Vsmf.s:20     .text.NVIC_PriorityGroupConfig:0000000000000000 $t
     /tmp/ccN6Vsmf.s:25     .text.NVIC_PriorityGroupConfig:0000000000000000 NVIC_PriorityGroupConfig
     /tmp/ccN6Vsmf.s:46     .text.NVIC_Init:0000000000000000 $t
     /tmp/ccN6Vsmf.s:51     .text.NVIC_Init:0000000000000000 NVIC_Init
     /tmp/ccN6Vsmf.s:140    .text.NVIC_SetVectorTable:0000000000000000 $t
     /tmp/ccN6Vsmf.s:145    .text.NVIC_SetVectorTable:0000000000000000 NVIC_SetVectorTable
     /tmp/ccN6Vsmf.s:167    .text.NVIC_SystemLPConfig:0000000000000000 $t
     /tmp/ccN6Vsmf.s:172    .text.NVIC_SystemLPConfig:0000000000000000 NVIC_SystemLPConfig
     /tmp/ccN6Vsmf.s:204    .text.SysTick_CLKSourceConfig:0000000000000000 $t
     /tmp/ccN6Vsmf.s:209    .text.SysTick_CLKSourceConfig:0000000000000000 SysTick_CLKSourceConfig
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.1.7402b5479d3fa4780665141f585fc0ee
                           .group:0000000000000000 wm4.stm32f4xx.h.48.a3308e16720c7afc3eb28e585e628ce6
                           .group:0000000000000000 wm4.core_cm4.h.32.5f62939b60122629d60d85d0c4a14709
                           .group:0000000000000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:0000000000000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:0000000000000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:0000000000000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:0000000000000000 wm4.core_cm4_simd.h.29.b4a3fdfb606cb3b26119424324d4b963
                           .group:0000000000000000 wm4.core_cm4.h.153.5393ef7e6cebf34dd51ca528f9218ab3
                           .group:0000000000000000 wm4.stm32f4xx.h.282.95bae448a91bccfbf24a6f9d95904bb8
                           .group:0000000000000000 wm4.stm32f4xx_adc.h.102.2061aa73008746f3c2cc6ce8f635cad3
                           .group:0000000000000000 wm4.stm32f4xx_can.h.25.87f18ca48b2692d39f76e87b1f07c953
                           .group:0000000000000000 wm4.stm32f4xx_cryp.h.25.db1951c06ee684df97ea3a11aba6cb51
                           .group:0000000000000000 wm4.stm32f4xx_dac.h.25.c43557a6416ea4dfa986c1209c2558d6
                           .group:0000000000000000 wm4.stm32f4xx_dbgmcu.h.24.7aedfdcf091890b5cb96019bd29a2bfc
                           .group:0000000000000000 wm4.stm32f4xx_dcmi.h.24.64883d9be802a535b1d7770d14da73e0
                           .group:0000000000000000 wm4.stm32f4xx_dma.h.25.c1fa1d44ae0bc9c2b3a0d1d355d8c1e6
                           .group:0000000000000000 wm4.stm32f4xx_exti.h.25.620998268d5d3d9042a8297fbe07d507
                           .group:0000000000000000 wm4.stm32f4xx_flash.h.25.65d4f351b72ee41355279f70305f361a
                           .group:0000000000000000 wm4.stm32f4xx_fsmc.h.25.b907ac7bd9bec46e02d06b137d53cfd8
                           .group:0000000000000000 wm4.stm32f4xx_hash.h.25.633fb84f031cf2ab1bd834e536716dfa
                           .group:0000000000000000 wm4.stm32f4xx_gpio.h.25.5bd1d790d742a307b55aea5fa8fcdae8
                           .group:0000000000000000 wm4.stm32f4xx_i2c.h.25.8fcdb817a00a67d4624d79bab0d9275f
                           .group:0000000000000000 wm4.stm32f4xx_iwdg.h.25.3013e8d2058415cb9d51af77f748a146
                           .group:0000000000000000 wm4.stm32f4xx_pwr.h.25.48b68c1f3a894ab012f9c2a2c222f159
                           .group:0000000000000000 wm4.stm32f4xx_rcc.h.24.c15e7c8dc065bb29146f29591b195c87
                           .group:0000000000000000 wm4.stm32f4xx_rng.h.25.cdb5c5c07de6a48aedfde608da3f447e
                           .group:0000000000000000 wm4.stm32f4xx_rtc.h.25.4809a79ad46ad97b4a01e735a96738eb
                           .group:0000000000000000 wm4.stm32f4xx_sdio.h.25.406302aabae34eada94e5f2cde635a3e
                           .group:0000000000000000 wm4.stm32f4xx_spi.h.25.46c61b79ff8408da93e2e90cf9b717d6
                           .group:0000000000000000 wm4.stm32f4xx_syscfg.h.25.9d5caab5677661b69e959531364e23d7
                           .group:0000000000000000 wm4.stm32f4xx_tim.h.25.948f7fc943f34bd206e29758e77ee0a2
                           .group:0000000000000000 wm4.stm32f4xx_usart.h.25.b64697dad017ba547dd272c2cdb5846a
                           .group:0000000000000000 wm4.stm32f4xx_wwdg.h.25.09d70b7849c6894ddf1e83c8e86b70e1
                           .group:0000000000000000 wm4.stm32f4xx.h.6913.da011404ccb203790556c86f10c46b18
                           .group:0000000000000000 wm4.misc.h.80.738aeeb1a04362df829892c9dd922afe

NO UNDEFINED SYMBOLS
