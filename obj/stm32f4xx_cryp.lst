   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_cryp.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CRYP_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	CRYP_DeInit
  22              		.thumb
  23              		.thumb_func
  25              	CRYP_DeInit:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @file    stm32f4xx_cryp.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          functionalities of the  Cryptographic processor (CRYP) peripheral:           
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           - Initialization and Configuration functions
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           - Data treatment functions 
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           - Context swapping functions     
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           - DMA interface function       
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           - Interrupts and flags management       
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *  @verbatim
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *                               
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          ===================================================================      
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *                                 How to use this driver
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          =================================================================== 
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          1. Enable the CRYP controller clock using 
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *              RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_CRYP, ENABLE); function.
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          2. Initialise the CRYP using CRYP_Init(), CRYP_KeyInit() and if 
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *             needed CRYP_IVInit(). 
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          3. Flush the IN and OUT FIFOs by using CRYP_FIFOFlush() function.
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          4. Enable the CRYP controller using the CRYP_Cmd() function. 
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          5. If using DMA for Data input and output transfer, 
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *             Activate the needed DMA Requests using CRYP_DMACmd() function 
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          6. If DMA is not used for data transfer, use CRYP_DataIn() and 
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *             CRYP_DataOut() functions to enter data to IN FIFO and get result
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *             from OUT FIFO.
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          7. To control CRYP events you can use one of the following 
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *              two methods:
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *               - Check on CRYP flags using the CRYP_GetFlagStatus() function.  
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *               - Use CRYP interrupts through the function CRYP_ITConfig() at 
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *                 initialization phase and CRYP_GetITStatus() function into 
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *                 interrupt routines in processing phase.
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          8. Save and restore Cryptographic processor context using  
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *             CRYP_SaveContext() and CRYP_RestoreContext() functions.     
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          ===================================================================  
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *                Procedure to perform an encryption or a decryption
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          ===================================================================  
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *      Initialization
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *      ===============  
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *     1. Initialize the peripheral using CRYP_Init(), CRYP_KeyInit() and 
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        CRYP_IVInit functions:
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        - Configure the key size (128-, 192- or 256-bit, in the AES only) 
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        - Enter the symmetric key 
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        - Configure the data type
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        - In case of decryption in AES-ECB or AES-CBC, you must prepare 
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          the key: configure the key preparation mode. Then Enable the CRYP 
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          peripheral using CRYP_Cmd() function: the BUSY flag is set. 
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          Wait until BUSY flag is reset : the key is prepared for decryption
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       - Configure the algorithm and chaining (the DES/TDES in ECB/CBC, the 
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          AES in ECB/CBC/CTR) 
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       - Configure the direction (encryption/decryption).
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       - Write the initialization vectors (in CBC or CTR modes only)
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    2. Flush the IN and OUT FIFOs using the CRYP_FIFOFlush() function
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    Basic Processing mode (polling mode) 
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    ====================================  
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    1. Enable the cryptographic processor using CRYP_Cmd() function.
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    2. Write the first blocks in the input FIFO (2 to 8 words) using 
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       CRYP_DataIn() function.
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    3. Repeat the following sequence until the complete message has been 
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       processed:
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       a) Wait for flag CRYP_FLAG_OFNE occurs (using CRYP_GetFlagStatus() 
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          function), then read the OUT-FIFO using CRYP_DataOut() function
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          (1 block or until the FIFO is empty)
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       b) Wait for flag CRYP_FLAG_IFNF occurs, (using CRYP_GetFlagStatus() 
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          function then write the IN FIFO using CRYP_DataIn() function 
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          (1 block or until the FIFO is full)
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    4. At the end of the processing, CRYP_FLAG_BUSY flag will be reset and 
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        both FIFOs are empty (CRYP_FLAG_IFEM is set and CRYP_FLAG_OFNE is 
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *        reset). You can disable the peripheral using CRYP_Cmd() function.
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    Interrupts Processing mode 
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    ===========================
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    In this mode, Processing is done when the data are transferred by the 
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    CPU during interrupts.
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    1. Enable the interrupts CRYP_IT_INI and CRYP_IT_OUTI using 
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       CRYP_ITConfig() function.
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    2. Enable the cryptographic processor using CRYP_Cmd() function.
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    3. In the CRYP_IT_INI interrupt handler : load the input message into the 
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       IN FIFO using CRYP_DataIn() function . You can load 2 or 4 words at a 
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       time, or load data until the IN FIFO is full. When the last word of
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       the message has been entered into the IN FIFO, disable the CRYP_IT_INI 
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       interrupt (using CRYP_ITConfig() function).
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    4. In the CRYP_IT_OUTI interrupt handler : read the output message from 
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       the OUT FIFO using CRYP_DataOut() function. You can read 1 block (2 or 
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       4 words) at a time or read data until the FIFO is empty.
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       When the last word has been read, INIM=0, BUSY=0 and both FIFOs are 
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       empty (CRYP_FLAG_IFEM is set and CRYP_FLAG_OFNE is reset). 
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       You can disable the CRYP_IT_OUTI interrupt (using CRYP_ITConfig() 
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       function) and you can disable the peripheral using CRYP_Cmd() function.
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    DMA Processing mode 
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    ====================
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    In this mode, Processing is done when the DMA is used to transfer the 
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    data from/to the memory.
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    1. Configure the DMA controller to transfer the input data from the 
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       memory using DMA_Init() function. 
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       The transfer length is the length of the message. 
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       As message padding is not managed by the peripheral, the message 
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       length must be an entire number of blocks. The data are transferred 
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       in burst mode. The burst length is 4 words in the AES and 2 or 4 
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       words in the DES/TDES. The DMA should be configured to set an 
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       interrupt on transfer completion of the output data to indicate that 
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       the processing is finished. 
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       Refer to DMA peripheral driver for more details.  
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    2. Enable the cryptographic processor using CRYP_Cmd() function. 
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       Enable the DMA requests CRYP_DMAReq_DataIN and CRYP_DMAReq_DataOUT 
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       using CRYP_DMACmd() function.
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *    3. All the transfers and processing are managed by the DMA and the 
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       cryptographic processor. The DMA transfer complete interrupt indicates 
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       that the processing is complete. Both FIFOs are normally empty and 
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *       CRYP_FLAG_BUSY flag is reset.
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *  @endverbatim
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ******************************************************************************
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @attention
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ******************************************************************************  
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Includes ------------------------------------------------------------------*/
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** #include "stm32f4xx_cryp.h"
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** #include "stm32f4xx_rcc.h"
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP 
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief CRYP driver modules
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */ 
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private typedef -----------------------------------------------------------*/
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private define ------------------------------------------------------------*/
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** #define FLAG_MASK     ((uint8_t)0x20)
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** #define MAX_TIMEOUT   ((uint16_t)0xFFFF)
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private macro -------------------------------------------------------------*/
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private variables ---------------------------------------------------------*/
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private function prototypes -----------------------------------------------*/
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /* Private functions ---------------------------------------------------------*/
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Private_Functions
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */ 
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group1 Initialization and Configuration functions
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief    Initialization and Configuration functions 
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim    
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       Initialization and Configuration functions
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   This section provides functions allowing to 
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    - Initialize the cryptographic Processor using CRYP_Init() function 
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       -  Encrypt or Decrypt 
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       -  mode : TDES-ECB, TDES-CBC, 
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                 DES-ECB, DES-CBC, 
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                 AES-ECB, AES-CBC, AES-CTR, AES-Key 
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       - DataType :  32-bit data, 16-bit data, bit data or bit-string
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       - Key Size (only in AES modes)
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    - Configure the Encrypt or Decrypt Key using CRYP_KeyInit() function 
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    - Configure the Initialization Vectors(IV) for CBC and CTR modes using 
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      CRYP_IVInit() function.  
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    - Flushes the IN and OUT FIFOs : using CRYP_FIFOFlush() function.                         
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    - Enable or disable the CRYP Processor using CRYP_Cmd() function 
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Deinitializes the CRYP peripheral registers to their default reset values
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  None
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_DeInit(void)
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
  28              		.loc 1 216 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Enable CRYP reset state */
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_CRYP, ENABLE);
  37              		.loc 1 218 0
  38 0002 1020     		movs	r0, #16
  39 0004 0121     		movs	r1, #1
  40 0006 FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
  41              	.LVL0:
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Release CRYP from reset state */
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_CRYP, DISABLE);
  42              		.loc 1 221 0
  43 000a 1020     		movs	r0, #16
  44 000c 0021     		movs	r1, #0
  45 000e FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd
  46              	.LVL1:
  47 0012 08BD     		pop	{r3, pc}
  48              		.cfi_endproc
  49              	.LFE110:
  51              		.section	.text.CRYP_Init,"ax",%progbits
  52              		.align	2
  53              		.global	CRYP_Init
  54              		.thumb
  55              		.thumb_func
  57              	CRYP_Init:
  58              	.LFB111:
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Initializes the CRYP peripheral according to the specified parameters
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         in the CRYP_InitStruct.
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_InitStruct: pointer to a CRYP_InitTypeDef structure that contains
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the configuration information for the CRYP peripheral.
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_Init(CRYP_InitTypeDef* CRYP_InitStruct)
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
  59              		.loc 1 232 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
  64              	.LVL2:
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_ALGOMODE(CRYP_InitStruct->CRYP_AlgoMode));
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_DATATYPE(CRYP_InitStruct->CRYP_DataType));
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_ALGODIR(CRYP_InitStruct->CRYP_AlgoDir));
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Select Algorithm mode*/  
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR &= ~CRYP_CR_ALGOMODE;
  65              		.loc 1 239 0
  66 0000 0023     		movs	r3, #0
  67 0002 C5F20603 		movt	r3, 20486
  68 0006 1A68     		ldr	r2, [r3]
  69 0008 22F03802 		bic	r2, r2, #56
  70 000c 1A60     		str	r2, [r3]
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_InitStruct->CRYP_AlgoMode;
  71              		.loc 1 240 0
  72 000e 1968     		ldr	r1, [r3]
  73 0010 4288     		ldrh	r2, [r0, #2]
  74 0012 0A43     		orrs	r2, r2, r1
  75 0014 1A60     		str	r2, [r3]
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Select dataType */ 
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR &= ~CRYP_CR_DATATYPE;
  76              		.loc 1 243 0
  77 0016 1A68     		ldr	r2, [r3]
  78 0018 22F0C002 		bic	r2, r2, #192
  79 001c 1A60     		str	r2, [r3]
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_InitStruct->CRYP_DataType;
  80              		.loc 1 244 0
  81 001e 1968     		ldr	r1, [r3]
  82 0020 8288     		ldrh	r2, [r0, #4]
  83 0022 0A43     		orrs	r2, r2, r1
  84 0024 1A60     		str	r2, [r3]
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* select Key size (used only with AES algorithm) */
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_ECB) ||
  85              		.loc 1 247 0
  86 0026 4388     		ldrh	r3, [r0, #2]
  87 0028 282B     		cmp	r3, #40
  88 002a 18BF     		it	ne
  89 002c 202B     		cmpne	r3, #32
  90 002e 03D0     		beq	.L3
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_CBC) ||
  91              		.loc 1 248 0
  92 0030 302B     		cmp	r3, #48
  93 0032 01D0     		beq	.L3
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_CTR) ||
  94              		.loc 1 249 0
  95 0034 382B     		cmp	r3, #56
  96 0036 0AD1     		bne	.L4
  97              	.L3:
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       (CRYP_InitStruct->CRYP_AlgoMode == CRYP_AlgoMode_AES_Key))
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     assert_param(IS_CRYP_KEYSIZE(CRYP_InitStruct->CRYP_KeySize));
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR &= ~CRYP_CR_KEYSIZE;
  98              		.loc 1 253 0
  99 0038 0023     		movs	r3, #0
 100 003a C5F20603 		movt	r3, 20486
 101 003e 1A68     		ldr	r2, [r3]
 102 0040 22F44072 		bic	r2, r2, #768
 103 0044 1A60     		str	r2, [r3]
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR |= CRYP_InitStruct->CRYP_KeySize; /* Key size and value must be 
 104              		.loc 1 254 0
 105 0046 1968     		ldr	r1, [r3]
 106 0048 C288     		ldrh	r2, [r0, #6]
 107 004a 0A43     		orrs	r2, r2, r1
 108 004c 1A60     		str	r2, [r3]
 109              	.L4:
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                   configured once the key has 
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                   been prepared */
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Select data Direction */ 
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR &= ~CRYP_CR_ALGODIR;
 110              		.loc 1 260 0
 111 004e 0023     		movs	r3, #0
 112 0050 C5F20603 		movt	r3, 20486
 113 0054 1A68     		ldr	r2, [r3]
 114 0056 22F00402 		bic	r2, r2, #4
 115 005a 1A60     		str	r2, [r3]
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_InitStruct->CRYP_AlgoDir;
 116              		.loc 1 261 0
 117 005c 1968     		ldr	r1, [r3]
 118 005e 0288     		ldrh	r2, [r0]
 119 0060 0A43     		orrs	r2, r2, r1
 120 0062 1A60     		str	r2, [r3]
 121 0064 7047     		bx	lr
 122              		.cfi_endproc
 123              	.LFE111:
 125 0066 00BF     		.section	.text.CRYP_StructInit,"ax",%progbits
 126              		.align	2
 127              		.global	CRYP_StructInit
 128              		.thumb
 129              		.thumb_func
 131              	CRYP_StructInit:
 132              	.LFB112:
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Fills each CRYP_InitStruct member with its default value.
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_InitStruct: pointer to a CRYP_InitTypeDef structure which will
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         be initialized.
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_StructInit(CRYP_InitTypeDef* CRYP_InitStruct)
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 133              		.loc 1 271 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
 138              	.LVL3:
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Initialize the CRYP_AlgoDir member */
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_AlgoDir = CRYP_AlgoDir_Encrypt;
 139              		.loc 1 273 0
 140 0000 0023     		movs	r3, #0
 141 0002 0380     		strh	r3, [r0]	@ movhi
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* initialize the CRYP_AlgoMode member */
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_AlgoMode = CRYP_AlgoMode_TDES_ECB;
 142              		.loc 1 276 0
 143 0004 4380     		strh	r3, [r0, #2]	@ movhi
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* initialize the CRYP_DataType member */
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_DataType = CRYP_DataType_32b;
 144              		.loc 1 279 0
 145 0006 8380     		strh	r3, [r0, #4]	@ movhi
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Initialize the CRYP_KeySize member */
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_InitStruct->CRYP_KeySize = CRYP_KeySize_128b;
 146              		.loc 1 282 0
 147 0008 C380     		strh	r3, [r0, #6]	@ movhi
 148 000a 7047     		bx	lr
 149              		.cfi_endproc
 150              	.LFE112:
 152              		.section	.text.CRYP_KeyInit,"ax",%progbits
 153              		.align	2
 154              		.global	CRYP_KeyInit
 155              		.thumb
 156              		.thumb_func
 158              	CRYP_KeyInit:
 159              	.LFB113:
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Initializes the CRYP Keys according to the specified parameters in
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the CRYP_KeyInitStruct.
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure that
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         contains the configuration information for the CRYP Keys.
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_KeyInit(CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 160              		.loc 1 293 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164              		@ link register save eliminated.
 165              	.LVL4:
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Key Initialisation */
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K0LR = CRYP_KeyInitStruct->CRYP_Key0Left;
 166              		.loc 1 295 0
 167 0000 0268     		ldr	r2, [r0]
 168 0002 0023     		movs	r3, #0
 169 0004 C5F20603 		movt	r3, 20486
 170 0008 1A62     		str	r2, [r3, #32]
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K0RR = CRYP_KeyInitStruct->CRYP_Key0Right;
 171              		.loc 1 296 0
 172 000a 4268     		ldr	r2, [r0, #4]
 173 000c 5A62     		str	r2, [r3, #36]
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K1LR = CRYP_KeyInitStruct->CRYP_Key1Left;
 174              		.loc 1 297 0
 175 000e 8268     		ldr	r2, [r0, #8]
 176 0010 9A62     		str	r2, [r3, #40]
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K1RR = CRYP_KeyInitStruct->CRYP_Key1Right;
 177              		.loc 1 298 0
 178 0012 C268     		ldr	r2, [r0, #12]
 179 0014 DA62     		str	r2, [r3, #44]
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K2LR = CRYP_KeyInitStruct->CRYP_Key2Left;
 180              		.loc 1 299 0
 181 0016 0269     		ldr	r2, [r0, #16]
 182 0018 1A63     		str	r2, [r3, #48]
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K2RR = CRYP_KeyInitStruct->CRYP_Key2Right;
 183              		.loc 1 300 0
 184 001a 4269     		ldr	r2, [r0, #20]
 185 001c 5A63     		str	r2, [r3, #52]
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K3LR = CRYP_KeyInitStruct->CRYP_Key3Left;
 186              		.loc 1 301 0
 187 001e 8269     		ldr	r2, [r0, #24]
 188 0020 9A63     		str	r2, [r3, #56]
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K3RR = CRYP_KeyInitStruct->CRYP_Key3Right;
 189              		.loc 1 302 0
 190 0022 C269     		ldr	r2, [r0, #28]
 191 0024 DA63     		str	r2, [r3, #60]
 192 0026 7047     		bx	lr
 193              		.cfi_endproc
 194              	.LFE113:
 196              		.section	.text.CRYP_KeyStructInit,"ax",%progbits
 197              		.align	2
 198              		.global	CRYP_KeyStructInit
 199              		.thumb
 200              		.thumb_func
 202              	CRYP_KeyStructInit:
 203              	.LFB114:
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Fills each CRYP_KeyInitStruct member with its default value.
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure 
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         which will be initialized.
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_KeyStructInit(CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 204              		.loc 1 312 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 209              	.LVL5:
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key0Left  = 0;
 210              		.loc 1 313 0
 211 0000 0023     		movs	r3, #0
 212 0002 0360     		str	r3, [r0]
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key0Right = 0;
 213              		.loc 1 314 0
 214 0004 4360     		str	r3, [r0, #4]
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key1Left  = 0;
 215              		.loc 1 315 0
 216 0006 8360     		str	r3, [r0, #8]
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key1Right = 0;
 217              		.loc 1 316 0
 218 0008 C360     		str	r3, [r0, #12]
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key2Left  = 0;
 219              		.loc 1 317 0
 220 000a 0361     		str	r3, [r0, #16]
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key2Right = 0;
 221              		.loc 1 318 0
 222 000c 4361     		str	r3, [r0, #20]
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key3Left  = 0;
 223              		.loc 1 319 0
 224 000e 8361     		str	r3, [r0, #24]
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_KeyInitStruct->CRYP_Key3Right = 0;
 225              		.loc 1 320 0
 226 0010 C361     		str	r3, [r0, #28]
 227 0012 7047     		bx	lr
 228              		.cfi_endproc
 229              	.LFE114:
 231              		.section	.text.CRYP_IVInit,"ax",%progbits
 232              		.align	2
 233              		.global	CRYP_IVInit
 234              		.thumb
 235              		.thumb_func
 237              	CRYP_IVInit:
 238              	.LFB115:
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Initializes the CRYP Initialization Vectors(IV) according to the
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         specified parameters in the CRYP_IVInitStruct.
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_IVInitStruct: pointer to a CRYP_IVInitTypeDef structure that contains
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the configuration information for the CRYP Initialization Vectors(IV).
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_IVInit(CRYP_IVInitTypeDef* CRYP_IVInitStruct)
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 239              		.loc 1 330 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              		@ link register save eliminated.
 244              	.LVL6:
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV0LR = CRYP_IVInitStruct->CRYP_IV0Left;
 245              		.loc 1 331 0
 246 0000 0268     		ldr	r2, [r0]
 247 0002 0023     		movs	r3, #0
 248 0004 C5F20603 		movt	r3, 20486
 249 0008 1A64     		str	r2, [r3, #64]
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV0RR = CRYP_IVInitStruct->CRYP_IV0Right;
 250              		.loc 1 332 0
 251 000a 4268     		ldr	r2, [r0, #4]
 252 000c 5A64     		str	r2, [r3, #68]
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV1LR = CRYP_IVInitStruct->CRYP_IV1Left;
 253              		.loc 1 333 0
 254 000e 8268     		ldr	r2, [r0, #8]
 255 0010 9A64     		str	r2, [r3, #72]
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV1RR = CRYP_IVInitStruct->CRYP_IV1Right;
 256              		.loc 1 334 0
 257 0012 C268     		ldr	r2, [r0, #12]
 258 0014 DA64     		str	r2, [r3, #76]
 259 0016 7047     		bx	lr
 260              		.cfi_endproc
 261              	.LFE115:
 263              		.section	.text.CRYP_IVStructInit,"ax",%progbits
 264              		.align	2
 265              		.global	CRYP_IVStructInit
 266              		.thumb
 267              		.thumb_func
 269              	CRYP_IVStructInit:
 270              	.LFB116:
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Fills each CRYP_IVInitStruct member with its default value.
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_IVInitStruct: pointer to a CRYP_IVInitTypeDef Initialization 
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         Vectors(IV) structure which will be initialized.
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_IVStructInit(CRYP_IVInitTypeDef* CRYP_IVInitStruct)
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 271              		.loc 1 344 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              		@ link register save eliminated.
 276              	.LVL7:
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV0Left  = 0;
 277              		.loc 1 345 0
 278 0000 0023     		movs	r3, #0
 279 0002 0360     		str	r3, [r0]
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV0Right = 0;
 280              		.loc 1 346 0
 281 0004 4360     		str	r3, [r0, #4]
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV1Left  = 0;
 282              		.loc 1 347 0
 283 0006 8360     		str	r3, [r0, #8]
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP_IVInitStruct->CRYP_IV1Right = 0;
 284              		.loc 1 348 0
 285 0008 C360     		str	r3, [r0, #12]
 286 000a 7047     		bx	lr
 287              		.cfi_endproc
 288              	.LFE116:
 290              		.section	.text.CRYP_FIFOFlush,"ax",%progbits
 291              		.align	2
 292              		.global	CRYP_FIFOFlush
 293              		.thumb
 294              		.thumb_func
 296              	CRYP_FIFOFlush:
 297              	.LFB117:
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Flushes the IN and OUT FIFOs (that is read and write pointers of the 
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         FIFOs are reset)
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   The FIFOs must be flushed only when BUSY flag is reset.  
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  None
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_FIFOFlush(void)
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 298              		.loc 1 359 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Reset the read and write pointers of the FIFOs */
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_CR_FFLUSH;
 303              		.loc 1 361 0
 304 0000 0023     		movs	r3, #0
 305 0002 C5F20603 		movt	r3, 20486
 306 0006 1A68     		ldr	r2, [r3]
 307 0008 42F48042 		orr	r2, r2, #16384
 308 000c 1A60     		str	r2, [r3]
 309 000e 7047     		bx	lr
 310              		.cfi_endproc
 311              	.LFE117:
 313              		.section	.text.CRYP_Cmd,"ax",%progbits
 314              		.align	2
 315              		.global	CRYP_Cmd
 316              		.thumb
 317              		.thumb_func
 319              	CRYP_Cmd:
 320              	.LFB118:
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Enables or disables the CRYP peripheral.
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  NewState: new state of the CRYP peripheral.
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          This parameter can be: ENABLE or DISABLE.
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_Cmd(FunctionalState NewState)
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 321              		.loc 1 371 0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325              		@ link register save eliminated.
 326              	.LVL8:
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if (NewState != DISABLE)
 327              		.loc 1 375 0
 328 0000 38B1     		cbz	r0, .L12
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Enable the Cryptographic processor */
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR |= CRYP_CR_CRYPEN;
 329              		.loc 1 378 0
 330 0002 0023     		movs	r3, #0
 331 0004 C5F20603 		movt	r3, 20486
 332 0008 1A68     		ldr	r2, [r3]
 333 000a 42F40042 		orr	r2, r2, #32768
 334 000e 1A60     		str	r2, [r3]
 335 0010 7047     		bx	lr
 336              	.L12:
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Disable the Cryptographic processor */
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR &= ~CRYP_CR_CRYPEN;
 337              		.loc 1 383 0
 338 0012 0023     		movs	r3, #0
 339 0014 C5F20603 		movt	r3, 20486
 340 0018 1A68     		ldr	r2, [r3]
 341 001a 22F40042 		bic	r2, r2, #32768
 342 001e 1A60     		str	r2, [r3]
 343 0020 7047     		bx	lr
 344              		.cfi_endproc
 345              	.LFE118:
 347 0022 00BF     		.section	.text.CRYP_DataIn,"ax",%progbits
 348              		.align	2
 349              		.global	CRYP_DataIn
 350              		.thumb
 351              		.thumb_func
 353              	CRYP_DataIn:
 354              	.LFB119:
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @}
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group2 CRYP Data processing functions
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief    CRYP Data processing functions
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim    
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       CRYP Data processing functions
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   This section provides functions allowing the encryption and decryption 
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   operations: 
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   - Enter data to be treated in the IN FIFO : using CRYP_DataIn() function.
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   - Get the data result from the OUT FIFO : using CRYP_DataOut() function.
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Writes data in the Data Input register (DIN).
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   After the DIN register has been read once or several times, 
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the FIFO must be flushed (using CRYP_FIFOFlush() function).  
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  Data: data to write in Data Input register
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_DataIn(uint32_t Data)
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 355              		.loc 1 414 0
 356              		.cfi_startproc
 357              		@ args = 0, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359              		@ link register save eliminated.
 360              	.LVL9:
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->DR = Data;
 361              		.loc 1 415 0
 362 0000 0023     		movs	r3, #0
 363 0002 C5F20603 		movt	r3, 20486
 364 0006 9860     		str	r0, [r3, #8]
 365 0008 7047     		bx	lr
 366              		.cfi_endproc
 367              	.LFE119:
 369 000a 00BF     		.section	.text.CRYP_DataOut,"ax",%progbits
 370              		.align	2
 371              		.global	CRYP_DataOut
 372              		.thumb
 373              		.thumb_func
 375              	CRYP_DataOut:
 376              	.LFB120:
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Returns the last data entered into the output FIFO.
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  None
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval Last data entered into the output FIFO.
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** uint32_t CRYP_DataOut(void)
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 377              		.loc 1 424 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381              		@ link register save eliminated.
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   return CRYP->DOUT;
 382              		.loc 1 425 0
 383 0000 0023     		movs	r3, #0
 384 0002 C5F20603 		movt	r3, 20486
 385 0006 D868     		ldr	r0, [r3, #12]
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 386              		.loc 1 426 0
 387 0008 7047     		bx	lr
 388              		.cfi_endproc
 389              	.LFE120:
 391 000a 00BF     		.section	.text.CRYP_SaveContext,"ax",%progbits
 392              		.align	2
 393              		.global	CRYP_SaveContext
 394              		.thumb
 395              		.thumb_func
 397              	CRYP_SaveContext:
 398              	.LFB121:
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @}
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group3 Context swapping functions
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief   Context swapping functions
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim   
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                              Context swapping functions
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   This section provides functions allowing to save and store CRYP Context
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   It is possible to interrupt an encryption/ decryption/ key generation process 
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   to perform another processing with a higher priority, and to complete the 
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   interrupted process later on, when the higher-priority task is complete. To do 
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   so, the context of the interrupted task must be saved from the CRYP registers 
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   to memory, and then be restored from memory to the CRYP registers.
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   1. To save the current context, use CRYP_SaveContext() function
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   2. To restore the saved context, use CRYP_RestoreContext() function 
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Saves the CRYP peripheral Context. 
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   This function stops DMA transfer before to save the context. After 
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         restoring the context, you have to enable the DMA again (if the DMA
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         was previously used).
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_ContextSave: pointer to a CRYP_Context structure that contains
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the repository for current context.
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_KeyInitStruct: pointer to a CRYP_KeyInitTypeDef structure that 
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         contains the configuration information for the CRYP Keys.  
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** ErrorStatus CRYP_SaveContext(CRYP_Context* CRYP_ContextSave,
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                              CRYP_KeyInitTypeDef* CRYP_KeyInitStruct)
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 399              		.loc 1 468 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 8
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		@ link register save eliminated.
 404              	.LVL10:
 405 0000 70B4     		push	{r4, r5, r6}
 406              	.LCFI1:
 407              		.cfi_def_cfa_offset 12
 408              		.cfi_offset 4, -12
 409              		.cfi_offset 5, -8
 410              		.cfi_offset 6, -4
 411 0002 83B0     		sub	sp, sp, #12
 412              	.LCFI2:
 413              		.cfi_def_cfa_offset 24
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   __IO uint32_t timeout = 0;
 414              		.loc 1 469 0
 415 0004 0023     		movs	r3, #0
 416 0006 0193     		str	r3, [sp, #4]
 417              	.LVL11:
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   uint32_t ckeckmask = 0, bitstatus;    
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ErrorStatus status = ERROR;
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Stop DMA transfers on the IN FIFO by clearing the DIEN bit in the CRYP_DMACR */
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->DMACR &= ~(uint32_t)CRYP_DMACR_DIEN;
 418              		.loc 1 474 0
 419 0008 C5F20603 		movt	r3, 20486
 420 000c 1A69     		ldr	r2, [r3, #16]
 421 000e 22F00102 		bic	r2, r2, #1
 422 0012 1A61     		str	r2, [r3, #16]
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Wait until both the IN and OUT FIFOs are empty  
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     (IFEM=1 and OFNE=0 in the CRYP_SR register) and the 
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      BUSY bit is cleared. */
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP->CR & (uint32_t)(CRYP_CR_ALGOMODE_TDES_ECB | CRYP_CR_ALGOMODE_TDES_CBC)) != (uint32_t)0
 423              		.loc 1 480 0
 424 0014 1C68     		ldr	r4, [r3]
 425 0016 04F00804 		and	r4, r4, #8
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   { 
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     ckeckmask =  CRYP_SR_IFEM | CRYP_SR_BUSY ;
 426              		.loc 1 482 0
 427 001a 002C     		cmp	r4, #0
 428 001c 0CBF     		ite	eq
 429 001e 1524     		moveq	r4, #21
 430 0020 1124     		movne	r4, #17
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else /* AES or DES */
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     ckeckmask =  CRYP_SR_IFEM | CRYP_SR_BUSY | CRYP_SR_OFNE;
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }           
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   do 
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = CRYP->SR & ckeckmask;
 431              		.loc 1 491 0
 432 0022 0025     		movs	r5, #0
 433 0024 C5F20605 		movt	r5, 20486
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     timeout++;
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   while ((timeout != MAX_TIMEOUT) && (bitstatus != CRYP_SR_IFEM));
 434              		.loc 1 494 0
 435 0028 4FF6FF76 		movw	r6, #65535
 436              	.LVL12:
 437              	.L19:
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     timeout++;
 438              		.loc 1 491 0 discriminator 1
 439 002c 6B68     		ldr	r3, [r5, #4]
 440 002e 03EA0402 		and	r2, r3, r4
 441              	.LVL13:
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     timeout++;
 442              		.loc 1 492 0 discriminator 1
 443 0032 019B     		ldr	r3, [sp, #4]
 444 0034 0133     		adds	r3, r3, #1
 445 0036 0193     		str	r3, [sp, #4]
 446              		.loc 1 494 0 discriminator 1
 447 0038 019B     		ldr	r3, [sp, #4]
 448 003a B342     		cmp	r3, r6
 449 003c 01D0     		beq	.L18
 450 003e 012A     		cmp	r2, #1
 451 0040 F4D1     		bne	.L19
 452              	.L18:
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP->SR & ckeckmask) != CRYP_SR_IFEM)
 453              		.loc 1 496 0
 454 0042 0023     		movs	r3, #0
 455 0044 C5F20603 		movt	r3, 20486
 456 0048 5B68     		ldr	r3, [r3, #4]
 457 004a 1C40     		ands	r4, r4, r3
 458              	.LVL14:
 459 004c 012C     		cmp	r4, #1
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     status = ERROR;
 460              		.loc 1 498 0
 461 004e 18BF     		it	ne
 462 0050 0020     		movne	r0, #0
 463              	.LVL15:
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 464              		.loc 1 496 0
 465 0052 28D1     		bne	.L20
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {      
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Stop DMA transfers on the OUT FIFO by 
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        - writing the DOEN bit to 0 in the CRYP_DMACR register 
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****        - and clear the CRYPEN bit. */
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->DMACR &= ~(uint32_t)CRYP_DMACR_DOEN;
 466              		.loc 1 506 0
 467 0054 0023     		movs	r3, #0
 468 0056 C5F20603 		movt	r3, 20486
 469 005a 1A69     		ldr	r2, [r3, #16]
 470              	.LVL16:
 471 005c 22F00202 		bic	r2, r2, #2
 472 0060 1A61     		str	r2, [r3, #16]
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->CR &= ~(uint32_t)CRYP_CR_CRYPEN;
 473              		.loc 1 507 0
 474 0062 1A68     		ldr	r2, [r3]
 475 0064 22F40042 		bic	r2, r2, #32768
 476 0068 1A60     		str	r2, [r3]
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Save the current configuration (bits [9:2] in the CRYP_CR register) */
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CR_bits9to2  = CRYP->CR & (CRYP_CR_KEYSIZE  | 
 477              		.loc 1 510 0
 478 006a 1A68     		ldr	r2, [r3]
 479 006c 02F47F72 		and	r2, r2, #1020
 480 0070 0260     		str	r2, [r0]
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                  CRYP_CR_DATATYPE | 
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                  CRYP_CR_ALGOMODE |
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                                  CRYP_CR_ALGODIR); 
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* and, if not in ECB mode, the initialization vectors. */
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV0LR = CRYP->IV0LR;
 481              		.loc 1 516 0
 482 0072 1A6C     		ldr	r2, [r3, #64]
 483 0074 4260     		str	r2, [r0, #4]
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV0RR = CRYP->IV0RR;
 484              		.loc 1 517 0
 485 0076 5A6C     		ldr	r2, [r3, #68]
 486 0078 8260     		str	r2, [r0, #8]
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1LR = CRYP->IV1LR;
 487              		.loc 1 518 0
 488 007a 9A6C     		ldr	r2, [r3, #72]
 489 007c C260     		str	r2, [r0, #12]
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_IV1RR = CRYP->IV1RR;
 490              		.loc 1 519 0
 491 007e DB6C     		ldr	r3, [r3, #76]
 492 0080 0361     		str	r3, [r0, #16]
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* save The key value */
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K0LR = CRYP_KeyInitStruct->CRYP_Key0Left; 
 493              		.loc 1 522 0
 494 0082 0B68     		ldr	r3, [r1]
 495 0084 4361     		str	r3, [r0, #20]
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K0RR = CRYP_KeyInitStruct->CRYP_Key0Right; 
 496              		.loc 1 523 0
 497 0086 4B68     		ldr	r3, [r1, #4]
 498 0088 8361     		str	r3, [r0, #24]
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1LR = CRYP_KeyInitStruct->CRYP_Key1Left; 
 499              		.loc 1 524 0
 500 008a 8B68     		ldr	r3, [r1, #8]
 501 008c C361     		str	r3, [r0, #28]
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K1RR = CRYP_KeyInitStruct->CRYP_Key1Right; 
 502              		.loc 1 525 0
 503 008e CB68     		ldr	r3, [r1, #12]
 504 0090 0362     		str	r3, [r0, #32]
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2LR = CRYP_KeyInitStruct->CRYP_Key2Left; 
 505              		.loc 1 526 0
 506 0092 0B69     		ldr	r3, [r1, #16]
 507 0094 4362     		str	r3, [r0, #36]
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K2RR = CRYP_KeyInitStruct->CRYP_Key2Right; 
 508              		.loc 1 527 0
 509 0096 4B69     		ldr	r3, [r1, #20]
 510 0098 8362     		str	r3, [r0, #40]
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3LR = CRYP_KeyInitStruct->CRYP_Key3Left; 
 511              		.loc 1 528 0
 512 009a 8B69     		ldr	r3, [r1, #24]
 513 009c C362     		str	r3, [r0, #44]
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP_ContextSave->CRYP_K3RR = CRYP_KeyInitStruct->CRYP_Key3Right; 
 514              		.loc 1 529 0
 515 009e CB69     		ldr	r3, [r1, #28]
 516 00a0 0363     		str	r3, [r0, #48]
 517              	.LVL17:
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    /* When needed, save the DMA status (pointers for IN and OUT messages, 
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       number of remaining bytes, etc.) */
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     status = SUCCESS;
 518              		.loc 1 534 0
 519 00a2 0120     		movs	r0, #1
 520 00a4 FFE7     		b	.L20
 521              	.LVL18:
 522              	.L20:
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    return status;
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 523              		.loc 1 538 0
 524 00a6 03B0     		add	sp, sp, #12
 525              		@ sp needed
 526 00a8 70BC     		pop	{r4, r5, r6}
 527 00aa 7047     		bx	lr
 528              		.cfi_endproc
 529              	.LFE121:
 531              		.section	.text.CRYP_RestoreContext,"ax",%progbits
 532              		.align	2
 533              		.global	CRYP_RestoreContext
 534              		.thumb
 535              		.thumb_func
 537              	CRYP_RestoreContext:
 538              	.LFB122:
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Restores the CRYP peripheral Context.
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   Since teh DMA transfer is stopped in CRYP_SaveContext() function,
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         after restoring the context, you have to enable the DMA again (if the
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         DMA was previously used).  
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_ContextRestore: pointer to a CRYP_Context structure that contains
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the repository for saved context.
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   The data that were saved during context saving must be rewrited into
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         the IN FIFO.
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_RestoreContext(CRYP_Context* CRYP_ContextRestore)  
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 539              		.loc 1 552 0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 0, uses_anonymous_args = 0
 543              		@ link register save eliminated.
 544              	.LVL19:
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Configure the processor with the saved configuration */
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR = CRYP_ContextRestore->CR_bits9to2;
 545              		.loc 1 555 0
 546 0000 0268     		ldr	r2, [r0]
 547 0002 0023     		movs	r3, #0
 548 0004 C5F20603 		movt	r3, 20486
 549 0008 1A60     		str	r2, [r3]
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* restore The key value */
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K0LR = CRYP_ContextRestore->CRYP_K0LR; 
 550              		.loc 1 558 0
 551 000a 4269     		ldr	r2, [r0, #20]
 552 000c 1A62     		str	r2, [r3, #32]
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K0RR = CRYP_ContextRestore->CRYP_K0RR;
 553              		.loc 1 559 0
 554 000e 8269     		ldr	r2, [r0, #24]
 555 0010 5A62     		str	r2, [r3, #36]
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K1LR = CRYP_ContextRestore->CRYP_K1LR;
 556              		.loc 1 560 0
 557 0012 C269     		ldr	r2, [r0, #28]
 558 0014 9A62     		str	r2, [r3, #40]
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K1RR = CRYP_ContextRestore->CRYP_K1RR;
 559              		.loc 1 561 0
 560 0016 026A     		ldr	r2, [r0, #32]
 561 0018 DA62     		str	r2, [r3, #44]
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K2LR = CRYP_ContextRestore->CRYP_K2LR;
 562              		.loc 1 562 0
 563 001a 426A     		ldr	r2, [r0, #36]
 564 001c 1A63     		str	r2, [r3, #48]
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K2RR = CRYP_ContextRestore->CRYP_K2RR;
 565              		.loc 1 563 0
 566 001e 826A     		ldr	r2, [r0, #40]
 567 0020 5A63     		str	r2, [r3, #52]
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K3LR = CRYP_ContextRestore->CRYP_K3LR;
 568              		.loc 1 564 0
 569 0022 C26A     		ldr	r2, [r0, #44]
 570 0024 9A63     		str	r2, [r3, #56]
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->K3RR = CRYP_ContextRestore->CRYP_K3RR;
 571              		.loc 1 565 0
 572 0026 026B     		ldr	r2, [r0, #48]
 573 0028 DA63     		str	r2, [r3, #60]
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* and the initialization vectors. */
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV0LR = CRYP_ContextRestore->CRYP_IV0LR;
 574              		.loc 1 568 0
 575 002a 4268     		ldr	r2, [r0, #4]
 576 002c 1A64     		str	r2, [r3, #64]
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV0RR = CRYP_ContextRestore->CRYP_IV0RR;
 577              		.loc 1 569 0
 578 002e 8268     		ldr	r2, [r0, #8]
 579 0030 5A64     		str	r2, [r3, #68]
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV1LR = CRYP_ContextRestore->CRYP_IV1LR;
 580              		.loc 1 570 0
 581 0032 C268     		ldr	r2, [r0, #12]
 582 0034 9A64     		str	r2, [r3, #72]
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->IV1RR = CRYP_ContextRestore->CRYP_IV1RR;
 583              		.loc 1 571 0
 584 0036 0269     		ldr	r2, [r0, #16]
 585 0038 DA64     		str	r2, [r3, #76]
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Enable the cryptographic processor */
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP->CR |= CRYP_CR_CRYPEN;
 586              		.loc 1 574 0
 587 003a 1A68     		ldr	r2, [r3]
 588 003c 42F40042 		orr	r2, r2, #32768
 589 0040 1A60     		str	r2, [r3]
 590 0042 7047     		bx	lr
 591              		.cfi_endproc
 592              	.LFE122:
 594              		.section	.text.CRYP_DMACmd,"ax",%progbits
 595              		.align	2
 596              		.global	CRYP_DMACmd
 597              		.thumb
 598              		.thumb_func
 600              	CRYP_DMACmd:
 601              	.LFB123:
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @}
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group4 CRYP's DMA interface Configuration function
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief   CRYP's DMA interface Configuration function 
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim   
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                    CRYP's DMA interface Configuration function
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   This section provides functions allowing to configure the DMA interface for 
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   CRYP data input and output transfer.
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   When the DMA mode is enabled (using the CRYP_DMACmd() function), data can be 
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   transferred:
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   - From memory to the CRYP IN FIFO using the DMA peripheral by enabling 
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     the CRYP_DMAReq_DataIN request.
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   - From the CRYP OUT FIFO to the memory using the DMA peripheral by enabling 
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     the CRYP_DMAReq_DataOUT request.
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Enables or disables the CRYP DMA interface.
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_DMAReq: specifies the CRYP DMA transfer request to be enabled or disabled.
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           This parameter can be any combination of the following values:
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_DMAReq_DataOUT: DMA for outgoing(Tx) data transfer
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_DMAReq_DataIN: DMA for incoming(Rx) data transfer
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  NewState: new state of the selected CRYP DMA transfer request.
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          This parameter can be: ENABLE or DISABLE.
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_DMACmd(uint8_t CRYP_DMAReq, FunctionalState NewState)
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 602              		.loc 1 613 0
 603              		.cfi_startproc
 604              		@ args = 0, pretend = 0, frame = 0
 605              		@ frame_needed = 0, uses_anonymous_args = 0
 606              		@ link register save eliminated.
 607              	.LVL20:
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_DMAREQ(CRYP_DMAReq));
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if (NewState != DISABLE)
 608              		.loc 1 618 0
 609 0000 31B1     		cbz	r1, .L26
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Enable the selected CRYP DMA request */
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->DMACR |= CRYP_DMAReq;
 610              		.loc 1 621 0
 611 0002 0023     		movs	r3, #0
 612 0004 C5F20603 		movt	r3, 20486
 613 0008 1A69     		ldr	r2, [r3, #16]
 614 000a 1043     		orrs	r0, r0, r2
 615              	.LVL21:
 616 000c 1861     		str	r0, [r3, #16]
 617 000e 7047     		bx	lr
 618              	.LVL22:
 619              	.L26:
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Disable the selected CRYP DMA request */
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->DMACR &= (uint8_t)~CRYP_DMAReq;
 620              		.loc 1 626 0
 621 0010 0023     		movs	r3, #0
 622 0012 C5F20603 		movt	r3, 20486
 623 0016 1A69     		ldr	r2, [r3, #16]
 624 0018 22EA0000 		bic	r0, r2, r0
 625              	.LVL23:
 626 001c 00F0FF00 		and	r0, r0, #255
 627 0020 1861     		str	r0, [r3, #16]
 628 0022 7047     		bx	lr
 629              		.cfi_endproc
 630              	.LFE123:
 632              		.section	.text.CRYP_ITConfig,"ax",%progbits
 633              		.align	2
 634              		.global	CRYP_ITConfig
 635              		.thumb
 636              		.thumb_func
 638              	CRYP_ITConfig:
 639              	.LFB124:
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @}
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /** @defgroup CRYP_Group5 Interrupts and flags management functions
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *  @brief   Interrupts and flags management functions
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  *
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @verbatim   
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                    Interrupts and flags management functions
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****  ===============================================================================  
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   This section provides functions allowing to configure the CRYP Interrupts and 
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   to get the status and Interrupts pending bits.
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   The CRYP provides 2 Interrupts sources and 7 Flags:
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   Flags :
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ------- 
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                           
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      1. CRYP_FLAG_IFEM :  Set when Input FIFO is empty.
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                           This Flag is cleared only by hardware.
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      2. CRYP_FLAG_IFNF :  Set when Input FIFO is not full.
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                           This Flag is cleared only by hardware.
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      3. CRYP_FLAG_INRIS  : Set when Input FIFO Raw interrupt is pending 
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            it gives the raw interrupt state prior to masking 
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            of the input FIFO service interrupt.
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            This Flag is cleared only by hardware.
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      4. CRYP_FLAG_OFNE   : Set when Output FIFO not empty.
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            This Flag is cleared only by hardware.
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****         
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      5. CRYP_FLAG_OFFU   : Set when Output FIFO is full.
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            This Flag is cleared only by hardware.
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      6. CRYP_FLAG_OUTRIS : Set when Output FIFO Raw interrupt is pending 
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            it gives the raw interrupt state prior to masking 
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            of the output FIFO service interrupt.
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            This Flag is cleared only by hardware.
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                                
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****      7. CRYP_FLAG_BUSY   : Set when the CRYP core is currently processing a 
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            block of data or a key preparation (for AES 
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            decryption).
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            This Flag is cleared only by hardware.
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            To clear it, the CRYP core must be disabled and the 
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                            last processing has completed. 
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   Interrupts :
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ------------
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    1. CRYP_IT_INI   : The input FIFO service interrupt is asserted when there 
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       are less than 4 words in the input FIFO.
 684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       This interrupt is associated to CRYP_FLAG_INRIS flag.
 685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                 @note This interrupt is cleared by performing write operations 
 687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       to the input FIFO until it holds 4 or more words. The 
 688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       input FIFO service interrupt INMIS is enabled with the 
 689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       CRYP enable bit. Consequently, when CRYP is disabled, the 
 690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       INMIS signal is low even if the input FIFO is empty.
 691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****    2. CRYP_IT_OUTI  : The output FIFO service interrupt is asserted when there 
 695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       is one or more (32-bit word) data items in the output FIFO.
 696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       This interrupt is associated to CRYP_FLAG_OUTRIS flag.
 697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                 @note This interrupt is cleared by reading data from the output 
 699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       FIFO until there is no valid (32-bit) word left (that is, 
 700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       the interrupt follows the state of the OFNE (output FIFO 
 701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****                       not empty) flag).
 702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   Managing the CRYP controller events :
 705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ------------------------------------ 
 706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   The user should identify which mode will be used in his application to manage 
 707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   the CRYP controller events: Polling mode or Interrupt mode.
 708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   1.  In the Polling Mode it is advised to use the following functions:
 710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       - CRYP_GetFlagStatus() : to check if flags events occur. 
 711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   @note  The CRYPT flags do not need to be cleared since they are cleared as 
 713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          soon as the associated event are reset.   
 714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   2.  In the Interrupt Mode it is advised to use the following functions:
 717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       - CRYP_ITConfig()       : to enable or disable the interrupt source.
 718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****       - CRYP_GetITStatus()    : to check if Interrupt occurs.
 719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   @note  The CRYPT interrupts have no pending bits, the interrupt is cleared as 
 721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****          soon as the associated event is reset. 
 722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** @endverbatim
 724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @{
 725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */ 
 726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Enables or disables the specified CRYP interrupts.
 729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_IT: specifies the CRYP interrupt source to be enabled or disabled.
 730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          This parameter can be any combination of the following values:
 731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_INI: Input FIFO interrupt
 732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_OUTI: Output FIFO interrupt
 733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  NewState: new state of the specified CRYP interrupt.
 734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           This parameter can be: ENABLE or DISABLE.
 735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval None
 736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** void CRYP_ITConfig(uint8_t CRYP_IT, FunctionalState NewState)
 738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 640              		.loc 1 738 0
 641              		.cfi_startproc
 642              		@ args = 0, pretend = 0, frame = 0
 643              		@ frame_needed = 0, uses_anonymous_args = 0
 644              		@ link register save eliminated.
 645              	.LVL24:
 739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_CONFIG_IT(CRYP_IT));
 741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if (NewState != DISABLE)
 646              		.loc 1 743 0
 647 0000 31B1     		cbz	r1, .L29
 744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Enable the selected CRYP interrupt */
 746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->IMSCR |= CRYP_IT;
 648              		.loc 1 746 0
 649 0002 0023     		movs	r3, #0
 650 0004 C5F20603 		movt	r3, 20486
 651 0008 5A69     		ldr	r2, [r3, #20]
 652 000a 1043     		orrs	r0, r0, r2
 653              	.LVL25:
 654 000c 5861     		str	r0, [r3, #20]
 655 000e 7047     		bx	lr
 656              	.LVL26:
 657              	.L29:
 747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* Disable the selected CRYP interrupt */
 751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     CRYP->IMSCR &= (uint8_t)~CRYP_IT;
 658              		.loc 1 751 0
 659 0010 0023     		movs	r3, #0
 660 0012 C5F20603 		movt	r3, 20486
 661 0016 5A69     		ldr	r2, [r3, #20]
 662 0018 22EA0000 		bic	r0, r2, r0
 663              	.LVL27:
 664 001c 00F0FF00 		and	r0, r0, #255
 665 0020 5861     		str	r0, [r3, #20]
 666 0022 7047     		bx	lr
 667              		.cfi_endproc
 668              	.LFE124:
 670              		.section	.text.CRYP_GetITStatus,"ax",%progbits
 671              		.align	2
 672              		.global	CRYP_GetITStatus
 673              		.thumb
 674              		.thumb_func
 676              	CRYP_GetITStatus:
 677              	.LFB125:
 752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Checks whether the specified CRYP interrupt has occurred or not.
 757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @note   This function checks the status of the masked interrupt (i.e the 
 758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *         interrupt should be previously enabled).     
 759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_IT: specifies the CRYP (masked) interrupt source to check.
 760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *           This parameter can be one of the following values:
 761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_INI: Input FIFO interrupt
 762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_IT_OUTI: Output FIFO interrupt
 763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval The new state of CRYP_IT (SET or RESET).
 764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** ITStatus CRYP_GetITStatus(uint8_t CRYP_IT)
 766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 678              		.loc 1 766 0
 679              		.cfi_startproc
 680              		@ args = 0, pretend = 0, frame = 0
 681              		@ frame_needed = 0, uses_anonymous_args = 0
 682              		@ link register save eliminated.
 683              	.LVL28:
 767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   ITStatus bitstatus = RESET;
 768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_GET_IT(CRYP_IT));
 770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the status of the specified CRYP interrupt */
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP->MISR &  CRYP_IT) != (uint8_t)RESET)
 684              		.loc 1 772 0
 685 0000 0023     		movs	r3, #0
 686 0002 C5F20603 		movt	r3, 20486
 687 0006 DB69     		ldr	r3, [r3, #28]
 688 0008 1840     		ands	r0, r0, r3
 689              	.LVL29:
 773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* CRYP_IT is set */
 775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = SET;
 776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* CRYP_IT is reset */
 780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = RESET;
 781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Return the CRYP_IT status */
 783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   return bitstatus;
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 690              		.loc 1 784 0
 691 000a 0030     		adds	r0, r0, #0
 692 000c 18BF     		it	ne
 693 000e 0120     		movne	r0, #1
 694              	.LVL30:
 695 0010 7047     		bx	lr
 696              		.cfi_endproc
 697              	.LFE125:
 699 0012 00BF     		.section	.text.CRYP_GetFlagStatus,"ax",%progbits
 700              		.align	2
 701              		.global	CRYP_GetFlagStatus
 702              		.thumb
 703              		.thumb_func
 705              	CRYP_GetFlagStatus:
 706              	.LFB126:
 785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** /**
 787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @brief  Checks whether the specified CRYP flag is set or not.
 788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @param  CRYP_FLAG: specifies the CRYP flag to check.
 789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *          This parameter can be one of the following values:
 790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_IFEM: Input FIFO Empty flag.
 791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_IFNF: Input FIFO Not Full flag.
 792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_OFNE: Output FIFO Not Empty flag.
 793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_OFFU: Output FIFO Full flag.
 794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_BUSY: Busy flag.
 795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_OUTRIS: Output FIFO raw interrupt flag.
 796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   *            @arg CRYP_FLAG_INRIS: Input FIFO raw interrupt flag.
 797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   * @retval The new state of CRYP_FLAG (SET or RESET).
 798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   */
 799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** FlagStatus CRYP_GetFlagStatus(uint8_t CRYP_FLAG)
 800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** {
 707              		.loc 1 800 0
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 0
 710              		@ frame_needed = 0, uses_anonymous_args = 0
 711              		@ link register save eliminated.
 712              	.LVL31:
 801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   FlagStatus bitstatus = RESET;
 802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   uint32_t tempreg = 0;
 803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the parameters */
 805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   assert_param(IS_CRYP_GET_FLAG(CRYP_FLAG));
 806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* check if the FLAG is in RISR register */
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((CRYP_FLAG & FLAG_MASK) != 0x00) 
 713              		.loc 1 808 0
 714 0000 10F0200F 		tst	r0, #32
 809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     tempreg = CRYP->RISR;
 715              		.loc 1 810 0
 716 0004 4FF00003 		mov	r3, #0
 717 0008 C5F20603 		movt	r3, 20486
 718 000c 14BF     		ite	ne
 719 000e 9B69     		ldrne	r3, [r3, #24]
 720              	.LVL32:
 811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else  /* The FLAG is in SR register */
 813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     tempreg = CRYP->SR;
 721              		.loc 1 814 0
 722 0010 5B68     		ldreq	r3, [r3, #4]
 723              	.LVL33:
 815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Check the status of the specified CRYP flag */
 819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   if ((tempreg & CRYP_FLAG ) != (uint8_t)RESET)
 724              		.loc 1 819 0
 725 0012 1840     		ands	r0, r0, r3
 726              	.LVL34:
 820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* CRYP_FLAG is set */
 822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = SET;
 823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   else
 825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   {
 826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     /* CRYP_FLAG is reset */
 827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****     bitstatus = RESET;
 828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   }
 829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** 
 830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   /* Return the CRYP_FLAG status */
 831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c ****   return  bitstatus;
 832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_cryp.c **** }
 727              		.loc 1 832 0
 728 0014 0030     		adds	r0, r0, #0
 729 0016 18BF     		it	ne
 730 0018 0120     		movne	r0, #1
 731              	.LVL35:
 732 001a 7047     		bx	lr
 733              		.cfi_endproc
 734              	.LFE126:
 736              		.text
 737              	.Letext0:
 738              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 739              		.file 3 "/usr/include/newlib/stdint.h"
 740              		.file 4 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 741              		.file 5 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_cryp.h"
 742              		.file 6 "libs/CMSIS/Include/core_cm4.h"
 743              		.file 7 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_cryp.c
     /tmp/ccvTNWMo.s:20     .text.CRYP_DeInit:0000000000000000 $t
     /tmp/ccvTNWMo.s:25     .text.CRYP_DeInit:0000000000000000 CRYP_DeInit
     /tmp/ccvTNWMo.s:52     .text.CRYP_Init:0000000000000000 $t
     /tmp/ccvTNWMo.s:57     .text.CRYP_Init:0000000000000000 CRYP_Init
     /tmp/ccvTNWMo.s:126    .text.CRYP_StructInit:0000000000000000 $t
     /tmp/ccvTNWMo.s:131    .text.CRYP_StructInit:0000000000000000 CRYP_StructInit
     /tmp/ccvTNWMo.s:153    .text.CRYP_KeyInit:0000000000000000 $t
     /tmp/ccvTNWMo.s:158    .text.CRYP_KeyInit:0000000000000000 CRYP_KeyInit
     /tmp/ccvTNWMo.s:197    .text.CRYP_KeyStructInit:0000000000000000 $t
     /tmp/ccvTNWMo.s:202    .text.CRYP_KeyStructInit:0000000000000000 CRYP_KeyStructInit
     /tmp/ccvTNWMo.s:232    .text.CRYP_IVInit:0000000000000000 $t
     /tmp/ccvTNWMo.s:237    .text.CRYP_IVInit:0000000000000000 CRYP_IVInit
     /tmp/ccvTNWMo.s:264    .text.CRYP_IVStructInit:0000000000000000 $t
     /tmp/ccvTNWMo.s:269    .text.CRYP_IVStructInit:0000000000000000 CRYP_IVStructInit
     /tmp/ccvTNWMo.s:291    .text.CRYP_FIFOFlush:0000000000000000 $t
     /tmp/ccvTNWMo.s:296    .text.CRYP_FIFOFlush:0000000000000000 CRYP_FIFOFlush
     /tmp/ccvTNWMo.s:314    .text.CRYP_Cmd:0000000000000000 $t
     /tmp/ccvTNWMo.s:319    .text.CRYP_Cmd:0000000000000000 CRYP_Cmd
     /tmp/ccvTNWMo.s:348    .text.CRYP_DataIn:0000000000000000 $t
     /tmp/ccvTNWMo.s:353    .text.CRYP_DataIn:0000000000000000 CRYP_DataIn
     /tmp/ccvTNWMo.s:370    .text.CRYP_DataOut:0000000000000000 $t
     /tmp/ccvTNWMo.s:375    .text.CRYP_DataOut:0000000000000000 CRYP_DataOut
     /tmp/ccvTNWMo.s:392    .text.CRYP_SaveContext:0000000000000000 $t
     /tmp/ccvTNWMo.s:397    .text.CRYP_SaveContext:0000000000000000 CRYP_SaveContext
     /tmp/ccvTNWMo.s:532    .text.CRYP_RestoreContext:0000000000000000 $t
     /tmp/ccvTNWMo.s:537    .text.CRYP_RestoreContext:0000000000000000 CRYP_RestoreContext
     /tmp/ccvTNWMo.s:595    .text.CRYP_DMACmd:0000000000000000 $t
     /tmp/ccvTNWMo.s:600    .text.CRYP_DMACmd:0000000000000000 CRYP_DMACmd
     /tmp/ccvTNWMo.s:633    .text.CRYP_ITConfig:0000000000000000 $t
     /tmp/ccvTNWMo.s:638    .text.CRYP_ITConfig:0000000000000000 CRYP_ITConfig
     /tmp/ccvTNWMo.s:671    .text.CRYP_GetITStatus:0000000000000000 $t
     /tmp/ccvTNWMo.s:676    .text.CRYP_GetITStatus:0000000000000000 CRYP_GetITStatus
     /tmp/ccvTNWMo.s:700    .text.CRYP_GetFlagStatus:0000000000000000 $t
     /tmp/ccvTNWMo.s:705    .text.CRYP_GetFlagStatus:0000000000000000 CRYP_GetFlagStatus
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.1.7402b5479d3fa4780665141f585fc0ee
                           .group:0000000000000000 wm4.stm32f4xx.h.48.a3308e16720c7afc3eb28e585e628ce6
                           .group:0000000000000000 wm4.core_cm4.h.32.5f62939b60122629d60d85d0c4a14709
                           .group:0000000000000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:0000000000000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:0000000000000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:0000000000000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:0000000000000000 wm4.core_cm4_simd.h.29.b4a3fdfb606cb3b26119424324d4b963
                           .group:0000000000000000 wm4.core_cm4.h.153.5393ef7e6cebf34dd51ca528f9218ab3
                           .group:0000000000000000 wm4.stm32f4xx.h.282.95bae448a91bccfbf24a6f9d95904bb8
                           .group:0000000000000000 wm4.stm32f4xx_adc.h.102.2061aa73008746f3c2cc6ce8f635cad3
                           .group:0000000000000000 wm4.stm32f4xx_can.h.25.87f18ca48b2692d39f76e87b1f07c953
                           .group:0000000000000000 wm4.stm32f4xx_dac.h.25.c43557a6416ea4dfa986c1209c2558d6
                           .group:0000000000000000 wm4.stm32f4xx_dbgmcu.h.24.7aedfdcf091890b5cb96019bd29a2bfc
                           .group:0000000000000000 wm4.stm32f4xx_dcmi.h.24.64883d9be802a535b1d7770d14da73e0
                           .group:0000000000000000 wm4.stm32f4xx_dma.h.25.c1fa1d44ae0bc9c2b3a0d1d355d8c1e6
                           .group:0000000000000000 wm4.stm32f4xx_exti.h.25.620998268d5d3d9042a8297fbe07d507
                           .group:0000000000000000 wm4.stm32f4xx_flash.h.25.65d4f351b72ee41355279f70305f361a
                           .group:0000000000000000 wm4.stm32f4xx_fsmc.h.25.b907ac7bd9bec46e02d06b137d53cfd8
                           .group:0000000000000000 wm4.stm32f4xx_hash.h.25.633fb84f031cf2ab1bd834e536716dfa
                           .group:0000000000000000 wm4.stm32f4xx_gpio.h.25.5bd1d790d742a307b55aea5fa8fcdae8
                           .group:0000000000000000 wm4.stm32f4xx_i2c.h.25.8fcdb817a00a67d4624d79bab0d9275f
                           .group:0000000000000000 wm4.stm32f4xx_iwdg.h.25.3013e8d2058415cb9d51af77f748a146
                           .group:0000000000000000 wm4.stm32f4xx_pwr.h.25.48b68c1f3a894ab012f9c2a2c222f159
                           .group:0000000000000000 wm4.stm32f4xx_rcc.h.24.c15e7c8dc065bb29146f29591b195c87
                           .group:0000000000000000 wm4.stm32f4xx_rng.h.25.cdb5c5c07de6a48aedfde608da3f447e
                           .group:0000000000000000 wm4.stm32f4xx_rtc.h.25.4809a79ad46ad97b4a01e735a96738eb
                           .group:0000000000000000 wm4.stm32f4xx_sdio.h.25.406302aabae34eada94e5f2cde635a3e
                           .group:0000000000000000 wm4.stm32f4xx_spi.h.25.46c61b79ff8408da93e2e90cf9b717d6
                           .group:0000000000000000 wm4.stm32f4xx_syscfg.h.25.9d5caab5677661b69e959531364e23d7
                           .group:0000000000000000 wm4.stm32f4xx_tim.h.25.948f7fc943f34bd206e29758e77ee0a2
                           .group:0000000000000000 wm4.stm32f4xx_usart.h.25.b64697dad017ba547dd272c2cdb5846a
                           .group:0000000000000000 wm4.stm32f4xx_wwdg.h.25.09d70b7849c6894ddf1e83c8e86b70e1
                           .group:0000000000000000 wm4.misc.h.25.a0cb758c1f091b46f201b19cec9e63a1
                           .group:0000000000000000 wm4.stm32f4xx.h.6913.da011404ccb203790556c86f10c46b18
                           .group:0000000000000000 wm4.stm32f4xx_cryp.h.119.d9dc2f059ca5f1650f6b9481919a2fab

UNDEFINED SYMBOLS
RCC_AHB2PeriphResetCmd
