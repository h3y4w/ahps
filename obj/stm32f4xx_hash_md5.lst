   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_hash_md5.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HASH_MD5,"ax",%progbits
  20              		.align	2
  21              		.global	HASH_MD5
  22              		.thumb
  23              		.thumb_func
  25              	HASH_MD5:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @file    stm32f4xx_hash_md5.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @brief   This file provides high level functions to compute the HASH MD5 and
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *          HMAC MD5 Digest of an input message.
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *          It uses the stm32f4xx_hash.c/.h drivers to access the STM32F4xx HASH
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *          peripheral.
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *  @verbatim
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *    
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *          ===================================================================
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *                                   How to use this driver
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *          ===================================================================
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *          1. Enable The HASH controller clock using 
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *            RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_HASH, ENABLE); function.
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *          2. Calculate the HASH MD5 Digest using HASH_MD5() function.
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *          3. Calculate the HMAC MD5 Digest using HMAC_MD5() function.
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *  @endverbatim
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   ******************************************************************************
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @attention
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   ******************************************************************************
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   */
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** /* Includes ------------------------------------------------------------------*/
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** #include "stm32f4xx_hash.h"
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @{
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   */
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** /** @defgroup HASH 
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @brief HASH driver modules
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @{
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   */
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** /* Private typedef -----------------------------------------------------------*/
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** /* Private define ------------------------------------------------------------*/
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** #define MD5BUSY_TIMEOUT    ((uint32_t) 0x00010000)
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** /* Private macro -------------------------------------------------------------*/
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** /* Private variables ---------------------------------------------------------*/
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** /* Private function prototypes -----------------------------------------------*/
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** /* Private functions ---------------------------------------------------------*/
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** /** @defgroup HASH_Private_Functions
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @{
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   */ 
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** /** @defgroup HASH_Group7 High Level MD5 functions
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****  *  @brief   High Level MD5 Hash and HMAC functions 
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****  *
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** @verbatim   
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****  ===============================================================================
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****                           High Level MD5 Hash and HMAC functions
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****  ===============================================================================
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** @endverbatim
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @{
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   */
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** /**
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @brief  Compute the HASH MD5 digest.
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @param  Input: pointer to the Input buffer to be treated.
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @param  Ilen: length of the Input buffer.
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @param  Output: the returned digest
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @retval An ErrorStatus enumeration value:
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *          - SUCCESS: digest computation done
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *          - ERROR: digest computation failed
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   */
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** ErrorStatus HASH_MD5(uint8_t *Input, uint32_t Ilen, uint8_t Output[16])
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** {
  28              		.loc 1 88 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 48
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 20
  36              		.cfi_offset 4, -20
  37              		.cfi_offset 5, -16
  38              		.cfi_offset 6, -12
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 8DB0     		sub	sp, sp, #52
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 72
  44 0004 0E46     		mov	r6, r1
  45 0006 1746     		mov	r7, r2
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   HASH_InitTypeDef MD5_HASH_InitStructure;
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   HASH_MsgDigest MD5_MessageDigest;
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   __IO uint16_t nbvalidbitsdata = 0;
  46              		.loc 1 91 0
  47 0008 0024     		movs	r4, #0
  48 000a ADF80A40 		strh	r4, [sp, #10]	@ movhi
  49              	.LVL1:
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   uint32_t i = 0;
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   __IO uint32_t counter = 0;
  50              		.loc 1 93 0
  51 000e 0194     		str	r4, [sp, #4]
  52              	.LVL2:
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   uint32_t busystatus = 0;
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   ErrorStatus status = SUCCESS;
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   uint32_t inputaddr  = (uint32_t)Input;
  53              		.loc 1 96 0
  54 0010 0546     		mov	r5, r0
  55              	.LVL3:
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   uint32_t outputaddr = (uint32_t)Output;
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* Number of valid bits in last word of the Input data */
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   nbvalidbitsdata = 8 * (Ilen % 4);
  56              		.loc 1 101 0
  57 0012 01F00303 		and	r3, r1, #3
  58 0016 DB00     		lsls	r3, r3, #3
  59 0018 ADF80A30 		strh	r3, [sp, #10]	@ movhi
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* HASH peripheral initialization */
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   HASH_DeInit();
  60              		.loc 1 104 0
  61 001c FFF7FEFF 		bl	HASH_DeInit
  62              	.LVL4:
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* HASH Configuration */
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   MD5_HASH_InitStructure.HASH_AlgoSelection = HASH_AlgoSelection_MD5;
  63              		.loc 1 107 0
  64 0020 8023     		movs	r3, #128
  65 0022 0893     		str	r3, [sp, #32]
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   MD5_HASH_InitStructure.HASH_AlgoMode = HASH_AlgoMode_HASH;
  66              		.loc 1 108 0
  67 0024 0994     		str	r4, [sp, #36]
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   MD5_HASH_InitStructure.HASH_DataType = HASH_DataType_8b;
  68              		.loc 1 109 0
  69 0026 2023     		movs	r3, #32
  70 0028 0A93     		str	r3, [sp, #40]
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   HASH_Init(&MD5_HASH_InitStructure);
  71              		.loc 1 110 0
  72 002a 0DEB0300 		add	r0, sp, r3
  73 002e FFF7FEFF 		bl	HASH_Init
  74              	.LVL5:
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* Configure the number of valid bits in last word of the data */
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   HASH_SetLastWordValidBitsNbr(nbvalidbitsdata);
  75              		.loc 1 113 0
  76 0032 BDF80A00 		ldrh	r0, [sp, #10]
  77 0036 80B2     		uxth	r0, r0
  78 0038 FFF7FEFF 		bl	HASH_SetLastWordValidBitsNbr
  79              	.LVL6:
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* Write the Input block in the IN FIFO */
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   for(i=0; i<Ilen; i+=4)
  80              		.loc 1 116 0
  81 003c 04E0     		b	.L2
  82              	.LVL7:
  83              	.L3:
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   {
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     HASH_DataIn(*(uint32_t*)inputaddr);
  84              		.loc 1 118 0 discriminator 2
  85 003e 55F8040B 		ldr	r0, [r5], #4
  86              	.LVL8:
  87 0042 FFF7FEFF 		bl	HASH_DataIn
  88              	.LVL9:
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   {
  89              		.loc 1 116 0 discriminator 2
  90 0046 0434     		adds	r4, r4, #4
  91              	.LVL10:
  92              	.L2:
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   {
  93              		.loc 1 116 0 is_stmt 0 discriminator 1
  94 0048 B442     		cmp	r4, r6
  95 004a F8D3     		bcc	.L3
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     inputaddr+=4;
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   }
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* Start the HASH processor */
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   HASH_StartDigest();
  96              		.loc 1 123 0 is_stmt 1
  97 004c FFF7FEFF 		bl	HASH_StartDigest
  98              	.LVL11:
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* wait until the Busy flag is RESET */
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   do
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   {
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     busystatus = HASH_GetFlagStatus(HASH_FLAG_BUSY);
  99              		.loc 1 128 0
 100 0050 0824     		movs	r4, #8
 101              	.LVL12:
 102              	.L5:
 103              		.loc 1 128 0 is_stmt 0 discriminator 1
 104 0052 2046     		mov	r0, r4
 105 0054 FFF7FEFF 		bl	HASH_GetFlagStatus
 106              	.LVL13:
 107 0058 0246     		mov	r2, r0
 108              	.LVL14:
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     counter++;
 109              		.loc 1 129 0 is_stmt 1 discriminator 1
 110 005a 019B     		ldr	r3, [sp, #4]
 111 005c 0133     		adds	r3, r3, #1
 112 005e 0193     		str	r3, [sp, #4]
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   }while ((counter != MD5BUSY_TIMEOUT) && (busystatus != RESET));
 113              		.loc 1 130 0 discriminator 1
 114 0060 019B     		ldr	r3, [sp, #4]
 115 0062 B3F5803F 		cmp	r3, #65536
 116 0066 01D0     		beq	.L4
 117 0068 0028     		cmp	r0, #0
 118 006a F2D1     		bne	.L5
 119              	.L4:
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   if (busystatus != RESET)
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   {
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****      status = ERROR;
 120              		.loc 1 134 0
 121 006c 0020     		movs	r0, #0
 122              	.LVL15:
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   {
 123              		.loc 1 132 0
 124 006e 82B9     		cbnz	r2, .L6
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   }
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   else
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   {
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     /* Read the message digest */
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     HASH_GetDigest(&MD5_MessageDigest);
 125              		.loc 1 139 0
 126 0070 03A8     		add	r0, sp, #12
 127 0072 FFF7FEFF 		bl	HASH_GetDigest
 128              	.LVL16:
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[0]);
 129              		.loc 1 140 0
 130 0076 039B     		ldr	r3, [sp, #12]
 131              	.LVL17:
 132              	.LBB18:
 133              	.LBB19:
 134              		.file 2 "libs/CMSIS/Include/core_cmInstr.h"
   1:libs/CMSIS/Include/core_cmInstr.h **** /**************************************************************************//**
   2:libs/CMSIS/Include/core_cmInstr.h ****  * @file     core_cmInstr.h
   3:libs/CMSIS/Include/core_cmInstr.h ****  * @brief    CMSIS Cortex-M Core Instruction Access Header File
   4:libs/CMSIS/Include/core_cmInstr.h ****  * @version  V2.10
   5:libs/CMSIS/Include/core_cmInstr.h ****  * @date     19. July 2011
   6:libs/CMSIS/Include/core_cmInstr.h ****  *
   7:libs/CMSIS/Include/core_cmInstr.h ****  * @note
   8:libs/CMSIS/Include/core_cmInstr.h ****  * Copyright (C) 2009-2011 ARM Limited. All rights reserved.
   9:libs/CMSIS/Include/core_cmInstr.h ****  *
  10:libs/CMSIS/Include/core_cmInstr.h ****  * @par
  11:libs/CMSIS/Include/core_cmInstr.h ****  * ARM Limited (ARM) is supplying this software for use with Cortex-M 
  12:libs/CMSIS/Include/core_cmInstr.h ****  * processor based microcontrollers.  This file can be freely distributed 
  13:libs/CMSIS/Include/core_cmInstr.h ****  * within development tools that are supporting such ARM based processors. 
  14:libs/CMSIS/Include/core_cmInstr.h ****  *
  15:libs/CMSIS/Include/core_cmInstr.h ****  * @par
  16:libs/CMSIS/Include/core_cmInstr.h ****  * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
  17:libs/CMSIS/Include/core_cmInstr.h ****  * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
  18:libs/CMSIS/Include/core_cmInstr.h ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
  19:libs/CMSIS/Include/core_cmInstr.h ****  * ARM SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL, OR
  20:libs/CMSIS/Include/core_cmInstr.h ****  * CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
  21:libs/CMSIS/Include/core_cmInstr.h ****  *
  22:libs/CMSIS/Include/core_cmInstr.h ****  ******************************************************************************/
  23:libs/CMSIS/Include/core_cmInstr.h **** 
  24:libs/CMSIS/Include/core_cmInstr.h **** #ifndef __CORE_CMINSTR_H
  25:libs/CMSIS/Include/core_cmInstr.h **** #define __CORE_CMINSTR_H
  26:libs/CMSIS/Include/core_cmInstr.h **** 
  27:libs/CMSIS/Include/core_cmInstr.h **** 
  28:libs/CMSIS/Include/core_cmInstr.h **** /* ##########################  Core Instruction Access  ######################### */
  29:libs/CMSIS/Include/core_cmInstr.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
  30:libs/CMSIS/Include/core_cmInstr.h ****   Access to dedicated instructions
  31:libs/CMSIS/Include/core_cmInstr.h ****   @{
  32:libs/CMSIS/Include/core_cmInstr.h **** */
  33:libs/CMSIS/Include/core_cmInstr.h **** 
  34:libs/CMSIS/Include/core_cmInstr.h **** #if   defined ( __CC_ARM ) /*------------------RealView Compiler -----------------*/
  35:libs/CMSIS/Include/core_cmInstr.h **** /* ARM armcc specific functions */
  36:libs/CMSIS/Include/core_cmInstr.h **** 
  37:libs/CMSIS/Include/core_cmInstr.h **** #if (__ARMCC_VERSION < 400677)
  38:libs/CMSIS/Include/core_cmInstr.h ****   #error "Please use ARM Compiler Toolchain V4.0.677 or later!"
  39:libs/CMSIS/Include/core_cmInstr.h **** #endif
  40:libs/CMSIS/Include/core_cmInstr.h **** 
  41:libs/CMSIS/Include/core_cmInstr.h **** 
  42:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
  43:libs/CMSIS/Include/core_cmInstr.h **** 
  44:libs/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
  45:libs/CMSIS/Include/core_cmInstr.h ****  */
  46:libs/CMSIS/Include/core_cmInstr.h **** #define __NOP                             __nop
  47:libs/CMSIS/Include/core_cmInstr.h **** 
  48:libs/CMSIS/Include/core_cmInstr.h **** 
  49:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
  50:libs/CMSIS/Include/core_cmInstr.h **** 
  51:libs/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
  52:libs/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
  53:libs/CMSIS/Include/core_cmInstr.h ****  */
  54:libs/CMSIS/Include/core_cmInstr.h **** #define __WFI                             __wfi
  55:libs/CMSIS/Include/core_cmInstr.h **** 
  56:libs/CMSIS/Include/core_cmInstr.h **** 
  57:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
  58:libs/CMSIS/Include/core_cmInstr.h **** 
  59:libs/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
  60:libs/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
  61:libs/CMSIS/Include/core_cmInstr.h ****  */
  62:libs/CMSIS/Include/core_cmInstr.h **** #define __WFE                             __wfe
  63:libs/CMSIS/Include/core_cmInstr.h **** 
  64:libs/CMSIS/Include/core_cmInstr.h **** 
  65:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
  66:libs/CMSIS/Include/core_cmInstr.h **** 
  67:libs/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
  68:libs/CMSIS/Include/core_cmInstr.h ****  */
  69:libs/CMSIS/Include/core_cmInstr.h **** #define __SEV                             __sev
  70:libs/CMSIS/Include/core_cmInstr.h **** 
  71:libs/CMSIS/Include/core_cmInstr.h **** 
  72:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
  73:libs/CMSIS/Include/core_cmInstr.h **** 
  74:libs/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor, 
  75:libs/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or 
  76:libs/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
  77:libs/CMSIS/Include/core_cmInstr.h ****  */
  78:libs/CMSIS/Include/core_cmInstr.h **** #define __ISB()                           __isb(0xF)
  79:libs/CMSIS/Include/core_cmInstr.h **** 
  80:libs/CMSIS/Include/core_cmInstr.h **** 
  81:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
  82:libs/CMSIS/Include/core_cmInstr.h **** 
  83:libs/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier. 
  84:libs/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
  85:libs/CMSIS/Include/core_cmInstr.h ****  */
  86:libs/CMSIS/Include/core_cmInstr.h **** #define __DSB()                           __dsb(0xF)
  87:libs/CMSIS/Include/core_cmInstr.h **** 
  88:libs/CMSIS/Include/core_cmInstr.h **** 
  89:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Memory Barrier
  90:libs/CMSIS/Include/core_cmInstr.h **** 
  91:libs/CMSIS/Include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before 
  92:libs/CMSIS/Include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
  93:libs/CMSIS/Include/core_cmInstr.h ****  */
  94:libs/CMSIS/Include/core_cmInstr.h **** #define __DMB()                           __dmb(0xF)
  95:libs/CMSIS/Include/core_cmInstr.h **** 
  96:libs/CMSIS/Include/core_cmInstr.h **** 
  97:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
  98:libs/CMSIS/Include/core_cmInstr.h **** 
  99:libs/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 100:libs/CMSIS/Include/core_cmInstr.h **** 
 101:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 102:libs/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 103:libs/CMSIS/Include/core_cmInstr.h ****  */
 104:libs/CMSIS/Include/core_cmInstr.h **** #define __REV                             __rev
 105:libs/CMSIS/Include/core_cmInstr.h **** 
 106:libs/CMSIS/Include/core_cmInstr.h **** 
 107:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (16 bit)
 108:libs/CMSIS/Include/core_cmInstr.h **** 
 109:libs/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in two unsigned short values.
 110:libs/CMSIS/Include/core_cmInstr.h **** 
 111:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 112:libs/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 113:libs/CMSIS/Include/core_cmInstr.h ****  */
 114:libs/CMSIS/Include/core_cmInstr.h **** static __INLINE __ASM uint32_t __REV16(uint32_t value)
 115:libs/CMSIS/Include/core_cmInstr.h **** {
 116:libs/CMSIS/Include/core_cmInstr.h ****   rev16 r0, r0
 117:libs/CMSIS/Include/core_cmInstr.h ****   bx lr
 118:libs/CMSIS/Include/core_cmInstr.h **** }
 119:libs/CMSIS/Include/core_cmInstr.h **** 
 120:libs/CMSIS/Include/core_cmInstr.h **** 
 121:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order in signed short value
 122:libs/CMSIS/Include/core_cmInstr.h **** 
 123:libs/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in a signed short value with sign extension to integer.
 124:libs/CMSIS/Include/core_cmInstr.h **** 
 125:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 126:libs/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 127:libs/CMSIS/Include/core_cmInstr.h ****  */
 128:libs/CMSIS/Include/core_cmInstr.h **** static __INLINE __ASM int32_t __REVSH(int32_t value)
 129:libs/CMSIS/Include/core_cmInstr.h **** {
 130:libs/CMSIS/Include/core_cmInstr.h ****   revsh r0, r0
 131:libs/CMSIS/Include/core_cmInstr.h ****   bx lr
 132:libs/CMSIS/Include/core_cmInstr.h **** }
 133:libs/CMSIS/Include/core_cmInstr.h **** 
 134:libs/CMSIS/Include/core_cmInstr.h **** 
 135:libs/CMSIS/Include/core_cmInstr.h **** #if       (__CORTEX_M >= 0x03)
 136:libs/CMSIS/Include/core_cmInstr.h **** 
 137:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse bit order of value
 138:libs/CMSIS/Include/core_cmInstr.h **** 
 139:libs/CMSIS/Include/core_cmInstr.h ****     This function reverses the bit order of the given value.
 140:libs/CMSIS/Include/core_cmInstr.h **** 
 141:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 142:libs/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 143:libs/CMSIS/Include/core_cmInstr.h ****  */
 144:libs/CMSIS/Include/core_cmInstr.h **** #define __RBIT                            __rbit
 145:libs/CMSIS/Include/core_cmInstr.h **** 
 146:libs/CMSIS/Include/core_cmInstr.h **** 
 147:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (8 bit)
 148:libs/CMSIS/Include/core_cmInstr.h **** 
 149:libs/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 8 bit value.
 150:libs/CMSIS/Include/core_cmInstr.h **** 
 151:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 152:libs/CMSIS/Include/core_cmInstr.h ****     \return             value of type uint8_t at (*ptr)
 153:libs/CMSIS/Include/core_cmInstr.h ****  */
 154:libs/CMSIS/Include/core_cmInstr.h **** #define __LDREXB(ptr)                     ((uint8_t ) __ldrex(ptr))
 155:libs/CMSIS/Include/core_cmInstr.h **** 
 156:libs/CMSIS/Include/core_cmInstr.h **** 
 157:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (16 bit)
 158:libs/CMSIS/Include/core_cmInstr.h **** 
 159:libs/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 16 bit values.
 160:libs/CMSIS/Include/core_cmInstr.h **** 
 161:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 162:libs/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint16_t at (*ptr)
 163:libs/CMSIS/Include/core_cmInstr.h ****  */
 164:libs/CMSIS/Include/core_cmInstr.h **** #define __LDREXH(ptr)                     ((uint16_t) __ldrex(ptr))
 165:libs/CMSIS/Include/core_cmInstr.h **** 
 166:libs/CMSIS/Include/core_cmInstr.h **** 
 167:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  LDR Exclusive (32 bit)
 168:libs/CMSIS/Include/core_cmInstr.h **** 
 169:libs/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive LDR command for 32 bit values.
 170:libs/CMSIS/Include/core_cmInstr.h **** 
 171:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to data
 172:libs/CMSIS/Include/core_cmInstr.h ****     \return        value of type uint32_t at (*ptr)
 173:libs/CMSIS/Include/core_cmInstr.h ****  */
 174:libs/CMSIS/Include/core_cmInstr.h **** #define __LDREXW(ptr)                     ((uint32_t ) __ldrex(ptr))
 175:libs/CMSIS/Include/core_cmInstr.h **** 
 176:libs/CMSIS/Include/core_cmInstr.h **** 
 177:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (8 bit)
 178:libs/CMSIS/Include/core_cmInstr.h **** 
 179:libs/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 8 bit values.
 180:libs/CMSIS/Include/core_cmInstr.h **** 
 181:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 182:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 183:libs/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 184:libs/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 185:libs/CMSIS/Include/core_cmInstr.h ****  */
 186:libs/CMSIS/Include/core_cmInstr.h **** #define __STREXB(value, ptr)              __strex(value, ptr)
 187:libs/CMSIS/Include/core_cmInstr.h **** 
 188:libs/CMSIS/Include/core_cmInstr.h **** 
 189:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (16 bit)
 190:libs/CMSIS/Include/core_cmInstr.h **** 
 191:libs/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 16 bit values.
 192:libs/CMSIS/Include/core_cmInstr.h **** 
 193:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 194:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 195:libs/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 196:libs/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 197:libs/CMSIS/Include/core_cmInstr.h ****  */
 198:libs/CMSIS/Include/core_cmInstr.h **** #define __STREXH(value, ptr)              __strex(value, ptr)
 199:libs/CMSIS/Include/core_cmInstr.h **** 
 200:libs/CMSIS/Include/core_cmInstr.h **** 
 201:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  STR Exclusive (32 bit)
 202:libs/CMSIS/Include/core_cmInstr.h **** 
 203:libs/CMSIS/Include/core_cmInstr.h ****     This function performs a exclusive STR command for 32 bit values.
 204:libs/CMSIS/Include/core_cmInstr.h **** 
 205:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to store
 206:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    ptr  Pointer to location
 207:libs/CMSIS/Include/core_cmInstr.h ****     \return          0  Function succeeded
 208:libs/CMSIS/Include/core_cmInstr.h ****     \return          1  Function failed
 209:libs/CMSIS/Include/core_cmInstr.h ****  */
 210:libs/CMSIS/Include/core_cmInstr.h **** #define __STREXW(value, ptr)              __strex(value, ptr)
 211:libs/CMSIS/Include/core_cmInstr.h **** 
 212:libs/CMSIS/Include/core_cmInstr.h **** 
 213:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Remove the exclusive lock
 214:libs/CMSIS/Include/core_cmInstr.h **** 
 215:libs/CMSIS/Include/core_cmInstr.h ****     This function removes the exclusive lock which is created by LDREX.
 216:libs/CMSIS/Include/core_cmInstr.h **** 
 217:libs/CMSIS/Include/core_cmInstr.h ****  */
 218:libs/CMSIS/Include/core_cmInstr.h **** #define __CLREX                           __clrex
 219:libs/CMSIS/Include/core_cmInstr.h **** 
 220:libs/CMSIS/Include/core_cmInstr.h **** 
 221:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Signed Saturate
 222:libs/CMSIS/Include/core_cmInstr.h **** 
 223:libs/CMSIS/Include/core_cmInstr.h ****     This function saturates a signed value.
 224:libs/CMSIS/Include/core_cmInstr.h **** 
 225:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 226:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (1..32)
 227:libs/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 228:libs/CMSIS/Include/core_cmInstr.h ****  */
 229:libs/CMSIS/Include/core_cmInstr.h **** #define __SSAT                            __ssat
 230:libs/CMSIS/Include/core_cmInstr.h **** 
 231:libs/CMSIS/Include/core_cmInstr.h **** 
 232:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Unsigned Saturate
 233:libs/CMSIS/Include/core_cmInstr.h **** 
 234:libs/CMSIS/Include/core_cmInstr.h ****     This function saturates an unsigned value.
 235:libs/CMSIS/Include/core_cmInstr.h **** 
 236:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to be saturated
 237:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    sat  Bit position to saturate to (0..31)
 238:libs/CMSIS/Include/core_cmInstr.h ****     \return             Saturated value
 239:libs/CMSIS/Include/core_cmInstr.h ****  */
 240:libs/CMSIS/Include/core_cmInstr.h **** #define __USAT                            __usat
 241:libs/CMSIS/Include/core_cmInstr.h **** 
 242:libs/CMSIS/Include/core_cmInstr.h **** 
 243:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Count leading zeros
 244:libs/CMSIS/Include/core_cmInstr.h **** 
 245:libs/CMSIS/Include/core_cmInstr.h ****     This function counts the number of leading zeros of a data value.
 246:libs/CMSIS/Include/core_cmInstr.h **** 
 247:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]  value  Value to count the leading zeros
 248:libs/CMSIS/Include/core_cmInstr.h ****     \return             number of leading zeros in value
 249:libs/CMSIS/Include/core_cmInstr.h ****  */
 250:libs/CMSIS/Include/core_cmInstr.h **** #define __CLZ                             __clz 
 251:libs/CMSIS/Include/core_cmInstr.h **** 
 252:libs/CMSIS/Include/core_cmInstr.h **** #endif /* (__CORTEX_M >= 0x03) */
 253:libs/CMSIS/Include/core_cmInstr.h **** 
 254:libs/CMSIS/Include/core_cmInstr.h **** 
 255:libs/CMSIS/Include/core_cmInstr.h **** 
 256:libs/CMSIS/Include/core_cmInstr.h **** #elif defined ( __ICCARM__ ) /*------------------ ICC Compiler -------------------*/
 257:libs/CMSIS/Include/core_cmInstr.h **** /* IAR iccarm specific functions */
 258:libs/CMSIS/Include/core_cmInstr.h **** 
 259:libs/CMSIS/Include/core_cmInstr.h **** #include <cmsis_iar.h>
 260:libs/CMSIS/Include/core_cmInstr.h **** 
 261:libs/CMSIS/Include/core_cmInstr.h **** 
 262:libs/CMSIS/Include/core_cmInstr.h **** #elif defined ( __GNUC__ ) /*------------------ GNU Compiler ---------------------*/
 263:libs/CMSIS/Include/core_cmInstr.h **** /* GNU gcc specific functions */
 264:libs/CMSIS/Include/core_cmInstr.h **** 
 265:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  No Operation
 266:libs/CMSIS/Include/core_cmInstr.h **** 
 267:libs/CMSIS/Include/core_cmInstr.h ****     No Operation does nothing. This instruction can be used for code alignment purposes.
 268:libs/CMSIS/Include/core_cmInstr.h ****  */
 269:libs/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __NOP(void)
 270:libs/CMSIS/Include/core_cmInstr.h **** {
 271:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("nop");
 272:libs/CMSIS/Include/core_cmInstr.h **** }
 273:libs/CMSIS/Include/core_cmInstr.h **** 
 274:libs/CMSIS/Include/core_cmInstr.h **** 
 275:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Interrupt
 276:libs/CMSIS/Include/core_cmInstr.h **** 
 277:libs/CMSIS/Include/core_cmInstr.h ****     Wait For Interrupt is a hint instruction that suspends execution
 278:libs/CMSIS/Include/core_cmInstr.h ****     until one of a number of events occurs.
 279:libs/CMSIS/Include/core_cmInstr.h ****  */
 280:libs/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __WFI(void)
 281:libs/CMSIS/Include/core_cmInstr.h **** {
 282:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfi");
 283:libs/CMSIS/Include/core_cmInstr.h **** }
 284:libs/CMSIS/Include/core_cmInstr.h **** 
 285:libs/CMSIS/Include/core_cmInstr.h **** 
 286:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Wait For Event
 287:libs/CMSIS/Include/core_cmInstr.h **** 
 288:libs/CMSIS/Include/core_cmInstr.h ****     Wait For Event is a hint instruction that permits the processor to enter
 289:libs/CMSIS/Include/core_cmInstr.h ****     a low-power state until one of a number of events occurs.
 290:libs/CMSIS/Include/core_cmInstr.h ****  */
 291:libs/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __WFE(void)
 292:libs/CMSIS/Include/core_cmInstr.h **** {
 293:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("wfe");
 294:libs/CMSIS/Include/core_cmInstr.h **** }
 295:libs/CMSIS/Include/core_cmInstr.h **** 
 296:libs/CMSIS/Include/core_cmInstr.h **** 
 297:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Send Event
 298:libs/CMSIS/Include/core_cmInstr.h **** 
 299:libs/CMSIS/Include/core_cmInstr.h ****     Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 300:libs/CMSIS/Include/core_cmInstr.h ****  */
 301:libs/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __SEV(void)
 302:libs/CMSIS/Include/core_cmInstr.h **** {
 303:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("sev");
 304:libs/CMSIS/Include/core_cmInstr.h **** }
 305:libs/CMSIS/Include/core_cmInstr.h **** 
 306:libs/CMSIS/Include/core_cmInstr.h **** 
 307:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Instruction Synchronization Barrier
 308:libs/CMSIS/Include/core_cmInstr.h **** 
 309:libs/CMSIS/Include/core_cmInstr.h ****     Instruction Synchronization Barrier flushes the pipeline in the processor, 
 310:libs/CMSIS/Include/core_cmInstr.h ****     so that all instructions following the ISB are fetched from cache or 
 311:libs/CMSIS/Include/core_cmInstr.h ****     memory, after the instruction has been completed.
 312:libs/CMSIS/Include/core_cmInstr.h ****  */
 313:libs/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __ISB(void)
 314:libs/CMSIS/Include/core_cmInstr.h **** {
 315:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("isb");
 316:libs/CMSIS/Include/core_cmInstr.h **** }
 317:libs/CMSIS/Include/core_cmInstr.h **** 
 318:libs/CMSIS/Include/core_cmInstr.h **** 
 319:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Synchronization Barrier
 320:libs/CMSIS/Include/core_cmInstr.h **** 
 321:libs/CMSIS/Include/core_cmInstr.h ****     This function acts as a special kind of Data Memory Barrier. 
 322:libs/CMSIS/Include/core_cmInstr.h ****     It completes when all explicit memory accesses before this instruction complete.
 323:libs/CMSIS/Include/core_cmInstr.h ****  */
 324:libs/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __DSB(void)
 325:libs/CMSIS/Include/core_cmInstr.h **** {
 326:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("dsb");
 327:libs/CMSIS/Include/core_cmInstr.h **** }
 328:libs/CMSIS/Include/core_cmInstr.h **** 
 329:libs/CMSIS/Include/core_cmInstr.h **** 
 330:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Data Memory Barrier
 331:libs/CMSIS/Include/core_cmInstr.h **** 
 332:libs/CMSIS/Include/core_cmInstr.h ****     This function ensures the apparent order of the explicit memory operations before 
 333:libs/CMSIS/Include/core_cmInstr.h ****     and after the instruction, without ensuring their completion.
 334:libs/CMSIS/Include/core_cmInstr.h ****  */
 335:libs/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE void __DMB(void)
 336:libs/CMSIS/Include/core_cmInstr.h **** {
 337:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("dmb");
 338:libs/CMSIS/Include/core_cmInstr.h **** }
 339:libs/CMSIS/Include/core_cmInstr.h **** 
 340:libs/CMSIS/Include/core_cmInstr.h **** 
 341:libs/CMSIS/Include/core_cmInstr.h **** /** \brief  Reverse byte order (32 bit)
 342:libs/CMSIS/Include/core_cmInstr.h **** 
 343:libs/CMSIS/Include/core_cmInstr.h ****     This function reverses the byte order in integer value.
 344:libs/CMSIS/Include/core_cmInstr.h **** 
 345:libs/CMSIS/Include/core_cmInstr.h ****     \param [in]    value  Value to reverse
 346:libs/CMSIS/Include/core_cmInstr.h ****     \return               Reversed value
 347:libs/CMSIS/Include/core_cmInstr.h ****  */
 348:libs/CMSIS/Include/core_cmInstr.h **** __attribute__( ( always_inline ) ) static __INLINE uint32_t __REV(uint32_t value)
 349:libs/CMSIS/Include/core_cmInstr.h **** {
 350:libs/CMSIS/Include/core_cmInstr.h ****   uint32_t result;
 351:libs/CMSIS/Include/core_cmInstr.h ****   
 352:libs/CMSIS/Include/core_cmInstr.h ****   __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 135              		.loc 2 352 0
 136              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 137 0078 1BBA     		rev r3, r3
 138              	@ 0 "" 2
 139              	.LVL18:
 140              		.thumb
 141              	.LBE19:
 142              	.LBE18:
 143              		.loc 1 140 0
 144 007a 3B60     		str	r3, [r7]
 145              	.LVL19:
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     outputaddr+=4;
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[1]);
 146              		.loc 1 142 0
 147 007c 049B     		ldr	r3, [sp, #16]
 148              	.LVL20:
 149              	.LBB20:
 150              	.LBB21:
 151              		.loc 2 352 0
 152              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 153 007e 1BBA     		rev r3, r3
 154              	@ 0 "" 2
 155              	.LVL21:
 156              		.thumb
 157              	.LBE21:
 158              	.LBE20:
 159              		.loc 1 142 0
 160 0080 7B60     		str	r3, [r7, #4]
 161              	.LVL22:
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     outputaddr+=4;
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[2]);
 162              		.loc 1 144 0
 163 0082 059B     		ldr	r3, [sp, #20]
 164              	.LVL23:
 165              	.LBB22:
 166              	.LBB23:
 167              		.loc 2 352 0
 168              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 169 0084 1BBA     		rev r3, r3
 170              	@ 0 "" 2
 171              	.LVL24:
 172              		.thumb
 173              	.LBE23:
 174              	.LBE22:
 175              		.loc 1 144 0
 176 0086 BB60     		str	r3, [r7, #8]
 177              	.LVL25:
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     outputaddr+=4;
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[3]);
 178              		.loc 1 146 0
 179 0088 069B     		ldr	r3, [sp, #24]
 180              	.LVL26:
 181              	.LBB24:
 182              	.LBB25:
 183              		.loc 2 352 0
 184              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 185 008a 1BBA     		rev r3, r3
 186              	@ 0 "" 2
 187              	.LVL27:
 188              		.thumb
 189              	.LBE25:
 190              	.LBE24:
 191              		.loc 1 146 0
 192 008c FB60     		str	r3, [r7, #12]
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   uint32_t inputaddr  = (uint32_t)Input;
 193              		.loc 1 95 0
 194 008e 0120     		movs	r0, #1
 195 0090 FFE7     		b	.L6
 196              	.LVL28:
 197              	.L6:
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   }
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   return status; 
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** }
 198              		.loc 1 149 0
 199 0092 0DB0     		add	sp, sp, #52
 200              		@ sp needed
 201 0094 F0BD     		pop	{r4, r5, r6, r7, pc}
 202              		.cfi_endproc
 203              	.LFE110:
 205 0096 00BF     		.section	.text.HMAC_MD5,"ax",%progbits
 206              		.align	2
 207              		.global	HMAC_MD5
 208              		.thumb
 209              		.thumb_func
 211              	HMAC_MD5:
 212              	.LFB111:
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** /**
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @brief  Compute the HMAC MD5 digest.
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @param  Key: pointer to the Key used for HMAC.
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @param  Keylen: length of the Key used for HMAC.
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @param  Input: pointer to the Input buffer to be treated.
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @param  Ilen: length of the Input buffer.
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @param  Output: the returned digest  
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   * @retval An ErrorStatus enumeration value:
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *          - SUCCESS: digest computation done
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   *          - ERROR: digest computation failed
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   */
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** ErrorStatus HMAC_MD5(uint8_t *Key, uint32_t Keylen, uint8_t *Input, 
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****                      uint32_t Ilen, uint8_t Output[16])
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** {
 213              		.loc 1 164 0
 214              		.cfi_startproc
 215              		@ args = 4, pretend = 0, frame = 48
 216              		@ frame_needed = 0, uses_anonymous_args = 0
 217              	.LVL29:
 218 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 219              	.LCFI2:
 220              		.cfi_def_cfa_offset 28
 221              		.cfi_offset 4, -28
 222              		.cfi_offset 5, -24
 223              		.cfi_offset 6, -20
 224              		.cfi_offset 7, -16
 225              		.cfi_offset 8, -12
 226              		.cfi_offset 9, -8
 227              		.cfi_offset 14, -4
 228 0004 8DB0     		sub	sp, sp, #52
 229              	.LCFI3:
 230              		.cfi_def_cfa_offset 80
 231 0006 8146     		mov	r9, r0
 232 0008 0D46     		mov	r5, r1
 233 000a 1F46     		mov	r7, r3
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   HASH_InitTypeDef MD5_HASH_InitStructure;
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   HASH_MsgDigest MD5_MessageDigest;
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   __IO uint16_t nbvalidbitsdata = 0;
 234              		.loc 1 167 0
 235 000c 0023     		movs	r3, #0
 236              	.LVL30:
 237 000e ADF80A30 		strh	r3, [sp, #10]	@ movhi
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   __IO uint16_t nbvalidbitskey = 0;
 238              		.loc 1 168 0
 239 0012 ADF80830 		strh	r3, [sp, #8]	@ movhi
 240              	.LVL31:
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   uint32_t i = 0;
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   __IO uint32_t counter = 0;
 241              		.loc 1 170 0
 242 0016 0193     		str	r3, [sp, #4]
 243              	.LVL32:
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   uint32_t busystatus = 0;
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   ErrorStatus status = SUCCESS;
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   uint32_t keyaddr    = (uint32_t)Key;
 244              		.loc 1 173 0
 245 0018 8046     		mov	r8, r0
 246              	.LVL33:
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   uint32_t inputaddr  = (uint32_t)Input;
 247              		.loc 1 174 0
 248 001a 1646     		mov	r6, r2
 249              	.LVL34:
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   uint32_t outputaddr = (uint32_t)Output;
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* Number of valid bits in last word of the Input data */
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   nbvalidbitsdata = 8 * (Ilen % 4);
 250              		.loc 1 178 0
 251 001c 07F00303 		and	r3, r7, #3
 252 0020 DB00     		lsls	r3, r3, #3
 253 0022 ADF80A30 		strh	r3, [sp, #10]	@ movhi
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* Number of valid bits in last word of the Key */
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   nbvalidbitskey = 8 * (Keylen % 4);
 254              		.loc 1 181 0
 255 0026 01F00303 		and	r3, r1, #3
 256 002a DB00     		lsls	r3, r3, #3
 257 002c ADF80830 		strh	r3, [sp, #8]	@ movhi
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****    
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* HASH peripheral initialization */
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   HASH_DeInit();
 258              		.loc 1 184 0
 259 0030 FFF7FEFF 		bl	HASH_DeInit
 260              	.LVL35:
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* HASH Configuration */
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   MD5_HASH_InitStructure.HASH_AlgoSelection = HASH_AlgoSelection_MD5;
 261              		.loc 1 187 0
 262 0034 8023     		movs	r3, #128
 263 0036 0893     		str	r3, [sp, #32]
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   MD5_HASH_InitStructure.HASH_AlgoMode = HASH_AlgoMode_HMAC;
 264              		.loc 1 188 0
 265 0038 4023     		movs	r3, #64
 266 003a 0993     		str	r3, [sp, #36]
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   MD5_HASH_InitStructure.HASH_DataType = HASH_DataType_8b;
 267              		.loc 1 189 0
 268 003c 2023     		movs	r3, #32
 269 003e 0A93     		str	r3, [sp, #40]
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   if(Keylen > 64)
 270              		.loc 1 190 0
 271 0040 402D     		cmp	r5, #64
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   {
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     /* HMAC long Key */
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     MD5_HASH_InitStructure.HASH_HMACKeyType = HASH_HMACKeyType_LongKey;
 272              		.loc 1 193 0
 273 0042 8CBF     		ite	hi
 274 0044 4FF48033 		movhi	r3, #65536
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   }
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   else
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   {
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     /* HMAC short Key */
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     MD5_HASH_InitStructure.HASH_HMACKeyType = HASH_HMACKeyType_ShortKey;
 275              		.loc 1 198 0
 276 0048 0023     		movls	r3, #0
 277 004a 0B93     		str	r3, [sp, #44]
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   }
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   HASH_Init(&MD5_HASH_InitStructure);
 278              		.loc 1 200 0
 279 004c 08A8     		add	r0, sp, #32
 280 004e FFF7FEFF 		bl	HASH_Init
 281              	.LVL36:
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* Configure the number of valid bits in last word of the Key */
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   HASH_SetLastWordValidBitsNbr(nbvalidbitskey);
 282              		.loc 1 203 0
 283 0052 BDF80800 		ldrh	r0, [sp, #8]
 284 0056 80B2     		uxth	r0, r0
 285 0058 FFF7FEFF 		bl	HASH_SetLastWordValidBitsNbr
 286              	.LVL37:
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* Write the Key */
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   for(i=0; i<Keylen; i+=4)
 287              		.loc 1 206 0
 288 005c 0024     		movs	r4, #0
 289 005e 04E0     		b	.L12
 290              	.LVL38:
 291              	.L13:
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   {
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     HASH_DataIn(*(uint32_t*)keyaddr);
 292              		.loc 1 208 0 discriminator 2
 293 0060 59F8040B 		ldr	r0, [r9], #4
 294              	.LVL39:
 295 0064 FFF7FEFF 		bl	HASH_DataIn
 296              	.LVL40:
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   {
 297              		.loc 1 206 0 discriminator 2
 298 0068 0434     		adds	r4, r4, #4
 299              	.LVL41:
 300              	.L12:
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   {
 301              		.loc 1 206 0 is_stmt 0 discriminator 1
 302 006a AC42     		cmp	r4, r5
 303 006c F8D3     		bcc	.L13
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     keyaddr+=4;
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   }
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* Start the HASH processor */
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   HASH_StartDigest();
 304              		.loc 1 213 0 is_stmt 1
 305 006e FFF7FEFF 		bl	HASH_StartDigest
 306              	.LVL42:
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   /* wait until the Busy flag is RESET */
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   do
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   {
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     busystatus = HASH_GetFlagStatus(HASH_FLAG_BUSY);
 307              		.loc 1 218 0
 308 0072 4FF00809 		mov	r9, #8
 309              	.LVL43:
 310              	.L15:
 311              		.loc 1 218 0 is_stmt 0 discriminator 1
 312 0076 4846     		mov	r0, r9
 313 0078 FFF7FEFF 		bl	HASH_GetFlagStatus
 314              	.LVL44:
 315 007c 0346     		mov	r3, r0
 316              	.LVL45:
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     counter++;
 317              		.loc 1 219 0 is_stmt 1 discriminator 1
 318 007e 019C     		ldr	r4, [sp, #4]
 319 0080 0134     		adds	r4, r4, #1
 320 0082 0194     		str	r4, [sp, #4]
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   }while ((counter != MD5BUSY_TIMEOUT) && (busystatus != RESET));
 321              		.loc 1 220 0 discriminator 1
 322 0084 019C     		ldr	r4, [sp, #4]
 323 0086 B4F5803F 		cmp	r4, #65536
 324 008a 01D0     		beq	.L14
 325 008c 0028     		cmp	r0, #0
 326 008e F2D1     		bne	.L15
 327              	.L14:
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   if (busystatus != RESET)
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   {
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****      status = ERROR;
 328              		.loc 1 224 0
 329 0090 0020     		movs	r0, #0
 330              	.LVL46:
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   {
 331              		.loc 1 222 0
 332 0092 002B     		cmp	r3, #0
 333 0094 56D1     		bne	.L16
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   }
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   else
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   {
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     /* Configure the number of valid bits in last word of the Input data */
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     HASH_SetLastWordValidBitsNbr(nbvalidbitsdata);
 334              		.loc 1 229 0
 335 0096 BDF80A00 		ldrh	r0, [sp, #10]
 336 009a 80B2     		uxth	r0, r0
 337 009c FFF7FEFF 		bl	HASH_SetLastWordValidBitsNbr
 338              	.LVL47:
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     /* Write the Input block in the IN FIFO */
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     for(i=0; i<Ilen; i+=4)
 339              		.loc 1 232 0
 340 00a0 0024     		movs	r4, #0
 341 00a2 04E0     		b	.L17
 342              	.LVL48:
 343              	.L18:
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     {
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       HASH_DataIn(*(uint32_t*)inputaddr);
 344              		.loc 1 234 0 discriminator 2
 345 00a4 56F8040B 		ldr	r0, [r6], #4
 346              	.LVL49:
 347 00a8 FFF7FEFF 		bl	HASH_DataIn
 348              	.LVL50:
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     {
 349              		.loc 1 232 0 discriminator 2
 350 00ac 0434     		adds	r4, r4, #4
 351              	.LVL51:
 352              	.L17:
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     {
 353              		.loc 1 232 0 is_stmt 0 discriminator 1
 354 00ae BC42     		cmp	r4, r7
 355 00b0 F8D3     		bcc	.L18
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       inputaddr+=4;
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     }
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     /* Start the HASH processor */
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     HASH_StartDigest();
 356              		.loc 1 239 0 is_stmt 1
 357 00b2 FFF7FEFF 		bl	HASH_StartDigest
 358              	.LVL52:
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     /* wait until the Busy flag is RESET */
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     counter =0;
 359              		.loc 1 242 0
 360 00b6 0023     		movs	r3, #0
 361 00b8 0193     		str	r3, [sp, #4]
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     do
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     {
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****        busystatus = HASH_GetFlagStatus(HASH_FLAG_BUSY);
 362              		.loc 1 245 0
 363 00ba 0824     		movs	r4, #8
 364              	.LVL53:
 365              	.L20:
 366              		.loc 1 245 0 is_stmt 0 discriminator 1
 367 00bc 2046     		mov	r0, r4
 368 00be FFF7FEFF 		bl	HASH_GetFlagStatus
 369              	.LVL54:
 370 00c2 0246     		mov	r2, r0
 371              	.LVL55:
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****        counter++;
 372              		.loc 1 246 0 is_stmt 1 discriminator 1
 373 00c4 019B     		ldr	r3, [sp, #4]
 374 00c6 0133     		adds	r3, r3, #1
 375 00c8 0193     		str	r3, [sp, #4]
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     }while ((counter != MD5BUSY_TIMEOUT) && (busystatus != RESET));
 376              		.loc 1 247 0 discriminator 1
 377 00ca 019B     		ldr	r3, [sp, #4]
 378 00cc B3F5803F 		cmp	r3, #65536
 379 00d0 01D0     		beq	.L19
 380 00d2 0028     		cmp	r0, #0
 381 00d4 F2D1     		bne	.L20
 382              	.L19:
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     if (busystatus != RESET)
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     {
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       status = ERROR;
 383              		.loc 1 251 0
 384 00d6 0020     		movs	r0, #0
 385              	.LVL56:
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     {
 386              		.loc 1 249 0
 387 00d8 002A     		cmp	r2, #0
 388 00da 33D1     		bne	.L16
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     }
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     else
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     {  
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       /* Configure the number of valid bits in last word of the Key */
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       HASH_SetLastWordValidBitsNbr(nbvalidbitskey);
 389              		.loc 1 256 0
 390 00dc BDF80800 		ldrh	r0, [sp, #8]
 391 00e0 80B2     		uxth	r0, r0
 392 00e2 FFF7FEFF 		bl	HASH_SetLastWordValidBitsNbr
 393              	.LVL57:
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       /* Write the Key */
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       keyaddr = (uint32_t)Key;
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       for(i=0; i<Keylen; i+=4)
 394              		.loc 1 260 0
 395 00e6 0024     		movs	r4, #0
 396 00e8 04E0     		b	.L21
 397              	.LVL58:
 398              	.L22:
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       {
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****         HASH_DataIn(*(uint32_t*)keyaddr);
 399              		.loc 1 262 0 discriminator 2
 400 00ea 58F8040B 		ldr	r0, [r8], #4
 401              	.LVL59:
 402 00ee FFF7FEFF 		bl	HASH_DataIn
 403              	.LVL60:
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       {
 404              		.loc 1 260 0 discriminator 2
 405 00f2 0434     		adds	r4, r4, #4
 406              	.LVL61:
 407              	.L21:
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       {
 408              		.loc 1 260 0 is_stmt 0 discriminator 1
 409 00f4 AC42     		cmp	r4, r5
 410 00f6 F8D3     		bcc	.L22
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****         keyaddr+=4;
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       }
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****        /* Start the HASH processor */
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****        HASH_StartDigest();
 411              		.loc 1 267 0 is_stmt 1
 412 00f8 FFF7FEFF 		bl	HASH_StartDigest
 413              	.LVL62:
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****        /* wait until the Busy flag is RESET */
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****        counter =0;
 414              		.loc 1 270 0
 415 00fc 0023     		movs	r3, #0
 416 00fe 0193     		str	r3, [sp, #4]
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****        do
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****        {
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****           busystatus = HASH_GetFlagStatus(HASH_FLAG_BUSY);
 417              		.loc 1 273 0
 418 0100 0824     		movs	r4, #8
 419              	.LVL63:
 420              	.L24:
 421              		.loc 1 273 0 is_stmt 0 discriminator 1
 422 0102 2046     		mov	r0, r4
 423 0104 FFF7FEFF 		bl	HASH_GetFlagStatus
 424              	.LVL64:
 425 0108 0246     		mov	r2, r0
 426              	.LVL65:
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****           counter++;
 427              		.loc 1 274 0 is_stmt 1 discriminator 1
 428 010a 019B     		ldr	r3, [sp, #4]
 429 010c 0133     		adds	r3, r3, #1
 430 010e 0193     		str	r3, [sp, #4]
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       }while ((counter != MD5BUSY_TIMEOUT) && (busystatus != RESET));
 431              		.loc 1 275 0 discriminator 1
 432 0110 019B     		ldr	r3, [sp, #4]
 433 0112 B3F5803F 		cmp	r3, #65536
 434 0116 01D0     		beq	.L23
 435 0118 0028     		cmp	r0, #0
 436 011a F2D1     		bne	.L24
 437              	.L23:
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** 
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       if (busystatus != RESET)
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       {
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****          status = ERROR;
 438              		.loc 1 279 0
 439 011c 0020     		movs	r0, #0
 440              	.LVL66:
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       {
 441              		.loc 1 277 0
 442 011e 8AB9     		cbnz	r2, .L16
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       }
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       else
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       {
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****          /* Read the message digest */
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****          HASH_GetDigest(&MD5_MessageDigest);
 443              		.loc 1 284 0
 444 0120 03A8     		add	r0, sp, #12
 445 0122 FFF7FEFF 		bl	HASH_GetDigest
 446              	.LVL67:
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****          *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[0]);
 447              		.loc 1 285 0
 448 0126 039B     		ldr	r3, [sp, #12]
 449              	.LVL68:
 450              	.LBB26:
 451              	.LBB27:
 452              		.loc 2 352 0
 453              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 454 0128 1BBA     		rev r3, r3
 455              	@ 0 "" 2
 456              	.LVL69:
 457              		.thumb
 458              	.LBE27:
 459              	.LBE26:
 460              		.loc 1 285 0
 461 012a 149A     		ldr	r2, [sp, #80]
 462 012c 1360     		str	r3, [r2]
 463              	.LVL70:
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****          outputaddr+=4;
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****          *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[1]);
 464              		.loc 1 287 0
 465 012e 049B     		ldr	r3, [sp, #16]
 466              	.LVL71:
 467              	.LBB28:
 468              	.LBB29:
 469              		.loc 2 352 0
 470              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 471 0130 1BBA     		rev r3, r3
 472              	@ 0 "" 2
 473              	.LVL72:
 474              		.thumb
 475              	.LBE29:
 476              	.LBE28:
 477              		.loc 1 287 0
 478 0132 5360     		str	r3, [r2, #4]
 479              	.LVL73:
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****          outputaddr+=4;
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****          *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[2]);
 480              		.loc 1 289 0
 481 0134 059B     		ldr	r3, [sp, #20]
 482              	.LVL74:
 483              	.LBB30:
 484              	.LBB31:
 485              		.loc 2 352 0
 486              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 487 0136 1BBA     		rev r3, r3
 488              	@ 0 "" 2
 489              	.LVL75:
 490              		.thumb
 491              	.LBE31:
 492              	.LBE30:
 493              		.loc 1 289 0
 494 0138 9360     		str	r3, [r2, #8]
 495              	.LVL76:
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****          outputaddr+=4;
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****          *(uint32_t*)(outputaddr)  = __REV(MD5_MessageDigest.Data[3]);
 496              		.loc 1 291 0
 497 013a 069B     		ldr	r3, [sp, #24]
 498              	.LVL77:
 499              	.LBB32:
 500              	.LBB33:
 501              		.loc 2 352 0
 502              	@ 352 "libs/CMSIS/Include/core_cmInstr.h" 1
 503 013c 1BBA     		rev r3, r3
 504              	@ 0 "" 2
 505              	.LVL78:
 506              		.thumb
 507              	.LBE33:
 508              	.LBE32:
 509              		.loc 1 291 0
 510 013e D360     		str	r3, [r2, #12]
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   uint32_t keyaddr    = (uint32_t)Key;
 511              		.loc 1 172 0
 512 0140 0120     		movs	r0, #1
 513 0142 FFE7     		b	.L16
 514              	.LVL79:
 515              	.L16:
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****       }
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****     }
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   }
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c ****   return status;  
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_hash_md5.c **** }
 516              		.loc 1 296 0
 517 0144 0DB0     		add	sp, sp, #52
 518              		@ sp needed
 519 0146 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 520              		.cfi_endproc
 521              	.LFE111:
 523 014a 00BF     		.text
 524              	.Letext0:
 525              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 526              		.file 4 "/usr/include/newlib/stdint.h"
 527              		.file 5 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 528              		.file 6 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_hash.h"
 529              		.file 7 "libs/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hash_md5.c
     /tmp/cc4pQ9cx.s:20     .text.HASH_MD5:0000000000000000 $t
     /tmp/cc4pQ9cx.s:25     .text.HASH_MD5:0000000000000000 HASH_MD5
     /tmp/cc4pQ9cx.s:206    .text.HMAC_MD5:0000000000000000 $t
     /tmp/cc4pQ9cx.s:211    .text.HMAC_MD5:0000000000000000 HMAC_MD5
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.1.7402b5479d3fa4780665141f585fc0ee
                           .group:0000000000000000 wm4.stm32f4xx.h.48.a3308e16720c7afc3eb28e585e628ce6
                           .group:0000000000000000 wm4.core_cm4.h.32.5f62939b60122629d60d85d0c4a14709
                           .group:0000000000000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:0000000000000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:0000000000000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:0000000000000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:0000000000000000 wm4.core_cm4_simd.h.29.b4a3fdfb606cb3b26119424324d4b963
                           .group:0000000000000000 wm4.core_cm4.h.153.5393ef7e6cebf34dd51ca528f9218ab3
                           .group:0000000000000000 wm4.stm32f4xx.h.282.95bae448a91bccfbf24a6f9d95904bb8
                           .group:0000000000000000 wm4.stm32f4xx_adc.h.102.2061aa73008746f3c2cc6ce8f635cad3
                           .group:0000000000000000 wm4.stm32f4xx_can.h.25.87f18ca48b2692d39f76e87b1f07c953
                           .group:0000000000000000 wm4.stm32f4xx_cryp.h.25.db1951c06ee684df97ea3a11aba6cb51
                           .group:0000000000000000 wm4.stm32f4xx_dac.h.25.c43557a6416ea4dfa986c1209c2558d6
                           .group:0000000000000000 wm4.stm32f4xx_dbgmcu.h.24.7aedfdcf091890b5cb96019bd29a2bfc
                           .group:0000000000000000 wm4.stm32f4xx_dcmi.h.24.64883d9be802a535b1d7770d14da73e0
                           .group:0000000000000000 wm4.stm32f4xx_dma.h.25.c1fa1d44ae0bc9c2b3a0d1d355d8c1e6
                           .group:0000000000000000 wm4.stm32f4xx_exti.h.25.620998268d5d3d9042a8297fbe07d507
                           .group:0000000000000000 wm4.stm32f4xx_flash.h.25.65d4f351b72ee41355279f70305f361a
                           .group:0000000000000000 wm4.stm32f4xx_fsmc.h.25.b907ac7bd9bec46e02d06b137d53cfd8
                           .group:0000000000000000 wm4.stm32f4xx_gpio.h.25.5bd1d790d742a307b55aea5fa8fcdae8
                           .group:0000000000000000 wm4.stm32f4xx_i2c.h.25.8fcdb817a00a67d4624d79bab0d9275f
                           .group:0000000000000000 wm4.stm32f4xx_iwdg.h.25.3013e8d2058415cb9d51af77f748a146
                           .group:0000000000000000 wm4.stm32f4xx_pwr.h.25.48b68c1f3a894ab012f9c2a2c222f159
                           .group:0000000000000000 wm4.stm32f4xx_rcc.h.24.c15e7c8dc065bb29146f29591b195c87
                           .group:0000000000000000 wm4.stm32f4xx_rng.h.25.cdb5c5c07de6a48aedfde608da3f447e
                           .group:0000000000000000 wm4.stm32f4xx_rtc.h.25.4809a79ad46ad97b4a01e735a96738eb
                           .group:0000000000000000 wm4.stm32f4xx_sdio.h.25.406302aabae34eada94e5f2cde635a3e
                           .group:0000000000000000 wm4.stm32f4xx_spi.h.25.46c61b79ff8408da93e2e90cf9b717d6
                           .group:0000000000000000 wm4.stm32f4xx_syscfg.h.25.9d5caab5677661b69e959531364e23d7
                           .group:0000000000000000 wm4.stm32f4xx_tim.h.25.948f7fc943f34bd206e29758e77ee0a2
                           .group:0000000000000000 wm4.stm32f4xx_usart.h.25.b64697dad017ba547dd272c2cdb5846a
                           .group:0000000000000000 wm4.stm32f4xx_wwdg.h.25.09d70b7849c6894ddf1e83c8e86b70e1
                           .group:0000000000000000 wm4.misc.h.25.a0cb758c1f091b46f201b19cec9e63a1
                           .group:0000000000000000 wm4.stm32f4xx.h.6913.da011404ccb203790556c86f10c46b18
                           .group:0000000000000000 wm4.stm32f4xx_hash.h.89.9ba18c49c32633e81d41c07ca4cb2830

UNDEFINED SYMBOLS
HASH_DeInit
HASH_Init
HASH_SetLastWordValidBitsNbr
HASH_DataIn
HASH_StartDigest
HASH_GetFlagStatus
HASH_GetDigest
