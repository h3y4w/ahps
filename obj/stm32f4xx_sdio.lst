   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_sdio.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SDIO_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	SDIO_DeInit
  22              		.thumb
  23              		.thumb_func
  25              	SDIO_DeInit:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @file    stm32f4xx_sdio.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          functionalities of the Secure digital input/output interface (SDIO) 
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          peripheral:
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Initialization and Configuration
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Command path state machine (CPSM) management
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Data path state machine (DPSM) management
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - SDIO IO Cards mode management
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - CE-ATA mode management
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - DMA transfers management
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Interrupts and flags management
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *  @verbatim
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          ===================================================================
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                 How to use this driver
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          ===================================================================
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          1. The SDIO clock (SDIOCLK = 48 MHz) is coming from a specific output
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             of PLL (PLL48CLK). Before to start working with SDIO peripheral
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             make sure that the PLL is well configured.
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          The SDIO peripheral uses two clock signals:
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              - SDIO adapter clock (SDIOCLK = 48 MHz)
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              - APB2 bus clock (PCLK2)
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          PCLK2 and SDIO_CK clock frequencies must respect the following condition:
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   Frequenc(PCLK2) >= (3 / 8 x Frequency(SDIO_CK))
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          2. Enable peripheral clock using RCC_APB2PeriphClockCmd(RCC_APB2Periph_SDIO, ENABLE).
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          3.  According to the SDIO mode, enable the GPIO clocks using 
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              RCC_AHB1PeriphClockCmd() function. 
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              The I/O can be one of the following configurations:
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - 1-bit data length: SDIO_CMD, SDIO_CK and D0.
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - 4-bit data length: SDIO_CMD, SDIO_CK and D[3:0].
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - 8-bit data length: SDIO_CMD, SDIO_CK and D[7:0].      
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          4. Peripheral's alternate function: 
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Connect the pin to the desired peripherals' Alternate 
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   Function (AF) using GPIO_PinAFConfig() function
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Configure the desired pin in alternate function by:
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Select the type, pull-up/pull-down and output speed via 
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   GPIO_PuPd, GPIO_OType and GPIO_Speed members
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Call GPIO_Init() function
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          5. Program the Clock Edge, Clock Bypass, Clock Power Save, Bus Wide, 
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             hardware, flow control and the Clock Divider using the SDIO_Init()
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             function.
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          6. Enable the Power ON State using the SDIO_SetPowerState(SDIO_PowerState_ON) 
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             function.
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          7. Enable the clock using the SDIO_ClockCmd() function.
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          8. Enable the NVIC and the corresponding interrupt using the function 
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             SDIO_ITConfig() if you need to use interrupt mode. 
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          9. When using the DMA mode 
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Configure the DMA using DMA_Init() function
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Active the needed channel Request using SDIO_DMACmd() function
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          10. Enable the DMA using the DMA_Cmd() function, when using DMA mode. 
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          11. To control the CPSM (Command Path State Machine) and send 
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              commands to the card use the SDIO_SendCommand(), 
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_GetCommandResponse() and SDIO_GetResponse() functions.     
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              First, user has to fill the command structure (pointer to
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_CmdInitTypeDef) according to the selected command to be sent.
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 The parameters that should be filled are:
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Argument
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Index
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Response type
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Wait
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - CPSM Status (Enable or Disable)
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              To check if the command is well received, read the SDIO_CMDRESP
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              register using the SDIO_GetCommandResponse().
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              The SDIO responses registers (SDIO_RESP1 to SDIO_RESP2), use the
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_GetResponse() function.
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          12. To control the DPSM (Data Path State Machine) and send/receive 
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              data to/from the card use the SDIO_DataConfig(), SDIO_GetDataCounter(), 
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_ReadData(), SDIO_WriteData() and SDIO_GetFIFOCount() functions.
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              Read Operations
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              ---------------
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              a) First, user has to fill the data structure (pointer to
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 SDIO_DataInitTypeDef) according to the selected data type to
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 be received.
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 The parameters that should be filled are:
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data TimeOut
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Length
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Block size
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer direction: should be from card (To SDIO)
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer mode
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - DPSM Status (Enable or Disable)
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              b) Configure the SDIO resources to receive the data from the card
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 according to selected transfer mode (Refer to Step 8, 9 and 10).
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              c) Send the selected Read command (refer to step 11).
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                  
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              d) Use the SDIO flags/interrupts to check the transfer status.
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              Write Operations
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              ---------------
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              a) First, user has to fill the data structure (pointer to
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 SDIO_DataInitTypeDef) according to the selected data type to
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 be received.
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 The parameters that should be filled are:
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data TimeOut
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Length
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Block size
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer direction:  should be to card (To CARD)
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer mode
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - DPSM Status (Enable or Disable)
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              b) Configure the SDIO resources to send the data to the card
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 according to selected transfer mode (Refer to Step 8, 9 and 10).
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              c) Send the selected Write command (refer to step 11).
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                  
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              d) Use the SDIO flags/interrupts to check the transfer status.
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *  @endverbatim
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ******************************************************************************
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @attention
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ******************************************************************************
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Includes ------------------------------------------------------------------*/
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #include "stm32f4xx_sdio.h"
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #include "stm32f4xx_rcc.h"
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO 
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief SDIO driver modules
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */ 
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private typedef -----------------------------------------------------------*/
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private define ------------------------------------------------------------*/
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* ------------ SDIO registers bit address in the alias region ----------- */
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIO_OFFSET                (SDIO_BASE - PERIPH_BASE)
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CLKCR Register ---*/
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of CLKEN bit */
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKCR_OFFSET              (SDIO_OFFSET + 0x04)
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKEN_BitNumber           0x08
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKCR_CLKEN_BB            (PERIPH_BB_BASE + (CLKCR_OFFSET * 32) + (CLKEN_BitNumber * 4))
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CMD Register ---*/
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of SDIOSUSPEND bit */
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_OFFSET                (SDIO_OFFSET + 0x0C)
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIOSUSPEND_BitNumber     0x0B
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_SDIOSUSPEND_BB        (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (SDIOSUSPEND_BitNumber * 4)
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of ENCMDCOMPL bit */
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define ENCMDCOMPL_BitNumber      0x0C
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_ENCMDCOMPL_BB         (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (ENCMDCOMPL_BitNumber * 4))
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of NIEN bit */
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define NIEN_BitNumber            0x0D
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_NIEN_BB               (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (NIEN_BitNumber * 4))
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of ATACMD bit */
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define ATACMD_BitNumber          0x0E
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_ATACMD_BB             (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (ATACMD_BitNumber * 4))
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- DCTRL Register ---*/
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of DMAEN bit */
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_OFFSET              (SDIO_OFFSET + 0x2C)
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DMAEN_BitNumber           0x03
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_DMAEN_BB            (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (DMAEN_BitNumber * 4))
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of RWSTART bit */
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define RWSTART_BitNumber         0x08
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_RWSTART_BB          (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWSTART_BitNumber * 4))
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of RWSTOP bit */
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define RWSTOP_BitNumber          0x09
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_RWSTOP_BB           (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWSTOP_BitNumber * 4))
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of RWMOD bit */
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define RWMOD_BitNumber           0x0A
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_RWMOD_BB            (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWMOD_BitNumber * 4))
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of SDIOEN bit */
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIOEN_BitNumber          0x0B
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_SDIOEN_BB           (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (SDIOEN_BitNumber * 4))
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* ---------------------- SDIO registers bit mask ------------------------ */
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CLKCR Register ---*/
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* CLKCR register clear mask */
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKCR_CLEAR_MASK         ((uint32_t)0xFFFF8100) 
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- PWRCTRL Register ---*/
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* SDIO PWRCTRL Mask */
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define PWR_PWRCTRL_MASK         ((uint32_t)0xFFFFFFFC)
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- DCTRL Register ---*/
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* SDIO DCTRL Clear Mask */
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_CLEAR_MASK         ((uint32_t)0xFFFFFF08)
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CMD Register ---*/
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* CMD Register clear mask */
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_CLEAR_MASK           ((uint32_t)0xFFFFF800)
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* SDIO RESP Registers Address */
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIO_RESP_ADDR           ((uint32_t)(SDIO_BASE + 0x14))
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private macro -------------------------------------------------------------*/
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private variables ---------------------------------------------------------*/
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private function prototypes -----------------------------------------------*/
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private functions ---------------------------------------------------------*/
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Private_Functions
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group1 Initialization and Configuration functions
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Initialization and Configuration functions 
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****                  Initialization and Configuration functions
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Deinitializes the SDIO peripheral registers to their default reset values.
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DeInit(void)
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
  28              		.loc 1 260 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, ENABLE);
  40              		.loc 1 261 0
  41 0004 4FF40060 		mov	r0, #2048
  42 0008 0121     		movs	r1, #1
  43 000a FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, DISABLE);
  44              		.loc 1 262 0
  45 000e 4FF40060 		mov	r0, #2048
  46 0012 0021     		movs	r1, #0
  47 0014 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
  48              		.loc 1 263 0
  49 0018 80BD     		pop	{r7, pc}
  50              		.cfi_endproc
  51              	.LFE110:
  53 001a 00BF     		.section	.text.SDIO_Init,"ax",%progbits
  54              		.align	2
  55              		.global	SDIO_Init
  56              		.thumb
  57              		.thumb_func
  59              	SDIO_Init:
  60              	.LFB111:
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO peripheral according to the specified 
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_InitStruct.
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_InitStruct : pointer to a SDIO_InitTypeDef structure 
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         that contains the configuration information for the SDIO peripheral.
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_Init(SDIO_InitTypeDef* SDIO_InitStruct)
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
  61              		.loc 1 273 0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 16
  64              		@ frame_needed = 1, uses_anonymous_args = 0
  65              		@ link register save eliminated.
  66 0000 80B4     		push	{r7}
  67              	.LCFI2:
  68              		.cfi_def_cfa_offset 4
  69              		.cfi_offset 7, -4
  70 0002 85B0     		sub	sp, sp, #20
  71              	.LCFI3:
  72              		.cfi_def_cfa_offset 24
  73 0004 00AF     		add	r7, sp, #0
  74              	.LCFI4:
  75              		.cfi_def_cfa_register 7
  76 0006 7860     		str	r0, [r7, #4]
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
  77              		.loc 1 274 0
  78 0008 0023     		movs	r3, #0
  79 000a FB60     		str	r3, [r7, #12]
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_EDGE(SDIO_InitStruct->SDIO_ClockEdge));
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_BYPASS(SDIO_InitStruct->SDIO_ClockBypass));
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_POWER_SAVE(SDIO_InitStruct->SDIO_ClockPowerSave));
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_BUS_WIDE(SDIO_InitStruct->SDIO_BusWide));
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_HARDWARE_FLOW_CONTROL(SDIO_InitStruct->SDIO_HardwareFlowControl)); 
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****    
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO CLKCR Configuration ------------------------*/  
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Get the SDIO CLKCR value */
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->CLKCR;
  80              		.loc 1 285 0
  81 000c 4FF43053 		mov	r3, #11264
  82 0010 C4F20103 		movt	r3, 16385
  83 0014 5B68     		ldr	r3, [r3, #4]
  84 0016 FB60     		str	r3, [r7, #12]
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Clear CLKDIV, PWRSAV, BYPASS, WIDBUS, NEGEDGE, HWFC_EN bits */
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= CLKCR_CLEAR_MASK;
  85              		.loc 1 288 0
  86 0018 FB68     		ldr	r3, [r7, #12]
  87 001a 23F4FD43 		bic	r3, r3, #32384
  88 001e 23F07F03 		bic	r3, r3, #127
  89 0022 FB60     		str	r3, [r7, #12]
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set CLKDIV bits according to SDIO_ClockDiv value */
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set PWRSAV bit according to SDIO_ClockPowerSave value */
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set BYPASS bit according to SDIO_ClockBypass value */
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set WIDBUS bits according to SDIO_BusWide value */
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set NEGEDGE bits according to SDIO_ClockEdge value */
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set HWFC_EN bits according to SDIO_HardwareFlowControl value */
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
  90              		.loc 1 296 0
  91 0024 7B68     		ldr	r3, [r7, #4]
  92 0026 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
  93 0028 1A46     		mov	r2, r3
  94 002a 7B68     		ldr	r3, [r7, #4]
  95 002c 9B68     		ldr	r3, [r3, #8]
  96 002e 1A43     		orrs	r2, r2, r3
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
  97              		.loc 1 297 0
  98 0030 7B68     		ldr	r3, [r7, #4]
  99 0032 5B68     		ldr	r3, [r3, #4]
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
 100              		.loc 1 296 0
 101 0034 1A43     		orrs	r2, r2, r3
 102              		.loc 1 297 0
 103 0036 7B68     		ldr	r3, [r7, #4]
 104 0038 DB68     		ldr	r3, [r3, #12]
 105 003a 1A43     		orrs	r2, r2, r3
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockEdge | SDIO_InitStruct->SDIO_HardwareFlowControl); 
 106              		.loc 1 298 0
 107 003c 7B68     		ldr	r3, [r7, #4]
 108 003e 1B68     		ldr	r3, [r3]
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
 109              		.loc 1 297 0
 110 0040 1A43     		orrs	r2, r2, r3
 111              		.loc 1 298 0
 112 0042 7B68     		ldr	r3, [r7, #4]
 113 0044 1B69     		ldr	r3, [r3, #16]
 114 0046 1343     		orrs	r3, r3, r2
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
 115              		.loc 1 296 0
 116 0048 FA68     		ldr	r2, [r7, #12]
 117 004a 1343     		orrs	r3, r3, r2
 118 004c FB60     		str	r3, [r7, #12]
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Write to SDIO CLKCR */
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->CLKCR = tmpreg;
 119              		.loc 1 301 0
 120 004e 4FF43053 		mov	r3, #11264
 121 0052 C4F20103 		movt	r3, 16385
 122 0056 FA68     		ldr	r2, [r7, #12]
 123 0058 5A60     		str	r2, [r3, #4]
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 124              		.loc 1 302 0
 125 005a 1437     		adds	r7, r7, #20
 126 005c BD46     		mov	sp, r7
 127              		@ sp needed
 128 005e 5DF8047B 		ldr	r7, [sp], #4
 129 0062 7047     		bx	lr
 130              		.cfi_endproc
 131              	.LFE111:
 133              		.section	.text.SDIO_StructInit,"ax",%progbits
 134              		.align	2
 135              		.global	SDIO_StructInit
 136              		.thumb
 137              		.thumb_func
 139              	SDIO_StructInit:
 140              	.LFB112:
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_InitStruct member with its default value.
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_InitStruct: pointer to an SDIO_InitTypeDef structure which 
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         will be initialized.
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_StructInit(SDIO_InitTypeDef* SDIO_InitStruct)
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 141              		.loc 1 311 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 8
 144              		@ frame_needed = 1, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146 0000 80B4     		push	{r7}
 147              	.LCFI5:
 148              		.cfi_def_cfa_offset 4
 149              		.cfi_offset 7, -4
 150 0002 83B0     		sub	sp, sp, #12
 151              	.LCFI6:
 152              		.cfi_def_cfa_offset 16
 153 0004 00AF     		add	r7, sp, #0
 154              	.LCFI7:
 155              		.cfi_def_cfa_register 7
 156 0006 7860     		str	r0, [r7, #4]
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* SDIO_InitStruct members default value */
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockDiv = 0x00;
 157              		.loc 1 313 0
 158 0008 7B68     		ldr	r3, [r7, #4]
 159 000a 0022     		movs	r2, #0
 160 000c 1A75     		strb	r2, [r3, #20]
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockEdge = SDIO_ClockEdge_Rising;
 161              		.loc 1 314 0
 162 000e 7B68     		ldr	r3, [r7, #4]
 163 0010 0022     		movs	r2, #0
 164 0012 1A60     		str	r2, [r3]
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockBypass = SDIO_ClockBypass_Disable;
 165              		.loc 1 315 0
 166 0014 7B68     		ldr	r3, [r7, #4]
 167 0016 0022     		movs	r2, #0
 168 0018 5A60     		str	r2, [r3, #4]
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockPowerSave = SDIO_ClockPowerSave_Disable;
 169              		.loc 1 316 0
 170 001a 7B68     		ldr	r3, [r7, #4]
 171 001c 0022     		movs	r2, #0
 172 001e 9A60     		str	r2, [r3, #8]
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_BusWide = SDIO_BusWide_1b;
 173              		.loc 1 317 0
 174 0020 7B68     		ldr	r3, [r7, #4]
 175 0022 0022     		movs	r2, #0
 176 0024 DA60     		str	r2, [r3, #12]
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_HardwareFlowControl = SDIO_HardwareFlowControl_Disable;
 177              		.loc 1 318 0
 178 0026 7B68     		ldr	r3, [r7, #4]
 179 0028 0022     		movs	r2, #0
 180 002a 1A61     		str	r2, [r3, #16]
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 181              		.loc 1 319 0
 182 002c 0C37     		adds	r7, r7, #12
 183 002e BD46     		mov	sp, r7
 184              		@ sp needed
 185 0030 5DF8047B 		ldr	r7, [sp], #4
 186 0034 7047     		bx	lr
 187              		.cfi_endproc
 188              	.LFE112:
 190 0036 00BF     		.section	.text.SDIO_ClockCmd,"ax",%progbits
 191              		.align	2
 192              		.global	SDIO_ClockCmd
 193              		.thumb
 194              		.thumb_func
 196              	SDIO_ClockCmd:
 197              	.LFB113:
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO Clock.
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the SDIO Clock. 
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ClockCmd(FunctionalState NewState)
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 198              		.loc 1 328 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 8
 201              		@ frame_needed = 1, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 203 0000 80B4     		push	{r7}
 204              	.LCFI8:
 205              		.cfi_def_cfa_offset 4
 206              		.cfi_offset 7, -4
 207 0002 83B0     		sub	sp, sp, #12
 208              	.LCFI9:
 209              		.cfi_def_cfa_offset 16
 210 0004 00AF     		add	r7, sp, #0
 211              	.LCFI10:
 212              		.cfi_def_cfa_register 7
 213 0006 0346     		mov	r3, r0
 214 0008 FB71     		strb	r3, [r7, #7]
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CLKCR_CLKEN_BB = (uint32_t)NewState;
 215              		.loc 1 332 0
 216 000a 48F2A003 		movw	r3, #32928
 217 000e C4F22523 		movt	r3, 16933
 218 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 219 0014 1A60     		str	r2, [r3]
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 220              		.loc 1 333 0
 221 0016 0C37     		adds	r7, r7, #12
 222 0018 BD46     		mov	sp, r7
 223              		@ sp needed
 224 001a 5DF8047B 		ldr	r7, [sp], #4
 225 001e 7047     		bx	lr
 226              		.cfi_endproc
 227              	.LFE113:
 229              		.section	.text.SDIO_SetPowerState,"ax",%progbits
 230              		.align	2
 231              		.global	SDIO_SetPowerState
 232              		.thumb
 233              		.thumb_func
 235              	SDIO_SetPowerState:
 236              	.LFB114:
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Sets the power status of the controller.
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_PowerState: new state of the Power state. 
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_PowerState_OFF: SDIO Power OFF
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_PowerState_ON: SDIO Power ON
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SetPowerState(uint32_t SDIO_PowerState)
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 237              		.loc 1 344 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 8
 240              		@ frame_needed = 1, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 242 0000 80B4     		push	{r7}
 243              	.LCFI11:
 244              		.cfi_def_cfa_offset 4
 245              		.cfi_offset 7, -4
 246 0002 83B0     		sub	sp, sp, #12
 247              	.LCFI12:
 248              		.cfi_def_cfa_offset 16
 249 0004 00AF     		add	r7, sp, #0
 250              	.LCFI13:
 251              		.cfi_def_cfa_register 7
 252 0006 7860     		str	r0, [r7, #4]
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_POWER_STATE(SDIO_PowerState));
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->POWER = SDIO_PowerState;
 253              		.loc 1 348 0
 254 0008 4FF43053 		mov	r3, #11264
 255 000c C4F20103 		movt	r3, 16385
 256 0010 7A68     		ldr	r2, [r7, #4]
 257 0012 1A60     		str	r2, [r3]
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 258              		.loc 1 349 0
 259 0014 0C37     		adds	r7, r7, #12
 260 0016 BD46     		mov	sp, r7
 261              		@ sp needed
 262 0018 5DF8047B 		ldr	r7, [sp], #4
 263 001c 7047     		bx	lr
 264              		.cfi_endproc
 265              	.LFE114:
 267 001e 00BF     		.section	.text.SDIO_GetPowerState,"ax",%progbits
 268              		.align	2
 269              		.global	SDIO_GetPowerState
 270              		.thumb
 271              		.thumb_func
 273              	SDIO_GetPowerState:
 274              	.LFB115:
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Gets the power status of the controller.
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Power status of the controller. The returned value can be one of the 
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         following values:
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            - 0x00: Power OFF
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            - 0x02: Power UP
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            - 0x03: Power ON 
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetPowerState(void)
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 275              		.loc 1 361 0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 1, uses_anonymous_args = 0
 279              		@ link register save eliminated.
 280 0000 80B4     		push	{r7}
 281              	.LCFI14:
 282              		.cfi_def_cfa_offset 4
 283              		.cfi_offset 7, -4
 284 0002 00AF     		add	r7, sp, #0
 285              	.LCFI15:
 286              		.cfi_def_cfa_register 7
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return (SDIO->POWER & (~PWR_PWRCTRL_MASK));
 287              		.loc 1 362 0
 288 0004 4FF43053 		mov	r3, #11264
 289 0008 C4F20103 		movt	r3, 16385
 290 000c 1B68     		ldr	r3, [r3]
 291 000e 03F00303 		and	r3, r3, #3
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 292              		.loc 1 363 0
 293 0012 1846     		mov	r0, r3
 294 0014 BD46     		mov	sp, r7
 295              		@ sp needed
 296 0016 5DF8047B 		ldr	r7, [sp], #4
 297 001a 7047     		bx	lr
 298              		.cfi_endproc
 299              	.LFE115:
 301              		.section	.text.SDIO_SendCommand,"ax",%progbits
 302              		.align	2
 303              		.global	SDIO_SendCommand
 304              		.thumb
 305              		.thumb_func
 307              	SDIO_SendCommand:
 308              	.LFB116:
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group2 Command path state machine (CPSM) management functions
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Command path state machine (CPSM) management functions 
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               Command path state machine (CPSM) management functions
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the Command path 
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   state machine (CPSM).
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO Command according to the specified 
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_CmdInitStruct and send the command.
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_CmdInitStruct : pointer to a SDIO_CmdInitTypeDef 
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         structure that contains the configuration information for the SDIO 
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         command.
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SendCommand(SDIO_CmdInitTypeDef *SDIO_CmdInitStruct)
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 309              		.loc 1 393 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 16
 312              		@ frame_needed = 1, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 314 0000 80B4     		push	{r7}
 315              	.LCFI16:
 316              		.cfi_def_cfa_offset 4
 317              		.cfi_offset 7, -4
 318 0002 85B0     		sub	sp, sp, #20
 319              	.LCFI17:
 320              		.cfi_def_cfa_offset 24
 321 0004 00AF     		add	r7, sp, #0
 322              	.LCFI18:
 323              		.cfi_def_cfa_register 7
 324 0006 7860     		str	r0, [r7, #4]
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 325              		.loc 1 394 0
 326 0008 0023     		movs	r3, #0
 327 000a FB60     		str	r3, [r7, #12]
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CMD_INDEX(SDIO_CmdInitStruct->SDIO_CmdIndex));
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_RESPONSE(SDIO_CmdInitStruct->SDIO_Response));
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_WAIT(SDIO_CmdInitStruct->SDIO_Wait));
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CPSM(SDIO_CmdInitStruct->SDIO_CPSM));
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO ARG Configuration ------------------------*/
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set the SDIO Argument value */
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->ARG = SDIO_CmdInitStruct->SDIO_Argument;
 328              		.loc 1 404 0
 329 000c 4FF43053 		mov	r3, #11264
 330 0010 C4F20103 		movt	r3, 16385
 331 0014 7A68     		ldr	r2, [r7, #4]
 332 0016 1268     		ldr	r2, [r2]
 333 0018 9A60     		str	r2, [r3, #8]
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO CMD Configuration ------------------------*/  
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Get the SDIO CMD value */
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->CMD;
 334              		.loc 1 408 0
 335 001a 4FF43053 		mov	r3, #11264
 336 001e C4F20103 		movt	r3, 16385
 337 0022 DB68     		ldr	r3, [r3, #12]
 338 0024 FB60     		str	r3, [r7, #12]
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Clear CMDINDEX, WAITRESP, WAITINT, WAITPEND, CPSMEN bits */
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= CMD_CLEAR_MASK;
 339              		.loc 1 410 0
 340 0026 FB68     		ldr	r3, [r7, #12]
 341 0028 23F4FF63 		bic	r3, r3, #2040
 342 002c 23F00703 		bic	r3, r3, #7
 343 0030 FB60     		str	r3, [r7, #12]
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set CMDINDEX bits according to SDIO_CmdIndex value */
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set WAITRESP bits according to SDIO_Response value */
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set WAITINT and WAITPEND bits according to SDIO_Wait value */
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set CPSMEN bits according to SDIO_CPSM value */
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
 344              		.loc 1 415 0
 345 0032 7B68     		ldr	r3, [r7, #4]
 346 0034 5A68     		ldr	r2, [r3, #4]
 347 0036 7B68     		ldr	r3, [r7, #4]
 348 0038 9B68     		ldr	r3, [r3, #8]
 349 003a 1A43     		orrs	r2, r2, r3
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****            | SDIO_CmdInitStruct->SDIO_Wait | SDIO_CmdInitStruct->SDIO_CPSM;
 350              		.loc 1 416 0
 351 003c 7B68     		ldr	r3, [r7, #4]
 352 003e DB68     		ldr	r3, [r3, #12]
 353 0040 1A43     		orrs	r2, r2, r3
 354 0042 7B68     		ldr	r3, [r7, #4]
 355 0044 1B69     		ldr	r3, [r3, #16]
 356 0046 1343     		orrs	r3, r3, r2
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****            | SDIO_CmdInitStruct->SDIO_Wait | SDIO_CmdInitStruct->SDIO_CPSM;
 357              		.loc 1 415 0
 358 0048 FA68     		ldr	r2, [r7, #12]
 359 004a 1343     		orrs	r3, r3, r2
 360 004c FB60     		str	r3, [r7, #12]
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Write to SDIO CMD */
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->CMD = tmpreg;
 361              		.loc 1 419 0
 362 004e 4FF43053 		mov	r3, #11264
 363 0052 C4F20103 		movt	r3, 16385
 364 0056 FA68     		ldr	r2, [r7, #12]
 365 0058 DA60     		str	r2, [r3, #12]
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 366              		.loc 1 420 0
 367 005a 1437     		adds	r7, r7, #20
 368 005c BD46     		mov	sp, r7
 369              		@ sp needed
 370 005e 5DF8047B 		ldr	r7, [sp], #4
 371 0062 7047     		bx	lr
 372              		.cfi_endproc
 373              	.LFE116:
 375              		.section	.text.SDIO_CmdStructInit,"ax",%progbits
 376              		.align	2
 377              		.global	SDIO_CmdStructInit
 378              		.thumb
 379              		.thumb_func
 381              	SDIO_CmdStructInit:
 382              	.LFB117:
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_CmdInitStruct member with its default value.
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_CmdInitStruct: pointer to an SDIO_CmdInitTypeDef 
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         structure which will be initialized.
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_CmdStructInit(SDIO_CmdInitTypeDef* SDIO_CmdInitStruct)
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 383              		.loc 1 429 0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 8
 386              		@ frame_needed = 1, uses_anonymous_args = 0
 387              		@ link register save eliminated.
 388 0000 80B4     		push	{r7}
 389              	.LCFI19:
 390              		.cfi_def_cfa_offset 4
 391              		.cfi_offset 7, -4
 392 0002 83B0     		sub	sp, sp, #12
 393              	.LCFI20:
 394              		.cfi_def_cfa_offset 16
 395 0004 00AF     		add	r7, sp, #0
 396              	.LCFI21:
 397              		.cfi_def_cfa_register 7
 398 0006 7860     		str	r0, [r7, #4]
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* SDIO_CmdInitStruct members default value */
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Argument = 0x00;
 399              		.loc 1 431 0
 400 0008 7B68     		ldr	r3, [r7, #4]
 401 000a 0022     		movs	r2, #0
 402 000c 1A60     		str	r2, [r3]
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_CmdIndex = 0x00;
 403              		.loc 1 432 0
 404 000e 7B68     		ldr	r3, [r7, #4]
 405 0010 0022     		movs	r2, #0
 406 0012 5A60     		str	r2, [r3, #4]
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Response = SDIO_Response_No;
 407              		.loc 1 433 0
 408 0014 7B68     		ldr	r3, [r7, #4]
 409 0016 0022     		movs	r2, #0
 410 0018 9A60     		str	r2, [r3, #8]
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Wait = SDIO_Wait_No;
 411              		.loc 1 434 0
 412 001a 7B68     		ldr	r3, [r7, #4]
 413 001c 0022     		movs	r2, #0
 414 001e DA60     		str	r2, [r3, #12]
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_CPSM = SDIO_CPSM_Disable;
 415              		.loc 1 435 0
 416 0020 7B68     		ldr	r3, [r7, #4]
 417 0022 0022     		movs	r2, #0
 418 0024 1A61     		str	r2, [r3, #16]
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 419              		.loc 1 436 0
 420 0026 0C37     		adds	r7, r7, #12
 421 0028 BD46     		mov	sp, r7
 422              		@ sp needed
 423 002a 5DF8047B 		ldr	r7, [sp], #4
 424 002e 7047     		bx	lr
 425              		.cfi_endproc
 426              	.LFE117:
 428              		.section	.text.SDIO_GetCommandResponse,"ax",%progbits
 429              		.align	2
 430              		.global	SDIO_GetCommandResponse
 431              		.thumb
 432              		.thumb_func
 434              	SDIO_GetCommandResponse:
 435              	.LFB118:
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns command index of last command for which response received.
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Returns the command index of the last command response received.
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint8_t SDIO_GetCommandResponse(void)
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 436              		.loc 1 444 0
 437              		.cfi_startproc
 438              		@ args = 0, pretend = 0, frame = 0
 439              		@ frame_needed = 1, uses_anonymous_args = 0
 440              		@ link register save eliminated.
 441 0000 80B4     		push	{r7}
 442              	.LCFI22:
 443              		.cfi_def_cfa_offset 4
 444              		.cfi_offset 7, -4
 445 0002 00AF     		add	r7, sp, #0
 446              	.LCFI23:
 447              		.cfi_def_cfa_register 7
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return (uint8_t)(SDIO->RESPCMD);
 448              		.loc 1 445 0
 449 0004 4FF43053 		mov	r3, #11264
 450 0008 C4F20103 		movt	r3, 16385
 451 000c 1B69     		ldr	r3, [r3, #16]
 452 000e DBB2     		uxtb	r3, r3
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 453              		.loc 1 446 0
 454 0010 1846     		mov	r0, r3
 455 0012 BD46     		mov	sp, r7
 456              		@ sp needed
 457 0014 5DF8047B 		ldr	r7, [sp], #4
 458 0018 7047     		bx	lr
 459              		.cfi_endproc
 460              	.LFE118:
 462 001a 00BF     		.section	.text.SDIO_GetResponse,"ax",%progbits
 463              		.align	2
 464              		.global	SDIO_GetResponse
 465              		.thumb
 466              		.thumb_func
 468              	SDIO_GetResponse:
 469              	.LFB119:
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns response received from the card for the last command.
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_RESP: Specifies the SDIO response register. 
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP1: Response Register 1
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP2: Response Register 2
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP3: Response Register 3
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP4: Response Register 4
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval The Corresponding response register value.
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetResponse(uint32_t SDIO_RESP)
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 470              		.loc 1 459 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 16
 473              		@ frame_needed = 1, uses_anonymous_args = 0
 474              		@ link register save eliminated.
 475 0000 80B4     		push	{r7}
 476              	.LCFI24:
 477              		.cfi_def_cfa_offset 4
 478              		.cfi_offset 7, -4
 479 0002 85B0     		sub	sp, sp, #20
 480              	.LCFI25:
 481              		.cfi_def_cfa_offset 24
 482 0004 00AF     		add	r7, sp, #0
 483              	.LCFI26:
 484              		.cfi_def_cfa_register 7
 485 0006 7860     		str	r0, [r7, #4]
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   __IO uint32_t tmp = 0;
 486              		.loc 1 460 0
 487 0008 0023     		movs	r3, #0
 488 000a FB60     		str	r3, [r7, #12]
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_RESP(SDIO_RESP));
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmp = SDIO_RESP_ADDR + SDIO_RESP;
 489              		.loc 1 465 0
 490 000c 7A68     		ldr	r2, [r7, #4]
 491 000e 42F61443 		movw	r3, #11284
 492 0012 C4F20103 		movt	r3, 16385
 493 0016 1344     		add	r3, r3, r2
 494 0018 FB60     		str	r3, [r7, #12]
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return (*(__IO uint32_t *) tmp); 
 495              		.loc 1 467 0
 496 001a FB68     		ldr	r3, [r7, #12]
 497 001c 1B68     		ldr	r3, [r3]
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 498              		.loc 1 468 0
 499 001e 1846     		mov	r0, r3
 500 0020 1437     		adds	r7, r7, #20
 501 0022 BD46     		mov	sp, r7
 502              		@ sp needed
 503 0024 5DF8047B 		ldr	r7, [sp], #4
 504 0028 7047     		bx	lr
 505              		.cfi_endproc
 506              	.LFE119:
 508 002a 00BF     		.section	.text.SDIO_DataConfig,"ax",%progbits
 509              		.align	2
 510              		.global	SDIO_DataConfig
 511              		.thumb
 512              		.thumb_func
 514              	SDIO_DataConfig:
 515              	.LFB120:
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group3 Data path state machine (DPSM) management functions
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Data path state machine (DPSM) management functions
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               Data path state machine (DPSM) management functions
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the Data path 
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   state machine (DPSM).
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO data path according to the specified 
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_DataInitStruct.
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_DataInitStruct : pointer to a SDIO_DataInitTypeDef structure 
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         that contains the configuration information for the SDIO command.
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DataConfig(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 516              		.loc 1 497 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 16
 519              		@ frame_needed = 1, uses_anonymous_args = 0
 520              		@ link register save eliminated.
 521 0000 80B4     		push	{r7}
 522              	.LCFI27:
 523              		.cfi_def_cfa_offset 4
 524              		.cfi_offset 7, -4
 525 0002 85B0     		sub	sp, sp, #20
 526              	.LCFI28:
 527              		.cfi_def_cfa_offset 24
 528 0004 00AF     		add	r7, sp, #0
 529              	.LCFI29:
 530              		.cfi_def_cfa_register 7
 531 0006 7860     		str	r0, [r7, #4]
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 532              		.loc 1 498 0
 533 0008 0023     		movs	r3, #0
 534 000a FB60     		str	r3, [r7, #12]
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_DATA_LENGTH(SDIO_DataInitStruct->SDIO_DataLength));
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_BLOCK_SIZE(SDIO_DataInitStruct->SDIO_DataBlockSize));
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_TRANSFER_DIR(SDIO_DataInitStruct->SDIO_TransferDir));
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_TRANSFER_MODE(SDIO_DataInitStruct->SDIO_TransferMode));
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_DPSM(SDIO_DataInitStruct->SDIO_DPSM));
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DTIMER Configuration ---------------------*/
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set the SDIO Data TimeOut value */
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->DTIMER = SDIO_DataInitStruct->SDIO_DataTimeOut;
 535              		.loc 1 509 0
 536 000c 4FF43053 		mov	r3, #11264
 537 0010 C4F20103 		movt	r3, 16385
 538 0014 7A68     		ldr	r2, [r7, #4]
 539 0016 1268     		ldr	r2, [r2]
 540 0018 5A62     		str	r2, [r3, #36]
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DLEN Configuration -----------------------*/
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set the SDIO DataLength value */
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->DLEN = SDIO_DataInitStruct->SDIO_DataLength;
 541              		.loc 1 513 0
 542 001a 4FF43053 		mov	r3, #11264
 543 001e C4F20103 		movt	r3, 16385
 544 0022 7A68     		ldr	r2, [r7, #4]
 545 0024 5268     		ldr	r2, [r2, #4]
 546 0026 9A62     		str	r2, [r3, #40]
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DCTRL Configuration ----------------------*/  
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Get the SDIO DCTRL value */
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->DCTRL;
 547              		.loc 1 517 0
 548 0028 4FF43053 		mov	r3, #11264
 549 002c C4F20103 		movt	r3, 16385
 550 0030 DB6A     		ldr	r3, [r3, #44]
 551 0032 FB60     		str	r3, [r7, #12]
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Clear DEN, DTMODE, DTDIR and DBCKSIZE bits */
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= DCTRL_CLEAR_MASK;
 552              		.loc 1 519 0
 553 0034 FB68     		ldr	r3, [r7, #12]
 554 0036 23F0F703 		bic	r3, r3, #247
 555 003a FB60     		str	r3, [r7, #12]
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DEN bit according to SDIO_DPSM value */
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DTMODE bit according to SDIO_TransferMode value */
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DTDIR bit according to SDIO_TransferDir value */
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DBCKSIZE bits according to SDIO_DataBlockSize value */
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferD
 556              		.loc 1 524 0
 557 003c 7B68     		ldr	r3, [r7, #4]
 558 003e 9A68     		ldr	r2, [r3, #8]
 559 0040 7B68     		ldr	r3, [r7, #4]
 560 0042 DB68     		ldr	r3, [r3, #12]
 561 0044 1A43     		orrs	r2, r2, r3
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****            | SDIO_DataInitStruct->SDIO_TransferMode | SDIO_DataInitStruct->SDIO_DPSM;
 562              		.loc 1 525 0
 563 0046 7B68     		ldr	r3, [r7, #4]
 564 0048 1B69     		ldr	r3, [r3, #16]
 565 004a 1A43     		orrs	r2, r2, r3
 566 004c 7B68     		ldr	r3, [r7, #4]
 567 004e 5B69     		ldr	r3, [r3, #20]
 568 0050 1343     		orrs	r3, r3, r2
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****            | SDIO_DataInitStruct->SDIO_TransferMode | SDIO_DataInitStruct->SDIO_DPSM;
 569              		.loc 1 524 0
 570 0052 FA68     		ldr	r2, [r7, #12]
 571 0054 1343     		orrs	r3, r3, r2
 572 0056 FB60     		str	r3, [r7, #12]
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Write to SDIO DCTRL */
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->DCTRL = tmpreg;
 573              		.loc 1 528 0
 574 0058 4FF43053 		mov	r3, #11264
 575 005c C4F20103 		movt	r3, 16385
 576 0060 FA68     		ldr	r2, [r7, #12]
 577 0062 DA62     		str	r2, [r3, #44]
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 578              		.loc 1 529 0
 579 0064 1437     		adds	r7, r7, #20
 580 0066 BD46     		mov	sp, r7
 581              		@ sp needed
 582 0068 5DF8047B 		ldr	r7, [sp], #4
 583 006c 7047     		bx	lr
 584              		.cfi_endproc
 585              	.LFE120:
 587 006e 00BF     		.section	.text.SDIO_DataStructInit,"ax",%progbits
 588              		.align	2
 589              		.global	SDIO_DataStructInit
 590              		.thumb
 591              		.thumb_func
 593              	SDIO_DataStructInit:
 594              	.LFB121:
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_DataInitStruct member with its default value.
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_DataInitStruct: pointer to an SDIO_DataInitTypeDef structure 
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         which will be initialized.
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DataStructInit(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 595              		.loc 1 538 0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 8
 598              		@ frame_needed = 1, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 600 0000 80B4     		push	{r7}
 601              	.LCFI30:
 602              		.cfi_def_cfa_offset 4
 603              		.cfi_offset 7, -4
 604 0002 83B0     		sub	sp, sp, #12
 605              	.LCFI31:
 606              		.cfi_def_cfa_offset 16
 607 0004 00AF     		add	r7, sp, #0
 608              	.LCFI32:
 609              		.cfi_def_cfa_register 7
 610 0006 7860     		str	r0, [r7, #4]
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* SDIO_DataInitStruct members default value */
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataTimeOut = 0xFFFFFFFF;
 611              		.loc 1 540 0
 612 0008 7B68     		ldr	r3, [r7, #4]
 613 000a 4FF0FF32 		mov	r2, #-1
 614 000e 1A60     		str	r2, [r3]
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataLength = 0x00;
 615              		.loc 1 541 0
 616 0010 7B68     		ldr	r3, [r7, #4]
 617 0012 0022     		movs	r2, #0
 618 0014 5A60     		str	r2, [r3, #4]
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataBlockSize = SDIO_DataBlockSize_1b;
 619              		.loc 1 542 0
 620 0016 7B68     		ldr	r3, [r7, #4]
 621 0018 0022     		movs	r2, #0
 622 001a 9A60     		str	r2, [r3, #8]
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_TransferDir = SDIO_TransferDir_ToCard;
 623              		.loc 1 543 0
 624 001c 7B68     		ldr	r3, [r7, #4]
 625 001e 0022     		movs	r2, #0
 626 0020 DA60     		str	r2, [r3, #12]
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_TransferMode = SDIO_TransferMode_Block;  
 627              		.loc 1 544 0
 628 0022 7B68     		ldr	r3, [r7, #4]
 629 0024 0022     		movs	r2, #0
 630 0026 1A61     		str	r2, [r3, #16]
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DPSM = SDIO_DPSM_Disable;
 631              		.loc 1 545 0
 632 0028 7B68     		ldr	r3, [r7, #4]
 633 002a 0022     		movs	r2, #0
 634 002c 5A61     		str	r2, [r3, #20]
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 635              		.loc 1 546 0
 636 002e 0C37     		adds	r7, r7, #12
 637 0030 BD46     		mov	sp, r7
 638              		@ sp needed
 639 0032 5DF8047B 		ldr	r7, [sp], #4
 640 0036 7047     		bx	lr
 641              		.cfi_endproc
 642              	.LFE121:
 644              		.section	.text.SDIO_GetDataCounter,"ax",%progbits
 645              		.align	2
 646              		.global	SDIO_GetDataCounter
 647              		.thumb
 648              		.thumb_func
 650              	SDIO_GetDataCounter:
 651              	.LFB122:
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns number of remaining data bytes to be transferred.
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Number of remaining data bytes to be transferred
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetDataCounter(void)
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 652              		.loc 1 554 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 0
 655              		@ frame_needed = 1, uses_anonymous_args = 0
 656              		@ link register save eliminated.
 657 0000 80B4     		push	{r7}
 658              	.LCFI33:
 659              		.cfi_def_cfa_offset 4
 660              		.cfi_offset 7, -4
 661 0002 00AF     		add	r7, sp, #0
 662              	.LCFI34:
 663              		.cfi_def_cfa_register 7
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return SDIO->DCOUNT;
 664              		.loc 1 555 0
 665 0004 4FF43053 		mov	r3, #11264
 666 0008 C4F20103 		movt	r3, 16385
 667 000c 1B6B     		ldr	r3, [r3, #48]
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 668              		.loc 1 556 0
 669 000e 1846     		mov	r0, r3
 670 0010 BD46     		mov	sp, r7
 671              		@ sp needed
 672 0012 5DF8047B 		ldr	r7, [sp], #4
 673 0016 7047     		bx	lr
 674              		.cfi_endproc
 675              	.LFE122:
 677              		.section	.text.SDIO_ReadData,"ax",%progbits
 678              		.align	2
 679              		.global	SDIO_ReadData
 680              		.thumb
 681              		.thumb_func
 683              	SDIO_ReadData:
 684              	.LFB123:
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Read one data word from Rx FIFO.
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Data received
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_ReadData(void)
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 685              		.loc 1 564 0
 686              		.cfi_startproc
 687              		@ args = 0, pretend = 0, frame = 0
 688              		@ frame_needed = 1, uses_anonymous_args = 0
 689              		@ link register save eliminated.
 690 0000 80B4     		push	{r7}
 691              	.LCFI35:
 692              		.cfi_def_cfa_offset 4
 693              		.cfi_offset 7, -4
 694 0002 00AF     		add	r7, sp, #0
 695              	.LCFI36:
 696              		.cfi_def_cfa_register 7
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return SDIO->FIFO;
 697              		.loc 1 565 0
 698 0004 4FF43053 		mov	r3, #11264
 699 0008 C4F20103 		movt	r3, 16385
 700 000c D3F88030 		ldr	r3, [r3, #128]
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 701              		.loc 1 566 0
 702 0010 1846     		mov	r0, r3
 703 0012 BD46     		mov	sp, r7
 704              		@ sp needed
 705 0014 5DF8047B 		ldr	r7, [sp], #4
 706 0018 7047     		bx	lr
 707              		.cfi_endproc
 708              	.LFE123:
 710 001a 00BF     		.section	.text.SDIO_WriteData,"ax",%progbits
 711              		.align	2
 712              		.global	SDIO_WriteData
 713              		.thumb
 714              		.thumb_func
 716              	SDIO_WriteData:
 717              	.LFB124:
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Write one data word to Tx FIFO.
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  Data: 32-bit data word to write.
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_WriteData(uint32_t Data)
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 718              		.loc 1 574 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 8
 721              		@ frame_needed = 1, uses_anonymous_args = 0
 722              		@ link register save eliminated.
 723 0000 80B4     		push	{r7}
 724              	.LCFI37:
 725              		.cfi_def_cfa_offset 4
 726              		.cfi_offset 7, -4
 727 0002 83B0     		sub	sp, sp, #12
 728              	.LCFI38:
 729              		.cfi_def_cfa_offset 16
 730 0004 00AF     		add	r7, sp, #0
 731              	.LCFI39:
 732              		.cfi_def_cfa_register 7
 733 0006 7860     		str	r0, [r7, #4]
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->FIFO = Data;
 734              		.loc 1 575 0
 735 0008 4FF43053 		mov	r3, #11264
 736 000c C4F20103 		movt	r3, 16385
 737 0010 7A68     		ldr	r2, [r7, #4]
 738 0012 C3F88020 		str	r2, [r3, #128]
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 739              		.loc 1 576 0
 740 0016 0C37     		adds	r7, r7, #12
 741 0018 BD46     		mov	sp, r7
 742              		@ sp needed
 743 001a 5DF8047B 		ldr	r7, [sp], #4
 744 001e 7047     		bx	lr
 745              		.cfi_endproc
 746              	.LFE124:
 748              		.section	.text.SDIO_GetFIFOCount,"ax",%progbits
 749              		.align	2
 750              		.global	SDIO_GetFIFOCount
 751              		.thumb
 752              		.thumb_func
 754              	SDIO_GetFIFOCount:
 755              	.LFB125:
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns the number of words left to be written to or read from FIFO.	
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Remaining number of words.
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetFIFOCount(void)
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 756              		.loc 1 584 0
 757              		.cfi_startproc
 758              		@ args = 0, pretend = 0, frame = 0
 759              		@ frame_needed = 1, uses_anonymous_args = 0
 760              		@ link register save eliminated.
 761 0000 80B4     		push	{r7}
 762              	.LCFI40:
 763              		.cfi_def_cfa_offset 4
 764              		.cfi_offset 7, -4
 765 0002 00AF     		add	r7, sp, #0
 766              	.LCFI41:
 767              		.cfi_def_cfa_register 7
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return SDIO->FIFOCNT;
 768              		.loc 1 585 0
 769 0004 4FF43053 		mov	r3, #11264
 770 0008 C4F20103 		movt	r3, 16385
 771 000c 9B6C     		ldr	r3, [r3, #72]
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 772              		.loc 1 586 0
 773 000e 1846     		mov	r0, r3
 774 0010 BD46     		mov	sp, r7
 775              		@ sp needed
 776 0012 5DF8047B 		ldr	r7, [sp], #4
 777 0016 7047     		bx	lr
 778              		.cfi_endproc
 779              	.LFE125:
 781              		.section	.text.SDIO_StartSDIOReadWait,"ax",%progbits
 782              		.align	2
 783              		.global	SDIO_StartSDIOReadWait
 784              		.thumb
 785              		.thumb_func
 787              	SDIO_StartSDIOReadWait:
 788              	.LFB126:
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group4 SDIO IO Cards mode management functions
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   SDIO IO Cards mode management functions
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               SDIO IO Cards mode management functions
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the SDIO IO Cards.
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Starts the SD I/O Read Wait operation.	
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the Start SDIO Read Wait operation. 
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_StartSDIOReadWait(FunctionalState NewState)
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 789              		.loc 1 613 0
 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 8
 792              		@ frame_needed = 1, uses_anonymous_args = 0
 793              		@ link register save eliminated.
 794 0000 80B4     		push	{r7}
 795              	.LCFI42:
 796              		.cfi_def_cfa_offset 4
 797              		.cfi_offset 7, -4
 798 0002 83B0     		sub	sp, sp, #12
 799              	.LCFI43:
 800              		.cfi_def_cfa_offset 16
 801 0004 00AF     		add	r7, sp, #0
 802              	.LCFI44:
 803              		.cfi_def_cfa_register 7
 804 0006 0346     		mov	r3, r0
 805 0008 FB71     		strb	r3, [r7, #7]
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWSTART_BB = (uint32_t) NewState;
 806              		.loc 1 617 0
 807 000a 48F2A053 		movw	r3, #34208
 808 000e C4F22523 		movt	r3, 16933
 809 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 810 0014 1A60     		str	r2, [r3]
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 811              		.loc 1 618 0
 812 0016 0C37     		adds	r7, r7, #12
 813 0018 BD46     		mov	sp, r7
 814              		@ sp needed
 815 001a 5DF8047B 		ldr	r7, [sp], #4
 816 001e 7047     		bx	lr
 817              		.cfi_endproc
 818              	.LFE126:
 820              		.section	.text.SDIO_StopSDIOReadWait,"ax",%progbits
 821              		.align	2
 822              		.global	SDIO_StopSDIOReadWait
 823              		.thumb
 824              		.thumb_func
 826              	SDIO_StopSDIOReadWait:
 827              	.LFB127:
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Stops the SD I/O Read Wait operation.	
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the Stop SDIO Read Wait operation. 
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_StopSDIOReadWait(FunctionalState NewState)
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 828              		.loc 1 627 0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 8
 831              		@ frame_needed = 1, uses_anonymous_args = 0
 832              		@ link register save eliminated.
 833 0000 80B4     		push	{r7}
 834              	.LCFI45:
 835              		.cfi_def_cfa_offset 4
 836              		.cfi_offset 7, -4
 837 0002 83B0     		sub	sp, sp, #12
 838              	.LCFI46:
 839              		.cfi_def_cfa_offset 16
 840 0004 00AF     		add	r7, sp, #0
 841              	.LCFI47:
 842              		.cfi_def_cfa_register 7
 843 0006 0346     		mov	r3, r0
 844 0008 FB71     		strb	r3, [r7, #7]
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWSTOP_BB = (uint32_t) NewState;
 845              		.loc 1 631 0
 846 000a 48F2A453 		movw	r3, #34212
 847 000e C4F22523 		movt	r3, 16933
 848 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 849 0014 1A60     		str	r2, [r3]
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 850              		.loc 1 632 0
 851 0016 0C37     		adds	r7, r7, #12
 852 0018 BD46     		mov	sp, r7
 853              		@ sp needed
 854 001a 5DF8047B 		ldr	r7, [sp], #4
 855 001e 7047     		bx	lr
 856              		.cfi_endproc
 857              	.LFE127:
 859              		.section	.text.SDIO_SetSDIOReadWaitMode,"ax",%progbits
 860              		.align	2
 861              		.global	SDIO_SetSDIOReadWaitMode
 862              		.thumb
 863              		.thumb_func
 865              	SDIO_SetSDIOReadWaitMode:
 866              	.LFB128:
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Sets one of the two options of inserting read wait interval.
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_ReadWaitMode: SD I/O Read Wait operation mode.
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be:
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_ReadWaitMode_CLK: Read Wait control by stopping SDIOCLK
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_ReadWaitMode_DATA2: Read Wait control using SDIO_DATA2
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SetSDIOReadWaitMode(uint32_t SDIO_ReadWaitMode)
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 867              		.loc 1 643 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 8
 870              		@ frame_needed = 1, uses_anonymous_args = 0
 871              		@ link register save eliminated.
 872 0000 80B4     		push	{r7}
 873              	.LCFI48:
 874              		.cfi_def_cfa_offset 4
 875              		.cfi_offset 7, -4
 876 0002 83B0     		sub	sp, sp, #12
 877              	.LCFI49:
 878              		.cfi_def_cfa_offset 16
 879 0004 00AF     		add	r7, sp, #0
 880              	.LCFI50:
 881              		.cfi_def_cfa_register 7
 882 0006 7860     		str	r0, [r7, #4]
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_READWAIT_MODE(SDIO_ReadWaitMode));
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWMOD_BB = SDIO_ReadWaitMode;
 883              		.loc 1 647 0
 884 0008 48F2A853 		movw	r3, #34216
 885 000c C4F22523 		movt	r3, 16933
 886 0010 7A68     		ldr	r2, [r7, #4]
 887 0012 1A60     		str	r2, [r3]
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 888              		.loc 1 648 0
 889 0014 0C37     		adds	r7, r7, #12
 890 0016 BD46     		mov	sp, r7
 891              		@ sp needed
 892 0018 5DF8047B 		ldr	r7, [sp], #4
 893 001c 7047     		bx	lr
 894              		.cfi_endproc
 895              	.LFE128:
 897 001e 00BF     		.section	.text.SDIO_SetSDIOOperation,"ax",%progbits
 898              		.align	2
 899              		.global	SDIO_SetSDIOOperation
 900              		.thumb
 901              		.thumb_func
 903              	SDIO_SetSDIOOperation:
 904              	.LFB129:
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SD I/O Mode Operation.
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of SDIO specific operation. 
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SetSDIOOperation(FunctionalState NewState)
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 905              		.loc 1 657 0
 906              		.cfi_startproc
 907              		@ args = 0, pretend = 0, frame = 8
 908              		@ frame_needed = 1, uses_anonymous_args = 0
 909              		@ link register save eliminated.
 910 0000 80B4     		push	{r7}
 911              	.LCFI51:
 912              		.cfi_def_cfa_offset 4
 913              		.cfi_offset 7, -4
 914 0002 83B0     		sub	sp, sp, #12
 915              	.LCFI52:
 916              		.cfi_def_cfa_offset 16
 917 0004 00AF     		add	r7, sp, #0
 918              	.LCFI53:
 919              		.cfi_def_cfa_register 7
 920 0006 0346     		mov	r3, r0
 921 0008 FB71     		strb	r3, [r7, #7]
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_SDIOEN_BB = (uint32_t)NewState;
 922              		.loc 1 661 0
 923 000a 48F2AC53 		movw	r3, #34220
 924 000e C4F22523 		movt	r3, 16933
 925 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 926 0014 1A60     		str	r2, [r3]
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 927              		.loc 1 662 0
 928 0016 0C37     		adds	r7, r7, #12
 929 0018 BD46     		mov	sp, r7
 930              		@ sp needed
 931 001a 5DF8047B 		ldr	r7, [sp], #4
 932 001e 7047     		bx	lr
 933              		.cfi_endproc
 934              	.LFE129:
 936              		.section	.text.SDIO_SendSDIOSuspendCmd,"ax",%progbits
 937              		.align	2
 938              		.global	SDIO_SendSDIOSuspendCmd
 939              		.thumb
 940              		.thumb_func
 942              	SDIO_SendSDIOSuspendCmd:
 943              	.LFB130:
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SD I/O Mode suspend command sending.
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the SD I/O Mode suspend command.
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SendSDIOSuspendCmd(FunctionalState NewState)
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 944              		.loc 1 671 0
 945              		.cfi_startproc
 946              		@ args = 0, pretend = 0, frame = 8
 947              		@ frame_needed = 1, uses_anonymous_args = 0
 948              		@ link register save eliminated.
 949 0000 80B4     		push	{r7}
 950              	.LCFI54:
 951              		.cfi_def_cfa_offset 4
 952              		.cfi_offset 7, -4
 953 0002 83B0     		sub	sp, sp, #12
 954              	.LCFI55:
 955              		.cfi_def_cfa_offset 16
 956 0004 00AF     		add	r7, sp, #0
 957              	.LCFI56:
 958              		.cfi_def_cfa_register 7
 959 0006 0346     		mov	r3, r0
 960 0008 FB71     		strb	r3, [r7, #7]
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_SDIOSUSPEND_BB = (uint32_t)NewState;
 961              		.loc 1 675 0
 962 000a 48F2AC13 		movw	r3, #33196
 963 000e C4F22523 		movt	r3, 16933
 964 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 965 0014 1A60     		str	r2, [r3]
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 966              		.loc 1 676 0
 967 0016 0C37     		adds	r7, r7, #12
 968 0018 BD46     		mov	sp, r7
 969              		@ sp needed
 970 001a 5DF8047B 		ldr	r7, [sp], #4
 971 001e 7047     		bx	lr
 972              		.cfi_endproc
 973              	.LFE130:
 975              		.section	.text.SDIO_CommandCompletionCmd,"ax",%progbits
 976              		.align	2
 977              		.global	SDIO_CommandCompletionCmd
 978              		.thumb
 979              		.thumb_func
 981              	SDIO_CommandCompletionCmd:
 982              	.LFB131:
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group5 CE-ATA mode management functions
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   CE-ATA mode management functions
 684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               CE-ATA mode management functions
 688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the CE-ATA card.
 691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the command completion signal.
 698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of command completion signal. 
 699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_CommandCompletionCmd(FunctionalState NewState)
 703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 983              		.loc 1 703 0
 984              		.cfi_startproc
 985              		@ args = 0, pretend = 0, frame = 8
 986              		@ frame_needed = 1, uses_anonymous_args = 0
 987              		@ link register save eliminated.
 988 0000 80B4     		push	{r7}
 989              	.LCFI57:
 990              		.cfi_def_cfa_offset 4
 991              		.cfi_offset 7, -4
 992 0002 83B0     		sub	sp, sp, #12
 993              	.LCFI58:
 994              		.cfi_def_cfa_offset 16
 995 0004 00AF     		add	r7, sp, #0
 996              	.LCFI59:
 997              		.cfi_def_cfa_register 7
 998 0006 0346     		mov	r3, r0
 999 0008 FB71     		strb	r3, [r7, #7]
 704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_ENCMDCOMPL_BB = (uint32_t)NewState;
 1000              		.loc 1 707 0
 1001 000a 48F2B013 		movw	r3, #33200
 1002 000e C4F22523 		movt	r3, 16933
 1003 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1004 0014 1A60     		str	r2, [r3]
 708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1005              		.loc 1 708 0
 1006 0016 0C37     		adds	r7, r7, #12
 1007 0018 BD46     		mov	sp, r7
 1008              		@ sp needed
 1009 001a 5DF8047B 		ldr	r7, [sp], #4
 1010 001e 7047     		bx	lr
 1011              		.cfi_endproc
 1012              	.LFE131:
 1014              		.section	.text.SDIO_CEATAITCmd,"ax",%progbits
 1015              		.align	2
 1016              		.global	SDIO_CEATAITCmd
 1017              		.thumb
 1018              		.thumb_func
 1020              	SDIO_CEATAITCmd:
 1021              	.LFB132:
 709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the CE-ATA interrupt.
 712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of CE-ATA interrupt. 
 713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_CEATAITCmd(FunctionalState NewState)
 717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1022              		.loc 1 717 0
 1023              		.cfi_startproc
 1024              		@ args = 0, pretend = 0, frame = 8
 1025              		@ frame_needed = 1, uses_anonymous_args = 0
 1026              		@ link register save eliminated.
 1027 0000 80B4     		push	{r7}
 1028              	.LCFI60:
 1029              		.cfi_def_cfa_offset 4
 1030              		.cfi_offset 7, -4
 1031 0002 83B0     		sub	sp, sp, #12
 1032              	.LCFI61:
 1033              		.cfi_def_cfa_offset 16
 1034 0004 00AF     		add	r7, sp, #0
 1035              	.LCFI62:
 1036              		.cfi_def_cfa_register 7
 1037 0006 0346     		mov	r3, r0
 1038 0008 FB71     		strb	r3, [r7, #7]
 718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_NIEN_BB = (uint32_t)((~((uint32_t)NewState)) & ((uint32_t)0x1));
 1039              		.loc 1 721 0
 1040 000a 48F2B413 		movw	r3, #33204
 1041 000e C4F22523 		movt	r3, 16933
 1042 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1043 0014 02F00102 		and	r2, r2, #1
 1044 0018 002A     		cmp	r2, #0
 1045 001a 14BF     		ite	ne
 1046 001c 0022     		movne	r2, #0
 1047 001e 0122     		moveq	r2, #1
 1048 0020 D2B2     		uxtb	r2, r2
 1049 0022 1A60     		str	r2, [r3]
 722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1050              		.loc 1 722 0
 1051 0024 0C37     		adds	r7, r7, #12
 1052 0026 BD46     		mov	sp, r7
 1053              		@ sp needed
 1054 0028 5DF8047B 		ldr	r7, [sp], #4
 1055 002c 7047     		bx	lr
 1056              		.cfi_endproc
 1057              	.LFE132:
 1059 002e 00BF     		.section	.text.SDIO_SendCEATACmd,"ax",%progbits
 1060              		.align	2
 1061              		.global	SDIO_SendCEATACmd
 1062              		.thumb
 1063              		.thumb_func
 1065              	SDIO_SendCEATACmd:
 1066              	.LFB133:
 723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Sends CE-ATA command (CMD61).
 726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of CE-ATA command. 
 727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SendCEATACmd(FunctionalState NewState)
 731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1067              		.loc 1 731 0
 1068              		.cfi_startproc
 1069              		@ args = 0, pretend = 0, frame = 8
 1070              		@ frame_needed = 1, uses_anonymous_args = 0
 1071              		@ link register save eliminated.
 1072 0000 80B4     		push	{r7}
 1073              	.LCFI63:
 1074              		.cfi_def_cfa_offset 4
 1075              		.cfi_offset 7, -4
 1076 0002 83B0     		sub	sp, sp, #12
 1077              	.LCFI64:
 1078              		.cfi_def_cfa_offset 16
 1079 0004 00AF     		add	r7, sp, #0
 1080              	.LCFI65:
 1081              		.cfi_def_cfa_register 7
 1082 0006 0346     		mov	r3, r0
 1083 0008 FB71     		strb	r3, [r7, #7]
 732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_ATACMD_BB = (uint32_t)NewState;
 1084              		.loc 1 735 0
 1085 000a 48F2B813 		movw	r3, #33208
 1086 000e C4F22523 		movt	r3, 16933
 1087 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1088 0014 1A60     		str	r2, [r3]
 736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1089              		.loc 1 736 0
 1090 0016 0C37     		adds	r7, r7, #12
 1091 0018 BD46     		mov	sp, r7
 1092              		@ sp needed
 1093 001a 5DF8047B 		ldr	r7, [sp], #4
 1094 001e 7047     		bx	lr
 1095              		.cfi_endproc
 1096              	.LFE133:
 1098              		.section	.text.SDIO_DMACmd,"ax",%progbits
 1099              		.align	2
 1100              		.global	SDIO_DMACmd
 1101              		.thumb
 1102              		.thumb_func
 1104              	SDIO_DMACmd:
 1105              	.LFB134:
 737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group6 DMA transfers management functions
 743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   DMA transfers management functions
 744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               DMA transfers management functions
 748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program SDIO DMA transfer.
 751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO DMA request.
 758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the selected SDIO DMA request.
 759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be: ENABLE or DISABLE.
 760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DMACmd(FunctionalState NewState)
 763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 1106              		.loc 1 763 0
 1107              		.cfi_startproc
 1108              		@ args = 0, pretend = 0, frame = 8
 1109              		@ frame_needed = 1, uses_anonymous_args = 0
 1110              		@ link register save eliminated.
 1111 0000 80B4     		push	{r7}
 1112              	.LCFI66:
 1113              		.cfi_def_cfa_offset 4
 1114              		.cfi_offset 7, -4
 1115 0002 83B0     		sub	sp, sp, #12
 1116              	.LCFI67:
 1117              		.cfi_def_cfa_offset 16
 1118 0004 00AF     		add	r7, sp, #0
 1119              	.LCFI68:
 1120              		.cfi_def_cfa_register 7
 1121 0006 0346     		mov	r3, r0
 1122 0008 FB71     		strb	r3, [r7, #7]
 764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_DMAEN_BB = (uint32_t)NewState;
 1123              		.loc 1 767 0
 1124 000a 48F28C53 		movw	r3, #34188
 1125 000e C4F22523 		movt	r3, 16933
 1126 0012 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1127 0014 1A60     		str	r2, [r3]
 768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1128              		.loc 1 768 0
 1129 0016 0C37     		adds	r7, r7, #12
 1130 0018 BD46     		mov	sp, r7
 1131              		@ sp needed
 1132 001a 5DF8047B 		ldr	r7, [sp], #4
 1133 001e 7047     		bx	lr
 1134              		.cfi_endproc
 1135              	.LFE134:
 1137              		.section	.text.SDIO_ITConfig,"ax",%progbits
 1138              		.align	2
 1139              		.global	SDIO_ITConfig
 1140              		.thumb
 1141              		.thumb_func
 1143              	SDIO_ITConfig:
 1144              	.LFB135:
 769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group7 Interrupts and flags management functions
 775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Interrupts and flags management functions  
 776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****                        Interrupts and flags management functions
 780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO interrupts.
 789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the SDIO interrupt sources to be enabled or disabled.
 790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DBCKEND:  Data block sent/received (CRC check passed) interrupt
 803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDACT:   Command transfer in progress interrupt
 804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXACT:    Data transmit in progress interrupt
 805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXACT:    Data receive in progress interrupt
 806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt
 807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOF:  Transmit FIFO full interrupt
 809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOF:  Receive FIFO full interrupt
 810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOE:  Transmit FIFO empty interrupt
 811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOE:  Receive FIFO empty interrupt
 812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXDAVL:   Data available in transmit FIFO interrupt
 813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXDAVL:   Data available in receive FIFO interrupt
 814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt
 816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the specified SDIO interrupts.
 817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be: ENABLE or DISABLE.
 818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None 
 819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ITConfig(uint32_t SDIO_IT, FunctionalState NewState)
 821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 1145              		.loc 1 821 0
 1146              		.cfi_startproc
 1147              		@ args = 0, pretend = 0, frame = 8
 1148              		@ frame_needed = 1, uses_anonymous_args = 0
 1149              		@ link register save eliminated.
 1150 0000 80B4     		push	{r7}
 1151              	.LCFI69:
 1152              		.cfi_def_cfa_offset 4
 1153              		.cfi_offset 7, -4
 1154 0002 83B0     		sub	sp, sp, #12
 1155              	.LCFI70:
 1156              		.cfi_def_cfa_offset 16
 1157 0004 00AF     		add	r7, sp, #0
 1158              	.LCFI71:
 1159              		.cfi_def_cfa_register 7
 1160 0006 7860     		str	r0, [r7, #4]
 1161 0008 0B46     		mov	r3, r1
 1162 000a FB70     		strb	r3, [r7, #3]
 822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_IT(SDIO_IT));
 824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   if (NewState != DISABLE)
 1163              		.loc 1 826 0
 1164 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1165 000e 002B     		cmp	r3, #0
 1166 0010 0CD0     		beq	.L33
 827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     /* Enable the SDIO interrupts */
 829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     SDIO->MASK |= SDIO_IT;
 1167              		.loc 1 829 0
 1168 0012 4FF43053 		mov	r3, #11264
 1169 0016 C4F20103 		movt	r3, 16385
 1170 001a 4FF43052 		mov	r2, #11264
 1171 001e C4F20102 		movt	r2, 16385
 1172 0022 D16B     		ldr	r1, [r2, #60]
 1173 0024 7A68     		ldr	r2, [r7, #4]
 1174 0026 0A43     		orrs	r2, r2, r1
 1175 0028 DA63     		str	r2, [r3, #60]
 1176 002a 0CE0     		b	.L32
 1177              	.L33:
 830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   else
 832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     /* Disable the SDIO interrupts */
 834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     SDIO->MASK &= ~SDIO_IT;
 1178              		.loc 1 834 0
 1179 002c 4FF43053 		mov	r3, #11264
 1180 0030 C4F20103 		movt	r3, 16385
 1181 0034 4FF43052 		mov	r2, #11264
 1182 0038 C4F20102 		movt	r2, 16385
 1183 003c D16B     		ldr	r1, [r2, #60]
 1184 003e 7A68     		ldr	r2, [r7, #4]
 1185 0040 D243     		mvns	r2, r2
 1186 0042 0A40     		ands	r2, r2, r1
 1187 0044 DA63     		str	r2, [r3, #60]
 1188              	.L32:
 835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   } 
 836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1189              		.loc 1 836 0
 1190 0046 0C37     		adds	r7, r7, #12
 1191 0048 BD46     		mov	sp, r7
 1192              		@ sp needed
 1193 004a 5DF8047B 		ldr	r7, [sp], #4
 1194 004e 7047     		bx	lr
 1195              		.cfi_endproc
 1196              	.LFE135:
 1198              		.section	.text.SDIO_GetFlagStatus,"ax",%progbits
 1199              		.align	2
 1200              		.global	SDIO_GetFlagStatus
 1201              		.thumb
 1202              		.thumb_func
 1204              	SDIO_GetFlagStatus:
 1205              	.LFB136:
 837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Checks whether the specified SDIO flag is set or not.
 840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_FLAG: specifies the flag to check. 
 841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed)
 843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed)
 844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CTIMEOUT: Command response timeout
 845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DTIMEOUT: Data timeout
 846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error
 847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXOVERR:  Received FIFO overrun error
 848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDREND:  Command response received (CRC check passed)
 849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDSENT:  Command sent (no response required)
 850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DATAEND:  Data end (data counter, SDIDCOUNT, is zero)
 851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode
 852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DBCKEND:  Data block sent/received (CRC check passed)
 853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDACT:   Command transfer in progress
 854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXACT:    Data transmit in progress
 855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXACT:    Data receive in progress
 856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOHE: Transmit FIFO Half Empty
 857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOHF: Receive FIFO Half Full
 858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOF:  Transmit FIFO full
 859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOF:  Receive FIFO full
 860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOE:  Transmit FIFO empty
 861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOE:  Receive FIFO empty
 862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXDAVL:   Data available in transmit FIFO
 863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXDAVL:   Data available in receive FIFO
 864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_SDIOIT:   SD I/O interrupt received
 865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61
 866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval The new state of SDIO_FLAG (SET or RESET).
 867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** FlagStatus SDIO_GetFlagStatus(uint32_t SDIO_FLAG)
 869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1206              		.loc 1 869 0
 1207              		.cfi_startproc
 1208              		@ args = 0, pretend = 0, frame = 16
 1209              		@ frame_needed = 1, uses_anonymous_args = 0
 1210              		@ link register save eliminated.
 1211 0000 80B4     		push	{r7}
 1212              	.LCFI72:
 1213              		.cfi_def_cfa_offset 4
 1214              		.cfi_offset 7, -4
 1215 0002 85B0     		sub	sp, sp, #20
 1216              	.LCFI73:
 1217              		.cfi_def_cfa_offset 24
 1218 0004 00AF     		add	r7, sp, #0
 1219              	.LCFI74:
 1220              		.cfi_def_cfa_register 7
 1221 0006 7860     		str	r0, [r7, #4]
 870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   FlagStatus bitstatus = RESET;
 1222              		.loc 1 870 0
 1223 0008 0023     		movs	r3, #0
 1224 000a FB73     		strb	r3, [r7, #15]
 871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_FLAG(SDIO_FLAG));
 874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   if ((SDIO->STA & SDIO_FLAG) != (uint32_t)RESET)
 1225              		.loc 1 875 0
 1226 000c 4FF43053 		mov	r3, #11264
 1227 0010 C4F20103 		movt	r3, 16385
 1228 0014 5A6B     		ldr	r2, [r3, #52]
 1229 0016 7B68     		ldr	r3, [r7, #4]
 1230 0018 1340     		ands	r3, r3, r2
 1231 001a 002B     		cmp	r3, #0
 1232 001c 02D0     		beq	.L36
 876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = SET;
 1233              		.loc 1 877 0
 1234 001e 0123     		movs	r3, #1
 1235 0020 FB73     		strb	r3, [r7, #15]
 1236 0022 01E0     		b	.L37
 1237              	.L36:
 878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   else
 880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = RESET;
 1238              		.loc 1 881 0
 1239 0024 0023     		movs	r3, #0
 1240 0026 FB73     		strb	r3, [r7, #15]
 1241              	.L37:
 882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return bitstatus;
 1242              		.loc 1 883 0
 1243 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1244              		.loc 1 884 0
 1245 002a 1846     		mov	r0, r3
 1246 002c 1437     		adds	r7, r7, #20
 1247 002e BD46     		mov	sp, r7
 1248              		@ sp needed
 1249 0030 5DF8047B 		ldr	r7, [sp], #4
 1250 0034 7047     		bx	lr
 1251              		.cfi_endproc
 1252              	.LFE136:
 1254 0036 00BF     		.section	.text.SDIO_ClearFlag,"ax",%progbits
 1255              		.align	2
 1256              		.global	SDIO_ClearFlag
 1257              		.thumb
 1258              		.thumb_func
 1260              	SDIO_ClearFlag:
 1261              	.LFB137:
 885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Clears the SDIO's pending flags.
 888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_FLAG: specifies the flag to clear.  
 889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed)
 891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed)
 892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CTIMEOUT: Command response timeout
 893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DTIMEOUT: Data timeout
 894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error
 895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXOVERR:  Received FIFO overrun error
 896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDREND:  Command response received (CRC check passed)
 897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDSENT:  Command sent (no response required)
 898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DATAEND:  Data end (data counter, SDIDCOUNT, is zero)
 899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode
 900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DBCKEND:  Data block sent/received (CRC check passed)
 901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_SDIOIT:   SD I/O interrupt received
 902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ClearFlag(uint32_t SDIO_FLAG)
 906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1262              		.loc 1 906 0
 1263              		.cfi_startproc
 1264              		@ args = 0, pretend = 0, frame = 8
 1265              		@ frame_needed = 1, uses_anonymous_args = 0
 1266              		@ link register save eliminated.
 1267 0000 80B4     		push	{r7}
 1268              	.LCFI75:
 1269              		.cfi_def_cfa_offset 4
 1270              		.cfi_offset 7, -4
 1271 0002 83B0     		sub	sp, sp, #12
 1272              	.LCFI76:
 1273              		.cfi_def_cfa_offset 16
 1274 0004 00AF     		add	r7, sp, #0
 1275              	.LCFI77:
 1276              		.cfi_def_cfa_register 7
 1277 0006 7860     		str	r0, [r7, #4]
 907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLEAR_FLAG(SDIO_FLAG));
 909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****    
 910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->ICR = SDIO_FLAG;
 1278              		.loc 1 910 0
 1279 0008 4FF43053 		mov	r3, #11264
 1280 000c C4F20103 		movt	r3, 16385
 1281 0010 7A68     		ldr	r2, [r7, #4]
 1282 0012 9A63     		str	r2, [r3, #56]
 911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1283              		.loc 1 911 0
 1284 0014 0C37     		adds	r7, r7, #12
 1285 0016 BD46     		mov	sp, r7
 1286              		@ sp needed
 1287 0018 5DF8047B 		ldr	r7, [sp], #4
 1288 001c 7047     		bx	lr
 1289              		.cfi_endproc
 1290              	.LFE137:
 1292 001e 00BF     		.section	.text.SDIO_GetITStatus,"ax",%progbits
 1293              		.align	2
 1294              		.global	SDIO_GetITStatus
 1295              		.thumb
 1296              		.thumb_func
 1298              	SDIO_GetITStatus:
 1299              	.LFB138:
 912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Checks whether the specified SDIO interrupt has occurred or not.
 915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the SDIO interrupt source to check. 
 916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DBCKEND:  Data block sent/received (CRC check passed) interrupt
 929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDACT:   Command transfer in progress interrupt
 930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXACT:    Data transmit in progress interrupt
 931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXACT:    Data receive in progress interrupt
 932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt
 933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt
 934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOF:  Transmit FIFO full interrupt
 935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOF:  Receive FIFO full interrupt
 936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOE:  Transmit FIFO empty interrupt
 937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOE:  Receive FIFO empty interrupt
 938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXDAVL:   Data available in transmit FIFO interrupt
 939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXDAVL:   Data available in receive FIFO interrupt
 940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt
 942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval The new state of SDIO_IT (SET or RESET).
 943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** ITStatus SDIO_GetITStatus(uint32_t SDIO_IT)
 945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1300              		.loc 1 945 0
 1301              		.cfi_startproc
 1302              		@ args = 0, pretend = 0, frame = 16
 1303              		@ frame_needed = 1, uses_anonymous_args = 0
 1304              		@ link register save eliminated.
 1305 0000 80B4     		push	{r7}
 1306              	.LCFI78:
 1307              		.cfi_def_cfa_offset 4
 1308              		.cfi_offset 7, -4
 1309 0002 85B0     		sub	sp, sp, #20
 1310              	.LCFI79:
 1311              		.cfi_def_cfa_offset 24
 1312 0004 00AF     		add	r7, sp, #0
 1313              	.LCFI80:
 1314              		.cfi_def_cfa_register 7
 1315 0006 7860     		str	r0, [r7, #4]
 946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ITStatus bitstatus = RESET;
 1316              		.loc 1 946 0
 1317 0008 0023     		movs	r3, #0
 1318 000a FB73     		strb	r3, [r7, #15]
 947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_GET_IT(SDIO_IT));
 950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   if ((SDIO->STA & SDIO_IT) != (uint32_t)RESET)  
 1319              		.loc 1 950 0
 1320 000c 4FF43053 		mov	r3, #11264
 1321 0010 C4F20103 		movt	r3, 16385
 1322 0014 5A6B     		ldr	r2, [r3, #52]
 1323 0016 7B68     		ldr	r3, [r7, #4]
 1324 0018 1340     		ands	r3, r3, r2
 1325 001a 002B     		cmp	r3, #0
 1326 001c 02D0     		beq	.L41
 951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = SET;
 1327              		.loc 1 952 0
 1328 001e 0123     		movs	r3, #1
 1329 0020 FB73     		strb	r3, [r7, #15]
 1330 0022 01E0     		b	.L42
 1331              	.L41:
 953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   else
 955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = RESET;
 1332              		.loc 1 956 0
 1333 0024 0023     		movs	r3, #0
 1334 0026 FB73     		strb	r3, [r7, #15]
 1335              	.L42:
 957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return bitstatus;
 1336              		.loc 1 958 0
 1337 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1338              		.loc 1 959 0
 1339 002a 1846     		mov	r0, r3
 1340 002c 1437     		adds	r7, r7, #20
 1341 002e BD46     		mov	sp, r7
 1342              		@ sp needed
 1343 0030 5DF8047B 		ldr	r7, [sp], #4
 1344 0034 7047     		bx	lr
 1345              		.cfi_endproc
 1346              	.LFE138:
 1348 0036 00BF     		.section	.text.SDIO_ClearITPendingBit,"ax",%progbits
 1349              		.align	2
 1350              		.global	SDIO_ClearITPendingBit
 1351              		.thumb
 1352              		.thumb_func
 1354              	SDIO_ClearITPendingBit:
 1355              	.LFB139:
 960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Clears the SDIO's interrupt pending bits.
 963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the interrupt pending bit to clear. 
 964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIO_DCOUNT, is zero) interrupt
 974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61
 978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ClearITPendingBit(uint32_t SDIO_IT)
 981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 1356              		.loc 1 981 0
 1357              		.cfi_startproc
 1358              		@ args = 0, pretend = 0, frame = 8
 1359              		@ frame_needed = 1, uses_anonymous_args = 0
 1360              		@ link register save eliminated.
 1361 0000 80B4     		push	{r7}
 1362              	.LCFI81:
 1363              		.cfi_def_cfa_offset 4
 1364              		.cfi_offset 7, -4
 1365 0002 83B0     		sub	sp, sp, #12
 1366              	.LCFI82:
 1367              		.cfi_def_cfa_offset 16
 1368 0004 00AF     		add	r7, sp, #0
 1369              	.LCFI83:
 1370              		.cfi_def_cfa_register 7
 1371 0006 7860     		str	r0, [r7, #4]
 982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLEAR_IT(SDIO_IT));
 984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****    
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->ICR = SDIO_IT;
 1372              		.loc 1 985 0
 1373 0008 4FF43053 		mov	r3, #11264
 1374 000c C4F20103 		movt	r3, 16385
 1375 0010 7A68     		ldr	r2, [r7, #4]
 1376 0012 9A63     		str	r2, [r3, #56]
 986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 1377              		.loc 1 986 0
 1378 0014 0C37     		adds	r7, r7, #12
 1379 0016 BD46     		mov	sp, r7
 1380              		@ sp needed
 1381 0018 5DF8047B 		ldr	r7, [sp], #4
 1382 001c 7047     		bx	lr
 1383              		.cfi_endproc
 1384              	.LFE139:
 1386 001e 00BF     		.text
 1387              	.Letext0:
 1388              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1389              		.file 3 "/usr/include/newlib/stdint.h"
 1390              		.file 4 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 1391              		.file 5 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h"
 1392              		.file 6 "libs/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_sdio.c
     /tmp/cckmzigm.s:20     .text.SDIO_DeInit:0000000000000000 $t
     /tmp/cckmzigm.s:25     .text.SDIO_DeInit:0000000000000000 SDIO_DeInit
     /tmp/cckmzigm.s:54     .text.SDIO_Init:0000000000000000 $t
     /tmp/cckmzigm.s:59     .text.SDIO_Init:0000000000000000 SDIO_Init
     /tmp/cckmzigm.s:134    .text.SDIO_StructInit:0000000000000000 $t
     /tmp/cckmzigm.s:139    .text.SDIO_StructInit:0000000000000000 SDIO_StructInit
     /tmp/cckmzigm.s:191    .text.SDIO_ClockCmd:0000000000000000 $t
     /tmp/cckmzigm.s:196    .text.SDIO_ClockCmd:0000000000000000 SDIO_ClockCmd
     /tmp/cckmzigm.s:230    .text.SDIO_SetPowerState:0000000000000000 $t
     /tmp/cckmzigm.s:235    .text.SDIO_SetPowerState:0000000000000000 SDIO_SetPowerState
     /tmp/cckmzigm.s:268    .text.SDIO_GetPowerState:0000000000000000 $t
     /tmp/cckmzigm.s:273    .text.SDIO_GetPowerState:0000000000000000 SDIO_GetPowerState
     /tmp/cckmzigm.s:302    .text.SDIO_SendCommand:0000000000000000 $t
     /tmp/cckmzigm.s:307    .text.SDIO_SendCommand:0000000000000000 SDIO_SendCommand
     /tmp/cckmzigm.s:376    .text.SDIO_CmdStructInit:0000000000000000 $t
     /tmp/cckmzigm.s:381    .text.SDIO_CmdStructInit:0000000000000000 SDIO_CmdStructInit
     /tmp/cckmzigm.s:429    .text.SDIO_GetCommandResponse:0000000000000000 $t
     /tmp/cckmzigm.s:434    .text.SDIO_GetCommandResponse:0000000000000000 SDIO_GetCommandResponse
     /tmp/cckmzigm.s:463    .text.SDIO_GetResponse:0000000000000000 $t
     /tmp/cckmzigm.s:468    .text.SDIO_GetResponse:0000000000000000 SDIO_GetResponse
     /tmp/cckmzigm.s:509    .text.SDIO_DataConfig:0000000000000000 $t
     /tmp/cckmzigm.s:514    .text.SDIO_DataConfig:0000000000000000 SDIO_DataConfig
     /tmp/cckmzigm.s:588    .text.SDIO_DataStructInit:0000000000000000 $t
     /tmp/cckmzigm.s:593    .text.SDIO_DataStructInit:0000000000000000 SDIO_DataStructInit
     /tmp/cckmzigm.s:645    .text.SDIO_GetDataCounter:0000000000000000 $t
     /tmp/cckmzigm.s:650    .text.SDIO_GetDataCounter:0000000000000000 SDIO_GetDataCounter
     /tmp/cckmzigm.s:678    .text.SDIO_ReadData:0000000000000000 $t
     /tmp/cckmzigm.s:683    .text.SDIO_ReadData:0000000000000000 SDIO_ReadData
     /tmp/cckmzigm.s:711    .text.SDIO_WriteData:0000000000000000 $t
     /tmp/cckmzigm.s:716    .text.SDIO_WriteData:0000000000000000 SDIO_WriteData
     /tmp/cckmzigm.s:749    .text.SDIO_GetFIFOCount:0000000000000000 $t
     /tmp/cckmzigm.s:754    .text.SDIO_GetFIFOCount:0000000000000000 SDIO_GetFIFOCount
     /tmp/cckmzigm.s:782    .text.SDIO_StartSDIOReadWait:0000000000000000 $t
     /tmp/cckmzigm.s:787    .text.SDIO_StartSDIOReadWait:0000000000000000 SDIO_StartSDIOReadWait
     /tmp/cckmzigm.s:821    .text.SDIO_StopSDIOReadWait:0000000000000000 $t
     /tmp/cckmzigm.s:826    .text.SDIO_StopSDIOReadWait:0000000000000000 SDIO_StopSDIOReadWait
     /tmp/cckmzigm.s:860    .text.SDIO_SetSDIOReadWaitMode:0000000000000000 $t
     /tmp/cckmzigm.s:865    .text.SDIO_SetSDIOReadWaitMode:0000000000000000 SDIO_SetSDIOReadWaitMode
     /tmp/cckmzigm.s:898    .text.SDIO_SetSDIOOperation:0000000000000000 $t
     /tmp/cckmzigm.s:903    .text.SDIO_SetSDIOOperation:0000000000000000 SDIO_SetSDIOOperation
     /tmp/cckmzigm.s:937    .text.SDIO_SendSDIOSuspendCmd:0000000000000000 $t
     /tmp/cckmzigm.s:942    .text.SDIO_SendSDIOSuspendCmd:0000000000000000 SDIO_SendSDIOSuspendCmd
     /tmp/cckmzigm.s:976    .text.SDIO_CommandCompletionCmd:0000000000000000 $t
     /tmp/cckmzigm.s:981    .text.SDIO_CommandCompletionCmd:0000000000000000 SDIO_CommandCompletionCmd
     /tmp/cckmzigm.s:1015   .text.SDIO_CEATAITCmd:0000000000000000 $t
     /tmp/cckmzigm.s:1020   .text.SDIO_CEATAITCmd:0000000000000000 SDIO_CEATAITCmd
     /tmp/cckmzigm.s:1060   .text.SDIO_SendCEATACmd:0000000000000000 $t
     /tmp/cckmzigm.s:1065   .text.SDIO_SendCEATACmd:0000000000000000 SDIO_SendCEATACmd
     /tmp/cckmzigm.s:1099   .text.SDIO_DMACmd:0000000000000000 $t
     /tmp/cckmzigm.s:1104   .text.SDIO_DMACmd:0000000000000000 SDIO_DMACmd
     /tmp/cckmzigm.s:1138   .text.SDIO_ITConfig:0000000000000000 $t
     /tmp/cckmzigm.s:1143   .text.SDIO_ITConfig:0000000000000000 SDIO_ITConfig
     /tmp/cckmzigm.s:1199   .text.SDIO_GetFlagStatus:0000000000000000 $t
     /tmp/cckmzigm.s:1204   .text.SDIO_GetFlagStatus:0000000000000000 SDIO_GetFlagStatus
     /tmp/cckmzigm.s:1255   .text.SDIO_ClearFlag:0000000000000000 $t
     /tmp/cckmzigm.s:1260   .text.SDIO_ClearFlag:0000000000000000 SDIO_ClearFlag
     /tmp/cckmzigm.s:1293   .text.SDIO_GetITStatus:0000000000000000 $t
     /tmp/cckmzigm.s:1298   .text.SDIO_GetITStatus:0000000000000000 SDIO_GetITStatus
     /tmp/cckmzigm.s:1349   .text.SDIO_ClearITPendingBit:0000000000000000 $t
     /tmp/cckmzigm.s:1354   .text.SDIO_ClearITPendingBit:0000000000000000 SDIO_ClearITPendingBit
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
