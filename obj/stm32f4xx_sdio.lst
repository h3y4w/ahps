   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_sdio.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SDIO_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	SDIO_DeInit
  22              		.thumb
  23              		.thumb_func
  25              	SDIO_DeInit:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @file    stm32f4xx_sdio.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          functionalities of the Secure digital input/output interface (SDIO) 
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          peripheral:
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Initialization and Configuration
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Command path state machine (CPSM) management
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Data path state machine (DPSM) management
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - SDIO IO Cards mode management
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - CE-ATA mode management
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - DMA transfers management
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *           - Interrupts and flags management
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *  @verbatim
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          ===================================================================
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                 How to use this driver
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          ===================================================================
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          1. The SDIO clock (SDIOCLK = 48 MHz) is coming from a specific output
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             of PLL (PLL48CLK). Before to start working with SDIO peripheral
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             make sure that the PLL is well configured.
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          The SDIO peripheral uses two clock signals:
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              - SDIO adapter clock (SDIOCLK = 48 MHz)
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              - APB2 bus clock (PCLK2)
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          PCLK2 and SDIO_CK clock frequencies must respect the following condition:
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   Frequenc(PCLK2) >= (3 / 8 x Frequency(SDIO_CK))
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          2. Enable peripheral clock using RCC_APB2PeriphClockCmd(RCC_APB2Periph_SDIO, ENABLE).
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          3.  According to the SDIO mode, enable the GPIO clocks using 
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              RCC_AHB1PeriphClockCmd() function. 
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              The I/O can be one of the following configurations:
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - 1-bit data length: SDIO_CMD, SDIO_CK and D0.
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - 4-bit data length: SDIO_CMD, SDIO_CK and D[3:0].
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - 8-bit data length: SDIO_CMD, SDIO_CK and D[7:0].      
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          4. Peripheral's alternate function: 
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Connect the pin to the desired peripherals' Alternate 
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   Function (AF) using GPIO_PinAFConfig() function
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Configure the desired pin in alternate function by:
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Select the type, pull-up/pull-down and output speed via 
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   GPIO_PuPd, GPIO_OType and GPIO_Speed members
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 - Call GPIO_Init() function
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          5. Program the Clock Edge, Clock Bypass, Clock Power Save, Bus Wide, 
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             hardware, flow control and the Clock Divider using the SDIO_Init()
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             function.
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          6. Enable the Power ON State using the SDIO_SetPowerState(SDIO_PowerState_ON) 
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             function.
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          7. Enable the clock using the SDIO_ClockCmd() function.
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          8. Enable the NVIC and the corresponding interrupt using the function 
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *             SDIO_ITConfig() if you need to use interrupt mode. 
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          9. When using the DMA mode 
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Configure the DMA using DMA_Init() function
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Active the needed channel Request using SDIO_DMACmd() function
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          10. Enable the DMA using the DMA_Cmd() function, when using DMA mode. 
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          11. To control the CPSM (Command Path State Machine) and send 
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              commands to the card use the SDIO_SendCommand(), 
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_GetCommandResponse() and SDIO_GetResponse() functions.     
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              First, user has to fill the command structure (pointer to
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_CmdInitTypeDef) according to the selected command to be sent.
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 The parameters that should be filled are:
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Argument
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Index
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Response type
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Command Wait
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - CPSM Status (Enable or Disable)
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              To check if the command is well received, read the SDIO_CMDRESP
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              register using the SDIO_GetCommandResponse().
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              The SDIO responses registers (SDIO_RESP1 to SDIO_RESP2), use the
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_GetResponse() function.
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          12. To control the DPSM (Data Path State Machine) and send/receive 
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              data to/from the card use the SDIO_DataConfig(), SDIO_GetDataCounter(), 
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              SDIO_ReadData(), SDIO_WriteData() and SDIO_GetFIFOCount() functions.
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              Read Operations
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              ---------------
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              a) First, user has to fill the data structure (pointer to
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 SDIO_DataInitTypeDef) according to the selected data type to
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 be received.
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 The parameters that should be filled are:
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data TimeOut
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Length
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Block size
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer direction: should be from card (To SDIO)
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer mode
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - DPSM Status (Enable or Disable)
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              b) Configure the SDIO resources to receive the data from the card
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 according to selected transfer mode (Refer to Step 8, 9 and 10).
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              c) Send the selected Read command (refer to step 11).
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                  
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              d) Use the SDIO flags/interrupts to check the transfer status.
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              Write Operations
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              ---------------
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              a) First, user has to fill the data structure (pointer to
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 SDIO_DataInitTypeDef) according to the selected data type to
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 be received.
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 The parameters that should be filled are:
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data TimeOut
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Length
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Block size
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer direction:  should be to card (To CARD)
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - Data Transfer mode
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   - DPSM Status (Enable or Disable)
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              b) Configure the SDIO resources to send the data to the card
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                 according to selected transfer mode (Refer to Step 8, 9 and 10).
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                   
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              c) Send the selected Write command (refer to step 11).
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                  
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *              d) Use the SDIO flags/interrupts to check the transfer status.
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *  @endverbatim
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ******************************************************************************
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @attention
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ******************************************************************************
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Includes ------------------------------------------------------------------*/
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #include "stm32f4xx_sdio.h"
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #include "stm32f4xx_rcc.h"
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO 
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief SDIO driver modules
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */ 
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private typedef -----------------------------------------------------------*/
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private define ------------------------------------------------------------*/
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* ------------ SDIO registers bit address in the alias region ----------- */
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIO_OFFSET                (SDIO_BASE - PERIPH_BASE)
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CLKCR Register ---*/
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of CLKEN bit */
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKCR_OFFSET              (SDIO_OFFSET + 0x04)
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKEN_BitNumber           0x08
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKCR_CLKEN_BB            (PERIPH_BB_BASE + (CLKCR_OFFSET * 32) + (CLKEN_BitNumber * 4))
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CMD Register ---*/
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of SDIOSUSPEND bit */
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_OFFSET                (SDIO_OFFSET + 0x0C)
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIOSUSPEND_BitNumber     0x0B
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_SDIOSUSPEND_BB        (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (SDIOSUSPEND_BitNumber * 4)
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of ENCMDCOMPL bit */
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define ENCMDCOMPL_BitNumber      0x0C
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_ENCMDCOMPL_BB         (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (ENCMDCOMPL_BitNumber * 4))
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of NIEN bit */
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define NIEN_BitNumber            0x0D
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_NIEN_BB               (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (NIEN_BitNumber * 4))
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of ATACMD bit */
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define ATACMD_BitNumber          0x0E
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_ATACMD_BB             (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (ATACMD_BitNumber * 4))
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- DCTRL Register ---*/
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of DMAEN bit */
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_OFFSET              (SDIO_OFFSET + 0x2C)
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DMAEN_BitNumber           0x03
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_DMAEN_BB            (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (DMAEN_BitNumber * 4))
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of RWSTART bit */
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define RWSTART_BitNumber         0x08
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_RWSTART_BB          (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWSTART_BitNumber * 4))
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of RWSTOP bit */
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define RWSTOP_BitNumber          0x09
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_RWSTOP_BB           (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWSTOP_BitNumber * 4))
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of RWMOD bit */
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define RWMOD_BitNumber           0x0A
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_RWMOD_BB            (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWMOD_BitNumber * 4))
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Alias word address of SDIOEN bit */
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIOEN_BitNumber          0x0B
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_SDIOEN_BB           (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (SDIOEN_BitNumber * 4))
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* ---------------------- SDIO registers bit mask ------------------------ */
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CLKCR Register ---*/
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* CLKCR register clear mask */
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CLKCR_CLEAR_MASK         ((uint32_t)0xFFFF8100) 
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- PWRCTRL Register ---*/
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* SDIO PWRCTRL Mask */
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define PWR_PWRCTRL_MASK         ((uint32_t)0xFFFFFFFC)
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- DCTRL Register ---*/
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* SDIO DCTRL Clear Mask */
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define DCTRL_CLEAR_MASK         ((uint32_t)0xFFFFFF08)
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* --- CMD Register ---*/
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* CMD Register clear mask */
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define CMD_CLEAR_MASK           ((uint32_t)0xFFFFF800)
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* SDIO RESP Registers Address */
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** #define SDIO_RESP_ADDR           ((uint32_t)(SDIO_BASE + 0x14))
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private macro -------------------------------------------------------------*/
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private variables ---------------------------------------------------------*/
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private function prototypes -----------------------------------------------*/
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /* Private functions ---------------------------------------------------------*/
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Private_Functions
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group1 Initialization and Configuration functions
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Initialization and Configuration functions 
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****                  Initialization and Configuration functions
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Deinitializes the SDIO peripheral registers to their default reset values.
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DeInit(void)
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
  28              		.loc 1 260 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, ENABLE);
  37              		.loc 1 261 0
  38 0002 4FF40060 		mov	r0, #2048
  39 0006 0121     		movs	r1, #1
  40 0008 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  41              	.LVL0:
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, DISABLE);
  42              		.loc 1 262 0
  43 000c 4FF40060 		mov	r0, #2048
  44 0010 0021     		movs	r1, #0
  45 0012 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  46              	.LVL1:
  47 0016 08BD     		pop	{r3, pc}
  48              		.cfi_endproc
  49              	.LFE110:
  51              		.section	.text.SDIO_Init,"ax",%progbits
  52              		.align	2
  53              		.global	SDIO_Init
  54              		.thumb
  55              		.thumb_func
  57              	SDIO_Init:
  58              	.LFB111:
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO peripheral according to the specified 
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_InitStruct.
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_InitStruct : pointer to a SDIO_InitTypeDef structure 
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         that contains the configuration information for the SDIO peripheral.
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_Init(SDIO_InitTypeDef* SDIO_InitStruct)
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
  59              		.loc 1 273 0
  60              		.cfi_startproc
  61              		@ args = 0, pretend = 0, frame = 0
  62              		@ frame_needed = 0, uses_anonymous_args = 0
  63              		@ link register save eliminated.
  64              	.LVL2:
  65 0000 10B4     		push	{r4}
  66              	.LCFI1:
  67              		.cfi_def_cfa_offset 4
  68              		.cfi_offset 4, -4
  69              	.LVL3:
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_EDGE(SDIO_InitStruct->SDIO_ClockEdge));
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_BYPASS(SDIO_InitStruct->SDIO_ClockBypass));
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_POWER_SAVE(SDIO_InitStruct->SDIO_ClockPowerSave));
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_BUS_WIDE(SDIO_InitStruct->SDIO_BusWide));
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_HARDWARE_FLOW_CONTROL(SDIO_InitStruct->SDIO_HardwareFlowControl)); 
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****    
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO CLKCR Configuration ------------------------*/  
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Get the SDIO CLKCR value */
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->CLKCR;
  70              		.loc 1 285 0
  71 0002 4FF43053 		mov	r3, #11264
  72 0006 C4F20103 		movt	r3, 16385
  73 000a 5C68     		ldr	r4, [r3, #4]
  74              	.LVL4:
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Clear CLKDIV, PWRSAV, BYPASS, WIDBUS, NEGEDGE, HWFC_EN bits */
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= CLKCR_CLEAR_MASK;
  75              		.loc 1 288 0
  76 000c 24F4FD44 		bic	r4, r4, #32384
  77              	.LVL5:
  78 0010 24F07F04 		bic	r4, r4, #127
  79              	.LVL6:
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set CLKDIV bits according to SDIO_ClockDiv value */
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set PWRSAV bit according to SDIO_ClockPowerSave value */
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set BYPASS bit according to SDIO_ClockBypass value */
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set WIDBUS bits according to SDIO_BusWide value */
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set NEGEDGE bits according to SDIO_ClockEdge value */
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set HWFC_EN bits according to SDIO_HardwareFlowControl value */
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
  80              		.loc 1 296 0
  81 0014 027D     		ldrb	r2, [r0, #20]	@ zero_extendqisi2
  82 0016 8168     		ldr	r1, [r0, #8]
  83 0018 0A43     		orrs	r2, r2, r1
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
  84              		.loc 1 297 0
  85 001a 4168     		ldr	r1, [r0, #4]
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
  86              		.loc 1 296 0
  87 001c 0A43     		orrs	r2, r2, r1
  88              		.loc 1 297 0
  89 001e C168     		ldr	r1, [r0, #12]
  90 0020 1143     		orrs	r1, r1, r2
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockEdge | SDIO_InitStruct->SDIO_HardwareFlowControl); 
  91              		.loc 1 298 0
  92 0022 0268     		ldr	r2, [r0]
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
  93              		.loc 1 297 0
  94 0024 0A43     		orrs	r2, r2, r1
  95              		.loc 1 298 0
  96 0026 0069     		ldr	r0, [r0, #16]
  97              	.LVL7:
  98 0028 0243     		orrs	r2, r2, r0
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
  99              		.loc 1 296 0
 100 002a 2243     		orrs	r2, r2, r4
 101              	.LVL8:
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Write to SDIO CLKCR */
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->CLKCR = tmpreg;
 102              		.loc 1 301 0
 103 002c 5A60     		str	r2, [r3, #4]
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 104              		.loc 1 302 0
 105 002e 5DF8044B 		ldr	r4, [sp], #4
 106 0032 7047     		bx	lr
 107              		.cfi_endproc
 108              	.LFE111:
 110              		.section	.text.SDIO_StructInit,"ax",%progbits
 111              		.align	2
 112              		.global	SDIO_StructInit
 113              		.thumb
 114              		.thumb_func
 116              	SDIO_StructInit:
 117              	.LFB112:
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_InitStruct member with its default value.
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_InitStruct: pointer to an SDIO_InitTypeDef structure which 
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         will be initialized.
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_StructInit(SDIO_InitTypeDef* SDIO_InitStruct)
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 118              		.loc 1 311 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 123              	.LVL9:
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* SDIO_InitStruct members default value */
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockDiv = 0x00;
 124              		.loc 1 313 0
 125 0000 0023     		movs	r3, #0
 126 0002 0375     		strb	r3, [r0, #20]
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockEdge = SDIO_ClockEdge_Rising;
 127              		.loc 1 314 0
 128 0004 0360     		str	r3, [r0]
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockBypass = SDIO_ClockBypass_Disable;
 129              		.loc 1 315 0
 130 0006 4360     		str	r3, [r0, #4]
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockPowerSave = SDIO_ClockPowerSave_Disable;
 131              		.loc 1 316 0
 132 0008 8360     		str	r3, [r0, #8]
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_BusWide = SDIO_BusWide_1b;
 133              		.loc 1 317 0
 134 000a C360     		str	r3, [r0, #12]
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_HardwareFlowControl = SDIO_HardwareFlowControl_Disable;
 135              		.loc 1 318 0
 136 000c 0361     		str	r3, [r0, #16]
 137 000e 7047     		bx	lr
 138              		.cfi_endproc
 139              	.LFE112:
 141              		.section	.text.SDIO_ClockCmd,"ax",%progbits
 142              		.align	2
 143              		.global	SDIO_ClockCmd
 144              		.thumb
 145              		.thumb_func
 147              	SDIO_ClockCmd:
 148              	.LFB113:
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO Clock.
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the SDIO Clock. 
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ClockCmd(FunctionalState NewState)
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 149              		.loc 1 328 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 154              	.LVL10:
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CLKCR_CLKEN_BB = (uint32_t)NewState;
 155              		.loc 1 332 0
 156 0000 48F2A003 		movw	r3, #32928
 157 0004 C4F22523 		movt	r3, 16933
 158 0008 1860     		str	r0, [r3]
 159 000a 7047     		bx	lr
 160              		.cfi_endproc
 161              	.LFE113:
 163              		.section	.text.SDIO_SetPowerState,"ax",%progbits
 164              		.align	2
 165              		.global	SDIO_SetPowerState
 166              		.thumb
 167              		.thumb_func
 169              	SDIO_SetPowerState:
 170              	.LFB114:
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Sets the power status of the controller.
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_PowerState: new state of the Power state. 
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_PowerState_OFF: SDIO Power OFF
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_PowerState_ON: SDIO Power ON
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SetPowerState(uint32_t SDIO_PowerState)
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 171              		.loc 1 344 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		@ link register save eliminated.
 176              	.LVL11:
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_POWER_STATE(SDIO_PowerState));
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->POWER = SDIO_PowerState;
 177              		.loc 1 348 0
 178 0000 4FF43053 		mov	r3, #11264
 179 0004 C4F20103 		movt	r3, 16385
 180 0008 1860     		str	r0, [r3]
 181 000a 7047     		bx	lr
 182              		.cfi_endproc
 183              	.LFE114:
 185              		.section	.text.SDIO_GetPowerState,"ax",%progbits
 186              		.align	2
 187              		.global	SDIO_GetPowerState
 188              		.thumb
 189              		.thumb_func
 191              	SDIO_GetPowerState:
 192              	.LFB115:
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Gets the power status of the controller.
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Power status of the controller. The returned value can be one of the 
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         following values:
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            - 0x00: Power OFF
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            - 0x02: Power UP
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            - 0x03: Power ON 
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetPowerState(void)
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 193              		.loc 1 361 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              		@ link register save eliminated.
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return (SDIO->POWER & (~PWR_PWRCTRL_MASK));
 198              		.loc 1 362 0
 199 0000 4FF43053 		mov	r3, #11264
 200 0004 C4F20103 		movt	r3, 16385
 201 0008 1868     		ldr	r0, [r3]
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 202              		.loc 1 363 0
 203 000a 00F00300 		and	r0, r0, #3
 204 000e 7047     		bx	lr
 205              		.cfi_endproc
 206              	.LFE115:
 208              		.section	.text.SDIO_SendCommand,"ax",%progbits
 209              		.align	2
 210              		.global	SDIO_SendCommand
 211              		.thumb
 212              		.thumb_func
 214              	SDIO_SendCommand:
 215              	.LFB116:
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group2 Command path state machine (CPSM) management functions
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Command path state machine (CPSM) management functions 
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               Command path state machine (CPSM) management functions
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the Command path 
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   state machine (CPSM).
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO Command according to the specified 
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_CmdInitStruct and send the command.
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_CmdInitStruct : pointer to a SDIO_CmdInitTypeDef 
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         structure that contains the configuration information for the SDIO 
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         command.
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SendCommand(SDIO_CmdInitTypeDef *SDIO_CmdInitStruct)
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 216              		.loc 1 393 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220              		@ link register save eliminated.
 221              	.LVL12:
 222 0000 10B4     		push	{r4}
 223              	.LCFI2:
 224              		.cfi_def_cfa_offset 4
 225              		.cfi_offset 4, -4
 226              	.LVL13:
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CMD_INDEX(SDIO_CmdInitStruct->SDIO_CmdIndex));
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_RESPONSE(SDIO_CmdInitStruct->SDIO_Response));
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_WAIT(SDIO_CmdInitStruct->SDIO_Wait));
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CPSM(SDIO_CmdInitStruct->SDIO_CPSM));
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO ARG Configuration ------------------------*/
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set the SDIO Argument value */
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->ARG = SDIO_CmdInitStruct->SDIO_Argument;
 227              		.loc 1 404 0
 228 0002 0268     		ldr	r2, [r0]
 229 0004 4FF43053 		mov	r3, #11264
 230 0008 C4F20103 		movt	r3, 16385
 231 000c 9A60     		str	r2, [r3, #8]
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO CMD Configuration ------------------------*/  
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Get the SDIO CMD value */
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->CMD;
 232              		.loc 1 408 0
 233 000e DC68     		ldr	r4, [r3, #12]
 234              	.LVL14:
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Clear CMDINDEX, WAITRESP, WAITINT, WAITPEND, CPSMEN bits */
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= CMD_CLEAR_MASK;
 235              		.loc 1 410 0
 236 0010 24F4FF64 		bic	r4, r4, #2040
 237              	.LVL15:
 238 0014 24F00704 		bic	r4, r4, #7
 239              	.LVL16:
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set CMDINDEX bits according to SDIO_CmdIndex value */
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set WAITRESP bits according to SDIO_Response value */
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set WAITINT and WAITPEND bits according to SDIO_Wait value */
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set CPSMEN bits according to SDIO_CPSM value */
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
 240              		.loc 1 415 0
 241 0018 4268     		ldr	r2, [r0, #4]
 242 001a 8168     		ldr	r1, [r0, #8]
 243 001c 1143     		orrs	r1, r1, r2
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****            | SDIO_CmdInitStruct->SDIO_Wait | SDIO_CmdInitStruct->SDIO_CPSM;
 244              		.loc 1 416 0
 245 001e C268     		ldr	r2, [r0, #12]
 246 0020 0A43     		orrs	r2, r2, r1
 247 0022 0069     		ldr	r0, [r0, #16]
 248              	.LVL17:
 249 0024 0243     		orrs	r2, r2, r0
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****            | SDIO_CmdInitStruct->SDIO_Wait | SDIO_CmdInitStruct->SDIO_CPSM;
 250              		.loc 1 415 0
 251 0026 2243     		orrs	r2, r2, r4
 252              	.LVL18:
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Write to SDIO CMD */
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->CMD = tmpreg;
 253              		.loc 1 419 0
 254 0028 DA60     		str	r2, [r3, #12]
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 255              		.loc 1 420 0
 256 002a 5DF8044B 		ldr	r4, [sp], #4
 257 002e 7047     		bx	lr
 258              		.cfi_endproc
 259              	.LFE116:
 261              		.section	.text.SDIO_CmdStructInit,"ax",%progbits
 262              		.align	2
 263              		.global	SDIO_CmdStructInit
 264              		.thumb
 265              		.thumb_func
 267              	SDIO_CmdStructInit:
 268              	.LFB117:
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_CmdInitStruct member with its default value.
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_CmdInitStruct: pointer to an SDIO_CmdInitTypeDef 
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         structure which will be initialized.
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_CmdStructInit(SDIO_CmdInitTypeDef* SDIO_CmdInitStruct)
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 269              		.loc 1 429 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273              		@ link register save eliminated.
 274              	.LVL19:
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* SDIO_CmdInitStruct members default value */
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Argument = 0x00;
 275              		.loc 1 431 0
 276 0000 0023     		movs	r3, #0
 277 0002 0360     		str	r3, [r0]
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_CmdIndex = 0x00;
 278              		.loc 1 432 0
 279 0004 4360     		str	r3, [r0, #4]
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Response = SDIO_Response_No;
 280              		.loc 1 433 0
 281 0006 8360     		str	r3, [r0, #8]
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Wait = SDIO_Wait_No;
 282              		.loc 1 434 0
 283 0008 C360     		str	r3, [r0, #12]
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_CPSM = SDIO_CPSM_Disable;
 284              		.loc 1 435 0
 285 000a 0361     		str	r3, [r0, #16]
 286 000c 7047     		bx	lr
 287              		.cfi_endproc
 288              	.LFE117:
 290 000e 00BF     		.section	.text.SDIO_GetCommandResponse,"ax",%progbits
 291              		.align	2
 292              		.global	SDIO_GetCommandResponse
 293              		.thumb
 294              		.thumb_func
 296              	SDIO_GetCommandResponse:
 297              	.LFB118:
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns command index of last command for which response received.
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Returns the command index of the last command response received.
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint8_t SDIO_GetCommandResponse(void)
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 298              		.loc 1 444 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return (uint8_t)(SDIO->RESPCMD);
 303              		.loc 1 445 0
 304 0000 4FF43053 		mov	r3, #11264
 305 0004 C4F20103 		movt	r3, 16385
 306 0008 1869     		ldr	r0, [r3, #16]
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 307              		.loc 1 446 0
 308 000a C0B2     		uxtb	r0, r0
 309 000c 7047     		bx	lr
 310              		.cfi_endproc
 311              	.LFE118:
 313 000e 00BF     		.section	.text.SDIO_GetResponse,"ax",%progbits
 314              		.align	2
 315              		.global	SDIO_GetResponse
 316              		.thumb
 317              		.thumb_func
 319              	SDIO_GetResponse:
 320              	.LFB119:
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns response received from the card for the last command.
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_RESP: Specifies the SDIO response register. 
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP1: Response Register 1
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP2: Response Register 2
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP3: Response Register 3
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_RESP4: Response Register 4
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval The Corresponding response register value.
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetResponse(uint32_t SDIO_RESP)
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 321              		.loc 1 459 0
 322              		.cfi_startproc
 323              		@ args = 0, pretend = 0, frame = 8
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325              		@ link register save eliminated.
 326              	.LVL20:
 327 0000 82B0     		sub	sp, sp, #8
 328              	.LCFI3:
 329              		.cfi_def_cfa_offset 8
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   __IO uint32_t tmp = 0;
 330              		.loc 1 460 0
 331 0002 0023     		movs	r3, #0
 332 0004 0193     		str	r3, [sp, #4]
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_RESP(SDIO_RESP));
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmp = SDIO_RESP_ADDR + SDIO_RESP;
 333              		.loc 1 465 0
 334 0006 42F61443 		movw	r3, #11284
 335 000a C4F20103 		movt	r3, 16385
 336 000e 0344     		add	r3, r3, r0
 337 0010 0193     		str	r3, [sp, #4]
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return (*(__IO uint32_t *) tmp); 
 338              		.loc 1 467 0
 339 0012 019B     		ldr	r3, [sp, #4]
 340 0014 1868     		ldr	r0, [r3]
 341              	.LVL21:
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 342              		.loc 1 468 0
 343 0016 02B0     		add	sp, sp, #8
 344              		@ sp needed
 345 0018 7047     		bx	lr
 346              		.cfi_endproc
 347              	.LFE119:
 349 001a 00BF     		.section	.text.SDIO_DataConfig,"ax",%progbits
 350              		.align	2
 351              		.global	SDIO_DataConfig
 352              		.thumb
 353              		.thumb_func
 355              	SDIO_DataConfig:
 356              	.LFB120:
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group3 Data path state machine (DPSM) management functions
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Data path state machine (DPSM) management functions
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               Data path state machine (DPSM) management functions
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the Data path 
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   state machine (DPSM).
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO data path according to the specified 
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         parameters in the SDIO_DataInitStruct.
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_DataInitStruct : pointer to a SDIO_DataInitTypeDef structure 
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         that contains the configuration information for the SDIO command.
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DataConfig(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 357              		.loc 1 497 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 0, uses_anonymous_args = 0
 361              		@ link register save eliminated.
 362              	.LVL22:
 363 0000 10B4     		push	{r4}
 364              	.LCFI4:
 365              		.cfi_def_cfa_offset 4
 366              		.cfi_offset 4, -4
 367              	.LVL23:
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_DATA_LENGTH(SDIO_DataInitStruct->SDIO_DataLength));
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_BLOCK_SIZE(SDIO_DataInitStruct->SDIO_DataBlockSize));
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_TRANSFER_DIR(SDIO_DataInitStruct->SDIO_TransferDir));
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_TRANSFER_MODE(SDIO_DataInitStruct->SDIO_TransferMode));
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_DPSM(SDIO_DataInitStruct->SDIO_DPSM));
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DTIMER Configuration ---------------------*/
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set the SDIO Data TimeOut value */
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->DTIMER = SDIO_DataInitStruct->SDIO_DataTimeOut;
 368              		.loc 1 509 0
 369 0002 0268     		ldr	r2, [r0]
 370 0004 4FF43053 		mov	r3, #11264
 371 0008 C4F20103 		movt	r3, 16385
 372 000c 5A62     		str	r2, [r3, #36]
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DLEN Configuration -----------------------*/
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set the SDIO DataLength value */
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->DLEN = SDIO_DataInitStruct->SDIO_DataLength;
 373              		.loc 1 513 0
 374 000e 4268     		ldr	r2, [r0, #4]
 375 0010 9A62     		str	r2, [r3, #40]
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /*---------------------------- SDIO DCTRL Configuration ----------------------*/  
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Get the SDIO DCTRL value */
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg = SDIO->DCTRL;
 376              		.loc 1 517 0
 377 0012 DC6A     		ldr	r4, [r3, #44]
 378              	.LVL24:
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Clear DEN, DTMODE, DTDIR and DBCKSIZE bits */
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg &= DCTRL_CLEAR_MASK;
 379              		.loc 1 519 0
 380 0014 24F0F704 		bic	r4, r4, #247
 381              	.LVL25:
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DEN bit according to SDIO_DPSM value */
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DTMODE bit according to SDIO_TransferMode value */
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DTDIR bit according to SDIO_TransferDir value */
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Set DBCKSIZE bits according to SDIO_DataBlockSize value */
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferD
 382              		.loc 1 524 0
 383 0018 8268     		ldr	r2, [r0, #8]
 384 001a C168     		ldr	r1, [r0, #12]
 385 001c 1143     		orrs	r1, r1, r2
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****            | SDIO_DataInitStruct->SDIO_TransferMode | SDIO_DataInitStruct->SDIO_DPSM;
 386              		.loc 1 525 0
 387 001e 0269     		ldr	r2, [r0, #16]
 388 0020 0A43     		orrs	r2, r2, r1
 389 0022 4069     		ldr	r0, [r0, #20]
 390              	.LVL26:
 391 0024 0243     		orrs	r2, r2, r0
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****            | SDIO_DataInitStruct->SDIO_TransferMode | SDIO_DataInitStruct->SDIO_DPSM;
 392              		.loc 1 524 0
 393 0026 2243     		orrs	r2, r2, r4
 394              	.LVL27:
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Write to SDIO DCTRL */
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->DCTRL = tmpreg;
 395              		.loc 1 528 0
 396 0028 DA62     		str	r2, [r3, #44]
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 397              		.loc 1 529 0
 398 002a 5DF8044B 		ldr	r4, [sp], #4
 399 002e 7047     		bx	lr
 400              		.cfi_endproc
 401              	.LFE120:
 403              		.section	.text.SDIO_DataStructInit,"ax",%progbits
 404              		.align	2
 405              		.global	SDIO_DataStructInit
 406              		.thumb
 407              		.thumb_func
 409              	SDIO_DataStructInit:
 410              	.LFB121:
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_DataInitStruct member with its default value.
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_DataInitStruct: pointer to an SDIO_DataInitTypeDef structure 
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         which will be initialized.
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DataStructInit(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 411              		.loc 1 538 0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415              		@ link register save eliminated.
 416              	.LVL28:
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* SDIO_DataInitStruct members default value */
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataTimeOut = 0xFFFFFFFF;
 417              		.loc 1 540 0
 418 0000 4FF0FF33 		mov	r3, #-1
 419 0004 0360     		str	r3, [r0]
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataLength = 0x00;
 420              		.loc 1 541 0
 421 0006 0023     		movs	r3, #0
 422 0008 4360     		str	r3, [r0, #4]
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataBlockSize = SDIO_DataBlockSize_1b;
 423              		.loc 1 542 0
 424 000a 8360     		str	r3, [r0, #8]
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_TransferDir = SDIO_TransferDir_ToCard;
 425              		.loc 1 543 0
 426 000c C360     		str	r3, [r0, #12]
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_TransferMode = SDIO_TransferMode_Block;  
 427              		.loc 1 544 0
 428 000e 0361     		str	r3, [r0, #16]
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DPSM = SDIO_DPSM_Disable;
 429              		.loc 1 545 0
 430 0010 4361     		str	r3, [r0, #20]
 431 0012 7047     		bx	lr
 432              		.cfi_endproc
 433              	.LFE121:
 435              		.section	.text.SDIO_GetDataCounter,"ax",%progbits
 436              		.align	2
 437              		.global	SDIO_GetDataCounter
 438              		.thumb
 439              		.thumb_func
 441              	SDIO_GetDataCounter:
 442              	.LFB122:
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns number of remaining data bytes to be transferred.
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Number of remaining data bytes to be transferred
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetDataCounter(void)
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 443              		.loc 1 554 0
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 0
 446              		@ frame_needed = 0, uses_anonymous_args = 0
 447              		@ link register save eliminated.
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return SDIO->DCOUNT;
 448              		.loc 1 555 0
 449 0000 4FF43053 		mov	r3, #11264
 450 0004 C4F20103 		movt	r3, 16385
 451 0008 186B     		ldr	r0, [r3, #48]
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 452              		.loc 1 556 0
 453 000a 7047     		bx	lr
 454              		.cfi_endproc
 455              	.LFE122:
 457              		.section	.text.SDIO_ReadData,"ax",%progbits
 458              		.align	2
 459              		.global	SDIO_ReadData
 460              		.thumb
 461              		.thumb_func
 463              	SDIO_ReadData:
 464              	.LFB123:
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Read one data word from Rx FIFO.
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Data received
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_ReadData(void)
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 465              		.loc 1 564 0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 469              		@ link register save eliminated.
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return SDIO->FIFO;
 470              		.loc 1 565 0
 471 0000 4FF43053 		mov	r3, #11264
 472 0004 C4F20103 		movt	r3, 16385
 473 0008 D3F88000 		ldr	r0, [r3, #128]
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 474              		.loc 1 566 0
 475 000c 7047     		bx	lr
 476              		.cfi_endproc
 477              	.LFE123:
 479 000e 00BF     		.section	.text.SDIO_WriteData,"ax",%progbits
 480              		.align	2
 481              		.global	SDIO_WriteData
 482              		.thumb
 483              		.thumb_func
 485              	SDIO_WriteData:
 486              	.LFB124:
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Write one data word to Tx FIFO.
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  Data: 32-bit data word to write.
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_WriteData(uint32_t Data)
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 487              		.loc 1 574 0
 488              		.cfi_startproc
 489              		@ args = 0, pretend = 0, frame = 0
 490              		@ frame_needed = 0, uses_anonymous_args = 0
 491              		@ link register save eliminated.
 492              	.LVL29:
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->FIFO = Data;
 493              		.loc 1 575 0
 494 0000 4FF43053 		mov	r3, #11264
 495 0004 C4F20103 		movt	r3, 16385
 496 0008 C3F88000 		str	r0, [r3, #128]
 497 000c 7047     		bx	lr
 498              		.cfi_endproc
 499              	.LFE124:
 501 000e 00BF     		.section	.text.SDIO_GetFIFOCount,"ax",%progbits
 502              		.align	2
 503              		.global	SDIO_GetFIFOCount
 504              		.thumb
 505              		.thumb_func
 507              	SDIO_GetFIFOCount:
 508              	.LFB125:
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Returns the number of words left to be written to or read from FIFO.	
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  None
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval Remaining number of words.
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** uint32_t SDIO_GetFIFOCount(void)
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 509              		.loc 1 584 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 513              		@ link register save eliminated.
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return SDIO->FIFOCNT;
 514              		.loc 1 585 0
 515 0000 4FF43053 		mov	r3, #11264
 516 0004 C4F20103 		movt	r3, 16385
 517 0008 986C     		ldr	r0, [r3, #72]
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 518              		.loc 1 586 0
 519 000a 7047     		bx	lr
 520              		.cfi_endproc
 521              	.LFE125:
 523              		.section	.text.SDIO_StartSDIOReadWait,"ax",%progbits
 524              		.align	2
 525              		.global	SDIO_StartSDIOReadWait
 526              		.thumb
 527              		.thumb_func
 529              	SDIO_StartSDIOReadWait:
 530              	.LFB126:
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group4 SDIO IO Cards mode management functions
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   SDIO IO Cards mode management functions
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               SDIO IO Cards mode management functions
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the SDIO IO Cards.
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Starts the SD I/O Read Wait operation.	
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the Start SDIO Read Wait operation. 
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_StartSDIOReadWait(FunctionalState NewState)
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 531              		.loc 1 613 0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 0
 534              		@ frame_needed = 0, uses_anonymous_args = 0
 535              		@ link register save eliminated.
 536              	.LVL30:
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWSTART_BB = (uint32_t) NewState;
 537              		.loc 1 617 0
 538 0000 48F2A053 		movw	r3, #34208
 539 0004 C4F22523 		movt	r3, 16933
 540 0008 1860     		str	r0, [r3]
 541 000a 7047     		bx	lr
 542              		.cfi_endproc
 543              	.LFE126:
 545              		.section	.text.SDIO_StopSDIOReadWait,"ax",%progbits
 546              		.align	2
 547              		.global	SDIO_StopSDIOReadWait
 548              		.thumb
 549              		.thumb_func
 551              	SDIO_StopSDIOReadWait:
 552              	.LFB127:
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Stops the SD I/O Read Wait operation.	
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the Stop SDIO Read Wait operation. 
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_StopSDIOReadWait(FunctionalState NewState)
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 553              		.loc 1 627 0
 554              		.cfi_startproc
 555              		@ args = 0, pretend = 0, frame = 0
 556              		@ frame_needed = 0, uses_anonymous_args = 0
 557              		@ link register save eliminated.
 558              	.LVL31:
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWSTOP_BB = (uint32_t) NewState;
 559              		.loc 1 631 0
 560 0000 48F2A453 		movw	r3, #34212
 561 0004 C4F22523 		movt	r3, 16933
 562 0008 1860     		str	r0, [r3]
 563 000a 7047     		bx	lr
 564              		.cfi_endproc
 565              	.LFE127:
 567              		.section	.text.SDIO_SetSDIOReadWaitMode,"ax",%progbits
 568              		.align	2
 569              		.global	SDIO_SetSDIOReadWaitMode
 570              		.thumb
 571              		.thumb_func
 573              	SDIO_SetSDIOReadWaitMode:
 574              	.LFB128:
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Sets one of the two options of inserting read wait interval.
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_ReadWaitMode: SD I/O Read Wait operation mode.
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be:
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_ReadWaitMode_CLK: Read Wait control by stopping SDIOCLK
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_ReadWaitMode_DATA2: Read Wait control using SDIO_DATA2
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SetSDIOReadWaitMode(uint32_t SDIO_ReadWaitMode)
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 575              		.loc 1 643 0
 576              		.cfi_startproc
 577              		@ args = 0, pretend = 0, frame = 0
 578              		@ frame_needed = 0, uses_anonymous_args = 0
 579              		@ link register save eliminated.
 580              	.LVL32:
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_READWAIT_MODE(SDIO_ReadWaitMode));
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWMOD_BB = SDIO_ReadWaitMode;
 581              		.loc 1 647 0
 582 0000 48F2A853 		movw	r3, #34216
 583 0004 C4F22523 		movt	r3, 16933
 584 0008 1860     		str	r0, [r3]
 585 000a 7047     		bx	lr
 586              		.cfi_endproc
 587              	.LFE128:
 589              		.section	.text.SDIO_SetSDIOOperation,"ax",%progbits
 590              		.align	2
 591              		.global	SDIO_SetSDIOOperation
 592              		.thumb
 593              		.thumb_func
 595              	SDIO_SetSDIOOperation:
 596              	.LFB129:
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SD I/O Mode Operation.
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of SDIO specific operation. 
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SetSDIOOperation(FunctionalState NewState)
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 597              		.loc 1 657 0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 0, uses_anonymous_args = 0
 601              		@ link register save eliminated.
 602              	.LVL33:
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_SDIOEN_BB = (uint32_t)NewState;
 603              		.loc 1 661 0
 604 0000 48F2AC53 		movw	r3, #34220
 605 0004 C4F22523 		movt	r3, 16933
 606 0008 1860     		str	r0, [r3]
 607 000a 7047     		bx	lr
 608              		.cfi_endproc
 609              	.LFE129:
 611              		.section	.text.SDIO_SendSDIOSuspendCmd,"ax",%progbits
 612              		.align	2
 613              		.global	SDIO_SendSDIOSuspendCmd
 614              		.thumb
 615              		.thumb_func
 617              	SDIO_SendSDIOSuspendCmd:
 618              	.LFB130:
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SD I/O Mode suspend command sending.
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the SD I/O Mode suspend command.
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SendSDIOSuspendCmd(FunctionalState NewState)
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 619              		.loc 1 671 0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 0
 622              		@ frame_needed = 0, uses_anonymous_args = 0
 623              		@ link register save eliminated.
 624              	.LVL34:
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_SDIOSUSPEND_BB = (uint32_t)NewState;
 625              		.loc 1 675 0
 626 0000 48F2AC13 		movw	r3, #33196
 627 0004 C4F22523 		movt	r3, 16933
 628 0008 1860     		str	r0, [r3]
 629 000a 7047     		bx	lr
 630              		.cfi_endproc
 631              	.LFE130:
 633              		.section	.text.SDIO_CommandCompletionCmd,"ax",%progbits
 634              		.align	2
 635              		.global	SDIO_CommandCompletionCmd
 636              		.thumb
 637              		.thumb_func
 639              	SDIO_CommandCompletionCmd:
 640              	.LFB131:
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group5 CE-ATA mode management functions
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   CE-ATA mode management functions
 684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               CE-ATA mode management functions
 688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the CE-ATA card.
 691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the command completion signal.
 698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of command completion signal. 
 699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_CommandCompletionCmd(FunctionalState NewState)
 703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 641              		.loc 1 703 0
 642              		.cfi_startproc
 643              		@ args = 0, pretend = 0, frame = 0
 644              		@ frame_needed = 0, uses_anonymous_args = 0
 645              		@ link register save eliminated.
 646              	.LVL35:
 704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_ENCMDCOMPL_BB = (uint32_t)NewState;
 647              		.loc 1 707 0
 648 0000 48F2B013 		movw	r3, #33200
 649 0004 C4F22523 		movt	r3, 16933
 650 0008 1860     		str	r0, [r3]
 651 000a 7047     		bx	lr
 652              		.cfi_endproc
 653              	.LFE131:
 655              		.section	.text.SDIO_CEATAITCmd,"ax",%progbits
 656              		.align	2
 657              		.global	SDIO_CEATAITCmd
 658              		.thumb
 659              		.thumb_func
 661              	SDIO_CEATAITCmd:
 662              	.LFB132:
 708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the CE-ATA interrupt.
 712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of CE-ATA interrupt. 
 713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_CEATAITCmd(FunctionalState NewState)
 717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 663              		.loc 1 717 0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 0
 666              		@ frame_needed = 0, uses_anonymous_args = 0
 667              		@ link register save eliminated.
 668              	.LVL36:
 718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_NIEN_BB = (uint32_t)((~((uint32_t)NewState)) & ((uint32_t)0x1));
 669              		.loc 1 721 0
 670 0000 10F0010F 		tst	r0, #1
 671 0004 14BF     		ite	ne
 672 0006 0022     		movne	r2, #0
 673 0008 0122     		moveq	r2, #1
 674 000a 48F2B413 		movw	r3, #33204
 675 000e C4F22523 		movt	r3, 16933
 676 0012 1A60     		str	r2, [r3]
 677 0014 7047     		bx	lr
 678              		.cfi_endproc
 679              	.LFE132:
 681 0016 00BF     		.section	.text.SDIO_SendCEATACmd,"ax",%progbits
 682              		.align	2
 683              		.global	SDIO_SendCEATACmd
 684              		.thumb
 685              		.thumb_func
 687              	SDIO_SendCEATACmd:
 688              	.LFB133:
 722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Sends CE-ATA command (CMD61).
 726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of CE-ATA command. 
 727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_SendCEATACmd(FunctionalState NewState)
 731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 689              		.loc 1 731 0
 690              		.cfi_startproc
 691              		@ args = 0, pretend = 0, frame = 0
 692              		@ frame_needed = 0, uses_anonymous_args = 0
 693              		@ link register save eliminated.
 694              	.LVL37:
 732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_ATACMD_BB = (uint32_t)NewState;
 695              		.loc 1 735 0
 696 0000 48F2B813 		movw	r3, #33208
 697 0004 C4F22523 		movt	r3, 16933
 698 0008 1860     		str	r0, [r3]
 699 000a 7047     		bx	lr
 700              		.cfi_endproc
 701              	.LFE133:
 703              		.section	.text.SDIO_DMACmd,"ax",%progbits
 704              		.align	2
 705              		.global	SDIO_DMACmd
 706              		.thumb
 707              		.thumb_func
 709              	SDIO_DMACmd:
 710              	.LFB134:
 736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group6 DMA transfers management functions
 743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   DMA transfers management functions
 744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****               DMA transfers management functions
 748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   This section provide functions allowing to program SDIO DMA transfer.
 751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO DMA request.
 758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the selected SDIO DMA request.
 759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be: ENABLE or DISABLE.
 760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_DMACmd(FunctionalState NewState)
 763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 711              		.loc 1 763 0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 0, uses_anonymous_args = 0
 715              		@ link register save eliminated.
 716              	.LVL38:
 764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_DMAEN_BB = (uint32_t)NewState;
 717              		.loc 1 767 0
 718 0000 48F28C53 		movw	r3, #34188
 719 0004 C4F22523 		movt	r3, 16933
 720 0008 1860     		str	r0, [r3]
 721 000a 7047     		bx	lr
 722              		.cfi_endproc
 723              	.LFE134:
 725              		.section	.text.SDIO_ITConfig,"ax",%progbits
 726              		.align	2
 727              		.global	SDIO_ITConfig
 728              		.thumb
 729              		.thumb_func
 731              	SDIO_ITConfig:
 732              	.LFB135:
 768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @}
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /** @defgroup SDIO_Group7 Interrupts and flags management functions
 775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *  @brief   Interrupts and flags management functions  
 776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  *
 777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @verbatim   
 778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================
 779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****                        Interrupts and flags management functions
 780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****  ===============================================================================  
 781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** @endverbatim
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @{
 785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO interrupts.
 789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the SDIO interrupt sources to be enabled or disabled.
 790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DBCKEND:  Data block sent/received (CRC check passed) interrupt
 803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDACT:   Command transfer in progress interrupt
 804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXACT:    Data transmit in progress interrupt
 805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXACT:    Data receive in progress interrupt
 806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt
 807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOF:  Transmit FIFO full interrupt
 809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOF:  Receive FIFO full interrupt
 810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOE:  Transmit FIFO empty interrupt
 811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOE:  Receive FIFO empty interrupt
 812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXDAVL:   Data available in transmit FIFO interrupt
 813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXDAVL:   Data available in receive FIFO interrupt
 814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt
 816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  NewState: new state of the specified SDIO interrupts.
 817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be: ENABLE or DISABLE.
 818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None 
 819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ITConfig(uint32_t SDIO_IT, FunctionalState NewState)
 821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** {
 733              		.loc 1 821 0
 734              		.cfi_startproc
 735              		@ args = 0, pretend = 0, frame = 0
 736              		@ frame_needed = 0, uses_anonymous_args = 0
 737              		@ link register save eliminated.
 738              	.LVL39:
 822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_IT(SDIO_IT));
 824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   if (NewState != DISABLE)
 739              		.loc 1 826 0
 740 0000 39B1     		cbz	r1, .L27
 827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     /* Enable the SDIO interrupts */
 829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     SDIO->MASK |= SDIO_IT;
 741              		.loc 1 829 0
 742 0002 4FF43053 		mov	r3, #11264
 743 0006 C4F20103 		movt	r3, 16385
 744 000a DA6B     		ldr	r2, [r3, #60]
 745 000c 1043     		orrs	r0, r0, r2
 746              	.LVL40:
 747 000e D863     		str	r0, [r3, #60]
 748 0010 7047     		bx	lr
 749              	.LVL41:
 750              	.L27:
 830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   else
 832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     /* Disable the SDIO interrupts */
 834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     SDIO->MASK &= ~SDIO_IT;
 751              		.loc 1 834 0
 752 0012 4FF43053 		mov	r3, #11264
 753 0016 C4F20103 		movt	r3, 16385
 754 001a DA6B     		ldr	r2, [r3, #60]
 755 001c 22EA0000 		bic	r0, r2, r0
 756              	.LVL42:
 757 0020 D863     		str	r0, [r3, #60]
 758 0022 7047     		bx	lr
 759              		.cfi_endproc
 760              	.LFE135:
 762              		.section	.text.SDIO_GetFlagStatus,"ax",%progbits
 763              		.align	2
 764              		.global	SDIO_GetFlagStatus
 765              		.thumb
 766              		.thumb_func
 768              	SDIO_GetFlagStatus:
 769              	.LFB136:
 835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   } 
 836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Checks whether the specified SDIO flag is set or not.
 840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_FLAG: specifies the flag to check. 
 841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed)
 843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed)
 844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CTIMEOUT: Command response timeout
 845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DTIMEOUT: Data timeout
 846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error
 847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXOVERR:  Received FIFO overrun error
 848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDREND:  Command response received (CRC check passed)
 849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDSENT:  Command sent (no response required)
 850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DATAEND:  Data end (data counter, SDIDCOUNT, is zero)
 851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode
 852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DBCKEND:  Data block sent/received (CRC check passed)
 853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDACT:   Command transfer in progress
 854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXACT:    Data transmit in progress
 855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXACT:    Data receive in progress
 856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOHE: Transmit FIFO Half Empty
 857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOHF: Receive FIFO Half Full
 858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOF:  Transmit FIFO full
 859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOF:  Receive FIFO full
 860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOE:  Transmit FIFO empty
 861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOE:  Receive FIFO empty
 862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXDAVL:   Data available in transmit FIFO
 863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXDAVL:   Data available in receive FIFO
 864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_SDIOIT:   SD I/O interrupt received
 865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61
 866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval The new state of SDIO_FLAG (SET or RESET).
 867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** FlagStatus SDIO_GetFlagStatus(uint32_t SDIO_FLAG)
 869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 770              		.loc 1 869 0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              		@ link register save eliminated.
 775              	.LVL43:
 870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   FlagStatus bitstatus = RESET;
 871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_FLAG(SDIO_FLAG));
 874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   if ((SDIO->STA & SDIO_FLAG) != (uint32_t)RESET)
 776              		.loc 1 875 0
 777 0000 4FF43053 		mov	r3, #11264
 778 0004 C4F20103 		movt	r3, 16385
 779 0008 5B6B     		ldr	r3, [r3, #52]
 780 000a 1840     		ands	r0, r0, r3
 781              	.LVL44:
 876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = SET;
 878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   else
 880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = RESET;
 882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return bitstatus;
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 782              		.loc 1 884 0
 783 000c 0030     		adds	r0, r0, #0
 784 000e 18BF     		it	ne
 785 0010 0120     		movne	r0, #1
 786              	.LVL45:
 787 0012 7047     		bx	lr
 788              		.cfi_endproc
 789              	.LFE136:
 791              		.section	.text.SDIO_ClearFlag,"ax",%progbits
 792              		.align	2
 793              		.global	SDIO_ClearFlag
 794              		.thumb
 795              		.thumb_func
 797              	SDIO_ClearFlag:
 798              	.LFB137:
 885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Clears the SDIO's pending flags.
 888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_FLAG: specifies the flag to clear.  
 889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed)
 891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed)
 892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CTIMEOUT: Command response timeout
 893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DTIMEOUT: Data timeout
 894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error
 895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXOVERR:  Received FIFO overrun error
 896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDREND:  Command response received (CRC check passed)
 897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDSENT:  Command sent (no response required)
 898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DATAEND:  Data end (data counter, SDIDCOUNT, is zero)
 899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode
 900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DBCKEND:  Data block sent/received (CRC check passed)
 901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_SDIOIT:   SD I/O interrupt received
 902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ClearFlag(uint32_t SDIO_FLAG)
 906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 799              		.loc 1 906 0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 803              		@ link register save eliminated.
 804              	.LVL46:
 907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLEAR_FLAG(SDIO_FLAG));
 909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****    
 910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->ICR = SDIO_FLAG;
 805              		.loc 1 910 0
 806 0000 4FF43053 		mov	r3, #11264
 807 0004 C4F20103 		movt	r3, 16385
 808 0008 9863     		str	r0, [r3, #56]
 809 000a 7047     		bx	lr
 810              		.cfi_endproc
 811              	.LFE137:
 813              		.section	.text.SDIO_GetITStatus,"ax",%progbits
 814              		.align	2
 815              		.global	SDIO_GetITStatus
 816              		.thumb
 817              		.thumb_func
 819              	SDIO_GetITStatus:
 820              	.LFB138:
 911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Checks whether the specified SDIO interrupt has occurred or not.
 915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the SDIO interrupt source to check. 
 916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DBCKEND:  Data block sent/received (CRC check passed) interrupt
 929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDACT:   Command transfer in progress interrupt
 930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXACT:    Data transmit in progress interrupt
 931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXACT:    Data receive in progress interrupt
 932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt
 933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt
 934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOF:  Transmit FIFO full interrupt
 935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOF:  Receive FIFO full interrupt
 936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOE:  Transmit FIFO empty interrupt
 937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOE:  Receive FIFO empty interrupt
 938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXDAVL:   Data available in transmit FIFO interrupt
 939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXDAVL:   Data available in receive FIFO interrupt
 940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt
 942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval The new state of SDIO_IT (SET or RESET).
 943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** ITStatus SDIO_GetITStatus(uint32_t SDIO_IT)
 945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 821              		.loc 1 945 0
 822              		.cfi_startproc
 823              		@ args = 0, pretend = 0, frame = 0
 824              		@ frame_needed = 0, uses_anonymous_args = 0
 825              		@ link register save eliminated.
 826              	.LVL47:
 946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   ITStatus bitstatus = RESET;
 947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   
 948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_GET_IT(SDIO_IT));
 950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   if ((SDIO->STA & SDIO_IT) != (uint32_t)RESET)  
 827              		.loc 1 950 0
 828 0000 4FF43053 		mov	r3, #11264
 829 0004 C4F20103 		movt	r3, 16385
 830 0008 5B6B     		ldr	r3, [r3, #52]
 831 000a 1840     		ands	r0, r0, r3
 832              	.LVL48:
 951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = SET;
 953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   else
 955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   {
 956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****     bitstatus = RESET;
 957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   }
 958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   return bitstatus;
 959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** }
 833              		.loc 1 959 0
 834 000c 0030     		adds	r0, r0, #0
 835 000e 18BF     		it	ne
 836 0010 0120     		movne	r0, #1
 837              	.LVL49:
 838 0012 7047     		bx	lr
 839              		.cfi_endproc
 840              	.LFE138:
 842              		.section	.text.SDIO_ClearITPendingBit,"ax",%progbits
 843              		.align	2
 844              		.global	SDIO_ClearITPendingBit
 845              		.thumb
 846              		.thumb_func
 848              	SDIO_ClearITPendingBit:
 849              	.LFB139:
 960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** 
 961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** /**
 962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @brief  Clears the SDIO's interrupt pending bits.
 963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the interrupt pending bit to clear. 
 964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIO_DCOUNT, is zero) interrupt
 974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61
 978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   * @retval None
 979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   */
 980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** void SDIO_ClearITPendingBit(uint32_t SDIO_IT)
 981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c **** { 
 850              		.loc 1 981 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 0
 853              		@ frame_needed = 0, uses_anonymous_args = 0
 854              		@ link register save eliminated.
 855              	.LVL50:
 982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   /* Check the parameters */
 983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLEAR_IT(SDIO_IT));
 984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****    
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_sdio.c ****   SDIO->ICR = SDIO_IT;
 856              		.loc 1 985 0
 857 0000 4FF43053 		mov	r3, #11264
 858 0004 C4F20103 		movt	r3, 16385
 859 0008 9863     		str	r0, [r3, #56]
 860 000a 7047     		bx	lr
 861              		.cfi_endproc
 862              	.LFE139:
 864              		.text
 865              	.Letext0:
 866              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 867              		.file 3 "/usr/include/newlib/stdint.h"
 868              		.file 4 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 869              		.file 5 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_sdio.h"
 870              		.file 6 "libs/CMSIS/Include/core_cm4.h"
 871              		.file 7 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_rcc.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_sdio.c
     /tmp/ccksraTu.s:20     .text.SDIO_DeInit:0000000000000000 $t
     /tmp/ccksraTu.s:25     .text.SDIO_DeInit:0000000000000000 SDIO_DeInit
     /tmp/ccksraTu.s:52     .text.SDIO_Init:0000000000000000 $t
     /tmp/ccksraTu.s:57     .text.SDIO_Init:0000000000000000 SDIO_Init
     /tmp/ccksraTu.s:111    .text.SDIO_StructInit:0000000000000000 $t
     /tmp/ccksraTu.s:116    .text.SDIO_StructInit:0000000000000000 SDIO_StructInit
     /tmp/ccksraTu.s:142    .text.SDIO_ClockCmd:0000000000000000 $t
     /tmp/ccksraTu.s:147    .text.SDIO_ClockCmd:0000000000000000 SDIO_ClockCmd
     /tmp/ccksraTu.s:164    .text.SDIO_SetPowerState:0000000000000000 $t
     /tmp/ccksraTu.s:169    .text.SDIO_SetPowerState:0000000000000000 SDIO_SetPowerState
     /tmp/ccksraTu.s:186    .text.SDIO_GetPowerState:0000000000000000 $t
     /tmp/ccksraTu.s:191    .text.SDIO_GetPowerState:0000000000000000 SDIO_GetPowerState
     /tmp/ccksraTu.s:209    .text.SDIO_SendCommand:0000000000000000 $t
     /tmp/ccksraTu.s:214    .text.SDIO_SendCommand:0000000000000000 SDIO_SendCommand
     /tmp/ccksraTu.s:262    .text.SDIO_CmdStructInit:0000000000000000 $t
     /tmp/ccksraTu.s:267    .text.SDIO_CmdStructInit:0000000000000000 SDIO_CmdStructInit
     /tmp/ccksraTu.s:291    .text.SDIO_GetCommandResponse:0000000000000000 $t
     /tmp/ccksraTu.s:296    .text.SDIO_GetCommandResponse:0000000000000000 SDIO_GetCommandResponse
     /tmp/ccksraTu.s:314    .text.SDIO_GetResponse:0000000000000000 $t
     /tmp/ccksraTu.s:319    .text.SDIO_GetResponse:0000000000000000 SDIO_GetResponse
     /tmp/ccksraTu.s:350    .text.SDIO_DataConfig:0000000000000000 $t
     /tmp/ccksraTu.s:355    .text.SDIO_DataConfig:0000000000000000 SDIO_DataConfig
     /tmp/ccksraTu.s:404    .text.SDIO_DataStructInit:0000000000000000 $t
     /tmp/ccksraTu.s:409    .text.SDIO_DataStructInit:0000000000000000 SDIO_DataStructInit
     /tmp/ccksraTu.s:436    .text.SDIO_GetDataCounter:0000000000000000 $t
     /tmp/ccksraTu.s:441    .text.SDIO_GetDataCounter:0000000000000000 SDIO_GetDataCounter
     /tmp/ccksraTu.s:458    .text.SDIO_ReadData:0000000000000000 $t
     /tmp/ccksraTu.s:463    .text.SDIO_ReadData:0000000000000000 SDIO_ReadData
     /tmp/ccksraTu.s:480    .text.SDIO_WriteData:0000000000000000 $t
     /tmp/ccksraTu.s:485    .text.SDIO_WriteData:0000000000000000 SDIO_WriteData
     /tmp/ccksraTu.s:502    .text.SDIO_GetFIFOCount:0000000000000000 $t
     /tmp/ccksraTu.s:507    .text.SDIO_GetFIFOCount:0000000000000000 SDIO_GetFIFOCount
     /tmp/ccksraTu.s:524    .text.SDIO_StartSDIOReadWait:0000000000000000 $t
     /tmp/ccksraTu.s:529    .text.SDIO_StartSDIOReadWait:0000000000000000 SDIO_StartSDIOReadWait
     /tmp/ccksraTu.s:546    .text.SDIO_StopSDIOReadWait:0000000000000000 $t
     /tmp/ccksraTu.s:551    .text.SDIO_StopSDIOReadWait:0000000000000000 SDIO_StopSDIOReadWait
     /tmp/ccksraTu.s:568    .text.SDIO_SetSDIOReadWaitMode:0000000000000000 $t
     /tmp/ccksraTu.s:573    .text.SDIO_SetSDIOReadWaitMode:0000000000000000 SDIO_SetSDIOReadWaitMode
     /tmp/ccksraTu.s:590    .text.SDIO_SetSDIOOperation:0000000000000000 $t
     /tmp/ccksraTu.s:595    .text.SDIO_SetSDIOOperation:0000000000000000 SDIO_SetSDIOOperation
     /tmp/ccksraTu.s:612    .text.SDIO_SendSDIOSuspendCmd:0000000000000000 $t
     /tmp/ccksraTu.s:617    .text.SDIO_SendSDIOSuspendCmd:0000000000000000 SDIO_SendSDIOSuspendCmd
     /tmp/ccksraTu.s:634    .text.SDIO_CommandCompletionCmd:0000000000000000 $t
     /tmp/ccksraTu.s:639    .text.SDIO_CommandCompletionCmd:0000000000000000 SDIO_CommandCompletionCmd
     /tmp/ccksraTu.s:656    .text.SDIO_CEATAITCmd:0000000000000000 $t
     /tmp/ccksraTu.s:661    .text.SDIO_CEATAITCmd:0000000000000000 SDIO_CEATAITCmd
     /tmp/ccksraTu.s:682    .text.SDIO_SendCEATACmd:0000000000000000 $t
     /tmp/ccksraTu.s:687    .text.SDIO_SendCEATACmd:0000000000000000 SDIO_SendCEATACmd
     /tmp/ccksraTu.s:704    .text.SDIO_DMACmd:0000000000000000 $t
     /tmp/ccksraTu.s:709    .text.SDIO_DMACmd:0000000000000000 SDIO_DMACmd
     /tmp/ccksraTu.s:726    .text.SDIO_ITConfig:0000000000000000 $t
     /tmp/ccksraTu.s:731    .text.SDIO_ITConfig:0000000000000000 SDIO_ITConfig
     /tmp/ccksraTu.s:763    .text.SDIO_GetFlagStatus:0000000000000000 $t
     /tmp/ccksraTu.s:768    .text.SDIO_GetFlagStatus:0000000000000000 SDIO_GetFlagStatus
     /tmp/ccksraTu.s:792    .text.SDIO_ClearFlag:0000000000000000 $t
     /tmp/ccksraTu.s:797    .text.SDIO_ClearFlag:0000000000000000 SDIO_ClearFlag
     /tmp/ccksraTu.s:814    .text.SDIO_GetITStatus:0000000000000000 $t
     /tmp/ccksraTu.s:819    .text.SDIO_GetITStatus:0000000000000000 SDIO_GetITStatus
     /tmp/ccksraTu.s:843    .text.SDIO_ClearITPendingBit:0000000000000000 $t
     /tmp/ccksraTu.s:848    .text.SDIO_ClearITPendingBit:0000000000000000 SDIO_ClearITPendingBit
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.1.7402b5479d3fa4780665141f585fc0ee
                           .group:0000000000000000 wm4.stm32f4xx.h.48.a3308e16720c7afc3eb28e585e628ce6
                           .group:0000000000000000 wm4.core_cm4.h.32.5f62939b60122629d60d85d0c4a14709
                           .group:0000000000000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:0000000000000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:0000000000000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:0000000000000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:0000000000000000 wm4.core_cm4_simd.h.29.b4a3fdfb606cb3b26119424324d4b963
                           .group:0000000000000000 wm4.core_cm4.h.153.5393ef7e6cebf34dd51ca528f9218ab3
                           .group:0000000000000000 wm4.stm32f4xx.h.282.95bae448a91bccfbf24a6f9d95904bb8
                           .group:0000000000000000 wm4.stm32f4xx_adc.h.102.2061aa73008746f3c2cc6ce8f635cad3
                           .group:0000000000000000 wm4.stm32f4xx_can.h.25.87f18ca48b2692d39f76e87b1f07c953
                           .group:0000000000000000 wm4.stm32f4xx_cryp.h.25.db1951c06ee684df97ea3a11aba6cb51
                           .group:0000000000000000 wm4.stm32f4xx_dac.h.25.c43557a6416ea4dfa986c1209c2558d6
                           .group:0000000000000000 wm4.stm32f4xx_dbgmcu.h.24.7aedfdcf091890b5cb96019bd29a2bfc
                           .group:0000000000000000 wm4.stm32f4xx_dcmi.h.24.64883d9be802a535b1d7770d14da73e0
                           .group:0000000000000000 wm4.stm32f4xx_dma.h.25.c1fa1d44ae0bc9c2b3a0d1d355d8c1e6
                           .group:0000000000000000 wm4.stm32f4xx_exti.h.25.620998268d5d3d9042a8297fbe07d507
                           .group:0000000000000000 wm4.stm32f4xx_flash.h.25.65d4f351b72ee41355279f70305f361a
                           .group:0000000000000000 wm4.stm32f4xx_fsmc.h.25.b907ac7bd9bec46e02d06b137d53cfd8
                           .group:0000000000000000 wm4.stm32f4xx_hash.h.25.633fb84f031cf2ab1bd834e536716dfa
                           .group:0000000000000000 wm4.stm32f4xx_gpio.h.25.5bd1d790d742a307b55aea5fa8fcdae8
                           .group:0000000000000000 wm4.stm32f4xx_i2c.h.25.8fcdb817a00a67d4624d79bab0d9275f
                           .group:0000000000000000 wm4.stm32f4xx_iwdg.h.25.3013e8d2058415cb9d51af77f748a146
                           .group:0000000000000000 wm4.stm32f4xx_pwr.h.25.48b68c1f3a894ab012f9c2a2c222f159
                           .group:0000000000000000 wm4.stm32f4xx_rcc.h.24.c15e7c8dc065bb29146f29591b195c87
                           .group:0000000000000000 wm4.stm32f4xx_rng.h.25.cdb5c5c07de6a48aedfde608da3f447e
                           .group:0000000000000000 wm4.stm32f4xx_rtc.h.25.4809a79ad46ad97b4a01e735a96738eb
                           .group:0000000000000000 wm4.stm32f4xx_spi.h.25.46c61b79ff8408da93e2e90cf9b717d6
                           .group:0000000000000000 wm4.stm32f4xx_syscfg.h.25.9d5caab5677661b69e959531364e23d7
                           .group:0000000000000000 wm4.stm32f4xx_tim.h.25.948f7fc943f34bd206e29758e77ee0a2
                           .group:0000000000000000 wm4.stm32f4xx_usart.h.25.b64697dad017ba547dd272c2cdb5846a
                           .group:0000000000000000 wm4.stm32f4xx_wwdg.h.25.09d70b7849c6894ddf1e83c8e86b70e1
                           .group:0000000000000000 wm4.misc.h.25.a0cb758c1f091b46f201b19cec9e63a1
                           .group:0000000000000000 wm4.stm32f4xx.h.6913.da011404ccb203790556c86f10c46b18
                           .group:0000000000000000 wm4.stm32f4xx_sdio.h.120.96716c0e79bd0f2fbce7b125e62fa523

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
