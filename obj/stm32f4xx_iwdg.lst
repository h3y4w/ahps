   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_iwdg.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.IWDG_WriteAccessCmd,"ax",%progbits
  20              		.align	2
  21              		.global	IWDG_WriteAccessCmd
  22              		.thumb
  23              		.thumb_func
  25              	IWDG_WriteAccessCmd:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @file    stm32f4xx_iwdg.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          functionalities of the Independent watchdog (IWDG) peripheral:           
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *           - Prescaler and Counter configuration
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *           - IWDG activation
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *           - Flag management
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *  @verbatim  
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *  
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          ===================================================================
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *                                     IWDG features
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          ===================================================================
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *    
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          The IWDG can be started by either software or hardware (configurable
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          through option byte).
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          The IWDG is clocked by its own dedicated low-speed clock (LSI) and
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          thus stays active even if the main clock fails.
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          Once the IWDG is started, the LSI is forced ON and cannot be disabled
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          (LSI cannot be disabled too), and the counter starts counting down from 
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          the reset value of 0xFFF. When it reaches the end of count value (0x000)
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          a system reset is generated.
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          The IWDG counter should be reloaded at regular intervals to prevent
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          an MCU reset.
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *                           
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          The IWDG is implemented in the VDD voltage domain that is still functional
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          in STOP and STANDBY mode (IWDG reset can wake-up from STANDBY).          
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          IWDGRST flag in RCC_CSR register can be used to inform when a IWDG
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          reset occurs.
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          Min-max timeout value @32KHz (LSI): ~125us / ~32.7s
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          The IWDG timeout may vary due to LSI frequency dispersion. STM32F4xx
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          devices provide the capability to measure the LSI frequency (LSI clock
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          connected internally to TIM5 CH4 input capture). The measured value
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          can be used to have an IWDG timeout with an acceptable accuracy. 
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          For more information, please refer to the STM32F4xx Reference manual
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *                            
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          ===================================================================
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *                                 How to use this driver
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          ===================================================================
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          1. Enable write access to IWDG_PR and IWDG_RLR registers using
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             IWDG_WriteAccessCmd(IWDG_WriteAccess_Enable) function
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *               
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          2. Configure the IWDG prescaler using IWDG_SetPrescaler() function
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          3. Configure the IWDG counter value using IWDG_SetReload() function.
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             This value will be loaded in the IWDG counter each time the counter
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             is reloaded, then the IWDG will start counting down from this value.
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          4. Start the IWDG using IWDG_Enable() function, when the IWDG is used
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             in software mode (no need to enable the LSI, it will be enabled
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             by hardware)
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          5. Then the application program must reload the IWDG counter at regular
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             intervals during normal operation to prevent an MCU reset, using
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *             IWDG_ReloadCounter() function.      
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *  @endverbatim
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *    
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   ******************************************************************************
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @attention
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   ******************************************************************************
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Includes ------------------------------------------------------------------*/
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** #include "stm32f4xx_iwdg.h"
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG 
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief IWDG driver modules
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */ 
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private typedef -----------------------------------------------------------*/
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private define ------------------------------------------------------------*/
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* KR register bit mask */
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** #define KR_KEY_RELOAD    ((uint16_t)0xAAAA)
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** #define KR_KEY_ENABLE    ((uint16_t)0xCCCC)
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private macro -------------------------------------------------------------*/
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private variables ---------------------------------------------------------*/
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private function prototypes -----------------------------------------------*/
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /* Private functions ---------------------------------------------------------*/
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG_Private_Functions
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG_Group1 Prescaler and Counter configuration functions
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *  @brief   Prescaler and Counter configuration functions
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @verbatim   
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****                   Prescaler and Counter configuration functions
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================  
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @endverbatim
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Enables or disables write access to IWDG_PR and IWDG_RLR registers.
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  IWDG_WriteAccess: new state of write access to IWDG_PR and IWDG_RLR registers.
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          This parameter can be one of the following values:
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_WriteAccess_Enable: Enable write access to IWDG_PR and IWDG_RLR registers
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_WriteAccess_Disable: Disable write access to IWDG_PR and IWDG_RLR register
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval None
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** void IWDG_WriteAccessCmd(uint16_t IWDG_WriteAccess)
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
  28              		.loc 1 130 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   /* Check the parameters */
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   assert_param(IS_IWDG_WRITE_ACCESS(IWDG_WriteAccess));
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   IWDG->KR = IWDG_WriteAccess;
  34              		.loc 1 133 0
  35 0000 4FF44053 		mov	r3, #12288
  36 0004 C4F20003 		movt	r3, 16384
  37 0008 1860     		str	r0, [r3]
  38 000a 7047     		bx	lr
  39              		.cfi_endproc
  40              	.LFE110:
  42              		.section	.text.IWDG_SetPrescaler,"ax",%progbits
  43              		.align	2
  44              		.global	IWDG_SetPrescaler
  45              		.thumb
  46              		.thumb_func
  48              	IWDG_SetPrescaler:
  49              	.LFB111:
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Sets IWDG Prescaler value.
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  IWDG_Prescaler: specifies the IWDG Prescaler value.
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          This parameter can be one of the following values:
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_4: IWDG prescaler set to 4
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_8: IWDG prescaler set to 8
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_16: IWDG prescaler set to 16
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_32: IWDG prescaler set to 32
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_64: IWDG prescaler set to 64
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_128: IWDG prescaler set to 128
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_Prescaler_256: IWDG prescaler set to 256
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval None
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** void IWDG_SetPrescaler(uint8_t IWDG_Prescaler)
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
  50              		.loc 1 150 0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.LVL1:
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   /* Check the parameters */
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   assert_param(IS_IWDG_PRESCALER(IWDG_Prescaler));
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   IWDG->PR = IWDG_Prescaler;
  56              		.loc 1 153 0
  57 0000 4FF44053 		mov	r3, #12288
  58 0004 C4F20003 		movt	r3, 16384
  59 0008 5860     		str	r0, [r3, #4]
  60 000a 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE111:
  64              		.section	.text.IWDG_SetReload,"ax",%progbits
  65              		.align	2
  66              		.global	IWDG_SetReload
  67              		.thumb
  68              		.thumb_func
  70              	IWDG_SetReload:
  71              	.LFB112:
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Sets IWDG Reload value.
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  Reload: specifies the IWDG Reload value.
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          This parameter must be a number between 0 and 0x0FFF.
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval None
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** void IWDG_SetReload(uint16_t Reload)
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
  72              		.loc 1 163 0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
  77              	.LVL2:
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   /* Check the parameters */
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   assert_param(IS_IWDG_RELOAD(Reload));
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   IWDG->RLR = Reload;
  78              		.loc 1 166 0
  79 0000 4FF44053 		mov	r3, #12288
  80 0004 C4F20003 		movt	r3, 16384
  81 0008 9860     		str	r0, [r3, #8]
  82 000a 7047     		bx	lr
  83              		.cfi_endproc
  84              	.LFE112:
  86              		.section	.text.IWDG_ReloadCounter,"ax",%progbits
  87              		.align	2
  88              		.global	IWDG_ReloadCounter
  89              		.thumb
  90              		.thumb_func
  92              	IWDG_ReloadCounter:
  93              	.LFB113:
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Reloads IWDG counter with value defined in the reload register
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *         (write access to IWDG_PR and IWDG_RLR registers disabled).
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  None
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval None
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** void IWDG_ReloadCounter(void)
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
  94              		.loc 1 176 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98              		@ link register save eliminated.
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   IWDG->KR = KR_KEY_RELOAD;
  99              		.loc 1 177 0
 100 0000 4FF44053 		mov	r3, #12288
 101 0004 C4F20003 		movt	r3, 16384
 102 0008 4AF6AA22 		movw	r2, #43690
 103 000c 1A60     		str	r2, [r3]
 104 000e 7047     		bx	lr
 105              		.cfi_endproc
 106              	.LFE113:
 108              		.section	.text.IWDG_Enable,"ax",%progbits
 109              		.align	2
 110              		.global	IWDG_Enable
 111              		.thumb
 112              		.thumb_func
 114              	IWDG_Enable:
 115              	.LFB114:
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @}
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG_Group2 IWDG activation function
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *  @brief   IWDG activation function 
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @verbatim   
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****                           IWDG activation function
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================  
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @endverbatim
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Enables IWDG (write access to IWDG_PR and IWDG_RLR registers disabled).
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  None
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval None
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** void IWDG_Enable(void)
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
 116              		.loc 1 202 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   IWDG->KR = KR_KEY_ENABLE;
 121              		.loc 1 203 0
 122 0000 4FF44053 		mov	r3, #12288
 123 0004 C4F20003 		movt	r3, 16384
 124 0008 4CF6CC42 		movw	r2, #52428
 125 000c 1A60     		str	r2, [r3]
 126 000e 7047     		bx	lr
 127              		.cfi_endproc
 128              	.LFE114:
 130              		.section	.text.IWDG_GetFlagStatus,"ax",%progbits
 131              		.align	2
 132              		.global	IWDG_GetFlagStatus
 133              		.thumb
 134              		.thumb_func
 136              	IWDG_GetFlagStatus:
 137              	.LFB115:
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @}
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /** @defgroup IWDG_Group3 Flag management function 
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *  @brief  Flag management function  
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  *
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @verbatim   
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****                             Flag management function 
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****  ===============================================================================  
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** @endverbatim
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @{
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** 
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** /**
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @brief  Checks whether the specified IWDG flag is set or not.
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @param  IWDG_FLAG: specifies the flag to check.
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *          This parameter can be one of the following values:
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_FLAG_PVU: Prescaler Value Update on going
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   *            @arg IWDG_FLAG_RVU: Reload Value Update on going
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   * @retval The new state of IWDG_FLAG (SET or RESET).
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   */
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** FlagStatus IWDG_GetFlagStatus(uint16_t IWDG_FLAG)
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** {
 138              		.loc 1 231 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142              		@ link register save eliminated.
 143              	.LVL3:
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   FlagStatus bitstatus = RESET;
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   /* Check the parameters */
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   assert_param(IS_IWDG_FLAG(IWDG_FLAG));
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   if ((IWDG->SR & IWDG_FLAG) != (uint32_t)RESET)
 144              		.loc 1 235 0
 145 0000 4FF44053 		mov	r3, #12288
 146 0004 C4F20003 		movt	r3, 16384
 147 0008 DB68     		ldr	r3, [r3, #12]
 148 000a 1840     		ands	r0, r0, r3
 149              	.LVL4:
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   {
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****     bitstatus = SET;
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   }
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   else
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   {
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****     bitstatus = RESET;
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   }
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   /* Return the flag status */
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c ****   return bitstatus;
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_iwdg.c **** }
 150              		.loc 1 245 0
 151 000c 0030     		adds	r0, r0, #0
 152 000e 18BF     		it	ne
 153 0010 0120     		movne	r0, #1
 154              	.LVL5:
 155 0012 7047     		bx	lr
 156              		.cfi_endproc
 157              	.LFE115:
 159              		.text
 160              	.Letext0:
 161              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 162              		.file 3 "/usr/include/newlib/stdint.h"
 163              		.file 4 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 164              		.file 5 "libs/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_iwdg.c
     /tmp/ccWhYvOa.s:20     .text.IWDG_WriteAccessCmd:0000000000000000 $t
     /tmp/ccWhYvOa.s:25     .text.IWDG_WriteAccessCmd:0000000000000000 IWDG_WriteAccessCmd
     /tmp/ccWhYvOa.s:43     .text.IWDG_SetPrescaler:0000000000000000 $t
     /tmp/ccWhYvOa.s:48     .text.IWDG_SetPrescaler:0000000000000000 IWDG_SetPrescaler
     /tmp/ccWhYvOa.s:65     .text.IWDG_SetReload:0000000000000000 $t
     /tmp/ccWhYvOa.s:70     .text.IWDG_SetReload:0000000000000000 IWDG_SetReload
     /tmp/ccWhYvOa.s:87     .text.IWDG_ReloadCounter:0000000000000000 $t
     /tmp/ccWhYvOa.s:92     .text.IWDG_ReloadCounter:0000000000000000 IWDG_ReloadCounter
     /tmp/ccWhYvOa.s:109    .text.IWDG_Enable:0000000000000000 $t
     /tmp/ccWhYvOa.s:114    .text.IWDG_Enable:0000000000000000 IWDG_Enable
     /tmp/ccWhYvOa.s:131    .text.IWDG_GetFlagStatus:0000000000000000 $t
     /tmp/ccWhYvOa.s:136    .text.IWDG_GetFlagStatus:0000000000000000 IWDG_GetFlagStatus
                     .debug_frame:0000000000000010 $d
                           .group:0000000000000000 wm4.1.7402b5479d3fa4780665141f585fc0ee
                           .group:0000000000000000 wm4.stm32f4xx.h.48.a3308e16720c7afc3eb28e585e628ce6
                           .group:0000000000000000 wm4.core_cm4.h.32.5f62939b60122629d60d85d0c4a14709
                           .group:0000000000000000 wm4.features.h.22.6a4ca7cd053637cc1d0db6c16f39b2d7
                           .group:0000000000000000 wm4._default_types.h.15.8b2cb27e528498f8ff711db085d6e489
                           .group:0000000000000000 wm4.stdint.h.20.796e373797e732130a803d4c0338fa1b
                           .group:0000000000000000 wm4.core_cmInstr.h.25.f50f886f2edf670cf199b35fd96f5c91
                           .group:0000000000000000 wm4.core_cm4_simd.h.29.b4a3fdfb606cb3b26119424324d4b963
                           .group:0000000000000000 wm4.core_cm4.h.153.5393ef7e6cebf34dd51ca528f9218ab3
                           .group:0000000000000000 wm4.stm32f4xx.h.282.95bae448a91bccfbf24a6f9d95904bb8
                           .group:0000000000000000 wm4.stm32f4xx_adc.h.102.2061aa73008746f3c2cc6ce8f635cad3
                           .group:0000000000000000 wm4.stm32f4xx_can.h.25.87f18ca48b2692d39f76e87b1f07c953
                           .group:0000000000000000 wm4.stm32f4xx_cryp.h.25.db1951c06ee684df97ea3a11aba6cb51
                           .group:0000000000000000 wm4.stm32f4xx_dac.h.25.c43557a6416ea4dfa986c1209c2558d6
                           .group:0000000000000000 wm4.stm32f4xx_dbgmcu.h.24.7aedfdcf091890b5cb96019bd29a2bfc
                           .group:0000000000000000 wm4.stm32f4xx_dcmi.h.24.64883d9be802a535b1d7770d14da73e0
                           .group:0000000000000000 wm4.stm32f4xx_dma.h.25.c1fa1d44ae0bc9c2b3a0d1d355d8c1e6
                           .group:0000000000000000 wm4.stm32f4xx_exti.h.25.620998268d5d3d9042a8297fbe07d507
                           .group:0000000000000000 wm4.stm32f4xx_flash.h.25.65d4f351b72ee41355279f70305f361a
                           .group:0000000000000000 wm4.stm32f4xx_fsmc.h.25.b907ac7bd9bec46e02d06b137d53cfd8
                           .group:0000000000000000 wm4.stm32f4xx_hash.h.25.633fb84f031cf2ab1bd834e536716dfa
                           .group:0000000000000000 wm4.stm32f4xx_gpio.h.25.5bd1d790d742a307b55aea5fa8fcdae8
                           .group:0000000000000000 wm4.stm32f4xx_i2c.h.25.8fcdb817a00a67d4624d79bab0d9275f
                           .group:0000000000000000 wm4.stm32f4xx_pwr.h.25.48b68c1f3a894ab012f9c2a2c222f159
                           .group:0000000000000000 wm4.stm32f4xx_rcc.h.24.c15e7c8dc065bb29146f29591b195c87
                           .group:0000000000000000 wm4.stm32f4xx_rng.h.25.cdb5c5c07de6a48aedfde608da3f447e
                           .group:0000000000000000 wm4.stm32f4xx_rtc.h.25.4809a79ad46ad97b4a01e735a96738eb
                           .group:0000000000000000 wm4.stm32f4xx_sdio.h.25.406302aabae34eada94e5f2cde635a3e
                           .group:0000000000000000 wm4.stm32f4xx_spi.h.25.46c61b79ff8408da93e2e90cf9b717d6
                           .group:0000000000000000 wm4.stm32f4xx_syscfg.h.25.9d5caab5677661b69e959531364e23d7
                           .group:0000000000000000 wm4.stm32f4xx_tim.h.25.948f7fc943f34bd206e29758e77ee0a2
                           .group:0000000000000000 wm4.stm32f4xx_usart.h.25.b64697dad017ba547dd272c2cdb5846a
                           .group:0000000000000000 wm4.stm32f4xx_wwdg.h.25.09d70b7849c6894ddf1e83c8e86b70e1
                           .group:0000000000000000 wm4.misc.h.25.a0cb758c1f091b46f201b19cec9e63a1
                           .group:0000000000000000 wm4.stm32f4xx.h.6913.da011404ccb203790556c86f10c46b18
                           .group:0000000000000000 wm4.stm32f4xx_iwdg.h.52.109944bd492fecd182cc3f1769b55be5

NO UNDEFINED SYMBOLS
