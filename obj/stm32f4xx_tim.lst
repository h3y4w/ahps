   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_tim.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.TIM_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	TIM_DeInit
  22              		.thumb
  23              		.thumb_func
  25              	TIM_DeInit:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @file    stm32f4xx_tim.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          functionalities of the TIM peripheral:
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - TimeBase management
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Output Compare management
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Input Capture management
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Advanced-control timers (TIM1 and TIM8) specific features  
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Interrupts, DMA and flags management
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Clocks management
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Synchronization management
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Specific interface management
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            - Specific remapping management      
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *              
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  @verbatim
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          ===================================================================
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                 How to use this driver
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          ===================================================================
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This driver provides functions to configure and program the TIM 
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          of all STM32F4xx devices.
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          These functions are split in 9 groups: 
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          1. TIM TimeBase management: this group includes all needed functions 
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             to configure the TM Timebase unit:
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get Prescaler
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get Autoreload  
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Counter modes configuration
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set Clock division  
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the One Pulse mode
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Update Request Configuration
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Update Disable Configuration
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Auto-Preload Configuration 
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the counter     
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          2. TIM Output Compare management: this group includes all needed 
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Capture/Compare unit used in Output 
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             compare mode: 
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure each channel, independently, in Output Compare mode
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the output compare modes
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Polarities of each channel
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Get the Capture/Compare register values
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Output Compare Fast mode 
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Output Compare Forced mode  
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Output Compare-Preload Configuration 
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Clear Output Compare Reference
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the OCREF Clear signal
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the Capture/Compare Channels    
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          3. TIM Input Capture management: this group includes all needed 
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Capture/Compare unit used in 
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             Input Capture mode:
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure each channel in input capture mode
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure Channel1/2 in PWM Input mode
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set the Input Capture Prescaler
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Get the Capture/Compare values      
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          4. Advanced-control timers (TIM1 and TIM8) specific features
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configures the Break input, dead time, Lock level, the OSSI,
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                      the OSSR State and the AOE(automatic output enable)
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable the TIM peripheral Main Outputs
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the Commutation event
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Set/Reset the Capture Compare Preload Control bit
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                              
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          5. TIM interrupts, DMA and flags management
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable interrupt sources
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Get flags status
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Clear flags/ Pending bits
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Enable/Disable DMA requests 
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Configure DMA burst mode
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select CaptureCompare DMA request  
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *              
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          6. TIM clocks management: this group includes all needed functions 
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             to configure the clock controller unit:
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select internal/External clock
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select the external clock mode: ETR(Mode1/Mode2), TIx or ITRx
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          7. TIM synchronization management: this group includes all needed 
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             functions to configure the Synchronization unit:
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Input Trigger  
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Output Trigger  
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Master Slave Mode 
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - ETR Configuration when used as external trigger   
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          8. TIM specific interface management, this group includes all 
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             needed functions to use the specific TIM interface:
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Encoder Interface Configuration
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                   - Select Hall Sensor   
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          9. TIM specific remapping management includes the Remapping 
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *             configuration of specific timers               
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  @endverbatim
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *    
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @attention
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ******************************************************************************
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Includes ------------------------------------------------------------------*/
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #include "stm32f4xx_tim.h"
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #include "stm32f4xx_rcc.h"
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM 
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief TIM driver modules
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private typedef -----------------------------------------------------------*/
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private define ------------------------------------------------------------*/
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* ---------------------- TIM registers bit mask ------------------------ */
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define SMCR_ETR_MASK      ((uint16_t)0x00FF) 
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OFFSET        ((uint16_t)0x0018)
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCER_CCE_SET       ((uint16_t)0x0001)  
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define	CCER_CCNE_SET      ((uint16_t)0x0004) 
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OC13M_MASK    ((uint16_t)0xFF8F)
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** #define CCMR_OC24M_MASK    ((uint16_t)0x8FFF) 
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private macro -------------------------------------------------------------*/
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private variables ---------------------------------------------------------*/
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private function prototypes -----------------------------------------------*/
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter);
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /* Private functions ---------------------------------------------------------*/
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Private_Functions
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group1 TimeBase management functions
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   TimeBase management functions 
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        TimeBase management functions
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Timing(Time base) Mode
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Timing(Time base) mode, the following steps are mandatory:
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                     
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Fill the TIM_TimeBaseInitStruct with the desired parameters.
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Call TIM_TimeBaseInit(TIMx, &TIM_TimeBaseInitStruct) to configure the Time Base unit
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           with the corresponding configuration
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Enable the NVIC if you need to generate the update interrupt. 
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Enable the corresponding interrupt using the function TIM_ITConfig(TIMx, TIM_IT_Update) 
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        6. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           a specific feature of the Timer. 
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Deinitializes the TIMx peripheral registers to their default reset values.
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DeInit(TIM_TypeDef* TIMx)
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
  28              		.loc 1 195 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIMx == TIM1)
  44              		.loc 1 199 0
  45 0008 7A68     		ldr	r2, [r7, #4]
  46 000a 0023     		movs	r3, #0
  47 000c C4F20103 		movt	r3, 16385
  48 0010 9A42     		cmp	r2, r3
  49 0012 08D1     		bne	.L2
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, ENABLE);
  50              		.loc 1 201 0
  51 0014 0120     		movs	r0, #1
  52 0016 0121     		movs	r1, #1
  53 0018 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM1, DISABLE);  
  54              		.loc 1 202 0
  55 001c 0120     		movs	r0, #1
  56 001e 0021     		movs	r1, #0
  57 0020 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
  58 0024 D3E0     		b	.L1
  59              	.L2:
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   } 
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM2) 
  60              		.loc 1 204 0
  61 0026 7B68     		ldr	r3, [r7, #4]
  62 0028 B3F1804F 		cmp	r3, #1073741824
  63 002c 08D1     		bne	.L4
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {     
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, ENABLE);
  64              		.loc 1 206 0
  65 002e 0120     		movs	r0, #1
  66 0030 0121     		movs	r1, #1
  67 0032 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM2, DISABLE);
  68              		.loc 1 207 0
  69 0036 0120     		movs	r0, #1
  70 0038 0021     		movs	r1, #0
  71 003a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  72 003e C6E0     		b	.L1
  73              	.L4:
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM3)
  74              		.loc 1 209 0
  75 0040 7A68     		ldr	r2, [r7, #4]
  76 0042 4FF48063 		mov	r3, #1024
  77 0046 C4F20003 		movt	r3, 16384
  78 004a 9A42     		cmp	r2, r3
  79 004c 08D1     		bne	.L5
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, ENABLE);
  80              		.loc 1 211 0
  81 004e 0220     		movs	r0, #2
  82 0050 0121     		movs	r1, #1
  83 0052 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM3, DISABLE);
  84              		.loc 1 212 0
  85 0056 0220     		movs	r0, #2
  86 0058 0021     		movs	r1, #0
  87 005a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
  88 005e B6E0     		b	.L1
  89              	.L5:
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM4)
  90              		.loc 1 214 0
  91 0060 7A68     		ldr	r2, [r7, #4]
  92 0062 4FF40063 		mov	r3, #2048
  93 0066 C4F20003 		movt	r3, 16384
  94 006a 9A42     		cmp	r2, r3
  95 006c 08D1     		bne	.L6
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, ENABLE);
  96              		.loc 1 216 0
  97 006e 0420     		movs	r0, #4
  98 0070 0121     		movs	r1, #1
  99 0072 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM4, DISABLE);
 100              		.loc 1 217 0
 101 0076 0420     		movs	r0, #4
 102 0078 0021     		movs	r1, #0
 103 007a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 104 007e A6E0     		b	.L1
 105              	.L6:
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM5)
 106              		.loc 1 219 0
 107 0080 7A68     		ldr	r2, [r7, #4]
 108 0082 4FF44063 		mov	r3, #3072
 109 0086 C4F20003 		movt	r3, 16384
 110 008a 9A42     		cmp	r2, r3
 111 008c 08D1     		bne	.L7
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, ENABLE);
 112              		.loc 1 221 0
 113 008e 0820     		movs	r0, #8
 114 0090 0121     		movs	r1, #1
 115 0092 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM5, DISABLE);
 116              		.loc 1 222 0
 117 0096 0820     		movs	r0, #8
 118 0098 0021     		movs	r1, #0
 119 009a FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 120 009e 96E0     		b	.L1
 121              	.L7:
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM6)  
 122              		.loc 1 224 0
 123 00a0 7A68     		ldr	r2, [r7, #4]
 124 00a2 4FF48053 		mov	r3, #4096
 125 00a6 C4F20003 		movt	r3, 16384
 126 00aa 9A42     		cmp	r2, r3
 127 00ac 08D1     		bne	.L8
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {    
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, ENABLE);
 128              		.loc 1 226 0
 129 00ae 1020     		movs	r0, #16
 130 00b0 0121     		movs	r1, #1
 131 00b2 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM6, DISABLE);
 132              		.loc 1 227 0
 133 00b6 1020     		movs	r0, #16
 134 00b8 0021     		movs	r1, #0
 135 00ba FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 136 00be 86E0     		b	.L1
 137              	.L8:
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM7)
 138              		.loc 1 229 0
 139 00c0 7A68     		ldr	r2, [r7, #4]
 140 00c2 4FF4A053 		mov	r3, #5120
 141 00c6 C4F20003 		movt	r3, 16384
 142 00ca 9A42     		cmp	r2, r3
 143 00cc 08D1     		bne	.L9
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, ENABLE);
 144              		.loc 1 231 0
 145 00ce 2020     		movs	r0, #32
 146 00d0 0121     		movs	r1, #1
 147 00d2 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM7, DISABLE);
 148              		.loc 1 232 0
 149 00d6 2020     		movs	r0, #32
 150 00d8 0021     		movs	r1, #0
 151 00da FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 152 00de 76E0     		b	.L1
 153              	.L9:
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM8)
 154              		.loc 1 234 0
 155 00e0 7A68     		ldr	r2, [r7, #4]
 156 00e2 4FF48063 		mov	r3, #1024
 157 00e6 C4F20103 		movt	r3, 16385
 158 00ea 9A42     		cmp	r2, r3
 159 00ec 08D1     		bne	.L10
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, ENABLE);
 160              		.loc 1 236 0
 161 00ee 0220     		movs	r0, #2
 162 00f0 0121     		movs	r1, #1
 163 00f2 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM8, DISABLE);  
 164              		.loc 1 237 0
 165 00f6 0220     		movs	r0, #2
 166 00f8 0021     		movs	r1, #0
 167 00fa FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 168 00fe 66E0     		b	.L1
 169              	.L10:
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM9)
 170              		.loc 1 239 0
 171 0100 7A68     		ldr	r2, [r7, #4]
 172 0102 4FF48043 		mov	r3, #16384
 173 0106 C4F20103 		movt	r3, 16385
 174 010a 9A42     		cmp	r2, r3
 175 010c 0AD1     		bne	.L11
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, ENABLE);
 176              		.loc 1 241 0
 177 010e 4FF48030 		mov	r0, #65536
 178 0112 0121     		movs	r1, #1
 179 0114 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM9, DISABLE);  
 180              		.loc 1 242 0
 181 0118 4FF48030 		mov	r0, #65536
 182 011c 0021     		movs	r1, #0
 183 011e FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 184 0122 54E0     		b	.L1
 185              	.L11:
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    }  
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM10)
 186              		.loc 1 244 0
 187 0124 7A68     		ldr	r2, [r7, #4]
 188 0126 4FF48843 		mov	r3, #17408
 189 012a C4F20103 		movt	r3, 16385
 190 012e 9A42     		cmp	r2, r3
 191 0130 0AD1     		bne	.L12
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, ENABLE);
 192              		.loc 1 246 0
 193 0132 4FF40030 		mov	r0, #131072
 194 0136 0121     		movs	r1, #1
 195 0138 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM10, DISABLE);  
 196              		.loc 1 247 0
 197 013c 4FF40030 		mov	r0, #131072
 198 0140 0021     		movs	r1, #0
 199 0142 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 200 0146 42E0     		b	.L1
 201              	.L12:
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM11) 
 202              		.loc 1 249 0
 203 0148 7A68     		ldr	r2, [r7, #4]
 204 014a 4FF49043 		mov	r3, #18432
 205 014e C4F20103 		movt	r3, 16385
 206 0152 9A42     		cmp	r2, r3
 207 0154 0AD1     		bne	.L13
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {     
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, ENABLE);
 208              		.loc 1 251 0
 209 0156 4FF48020 		mov	r0, #262144
 210 015a 0121     		movs	r1, #1
 211 015c FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB2PeriphResetCmd(RCC_APB2Periph_TIM11, DISABLE);  
 212              		.loc 1 252 0
 213 0160 4FF48020 		mov	r0, #262144
 214 0164 0021     		movs	r1, #0
 215 0166 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd
 216 016a 30E0     		b	.L1
 217              	.L13:
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM12)
 218              		.loc 1 254 0
 219 016c 7A68     		ldr	r2, [r7, #4]
 220 016e 4FF4C053 		mov	r3, #6144
 221 0172 C4F20003 		movt	r3, 16384
 222 0176 9A42     		cmp	r2, r3
 223 0178 08D1     		bne	.L14
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {      
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, ENABLE);
 224              		.loc 1 256 0
 225 017a 4020     		movs	r0, #64
 226 017c 0121     		movs	r1, #1
 227 017e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM12, DISABLE);  
 228              		.loc 1 257 0
 229 0182 4020     		movs	r0, #64
 230 0184 0021     		movs	r1, #0
 231 0186 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 232 018a 20E0     		b	.L1
 233              	.L14:
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIMx == TIM13) 
 234              		.loc 1 259 0
 235 018c 7A68     		ldr	r2, [r7, #4]
 236 018e 4FF4E053 		mov	r3, #7168
 237 0192 C4F20003 		movt	r3, 16384
 238 0196 9A42     		cmp	r2, r3
 239 0198 08D1     		bne	.L15
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {       
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, ENABLE);
 240              		.loc 1 261 0
 241 019a 8020     		movs	r0, #128
 242 019c 0121     		movs	r1, #1
 243 019e FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM13, DISABLE);  
 244              		.loc 1 262 0
 245 01a2 8020     		movs	r0, #128
 246 01a4 0021     		movs	r1, #0
 247 01a6 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 248 01aa 10E0     		b	.L1
 249              	.L15:
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     if (TIMx == TIM14) 
 250              		.loc 1 266 0
 251 01ac 7A68     		ldr	r2, [r7, #4]
 252 01ae 4FF40053 		mov	r3, #8192
 253 01b2 C4F20003 		movt	r3, 16384
 254 01b6 9A42     		cmp	r2, r3
 255 01b8 09D1     		bne	.L1
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     {     
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, ENABLE);
 256              		.loc 1 268 0
 257 01ba 4FF48070 		mov	r0, #256
 258 01be 0121     		movs	r1, #1
 259 01c0 FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****       RCC_APB1PeriphResetCmd(RCC_APB1Periph_TIM14, DISABLE); 
 260              		.loc 1 269 0
 261 01c4 4FF48070 		mov	r0, #256
 262 01c8 0021     		movs	r1, #0
 263 01ca FFF7FEFF 		bl	RCC_APB1PeriphResetCmd
 264              	.L1:
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     }   
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 265              		.loc 1 272 0
 266 01ce 0837     		adds	r7, r7, #8
 267 01d0 BD46     		mov	sp, r7
 268              		@ sp needed
 269 01d2 80BD     		pop	{r7, pc}
 270              		.cfi_endproc
 271              	.LFE110:
 273              		.section	.text.TIM_TimeBaseInit,"ax",%progbits
 274              		.align	2
 275              		.global	TIM_TimeBaseInit
 276              		.thumb
 277              		.thumb_func
 279              	TIM_TimeBaseInit:
 280              	.LFB111:
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Time Base Unit peripheral according to 
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the specified parameters in the TIM_TimeBaseInitStruct.
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 to 14 to select the TIM peripheral.
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TimeBaseInitStruct: pointer to a TIM_TimeBaseInitTypeDef structure
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         that contains the configuration information for the specified TIM peripheral.
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TimeBaseInit(TIM_TypeDef* TIMx, TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 281              		.loc 1 283 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 16
 284              		@ frame_needed = 1, uses_anonymous_args = 0
 285              		@ link register save eliminated.
 286 0000 80B4     		push	{r7}
 287              	.LCFI3:
 288              		.cfi_def_cfa_offset 4
 289              		.cfi_offset 7, -4
 290 0002 85B0     		sub	sp, sp, #20
 291              	.LCFI4:
 292              		.cfi_def_cfa_offset 24
 293 0004 00AF     		add	r7, sp, #0
 294              	.LCFI5:
 295              		.cfi_def_cfa_register 7
 296 0006 7860     		str	r0, [r7, #4]
 297 0008 3960     		str	r1, [r7]
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpcr1 = 0;
 298              		.loc 1 284 0
 299 000a 0023     		movs	r3, #0
 300 000c FB81     		strh	r3, [r7, #14]	@ movhi
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_TimeBaseInitStruct->TIM_CounterMode));
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_TimeBaseInitStruct->TIM_ClockDivision));
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;  
 301              		.loc 1 291 0
 302 000e 7B68     		ldr	r3, [r7, #4]
 303 0010 1B88     		ldrh	r3, [r3]	@ movhi
 304 0012 FB81     		strh	r3, [r7, #14]	@ movhi
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8)||
 305              		.loc 1 293 0
 306 0014 7A68     		ldr	r2, [r7, #4]
 307 0016 0023     		movs	r3, #0
 308 0018 C4F20103 		movt	r3, 16385
 309 001c 9A42     		cmp	r2, r3
 310 001e 1FD0     		beq	.L17
 311              		.loc 1 293 0 is_stmt 0 discriminator 1
 312 0020 7A68     		ldr	r2, [r7, #4]
 313 0022 4FF48063 		mov	r3, #1024
 314 0026 C4F20103 		movt	r3, 16385
 315 002a 9A42     		cmp	r2, r3
 316 002c 18D0     		beq	.L17
 317 002e 7B68     		ldr	r3, [r7, #4]
 318 0030 B3F1804F 		cmp	r3, #1073741824
 319 0034 14D0     		beq	.L17
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      (TIMx == TIM2) || (TIMx == TIM3)||
 320              		.loc 1 294 0 is_stmt 1
 321 0036 7A68     		ldr	r2, [r7, #4]
 322 0038 4FF48063 		mov	r3, #1024
 323 003c C4F20003 		movt	r3, 16384
 324 0040 9A42     		cmp	r2, r3
 325 0042 0DD0     		beq	.L17
 326              		.loc 1 294 0 is_stmt 0 discriminator 1
 327 0044 7A68     		ldr	r2, [r7, #4]
 328 0046 4FF40063 		mov	r3, #2048
 329 004a C4F20003 		movt	r3, 16384
 330 004e 9A42     		cmp	r2, r3
 331 0050 06D0     		beq	.L17
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      (TIMx == TIM4) || (TIMx == TIM5)) 
 332              		.loc 1 295 0 is_stmt 1
 333 0052 7A68     		ldr	r2, [r7, #4]
 334 0054 4FF44063 		mov	r3, #3072
 335 0058 C4F20003 		movt	r3, 16384
 336 005c 9A42     		cmp	r2, r3
 337 005e 08D1     		bne	.L18
 338              	.L17:
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Select the Counter Mode */
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 &= (uint16_t)(~(TIM_CR1_DIR | TIM_CR1_CMS));
 339              		.loc 1 298 0
 340 0060 FB89     		ldrh	r3, [r7, #14]	@ movhi
 341 0062 23F07003 		bic	r3, r3, #112
 342 0066 FB81     		strh	r3, [r7, #14]	@ movhi
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_CounterMode;
 343              		.loc 1 299 0
 344 0068 3B68     		ldr	r3, [r7]
 345 006a 5A88     		ldrh	r2, [r3, #2]
 346 006c FB89     		ldrh	r3, [r7, #14]	@ movhi
 347 006e 1343     		orrs	r3, r3, r2
 348 0070 FB81     		strh	r3, [r7, #14]	@ movhi
 349              	.L18:
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx != TIM6) && (TIMx != TIM7))
 350              		.loc 1 302 0
 351 0072 7A68     		ldr	r2, [r7, #4]
 352 0074 4FF48053 		mov	r3, #4096
 353 0078 C4F20003 		movt	r3, 16384
 354 007c 9A42     		cmp	r2, r3
 355 007e 0FD0     		beq	.L19
 356              		.loc 1 302 0 is_stmt 0 discriminator 1
 357 0080 7A68     		ldr	r2, [r7, #4]
 358 0082 4FF4A053 		mov	r3, #5120
 359 0086 C4F20003 		movt	r3, 16384
 360 008a 9A42     		cmp	r2, r3
 361 008c 08D0     		beq	.L19
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the clock division */
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 &=  (uint16_t)(~TIM_CR1_CKD);
 362              		.loc 1 305 0 is_stmt 1
 363 008e FB89     		ldrh	r3, [r7, #14]	@ movhi
 364 0090 23F44073 		bic	r3, r3, #768
 365 0094 FB81     		strh	r3, [r7, #14]	@ movhi
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr1 |= (uint32_t)TIM_TimeBaseInitStruct->TIM_ClockDivision;
 366              		.loc 1 306 0
 367 0096 3B68     		ldr	r3, [r7]
 368 0098 1A89     		ldrh	r2, [r3, #8]
 369 009a FB89     		ldrh	r3, [r7, #14]	@ movhi
 370 009c 1343     		orrs	r3, r3, r2
 371 009e FB81     		strh	r3, [r7, #14]	@ movhi
 372              	.L19:
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 = tmpcr1;
 373              		.loc 1 309 0
 374 00a0 7B68     		ldr	r3, [r7, #4]
 375 00a2 FA89     		ldrh	r2, [r7, #14]	@ movhi
 376 00a4 1A80     		strh	r2, [r3]	@ movhi
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Autoreload value */
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->ARR = TIM_TimeBaseInitStruct->TIM_Period ;
 377              		.loc 1 312 0
 378 00a6 3B68     		ldr	r3, [r7]
 379 00a8 5A68     		ldr	r2, [r3, #4]
 380 00aa 7B68     		ldr	r3, [r7, #4]
 381 00ac DA62     		str	r2, [r3, #44]
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler value */
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->PSC = TIM_TimeBaseInitStruct->TIM_Prescaler;
 382              		.loc 1 315 0
 383 00ae 3B68     		ldr	r3, [r7]
 384 00b0 1A88     		ldrh	r2, [r3]
 385 00b2 7B68     		ldr	r3, [r7, #4]
 386 00b4 1A85     		strh	r2, [r3, #40]	@ movhi
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((TIMx == TIM1) || (TIMx == TIM8))  
 387              		.loc 1 317 0
 388 00b6 7A68     		ldr	r2, [r7, #4]
 389 00b8 0023     		movs	r3, #0
 390 00ba C4F20103 		movt	r3, 16385
 391 00be 9A42     		cmp	r2, r3
 392 00c0 06D0     		beq	.L20
 393              		.loc 1 317 0 is_stmt 0 discriminator 1
 394 00c2 7A68     		ldr	r2, [r7, #4]
 395 00c4 4FF48063 		mov	r3, #1024
 396 00c8 C4F20103 		movt	r3, 16385
 397 00cc 9A42     		cmp	r2, r3
 398 00ce 04D1     		bne	.L21
 399              	.L20:
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Repetition Counter value */
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->RCR = TIM_TimeBaseInitStruct->TIM_RepetitionCounter;
 400              		.loc 1 320 0 is_stmt 1
 401 00d0 3B68     		ldr	r3, [r7]
 402 00d2 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 403 00d4 1A46     		mov	r2, r3
 404 00d6 7B68     		ldr	r3, [r7, #4]
 405 00d8 1A86     		strh	r2, [r3, #48]	@ movhi
 406              	.L21:
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Generate an update event to reload the Prescaler 
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      and the repetition counter(only for TIM1 and TIM8) value immediatly */
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode_Immediate;          
 407              		.loc 1 325 0
 408 00da 7B68     		ldr	r3, [r7, #4]
 409 00dc 0122     		movs	r2, #1
 410 00de 9A82     		strh	r2, [r3, #20]	@ movhi
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 411              		.loc 1 326 0
 412 00e0 1437     		adds	r7, r7, #20
 413 00e2 BD46     		mov	sp, r7
 414              		@ sp needed
 415 00e4 5DF8047B 		ldr	r7, [sp], #4
 416 00e8 7047     		bx	lr
 417              		.cfi_endproc
 418              	.LFE111:
 420              		.section	.text.TIM_TimeBaseStructInit,"ax",%progbits
 421              		.align	2
 422              		.global	TIM_TimeBaseStructInit
 423              		.thumb
 424              		.thumb_func
 426              	TIM_TimeBaseStructInit:
 427              	.LFB112:
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_TimeBaseInitStruct member with its default value.
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TimeBaseInitStruct : pointer to a TIM_TimeBaseInitTypeDef
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         structure which will be initialized.
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TimeBaseStructInit(TIM_TimeBaseInitTypeDef* TIM_TimeBaseInitStruct)
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 428              		.loc 1 335 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 8
 431              		@ frame_needed = 1, uses_anonymous_args = 0
 432              		@ link register save eliminated.
 433 0000 80B4     		push	{r7}
 434              	.LCFI6:
 435              		.cfi_def_cfa_offset 4
 436              		.cfi_offset 7, -4
 437 0002 83B0     		sub	sp, sp, #12
 438              	.LCFI7:
 439              		.cfi_def_cfa_offset 16
 440 0004 00AF     		add	r7, sp, #0
 441              	.LCFI8:
 442              		.cfi_def_cfa_register 7
 443 0006 7860     		str	r0, [r7, #4]
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Period = 0xFFFFFFFF;
 444              		.loc 1 337 0
 445 0008 7B68     		ldr	r3, [r7, #4]
 446 000a 4FF0FF32 		mov	r2, #-1
 447 000e 5A60     		str	r2, [r3, #4]
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_Prescaler = 0x0000;
 448              		.loc 1 338 0
 449 0010 7B68     		ldr	r3, [r7, #4]
 450 0012 0022     		movs	r2, #0
 451 0014 1A80     		strh	r2, [r3]	@ movhi
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_ClockDivision = TIM_CKD_DIV1;
 452              		.loc 1 339 0
 453 0016 7B68     		ldr	r3, [r7, #4]
 454 0018 0022     		movs	r2, #0
 455 001a 1A81     		strh	r2, [r3, #8]	@ movhi
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_CounterMode = TIM_CounterMode_Up;
 456              		.loc 1 340 0
 457 001c 7B68     		ldr	r3, [r7, #4]
 458 001e 0022     		movs	r2, #0
 459 0020 5A80     		strh	r2, [r3, #2]	@ movhi
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_TimeBaseInitStruct->TIM_RepetitionCounter = 0x0000;
 460              		.loc 1 341 0
 461 0022 7B68     		ldr	r3, [r7, #4]
 462 0024 0022     		movs	r2, #0
 463 0026 9A72     		strb	r2, [r3, #10]
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 464              		.loc 1 342 0
 465 0028 0C37     		adds	r7, r7, #12
 466 002a BD46     		mov	sp, r7
 467              		@ sp needed
 468 002c 5DF8047B 		ldr	r7, [sp], #4
 469 0030 7047     		bx	lr
 470              		.cfi_endproc
 471              	.LFE112:
 473 0032 00BF     		.section	.text.TIM_PrescalerConfig,"ax",%progbits
 474              		.align	2
 475              		.global	TIM_PrescalerConfig
 476              		.thumb
 477              		.thumb_func
 479              	TIM_PrescalerConfig:
 480              	.LFB113:
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Prescaler.
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 to 14 to select the TIM peripheral.
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Prescaler: specifies the Prescaler Register value
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_PSCReloadMode: specifies the TIM Prescaler Reload mode
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_PSCReloadMode_Update: The Prescaler is loaded at the update event.
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_PSCReloadMode_Immediate: The Prescaler is loaded immediatly.
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_PrescalerConfig(TIM_TypeDef* TIMx, uint16_t Prescaler, uint16_t TIM_PSCReloadMode)
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 481              		.loc 1 355 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 8
 484              		@ frame_needed = 1, uses_anonymous_args = 0
 485              		@ link register save eliminated.
 486 0000 80B4     		push	{r7}
 487              	.LCFI9:
 488              		.cfi_def_cfa_offset 4
 489              		.cfi_offset 7, -4
 490 0002 83B0     		sub	sp, sp, #12
 491              	.LCFI10:
 492              		.cfi_def_cfa_offset 16
 493 0004 00AF     		add	r7, sp, #0
 494              	.LCFI11:
 495              		.cfi_def_cfa_register 7
 496 0006 7860     		str	r0, [r7, #4]
 497 0008 1346     		mov	r3, r2
 498 000a 0A46     		mov	r2, r1	@ movhi
 499 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 500 000e 3B80     		strh	r3, [r7]	@ movhi
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_PRESCALER_RELOAD(TIM_PSCReloadMode));
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler value */
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->PSC = Prescaler;
 501              		.loc 1 360 0
 502 0010 7B68     		ldr	r3, [r7, #4]
 503 0012 7A88     		ldrh	r2, [r7, #2]	@ movhi
 504 0014 1A85     		strh	r2, [r3, #40]	@ movhi
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the UG Bit */
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_PSCReloadMode;
 505              		.loc 1 362 0
 506 0016 7B68     		ldr	r3, [r7, #4]
 507 0018 3A88     		ldrh	r2, [r7]	@ movhi
 508 001a 9A82     		strh	r2, [r3, #20]	@ movhi
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 509              		.loc 1 363 0
 510 001c 0C37     		adds	r7, r7, #12
 511 001e BD46     		mov	sp, r7
 512              		@ sp needed
 513 0020 5DF8047B 		ldr	r7, [sp], #4
 514 0024 7047     		bx	lr
 515              		.cfi_endproc
 516              	.LFE113:
 518 0026 00BF     		.section	.text.TIM_CounterModeConfig,"ax",%progbits
 519              		.align	2
 520              		.global	TIM_CounterModeConfig
 521              		.thumb
 522              		.thumb_func
 524              	TIM_CounterModeConfig:
 525              	.LFB114:
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Specifies the TIMx Counter Mode to be used.
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CounterMode: specifies the Counter Mode to be used
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_Up: TIM Up Counting Mode
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_Down: TIM Down Counting Mode
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned1: TIM Center Aligned Mode1
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned2: TIM Center Aligned Mode2
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CounterMode_CenterAligned3: TIM Center Aligned Mode3
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CounterModeConfig(TIM_TypeDef* TIMx, uint16_t TIM_CounterMode)
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 526              		.loc 1 378 0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 16
 529              		@ frame_needed = 1, uses_anonymous_args = 0
 530              		@ link register save eliminated.
 531 0000 80B4     		push	{r7}
 532              	.LCFI12:
 533              		.cfi_def_cfa_offset 4
 534              		.cfi_offset 7, -4
 535 0002 85B0     		sub	sp, sp, #20
 536              	.LCFI13:
 537              		.cfi_def_cfa_offset 24
 538 0004 00AF     		add	r7, sp, #0
 539              	.LCFI14:
 540              		.cfi_def_cfa_register 7
 541 0006 7860     		str	r0, [r7, #4]
 542 0008 0B46     		mov	r3, r1
 543 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpcr1 = 0;
 544              		.loc 1 379 0
 545 000c 0023     		movs	r3, #0
 546 000e FB81     		strh	r3, [r7, #14]	@ movhi
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(TIM_CounterMode));
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 = TIMx->CR1;
 547              		.loc 1 385 0
 548 0010 7B68     		ldr	r3, [r7, #4]
 549 0012 1B88     		ldrh	r3, [r3]	@ movhi
 550 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CMS and DIR Bits */
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 &= (uint16_t)~(TIM_CR1_DIR | TIM_CR1_CMS);
 551              		.loc 1 388 0
 552 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 553 0018 23F07003 		bic	r3, r3, #112
 554 001c FB81     		strh	r3, [r7, #14]	@ movhi
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Counter Mode */
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr1 |= TIM_CounterMode;
 555              		.loc 1 391 0
 556 001e FA89     		ldrh	r2, [r7, #14]	@ movhi
 557 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 558 0022 1343     		orrs	r3, r3, r2
 559 0024 FB81     		strh	r3, [r7, #14]	@ movhi
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR1 register */
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 = tmpcr1;
 560              		.loc 1 394 0
 561 0026 7B68     		ldr	r3, [r7, #4]
 562 0028 FA89     		ldrh	r2, [r7, #14]	@ movhi
 563 002a 1A80     		strh	r2, [r3]	@ movhi
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 564              		.loc 1 395 0
 565 002c 1437     		adds	r7, r7, #20
 566 002e BD46     		mov	sp, r7
 567              		@ sp needed
 568 0030 5DF8047B 		ldr	r7, [sp], #4
 569 0034 7047     		bx	lr
 570              		.cfi_endproc
 571              	.LFE114:
 573 0036 00BF     		.section	.text.TIM_SetCounter,"ax",%progbits
 574              		.align	2
 575              		.global	TIM_SetCounter
 576              		.thumb
 577              		.thumb_func
 579              	TIM_SetCounter:
 580              	.LFB115:
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Counter Register value
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Counter: specifies the Counter register new value.
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCounter(TIM_TypeDef* TIMx, uint32_t Counter)
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 581              		.loc 1 404 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 8
 584              		@ frame_needed = 1, uses_anonymous_args = 0
 585              		@ link register save eliminated.
 586 0000 80B4     		push	{r7}
 587              	.LCFI15:
 588              		.cfi_def_cfa_offset 4
 589              		.cfi_offset 7, -4
 590 0002 83B0     		sub	sp, sp, #12
 591              	.LCFI16:
 592              		.cfi_def_cfa_offset 16
 593 0004 00AF     		add	r7, sp, #0
 594              	.LCFI17:
 595              		.cfi_def_cfa_register 7
 596 0006 7860     		str	r0, [r7, #4]
 597 0008 3960     		str	r1, [r7]
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    assert_param(IS_TIM_ALL_PERIPH(TIMx));
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Counter Register value */
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CNT = Counter;
 598              		.loc 1 409 0
 599 000a 7B68     		ldr	r3, [r7, #4]
 600 000c 3A68     		ldr	r2, [r7]
 601 000e 5A62     		str	r2, [r3, #36]
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 602              		.loc 1 410 0
 603 0010 0C37     		adds	r7, r7, #12
 604 0012 BD46     		mov	sp, r7
 605              		@ sp needed
 606 0014 5DF8047B 		ldr	r7, [sp], #4
 607 0018 7047     		bx	lr
 608              		.cfi_endproc
 609              	.LFE115:
 611 001a 00BF     		.section	.text.TIM_SetAutoreload,"ax",%progbits
 612              		.align	2
 613              		.global	TIM_SetAutoreload
 614              		.thumb
 615              		.thumb_func
 617              	TIM_SetAutoreload:
 618              	.LFB116:
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Autoreload Register value
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Autoreload: specifies the Autoreload register new value.
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetAutoreload(TIM_TypeDef* TIMx, uint32_t Autoreload)
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 619              		.loc 1 419 0
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 8
 622              		@ frame_needed = 1, uses_anonymous_args = 0
 623              		@ link register save eliminated.
 624 0000 80B4     		push	{r7}
 625              	.LCFI18:
 626              		.cfi_def_cfa_offset 4
 627              		.cfi_offset 7, -4
 628 0002 83B0     		sub	sp, sp, #12
 629              	.LCFI19:
 630              		.cfi_def_cfa_offset 16
 631 0004 00AF     		add	r7, sp, #0
 632              	.LCFI20:
 633              		.cfi_def_cfa_register 7
 634 0006 7860     		str	r0, [r7, #4]
 635 0008 3960     		str	r1, [r7]
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Autoreload Register value */
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->ARR = Autoreload;
 636              		.loc 1 424 0
 637 000a 7B68     		ldr	r3, [r7, #4]
 638 000c 3A68     		ldr	r2, [r7]
 639 000e DA62     		str	r2, [r3, #44]
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 640              		.loc 1 425 0
 641 0010 0C37     		adds	r7, r7, #12
 642 0012 BD46     		mov	sp, r7
 643              		@ sp needed
 644 0014 5DF8047B 		ldr	r7, [sp], #4
 645 0018 7047     		bx	lr
 646              		.cfi_endproc
 647              	.LFE116:
 649 001a 00BF     		.section	.text.TIM_GetCounter,"ax",%progbits
 650              		.align	2
 651              		.global	TIM_GetCounter
 652              		.thumb
 653              		.thumb_func
 655              	TIM_GetCounter:
 656              	.LFB117:
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Counter value.
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Counter Register value
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCounter(TIM_TypeDef* TIMx)
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 657              		.loc 1 433 0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 8
 660              		@ frame_needed = 1, uses_anonymous_args = 0
 661              		@ link register save eliminated.
 662 0000 80B4     		push	{r7}
 663              	.LCFI21:
 664              		.cfi_def_cfa_offset 4
 665              		.cfi_offset 7, -4
 666 0002 83B0     		sub	sp, sp, #12
 667              	.LCFI22:
 668              		.cfi_def_cfa_offset 16
 669 0004 00AF     		add	r7, sp, #0
 670              	.LCFI23:
 671              		.cfi_def_cfa_register 7
 672 0006 7860     		str	r0, [r7, #4]
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Counter Register value */
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CNT;
 673              		.loc 1 438 0
 674 0008 7B68     		ldr	r3, [r7, #4]
 675 000a 5B6A     		ldr	r3, [r3, #36]
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 676              		.loc 1 439 0
 677 000c 1846     		mov	r0, r3
 678 000e 0C37     		adds	r7, r7, #12
 679 0010 BD46     		mov	sp, r7
 680              		@ sp needed
 681 0012 5DF8047B 		ldr	r7, [sp], #4
 682 0016 7047     		bx	lr
 683              		.cfi_endproc
 684              	.LFE117:
 686              		.section	.text.TIM_GetPrescaler,"ax",%progbits
 687              		.align	2
 688              		.global	TIM_GetPrescaler
 689              		.thumb
 690              		.thumb_func
 692              	TIM_GetPrescaler:
 693              	.LFB118:
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Prescaler value.
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Prescaler Register value.
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint16_t TIM_GetPrescaler(TIM_TypeDef* TIMx)
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 694              		.loc 1 447 0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 8
 697              		@ frame_needed = 1, uses_anonymous_args = 0
 698              		@ link register save eliminated.
 699 0000 80B4     		push	{r7}
 700              	.LCFI24:
 701              		.cfi_def_cfa_offset 4
 702              		.cfi_offset 7, -4
 703 0002 83B0     		sub	sp, sp, #12
 704              	.LCFI25:
 705              		.cfi_def_cfa_offset 16
 706 0004 00AF     		add	r7, sp, #0
 707              	.LCFI26:
 708              		.cfi_def_cfa_register 7
 709 0006 7860     		str	r0, [r7, #4]
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Prescaler Register value */
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->PSC;
 710              		.loc 1 452 0
 711 0008 7B68     		ldr	r3, [r7, #4]
 712 000a 1B8D     		ldrh	r3, [r3, #40]	@ movhi
 713 000c 9BB2     		uxth	r3, r3
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 714              		.loc 1 453 0
 715 000e 1846     		mov	r0, r3
 716 0010 0C37     		adds	r7, r7, #12
 717 0012 BD46     		mov	sp, r7
 718              		@ sp needed
 719 0014 5DF8047B 		ldr	r7, [sp], #4
 720 0018 7047     		bx	lr
 721              		.cfi_endproc
 722              	.LFE118:
 724 001a 00BF     		.section	.text.TIM_UpdateDisableConfig,"ax",%progbits
 725              		.align	2
 726              		.global	TIM_UpdateDisableConfig
 727              		.thumb
 728              		.thumb_func
 730              	TIM_UpdateDisableConfig:
 731              	.LFB119:
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or Disables the TIMx Update event.
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx UDIS bit
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_UpdateDisableConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 732              		.loc 1 463 0
 733              		.cfi_startproc
 734              		@ args = 0, pretend = 0, frame = 8
 735              		@ frame_needed = 1, uses_anonymous_args = 0
 736              		@ link register save eliminated.
 737 0000 80B4     		push	{r7}
 738              	.LCFI27:
 739              		.cfi_def_cfa_offset 4
 740              		.cfi_offset 7, -4
 741 0002 83B0     		sub	sp, sp, #12
 742              	.LCFI28:
 743              		.cfi_def_cfa_offset 16
 744 0004 00AF     		add	r7, sp, #0
 745              	.LCFI29:
 746              		.cfi_def_cfa_register 7
 747 0006 7860     		str	r0, [r7, #4]
 748 0008 0B46     		mov	r3, r1
 749 000a FB70     		strb	r3, [r7, #3]
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 750              		.loc 1 468 0
 751 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 752 000e 002B     		cmp	r3, #0
 753 0010 08D0     		beq	.L32
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Update Disable Bit */
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_UDIS;
 754              		.loc 1 471 0
 755 0012 7B68     		ldr	r3, [r7, #4]
 756 0014 1B88     		ldrh	r3, [r3]	@ movhi
 757 0016 9BB2     		uxth	r3, r3
 758 0018 43F00203 		orr	r3, r3, #2
 759 001c 9AB2     		uxth	r2, r3
 760 001e 7B68     		ldr	r3, [r7, #4]
 761 0020 1A80     		strh	r2, [r3]	@ movhi
 762 0022 07E0     		b	.L31
 763              	.L32:
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Update Disable Bit */
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_UDIS;
 764              		.loc 1 476 0
 765 0024 7B68     		ldr	r3, [r7, #4]
 766 0026 1B88     		ldrh	r3, [r3]	@ movhi
 767 0028 9BB2     		uxth	r3, r3
 768 002a 23F00203 		bic	r3, r3, #2
 769 002e 9AB2     		uxth	r2, r3
 770 0030 7B68     		ldr	r3, [r7, #4]
 771 0032 1A80     		strh	r2, [r3]	@ movhi
 772              	.L31:
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 773              		.loc 1 478 0
 774 0034 0C37     		adds	r7, r7, #12
 775 0036 BD46     		mov	sp, r7
 776              		@ sp needed
 777 0038 5DF8047B 		ldr	r7, [sp], #4
 778 003c 7047     		bx	lr
 779              		.cfi_endproc
 780              	.LFE119:
 782 003e 00BF     		.section	.text.TIM_UpdateRequestConfig,"ax",%progbits
 783              		.align	2
 784              		.global	TIM_UpdateRequestConfig
 785              		.thumb
 786              		.thumb_func
 788              	TIM_UpdateRequestConfig:
 789              	.LFB120:
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Update Request Interrupt source.
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_UpdateSource: specifies the Update source.
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_UpdateSource_Regular: Source of update is the counter
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 overflow/underflow or the setting of UG bit, or an update
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                 generation through the slave mode controller.
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_UpdateSource_Global: Source of update is counter overflow/underflow.
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_UpdateRequestConfig(TIM_TypeDef* TIMx, uint16_t TIM_UpdateSource)
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 790              		.loc 1 492 0
 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 8
 793              		@ frame_needed = 1, uses_anonymous_args = 0
 794              		@ link register save eliminated.
 795 0000 80B4     		push	{r7}
 796              	.LCFI30:
 797              		.cfi_def_cfa_offset 4
 798              		.cfi_offset 7, -4
 799 0002 83B0     		sub	sp, sp, #12
 800              	.LCFI31:
 801              		.cfi_def_cfa_offset 16
 802 0004 00AF     		add	r7, sp, #0
 803              	.LCFI32:
 804              		.cfi_def_cfa_register 7
 805 0006 7860     		str	r0, [r7, #4]
 806 0008 0B46     		mov	r3, r1
 807 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_UPDATE_SOURCE(TIM_UpdateSource));
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_UpdateSource != TIM_UpdateSource_Global)
 808              		.loc 1 497 0
 809 000c 7B88     		ldrh	r3, [r7, #2]
 810 000e 002B     		cmp	r3, #0
 811 0010 08D0     		beq	.L35
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the URS Bit */
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_URS;
 812              		.loc 1 500 0
 813 0012 7B68     		ldr	r3, [r7, #4]
 814 0014 1B88     		ldrh	r3, [r3]	@ movhi
 815 0016 9BB2     		uxth	r3, r3
 816 0018 43F00403 		orr	r3, r3, #4
 817 001c 9AB2     		uxth	r2, r3
 818 001e 7B68     		ldr	r3, [r7, #4]
 819 0020 1A80     		strh	r2, [r3]	@ movhi
 820 0022 07E0     		b	.L34
 821              	.L35:
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the URS Bit */
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_URS;
 822              		.loc 1 505 0
 823 0024 7B68     		ldr	r3, [r7, #4]
 824 0026 1B88     		ldrh	r3, [r3]	@ movhi
 825 0028 9BB2     		uxth	r3, r3
 826 002a 23F00403 		bic	r3, r3, #4
 827 002e 9AB2     		uxth	r2, r3
 828 0030 7B68     		ldr	r3, [r7, #4]
 829 0032 1A80     		strh	r2, [r3]	@ movhi
 830              	.L34:
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 831              		.loc 1 507 0
 832 0034 0C37     		adds	r7, r7, #12
 833 0036 BD46     		mov	sp, r7
 834              		@ sp needed
 835 0038 5DF8047B 		ldr	r7, [sp], #4
 836 003c 7047     		bx	lr
 837              		.cfi_endproc
 838              	.LFE120:
 840 003e 00BF     		.section	.text.TIM_ARRPreloadConfig,"ax",%progbits
 841              		.align	2
 842              		.global	TIM_ARRPreloadConfig
 843              		.thumb
 844              		.thumb_func
 846              	TIM_ARRPreloadConfig:
 847              	.LFB121:
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables TIMx peripheral Preload register on ARR.
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral Preload register
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ARRPreloadConfig(TIM_TypeDef* TIMx, FunctionalState NewState)
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 848              		.loc 1 517 0
 849              		.cfi_startproc
 850              		@ args = 0, pretend = 0, frame = 8
 851              		@ frame_needed = 1, uses_anonymous_args = 0
 852              		@ link register save eliminated.
 853 0000 80B4     		push	{r7}
 854              	.LCFI33:
 855              		.cfi_def_cfa_offset 4
 856              		.cfi_offset 7, -4
 857 0002 83B0     		sub	sp, sp, #12
 858              	.LCFI34:
 859              		.cfi_def_cfa_offset 16
 860 0004 00AF     		add	r7, sp, #0
 861              	.LCFI35:
 862              		.cfi_def_cfa_register 7
 863 0006 7860     		str	r0, [r7, #4]
 864 0008 0B46     		mov	r3, r1
 865 000a FB70     		strb	r3, [r7, #3]
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 866              		.loc 1 522 0
 867 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 868 000e 002B     		cmp	r3, #0
 869 0010 08D0     		beq	.L38
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the ARR Preload Bit */
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_ARPE;
 870              		.loc 1 525 0
 871 0012 7B68     		ldr	r3, [r7, #4]
 872 0014 1B88     		ldrh	r3, [r3]	@ movhi
 873 0016 9BB2     		uxth	r3, r3
 874 0018 43F08003 		orr	r3, r3, #128
 875 001c 9AB2     		uxth	r2, r3
 876 001e 7B68     		ldr	r3, [r7, #4]
 877 0020 1A80     		strh	r2, [r3]	@ movhi
 878 0022 07E0     		b	.L37
 879              	.L38:
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the ARR Preload Bit */
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_ARPE;
 880              		.loc 1 530 0
 881 0024 7B68     		ldr	r3, [r7, #4]
 882 0026 1B88     		ldrh	r3, [r3]	@ movhi
 883 0028 9BB2     		uxth	r3, r3
 884 002a 23F08003 		bic	r3, r3, #128
 885 002e 9AB2     		uxth	r2, r3
 886 0030 7B68     		ldr	r3, [r7, #4]
 887 0032 1A80     		strh	r2, [r3]	@ movhi
 888              	.L37:
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 889              		.loc 1 532 0
 890 0034 0C37     		adds	r7, r7, #12
 891 0036 BD46     		mov	sp, r7
 892              		@ sp needed
 893 0038 5DF8047B 		ldr	r7, [sp], #4
 894 003c 7047     		bx	lr
 895              		.cfi_endproc
 896              	.LFE121:
 898 003e 00BF     		.section	.text.TIM_SelectOnePulseMode,"ax",%progbits
 899              		.align	2
 900              		.global	TIM_SelectOnePulseMode
 901              		.thumb
 902              		.thumb_func
 904              	TIM_SelectOnePulseMode:
 905              	.LFB122:
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx's One Pulse Mode.
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OPMode: specifies the OPM Mode to be used.
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OPMode_Single
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OPMode_Repetitive
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOnePulseMode(TIM_TypeDef* TIMx, uint16_t TIM_OPMode)
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 906              		.loc 1 544 0
 907              		.cfi_startproc
 908              		@ args = 0, pretend = 0, frame = 8
 909              		@ frame_needed = 1, uses_anonymous_args = 0
 910              		@ link register save eliminated.
 911 0000 80B4     		push	{r7}
 912              	.LCFI36:
 913              		.cfi_def_cfa_offset 4
 914              		.cfi_offset 7, -4
 915 0002 83B0     		sub	sp, sp, #12
 916              	.LCFI37:
 917              		.cfi_def_cfa_offset 16
 918 0004 00AF     		add	r7, sp, #0
 919              	.LCFI38:
 920              		.cfi_def_cfa_register 7
 921 0006 7860     		str	r0, [r7, #4]
 922 0008 0B46     		mov	r3, r1
 923 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OPM_MODE(TIM_OPMode));
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OPM Bit */
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 &= (uint16_t)~TIM_CR1_OPM;
 924              		.loc 1 550 0
 925 000c 7B68     		ldr	r3, [r7, #4]
 926 000e 1B88     		ldrh	r3, [r3]	@ movhi
 927 0010 9BB2     		uxth	r3, r3
 928 0012 23F00803 		bic	r3, r3, #8
 929 0016 9AB2     		uxth	r2, r3
 930 0018 7B68     		ldr	r3, [r7, #4]
 931 001a 1A80     		strh	r2, [r3]	@ movhi
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the OPM Mode */
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 |= TIM_OPMode;
 932              		.loc 1 553 0
 933 001c 7B68     		ldr	r3, [r7, #4]
 934 001e 1B88     		ldrh	r3, [r3]	@ movhi
 935 0020 9AB2     		uxth	r2, r3
 936 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 937 0024 1343     		orrs	r3, r3, r2
 938 0026 9AB2     		uxth	r2, r3
 939 0028 7B68     		ldr	r3, [r7, #4]
 940 002a 1A80     		strh	r2, [r3]	@ movhi
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 941              		.loc 1 554 0
 942 002c 0C37     		adds	r7, r7, #12
 943 002e BD46     		mov	sp, r7
 944              		@ sp needed
 945 0030 5DF8047B 		ldr	r7, [sp], #4
 946 0034 7047     		bx	lr
 947              		.cfi_endproc
 948              	.LFE122:
 950 0036 00BF     		.section	.text.TIM_SetClockDivision,"ax",%progbits
 951              		.align	2
 952              		.global	TIM_SetClockDivision
 953              		.thumb
 954              		.thumb_func
 956              	TIM_SetClockDivision:
 957              	.LFB123:
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Clock Division value.
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CKD: specifies the clock division value.
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following value:
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV1: TDTS = Tck_tim
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV2: TDTS = 2*Tck_tim
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_CKD_DIV4: TDTS = 4*Tck_tim
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetClockDivision(TIM_TypeDef* TIMx, uint16_t TIM_CKD)
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 958              		.loc 1 567 0
 959              		.cfi_startproc
 960              		@ args = 0, pretend = 0, frame = 8
 961              		@ frame_needed = 1, uses_anonymous_args = 0
 962              		@ link register save eliminated.
 963 0000 80B4     		push	{r7}
 964              	.LCFI39:
 965              		.cfi_def_cfa_offset 4
 966              		.cfi_offset 7, -4
 967 0002 83B0     		sub	sp, sp, #12
 968              	.LCFI40:
 969              		.cfi_def_cfa_offset 16
 970 0004 00AF     		add	r7, sp, #0
 971              	.LCFI41:
 972              		.cfi_def_cfa_register 7
 973 0006 7860     		str	r0, [r7, #4]
 974 0008 0B46     		mov	r3, r1
 975 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CKD_DIV(TIM_CKD));
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CKD Bits */
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 &= (uint16_t)(~TIM_CR1_CKD);
 976              		.loc 1 573 0
 977 000c 7B68     		ldr	r3, [r7, #4]
 978 000e 1B88     		ldrh	r3, [r3]	@ movhi
 979 0010 9BB2     		uxth	r3, r3
 980 0012 23F44073 		bic	r3, r3, #768
 981 0016 9AB2     		uxth	r2, r3
 982 0018 7B68     		ldr	r3, [r7, #4]
 983 001a 1A80     		strh	r2, [r3]	@ movhi
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the CKD value */
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR1 |= TIM_CKD;
 984              		.loc 1 576 0
 985 001c 7B68     		ldr	r3, [r7, #4]
 986 001e 1B88     		ldrh	r3, [r3]	@ movhi
 987 0020 9AB2     		uxth	r2, r3
 988 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 989 0024 1343     		orrs	r3, r3, r2
 990 0026 9AB2     		uxth	r2, r3
 991 0028 7B68     		ldr	r3, [r7, #4]
 992 002a 1A80     		strh	r2, [r3]	@ movhi
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 993              		.loc 1 577 0
 994 002c 0C37     		adds	r7, r7, #12
 995 002e BD46     		mov	sp, r7
 996              		@ sp needed
 997 0030 5DF8047B 		ldr	r7, [sp], #4
 998 0034 7047     		bx	lr
 999              		.cfi_endproc
 1000              	.LFE123:
 1002 0036 00BF     		.section	.text.TIM_Cmd,"ax",%progbits
 1003              		.align	2
 1004              		.global	TIM_Cmd
 1005              		.thumb
 1006              		.thumb_func
 1008              	TIM_Cmd:
 1009              	.LFB124:
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the specified TIM peripheral.
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIMx peripheral.
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx peripheral.
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_Cmd(TIM_TypeDef* TIMx, FunctionalState NewState)
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1010              		.loc 1 587 0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 8
 1013              		@ frame_needed = 1, uses_anonymous_args = 0
 1014              		@ link register save eliminated.
 1015 0000 80B4     		push	{r7}
 1016              	.LCFI42:
 1017              		.cfi_def_cfa_offset 4
 1018              		.cfi_offset 7, -4
 1019 0002 83B0     		sub	sp, sp, #12
 1020              	.LCFI43:
 1021              		.cfi_def_cfa_offset 16
 1022 0004 00AF     		add	r7, sp, #0
 1023              	.LCFI44:
 1024              		.cfi_def_cfa_register 7
 1025 0006 7860     		str	r0, [r7, #4]
 1026 0008 0B46     		mov	r3, r1
 1027 000a FB70     		strb	r3, [r7, #3]
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx)); 
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 1028              		.loc 1 592 0
 1029 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1030 000e 002B     		cmp	r3, #0
 1031 0010 08D0     		beq	.L43
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the TIM Counter */
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 |= TIM_CR1_CEN;
 1032              		.loc 1 595 0
 1033 0012 7B68     		ldr	r3, [r7, #4]
 1034 0014 1B88     		ldrh	r3, [r3]	@ movhi
 1035 0016 9BB2     		uxth	r3, r3
 1036 0018 43F00103 		orr	r3, r3, #1
 1037 001c 9AB2     		uxth	r2, r3
 1038 001e 7B68     		ldr	r3, [r7, #4]
 1039 0020 1A80     		strh	r2, [r3]	@ movhi
 1040 0022 07E0     		b	.L42
 1041              	.L43:
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the TIM Counter */
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR1 &= (uint16_t)~TIM_CR1_CEN;
 1042              		.loc 1 600 0
 1043 0024 7B68     		ldr	r3, [r7, #4]
 1044 0026 1B88     		ldrh	r3, [r3]	@ movhi
 1045 0028 9BB2     		uxth	r3, r3
 1046 002a 23F00103 		bic	r3, r3, #1
 1047 002e 9AB2     		uxth	r2, r3
 1048 0030 7B68     		ldr	r3, [r7, #4]
 1049 0032 1A80     		strh	r2, [r3]	@ movhi
 1050              	.L42:
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1051              		.loc 1 602 0
 1052 0034 0C37     		adds	r7, r7, #12
 1053 0036 BD46     		mov	sp, r7
 1054              		@ sp needed
 1055 0038 5DF8047B 		ldr	r7, [sp], #4
 1056 003c 7047     		bx	lr
 1057              		.cfi_endproc
 1058              	.LFE124:
 1060 003e 00BF     		.section	.text.TIM_OC1Init,"ax",%progbits
 1061              		.align	2
 1062              		.global	TIM_OC1Init
 1063              		.thumb
 1064              		.thumb_func
 1066              	TIM_OC1Init:
 1067              	.LFB125:
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group2 Output Compare management functions
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Output Compare management functions 
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                         Output Compare management functions
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Output Compare Mode
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Output Compare mode, the following steps are mandatory:
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the TIM pins by configuring the corresponding GPIO pins
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Time base unit as described in the first part of this driver, 
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           if needed, else the Timer will run with the default configuration:
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Autoreload value = 0xFFFF
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Prescaler value = 0x0000
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Counter mode = Up counting
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Clock Division = TIM_CKD_DIV1
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Fill the TIM_OCInitStruct with the desired parameters including:
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - The TIM Output Compare mode: TIM_OCMode
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Output State: TIM_OutputState
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Pulse value: TIM_Pulse
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Output Compare Polarity : TIM_OCPolarity
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Call TIM_OCxInit(TIMx, &TIM_OCInitStruct) to configure the desired channel with the 
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               a specific feature of the Timer. 
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note2: In case of PWM mode, this function is mandatory:
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM_OCxPreloadConfig(TIMx, TIM_OCPreload_ENABLE); 
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note3: If the corresponding interrupt or DMA request are needed, the user should:
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                 1. Enable the NVIC (or the DMA) to use the TIM interrupts (or DMA requests). 
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                 2. Enable the corresponding interrupt (or DMA request) using the function 
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx))   
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel1 according to the specified parameters in
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the TIM_OCInitStruct.
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1068              		.loc 1 666 0
 1069              		.cfi_startproc
 1070              		@ args = 0, pretend = 0, frame = 16
 1071              		@ frame_needed = 1, uses_anonymous_args = 0
 1072              		@ link register save eliminated.
 1073 0000 80B4     		push	{r7}
 1074              	.LCFI45:
 1075              		.cfi_def_cfa_offset 4
 1076              		.cfi_offset 7, -4
 1077 0002 85B0     		sub	sp, sp, #20
 1078              	.LCFI46:
 1079              		.cfi_def_cfa_offset 24
 1080 0004 00AF     		add	r7, sp, #0
 1081              	.LCFI47:
 1082              		.cfi_def_cfa_register 7
 1083 0006 7860     		str	r0, [r7, #4]
 1084 0008 3960     		str	r1, [r7]
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1085              		.loc 1 667 0
 1086 000a 0023     		movs	r3, #0
 1087 000c 7B81     		strh	r3, [r7, #10]	@ movhi
 1088 000e 0023     		movs	r3, #0
 1089 0010 FB81     		strh	r3, [r7, #14]	@ movhi
 1090 0012 0023     		movs	r3, #0
 1091 0014 BB81     		strh	r3, [r7, #12]	@ movhi
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
 1092              		.loc 1 676 0
 1093 0016 7B68     		ldr	r3, [r7, #4]
 1094 0018 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1095 001a 9BB2     		uxth	r3, r3
 1096 001c 23F00103 		bic	r3, r3, #1
 1097 0020 9AB2     		uxth	r2, r3
 1098 0022 7B68     		ldr	r3, [r7, #4]
 1099 0024 1A84     		strh	r2, [r3, #32]	@ movhi
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1100              		.loc 1 679 0
 1101 0026 7B68     		ldr	r3, [r7, #4]
 1102 0028 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1103 002a FB81     		strh	r3, [r7, #14]	@ movhi
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1104              		.loc 1 681 0
 1105 002c 7B68     		ldr	r3, [r7, #4]
 1106 002e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1107 0030 BB81     		strh	r3, [r7, #12]	@ movhi
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 1108              		.loc 1 684 0
 1109 0032 7B68     		ldr	r3, [r7, #4]
 1110 0034 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1111 0036 7B81     		strh	r3, [r7, #10]	@ movhi
 685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare Mode Bits */
 687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_OC1M;
 1112              		.loc 1 687 0
 1113 0038 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1114 003a 23F07003 		bic	r3, r3, #112
 1115 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC1S;
 1116              		.loc 1 688 0
 1117 0040 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1118 0042 23F00303 		bic	r3, r3, #3
 1119 0046 7B81     		strh	r3, [r7, #10]	@ movhi
 689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 1120              		.loc 1 690 0
 1121 0048 3B68     		ldr	r3, [r7]
 1122 004a 1A88     		ldrh	r2, [r3]
 1123 004c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1124 004e 1343     		orrs	r3, r3, r2
 1125 0050 7B81     		strh	r3, [r7, #10]	@ movhi
 691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1P;
 1126              		.loc 1 693 0
 1127 0052 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1128 0054 23F00203 		bic	r3, r3, #2
 1129 0058 FB81     		strh	r3, [r7, #14]	@ movhi
 694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OCPolarity;
 1130              		.loc 1 695 0
 1131 005a 3B68     		ldr	r3, [r7]
 1132 005c 9A89     		ldrh	r2, [r3, #12]
 1133 005e FB89     		ldrh	r3, [r7, #14]	@ movhi
 1134 0060 1343     		orrs	r3, r3, r2
 1135 0062 FB81     		strh	r3, [r7, #14]	@ movhi
 696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCInitStruct->TIM_OutputState;
 1136              		.loc 1 698 0
 1137 0064 3B68     		ldr	r3, [r7]
 1138 0066 5A88     		ldrh	r2, [r3, #2]
 1139 0068 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1140 006a 1343     		orrs	r3, r3, r2
 1141 006c FB81     		strh	r3, [r7, #14]	@ movhi
 699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1142              		.loc 1 700 0
 1143 006e 7A68     		ldr	r2, [r7, #4]
 1144 0070 0023     		movs	r3, #0
 1145 0072 C4F20103 		movt	r3, 16385
 1146 0076 9A42     		cmp	r2, r3
 1147 0078 06D0     		beq	.L46
 1148              		.loc 1 700 0 is_stmt 0 discriminator 1
 1149 007a 7A68     		ldr	r2, [r7, #4]
 1150 007c 4FF48063 		mov	r3, #1024
 1151 0080 C4F20103 		movt	r3, 16385
 1152 0084 9A42     		cmp	r2, r3
 1153 0086 23D1     		bne	.L47
 1154              	.L46:
 701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
 1155              		.loc 1 708 0 is_stmt 1
 1156 0088 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1157 008a 23F00803 		bic	r3, r3, #8
 1158 008e FB81     		strh	r3, [r7, #14]	@ movhi
 709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OCNPolarity;
 1159              		.loc 1 710 0
 1160 0090 3B68     		ldr	r3, [r7]
 1161 0092 DA89     		ldrh	r2, [r3, #14]
 1162 0094 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1163 0096 1343     		orrs	r3, r3, r2
 1164 0098 FB81     		strh	r3, [r7, #14]	@ movhi
 711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC1NE;
 1165              		.loc 1 712 0
 1166 009a FB89     		ldrh	r3, [r7, #14]	@ movhi
 1167 009c 23F00403 		bic	r3, r3, #4
 1168 00a0 FB81     		strh	r3, [r7, #14]	@ movhi
 713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= TIM_OCInitStruct->TIM_OutputNState;
 1169              		.loc 1 715 0
 1170 00a2 3B68     		ldr	r3, [r7]
 1171 00a4 9A88     		ldrh	r2, [r3, #4]
 1172 00a6 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1173 00a8 1343     		orrs	r3, r3, r2
 1174 00aa FB81     		strh	r3, [r7, #14]	@ movhi
 716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1;
 1175              		.loc 1 717 0
 1176 00ac BB89     		ldrh	r3, [r7, #12]	@ movhi
 1177 00ae 23F48073 		bic	r3, r3, #256
 1178 00b2 BB81     		strh	r3, [r7, #12]	@ movhi
 718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS1N;
 1179              		.loc 1 718 0
 1180 00b4 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1181 00b6 23F40073 		bic	r3, r3, #512
 1182 00ba BB81     		strh	r3, [r7, #12]	@ movhi
 719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCIdleState;
 1183              		.loc 1 720 0
 1184 00bc 3B68     		ldr	r3, [r7]
 1185 00be 1A8A     		ldrh	r2, [r3, #16]
 1186 00c0 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1187 00c2 1343     		orrs	r3, r3, r2
 1188 00c4 BB81     		strh	r3, [r7, #12]	@ movhi
 721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= TIM_OCInitStruct->TIM_OCNIdleState;
 1189              		.loc 1 722 0
 1190 00c6 3B68     		ldr	r3, [r7]
 1191 00c8 5A8A     		ldrh	r2, [r3, #18]
 1192 00ca BB89     		ldrh	r3, [r7, #12]	@ movhi
 1193 00cc 1343     		orrs	r3, r3, r2
 1194 00ce BB81     		strh	r3, [r7, #12]	@ movhi
 1195              	.L47:
 723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1196              		.loc 1 725 0
 1197 00d0 7B68     		ldr	r3, [r7, #4]
 1198 00d2 BA89     		ldrh	r2, [r7, #12]	@ movhi
 1199 00d4 9A80     		strh	r2, [r3, #4]	@ movhi
 726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
 728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 1200              		.loc 1 728 0
 1201 00d6 7B68     		ldr	r3, [r7, #4]
 1202 00d8 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1203 00da 1A83     		strh	r2, [r3, #24]	@ movhi
 729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR1 = TIM_OCInitStruct->TIM_Pulse;
 1204              		.loc 1 731 0
 1205 00dc 3B68     		ldr	r3, [r7]
 1206 00de 9A68     		ldr	r2, [r3, #8]
 1207 00e0 7B68     		ldr	r3, [r7, #4]
 1208 00e2 5A63     		str	r2, [r3, #52]
 732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1209              		.loc 1 734 0
 1210 00e4 7B68     		ldr	r3, [r7, #4]
 1211 00e6 FA89     		ldrh	r2, [r7, #14]	@ movhi
 1212 00e8 1A84     		strh	r2, [r3, #32]	@ movhi
 735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1213              		.loc 1 735 0
 1214 00ea 1437     		adds	r7, r7, #20
 1215 00ec BD46     		mov	sp, r7
 1216              		@ sp needed
 1217 00ee 5DF8047B 		ldr	r7, [sp], #4
 1218 00f2 7047     		bx	lr
 1219              		.cfi_endproc
 1220              	.LFE125:
 1222              		.section	.text.TIM_OC2Init,"ax",%progbits
 1223              		.align	2
 1224              		.global	TIM_OC2Init
 1225              		.thumb
 1226              		.thumb_func
 1228              	TIM_OC2Init:
 1229              	.LFB126:
 736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel2 according to the specified parameters 
 739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
 741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
 742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1230              		.loc 1 747 0
 1231              		.cfi_startproc
 1232              		@ args = 0, pretend = 0, frame = 16
 1233              		@ frame_needed = 1, uses_anonymous_args = 0
 1234              		@ link register save eliminated.
 1235 0000 80B4     		push	{r7}
 1236              	.LCFI48:
 1237              		.cfi_def_cfa_offset 4
 1238              		.cfi_offset 7, -4
 1239 0002 85B0     		sub	sp, sp, #20
 1240              	.LCFI49:
 1241              		.cfi_def_cfa_offset 24
 1242 0004 00AF     		add	r7, sp, #0
 1243              	.LCFI50:
 1244              		.cfi_def_cfa_register 7
 1245 0006 7860     		str	r0, [r7, #4]
 1246 0008 3960     		str	r1, [r7]
 748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1247              		.loc 1 748 0
 1248 000a 0023     		movs	r3, #0
 1249 000c 7B81     		strh	r3, [r7, #10]	@ movhi
 1250 000e 0023     		movs	r3, #0
 1251 0010 FB81     		strh	r3, [r7, #14]	@ movhi
 1252 0012 0023     		movs	r3, #0
 1253 0014 BB81     		strh	r3, [r7, #12]	@ movhi
 749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx)); 
 752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
 757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 1254              		.loc 1 757 0
 1255 0016 7B68     		ldr	r3, [r7, #4]
 1256 0018 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1257 001a 9BB2     		uxth	r3, r3
 1258 001c 23F01003 		bic	r3, r3, #16
 1259 0020 9AB2     		uxth	r2, r3
 1260 0022 7B68     		ldr	r3, [r7, #4]
 1261 0024 1A84     		strh	r2, [r3, #32]	@ movhi
 758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */  
 760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1262              		.loc 1 760 0
 1263 0026 7B68     		ldr	r3, [r7, #4]
 1264 0028 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1265 002a FB81     		strh	r3, [r7, #14]	@ movhi
 761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1266              		.loc 1 762 0
 1267 002c 7B68     		ldr	r3, [r7, #4]
 1268 002e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1269 0030 BB81     		strh	r3, [r7, #12]	@ movhi
 763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
 765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR1;
 1270              		.loc 1 765 0
 1271 0032 7B68     		ldr	r3, [r7, #4]
 1272 0034 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 1273 0036 7B81     		strh	r3, [r7, #10]	@ movhi
 766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_OC2M;
 1274              		.loc 1 768 0
 1275 0038 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1276 003a 23F4E043 		bic	r3, r3, #28672
 1277 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR1_CC2S;
 1278              		.loc 1 769 0
 1279 0040 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1280 0042 23F44073 		bic	r3, r3, #768
 1281 0046 7B81     		strh	r3, [r7, #10]	@ movhi
 770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1282              		.loc 1 772 0
 1283 0048 3B68     		ldr	r3, [r7]
 1284 004a 1B88     		ldrh	r3, [r3]
 1285 004c 1B02     		lsls	r3, r3, #8
 1286 004e 9AB2     		uxth	r2, r3
 1287 0050 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1288 0052 1343     		orrs	r3, r3, r2
 1289 0054 7B81     		strh	r3, [r7, #10]	@ movhi
 773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2P;
 1290              		.loc 1 775 0
 1291 0056 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1292 0058 23F02003 		bic	r3, r3, #32
 1293 005c FB81     		strh	r3, [r7, #14]	@ movhi
 776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 4);
 1294              		.loc 1 777 0
 1295 005e 3B68     		ldr	r3, [r7]
 1296 0060 9B89     		ldrh	r3, [r3, #12]
 1297 0062 1B01     		lsls	r3, r3, #4
 1298 0064 9AB2     		uxth	r2, r3
 1299 0066 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1300 0068 1343     		orrs	r3, r3, r2
 1301 006a FB81     		strh	r3, [r7, #14]	@ movhi
 778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 4);
 1302              		.loc 1 780 0
 1303 006c 3B68     		ldr	r3, [r7]
 1304 006e 5B88     		ldrh	r3, [r3, #2]
 1305 0070 1B01     		lsls	r3, r3, #4
 1306 0072 9AB2     		uxth	r2, r3
 1307 0074 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1308 0076 1343     		orrs	r3, r3, r2
 1309 0078 FB81     		strh	r3, [r7, #14]	@ movhi
 781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1310              		.loc 1 782 0
 1311 007a 7A68     		ldr	r2, [r7, #4]
 1312 007c 0023     		movs	r3, #0
 1313 007e C4F20103 		movt	r3, 16385
 1314 0082 9A42     		cmp	r2, r3
 1315 0084 06D0     		beq	.L49
 1316              		.loc 1 782 0 is_stmt 0 discriminator 1
 1317 0086 7A68     		ldr	r2, [r7, #4]
 1318 0088 4FF48063 		mov	r3, #1024
 1319 008c C4F20103 		movt	r3, 16385
 1320 0090 9A42     		cmp	r2, r3
 1321 0092 2BD1     		bne	.L50
 1322              	.L49:
 783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
 1323              		.loc 1 790 0 is_stmt 1
 1324 0094 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1325 0096 23F08003 		bic	r3, r3, #128
 1326 009a FB81     		strh	r3, [r7, #14]	@ movhi
 791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 4);
 1327              		.loc 1 792 0
 1328 009c 3B68     		ldr	r3, [r7]
 1329 009e DB89     		ldrh	r3, [r3, #14]
 1330 00a0 1B01     		lsls	r3, r3, #4
 1331 00a2 9AB2     		uxth	r2, r3
 1332 00a4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1333 00a6 1343     		orrs	r3, r3, r2
 1334 00a8 FB81     		strh	r3, [r7, #14]	@ movhi
 793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC2NE;
 1335              		.loc 1 794 0
 1336 00aa FB89     		ldrh	r3, [r7, #14]	@ movhi
 1337 00ac 23F04003 		bic	r3, r3, #64
 1338 00b0 FB81     		strh	r3, [r7, #14]	@ movhi
 795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 4);
 1339              		.loc 1 797 0
 1340 00b2 3B68     		ldr	r3, [r7]
 1341 00b4 9B88     		ldrh	r3, [r3, #4]
 1342 00b6 1B01     		lsls	r3, r3, #4
 1343 00b8 9AB2     		uxth	r2, r3
 1344 00ba FB89     		ldrh	r3, [r7, #14]	@ movhi
 1345 00bc 1343     		orrs	r3, r3, r2
 1346 00be FB81     		strh	r3, [r7, #14]	@ movhi
 798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2;
 1347              		.loc 1 799 0
 1348 00c0 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1349 00c2 23F48063 		bic	r3, r3, #1024
 1350 00c6 BB81     		strh	r3, [r7, #12]	@ movhi
 800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS2N;
 1351              		.loc 1 800 0
 1352 00c8 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1353 00ca 23F40063 		bic	r3, r3, #2048
 1354 00ce BB81     		strh	r3, [r7, #12]	@ movhi
 801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 2);
 1355              		.loc 1 802 0
 1356 00d0 3B68     		ldr	r3, [r7]
 1357 00d2 1B8A     		ldrh	r3, [r3, #16]
 1358 00d4 9B00     		lsls	r3, r3, #2
 1359 00d6 9AB2     		uxth	r2, r3
 1360 00d8 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1361 00da 1343     		orrs	r3, r3, r2
 1362 00dc BB81     		strh	r3, [r7, #12]	@ movhi
 803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 2);
 1363              		.loc 1 804 0
 1364 00de 3B68     		ldr	r3, [r7]
 1365 00e0 5B8A     		ldrh	r3, [r3, #18]
 1366 00e2 9B00     		lsls	r3, r3, #2
 1367 00e4 9AB2     		uxth	r2, r3
 1368 00e6 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1369 00e8 1343     		orrs	r3, r3, r2
 1370 00ea BB81     		strh	r3, [r7, #12]	@ movhi
 1371              	.L50:
 805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1372              		.loc 1 807 0
 1373 00ec 7B68     		ldr	r3, [r7, #4]
 1374 00ee BA89     		ldrh	r2, [r7, #12]	@ movhi
 1375 00f0 9A80     		strh	r2, [r3, #4]	@ movhi
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
 810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 1376              		.loc 1 810 0
 1377 00f2 7B68     		ldr	r3, [r7, #4]
 1378 00f4 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1379 00f6 1A83     		strh	r2, [r3, #24]	@ movhi
 811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR2 = TIM_OCInitStruct->TIM_Pulse;
 1380              		.loc 1 813 0
 1381 00f8 3B68     		ldr	r3, [r7]
 1382 00fa 9A68     		ldr	r2, [r3, #8]
 1383 00fc 7B68     		ldr	r3, [r7, #4]
 1384 00fe 9A63     		str	r2, [r3, #56]
 814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1385              		.loc 1 816 0
 1386 0100 7B68     		ldr	r3, [r7, #4]
 1387 0102 FA89     		ldrh	r2, [r7, #14]	@ movhi
 1388 0104 1A84     		strh	r2, [r3, #32]	@ movhi
 817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1389              		.loc 1 817 0
 1390 0106 1437     		adds	r7, r7, #20
 1391 0108 BD46     		mov	sp, r7
 1392              		@ sp needed
 1393 010a 5DF8047B 		ldr	r7, [sp], #4
 1394 010e 7047     		bx	lr
 1395              		.cfi_endproc
 1396              	.LFE126:
 1398              		.section	.text.TIM_OC3Init,"ax",%progbits
 1399              		.align	2
 1400              		.global	TIM_OC3Init
 1401              		.thumb
 1402              		.thumb_func
 1404              	TIM_OC3Init:
 1405              	.LFB127:
 818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel3 according to the specified parameters
 821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1406              		.loc 1 828 0
 1407              		.cfi_startproc
 1408              		@ args = 0, pretend = 0, frame = 16
 1409              		@ frame_needed = 1, uses_anonymous_args = 0
 1410              		@ link register save eliminated.
 1411 0000 80B4     		push	{r7}
 1412              	.LCFI51:
 1413              		.cfi_def_cfa_offset 4
 1414              		.cfi_offset 7, -4
 1415 0002 85B0     		sub	sp, sp, #20
 1416              	.LCFI52:
 1417              		.cfi_def_cfa_offset 24
 1418 0004 00AF     		add	r7, sp, #0
 1419              	.LCFI53:
 1420              		.cfi_def_cfa_register 7
 1421 0006 7860     		str	r0, [r7, #4]
 1422 0008 3960     		str	r1, [r7]
 829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1423              		.loc 1 829 0
 1424 000a 0023     		movs	r3, #0
 1425 000c 7B81     		strh	r3, [r7, #10]	@ movhi
 1426 000e 0023     		movs	r3, #0
 1427 0010 FB81     		strh	r3, [r7, #14]	@ movhi
 1428 0012 0023     		movs	r3, #0
 1429 0014 BB81     		strh	r3, [r7, #12]	@ movhi
 830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 3: Reset the CC2E Bit */
 838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 1430              		.loc 1 838 0
 1431 0016 7B68     		ldr	r3, [r7, #4]
 1432 0018 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1433 001a 9BB2     		uxth	r3, r3
 1434 001c 23F48073 		bic	r3, r3, #256
 1435 0020 9AB2     		uxth	r2, r3
 1436 0022 7B68     		ldr	r3, [r7, #4]
 1437 0024 1A84     		strh	r2, [r3, #32]	@ movhi
 839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1438              		.loc 1 841 0
 1439 0026 7B68     		ldr	r3, [r7, #4]
 1440 0028 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1441 002a FB81     		strh	r3, [r7, #14]	@ movhi
 842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1442              		.loc 1 843 0
 1443 002c 7B68     		ldr	r3, [r7, #4]
 1444 002e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1445 0030 BB81     		strh	r3, [r7, #12]	@ movhi
 844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 1446              		.loc 1 846 0
 1447 0032 7B68     		ldr	r3, [r7, #4]
 1448 0034 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1449 0036 7B81     		strh	r3, [r7, #10]	@ movhi
 847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_OC3M;
 1450              		.loc 1 849 0
 1451 0038 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1452 003a 23F07003 		bic	r3, r3, #112
 1453 003e 7B81     		strh	r3, [r7, #10]	@ movhi
 850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC3S;  
 1454              		.loc 1 850 0
 1455 0040 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1456 0042 23F00303 		bic	r3, r3, #3
 1457 0046 7B81     		strh	r3, [r7, #10]	@ movhi
 851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= TIM_OCInitStruct->TIM_OCMode;
 1458              		.loc 1 852 0
 1459 0048 3B68     		ldr	r3, [r7]
 1460 004a 1A88     		ldrh	r2, [r3]
 1461 004c 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1462 004e 1343     		orrs	r3, r3, r2
 1463 0050 7B81     		strh	r3, [r7, #10]	@ movhi
 853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 1464              		.loc 1 855 0
 1465 0052 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1466 0054 23F40073 		bic	r3, r3, #512
 1467 0058 FB81     		strh	r3, [r7, #14]	@ movhi
 856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 8);
 1468              		.loc 1 857 0
 1469 005a 3B68     		ldr	r3, [r7]
 1470 005c 9B89     		ldrh	r3, [r3, #12]
 1471 005e 1B02     		lsls	r3, r3, #8
 1472 0060 9AB2     		uxth	r2, r3
 1473 0062 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1474 0064 1343     		orrs	r3, r3, r2
 1475 0066 FB81     		strh	r3, [r7, #14]	@ movhi
 858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 8);
 1476              		.loc 1 860 0
 1477 0068 3B68     		ldr	r3, [r7]
 1478 006a 5B88     		ldrh	r3, [r3, #2]
 1479 006c 1B02     		lsls	r3, r3, #8
 1480 006e 9AB2     		uxth	r2, r3
 1481 0070 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1482 0072 1343     		orrs	r3, r3, r2
 1483 0074 FB81     		strh	r3, [r7, #14]	@ movhi
 861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1484              		.loc 1 862 0
 1485 0076 7A68     		ldr	r2, [r7, #4]
 1486 0078 0023     		movs	r3, #0
 1487 007a C4F20103 		movt	r3, 16385
 1488 007e 9A42     		cmp	r2, r3
 1489 0080 06D0     		beq	.L52
 1490              		.loc 1 862 0 is_stmt 0 discriminator 1
 1491 0082 7A68     		ldr	r2, [r7, #4]
 1492 0084 4FF48063 		mov	r3, #1024
 1493 0088 C4F20103 		movt	r3, 16385
 1494 008c 9A42     		cmp	r2, r3
 1495 008e 2BD1     		bne	.L53
 1496              	.L52:
 863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OUTPUTN_STATE(TIM_OCInitStruct->TIM_OutputNState));
 865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(TIM_OCInitStruct->TIM_OCNPolarity));
 866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(TIM_OCInitStruct->TIM_OCNIdleState));
 867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N Polarity level */
 870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
 1497              		.loc 1 870 0 is_stmt 1
 1498 0090 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1499 0092 23F40063 		bic	r3, r3, #2048
 1500 0096 FB81     		strh	r3, [r7, #14]	@ movhi
 871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Polarity */
 872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCNPolarity << 8);
 1501              		.loc 1 872 0
 1502 0098 3B68     		ldr	r3, [r7]
 1503 009a DB89     		ldrh	r3, [r3, #14]
 1504 009c 1B02     		lsls	r3, r3, #8
 1505 009e 9AB2     		uxth	r2, r3
 1506 00a0 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1507 00a2 1343     		orrs	r3, r3, r2
 1508 00a4 FB81     		strh	r3, [r7, #14]	@ movhi
 873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output N State */
 874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer &= (uint16_t)~TIM_CCER_CC3NE;
 1509              		.loc 1 874 0
 1510 00a6 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1511 00a8 23F48063 		bic	r3, r3, #1024
 1512 00ac FB81     		strh	r3, [r7, #14]	@ movhi
 875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N State */
 877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputNState << 8);
 1513              		.loc 1 877 0
 1514 00ae 3B68     		ldr	r3, [r7]
 1515 00b0 9B88     		ldrh	r3, [r3, #4]
 1516 00b2 1B02     		lsls	r3, r3, #8
 1517 00b4 9AB2     		uxth	r2, r3
 1518 00b6 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1519 00b8 1343     		orrs	r3, r3, r2
 1520 00ba FB81     		strh	r3, [r7, #14]	@ movhi
 878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
 879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3;
 1521              		.loc 1 879 0
 1522 00bc BB89     		ldrh	r3, [r7, #12]	@ movhi
 1523 00be 23F48053 		bic	r3, r3, #4096
 1524 00c2 BB81     		strh	r3, [r7, #12]	@ movhi
 880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &= (uint16_t)~TIM_CR2_OIS3N;
 1525              		.loc 1 880 0
 1526 00c4 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1527 00c6 23F40053 		bic	r3, r3, #8192
 1528 00ca BB81     		strh	r3, [r7, #12]	@ movhi
 881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 4);
 1529              		.loc 1 882 0
 1530 00cc 3B68     		ldr	r3, [r7]
 1531 00ce 1B8A     		ldrh	r3, [r3, #16]
 1532 00d0 1B01     		lsls	r3, r3, #4
 1533 00d2 9AB2     		uxth	r2, r3
 1534 00d4 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1535 00d6 1343     		orrs	r3, r3, r2
 1536 00d8 BB81     		strh	r3, [r7, #12]	@ movhi
 883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output N Idle state */
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCNIdleState << 4);
 1537              		.loc 1 884 0
 1538 00da 3B68     		ldr	r3, [r7]
 1539 00dc 5B8A     		ldrh	r3, [r3, #18]
 1540 00de 1B01     		lsls	r3, r3, #4
 1541 00e0 9AB2     		uxth	r2, r3
 1542 00e2 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1543 00e4 1343     		orrs	r3, r3, r2
 1544 00e6 BB81     		strh	r3, [r7, #12]	@ movhi
 1545              	.L53:
 885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1546              		.loc 1 887 0
 1547 00e8 7B68     		ldr	r3, [r7, #4]
 1548 00ea BA89     		ldrh	r2, [r7, #12]	@ movhi
 1549 00ec 9A80     		strh	r2, [r3, #4]	@ movhi
 888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
 890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 1550              		.loc 1 890 0
 1551 00ee 7B68     		ldr	r3, [r7, #4]
 1552 00f0 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1553 00f2 9A83     		strh	r2, [r3, #28]	@ movhi
 891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR3 = TIM_OCInitStruct->TIM_Pulse;
 1554              		.loc 1 893 0
 1555 00f4 3B68     		ldr	r3, [r7]
 1556 00f6 9A68     		ldr	r2, [r3, #8]
 1557 00f8 7B68     		ldr	r3, [r7, #4]
 1558 00fa DA63     		str	r2, [r3, #60]
 894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1559              		.loc 1 896 0
 1560 00fc 7B68     		ldr	r3, [r7, #4]
 1561 00fe FA89     		ldrh	r2, [r7, #14]	@ movhi
 1562 0100 1A84     		strh	r2, [r3, #32]	@ movhi
 897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1563              		.loc 1 897 0
 1564 0102 1437     		adds	r7, r7, #20
 1565 0104 BD46     		mov	sp, r7
 1566              		@ sp needed
 1567 0106 5DF8047B 		ldr	r7, [sp], #4
 1568 010a 7047     		bx	lr
 1569              		.cfi_endproc
 1570              	.LFE127:
 1572              		.section	.text.TIM_OC4Init,"ax",%progbits
 1573              		.align	2
 1574              		.global	TIM_OC4Init
 1575              		.thumb
 1576              		.thumb_func
 1578              	TIM_OC4Init:
 1579              	.LFB128:
 898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIMx Channel4 according to the specified parameters
 901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_OCInitStruct.
 902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure that contains
 904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
 905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4Init(TIM_TypeDef* TIMx, TIM_OCInitTypeDef* TIM_OCInitStruct)
 908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1580              		.loc 1 908 0
 1581              		.cfi_startproc
 1582              		@ args = 0, pretend = 0, frame = 16
 1583              		@ frame_needed = 1, uses_anonymous_args = 0
 1584              		@ link register save eliminated.
 1585 0000 80B4     		push	{r7}
 1586              	.LCFI54:
 1587              		.cfi_def_cfa_offset 4
 1588              		.cfi_offset 7, -4
 1589 0002 85B0     		sub	sp, sp, #20
 1590              	.LCFI55:
 1591              		.cfi_def_cfa_offset 24
 1592 0004 00AF     		add	r7, sp, #0
 1593              	.LCFI56:
 1594              		.cfi_def_cfa_register 7
 1595 0006 7860     		str	r0, [r7, #4]
 1596 0008 3960     		str	r1, [r7]
 909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmrx = 0, tmpccer = 0, tmpcr2 = 0;
 1597              		.loc 1 909 0
 1598 000a 0023     		movs	r3, #0
 1599 000c BB81     		strh	r3, [r7, #12]	@ movhi
 1600 000e 0023     		movs	r3, #0
 1601 0010 7B81     		strh	r3, [r7, #10]	@ movhi
 1602 0012 0023     		movs	r3, #0
 1603 0014 FB81     		strh	r3, [r7, #14]	@ movhi
 910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
 911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
 912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
 913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_MODE(TIM_OCInitStruct->TIM_OCMode));
 914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OUTPUT_STATE(TIM_OCInitStruct->TIM_OutputState));
 915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCInitStruct->TIM_OCPolarity));   
 916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
 918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 1604              		.loc 1 918 0
 1605 0016 7B68     		ldr	r3, [r7, #4]
 1606 0018 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1607 001a 9BB2     		uxth	r3, r3
 1608 001c 23F48053 		bic	r3, r3, #4096
 1609 0020 9AB2     		uxth	r2, r3
 1610 0022 7B68     		ldr	r3, [r7, #4]
 1611 0024 1A84     		strh	r2, [r3, #32]	@ movhi
 919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
 921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 1612              		.loc 1 921 0
 1613 0026 7B68     		ldr	r3, [r7, #4]
 1614 0028 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1615 002a 7B81     		strh	r3, [r7, #10]	@ movhi
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CR2 register value */
 923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpcr2 =  TIMx->CR2;
 1616              		.loc 1 923 0
 1617 002c 7B68     		ldr	r3, [r7, #4]
 1618 002e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 1619 0030 FB81     		strh	r3, [r7, #14]	@ movhi
 924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
 926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx = TIMx->CCMR2;
 1620              		.loc 1 926 0
 1621 0032 7B68     		ldr	r3, [r7, #4]
 1622 0034 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 1623 0036 BB81     		strh	r3, [r7, #12]	@ movhi
 927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
 929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_OC4M;
 1624              		.loc 1 929 0
 1625 0038 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1626 003a 23F4E043 		bic	r3, r3, #28672
 1627 003e BB81     		strh	r3, [r7, #12]	@ movhi
 930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx &= (uint16_t)~TIM_CCMR2_CC4S;
 1628              		.loc 1 930 0
 1629 0040 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1630 0042 23F44073 		bic	r3, r3, #768
 1631 0046 BB81     		strh	r3, [r7, #12]	@ movhi
 931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Output Compare Mode */
 933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmrx |= (uint16_t)(TIM_OCInitStruct->TIM_OCMode << 8);
 1632              		.loc 1 933 0
 1633 0048 3B68     		ldr	r3, [r7]
 1634 004a 1B88     		ldrh	r3, [r3]
 1635 004c 1B02     		lsls	r3, r3, #8
 1636 004e 9AB2     		uxth	r2, r3
 1637 0050 BB89     		ldrh	r3, [r7, #12]	@ movhi
 1638 0052 1343     		orrs	r3, r3, r2
 1639 0054 BB81     		strh	r3, [r7, #12]	@ movhi
 934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the Output Polarity level */
 936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 1640              		.loc 1 936 0
 1641 0056 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1642 0058 23F40053 		bic	r3, r3, #8192
 1643 005c 7B81     		strh	r3, [r7, #10]	@ movhi
 937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output Compare Polarity */
 938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OCPolarity << 12);
 1644              		.loc 1 938 0
 1645 005e 3B68     		ldr	r3, [r7]
 1646 0060 9B89     		ldrh	r3, [r3, #12]
 1647 0062 1B03     		lsls	r3, r3, #12
 1648 0064 9AB2     		uxth	r2, r3
 1649 0066 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1650 0068 1343     		orrs	r3, r3, r2
 1651 006a 7B81     		strh	r3, [r7, #10]	@ movhi
 939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Output State */
 941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCInitStruct->TIM_OutputState << 12);
 1652              		.loc 1 941 0
 1653 006c 3B68     		ldr	r3, [r7]
 1654 006e 5B88     		ldrh	r3, [r3, #2]
 1655 0070 1B03     		lsls	r3, r3, #12
 1656 0072 9AB2     		uxth	r2, r3
 1657 0074 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1658 0076 1343     		orrs	r3, r3, r2
 1659 0078 7B81     		strh	r3, [r7, #10]	@ movhi
 942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIMx == TIM1) || (TIMx == TIM8))
 1660              		.loc 1 943 0
 1661 007a 7A68     		ldr	r2, [r7, #4]
 1662 007c 0023     		movs	r3, #0
 1663 007e C4F20103 		movt	r3, 16385
 1664 0082 9A42     		cmp	r2, r3
 1665 0084 06D0     		beq	.L55
 1666              		.loc 1 943 0 is_stmt 0 discriminator 1
 1667 0086 7A68     		ldr	r2, [r7, #4]
 1668 0088 4FF48063 		mov	r3, #1024
 1669 008c C4F20103 		movt	r3, 16385
 1670 0090 9A42     		cmp	r2, r3
 1671 0092 0AD1     		bne	.L56
 1672              	.L55:
 944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
 945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(TIM_OCInitStruct->TIM_OCIdleState));
 946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the Output Compare IDLE State */
 947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 &=(uint16_t) ~TIM_CR2_OIS4;
 1673              		.loc 1 947 0 is_stmt 1
 1674 0094 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1675 0096 23F48043 		bic	r3, r3, #16384
 1676 009a FB81     		strh	r3, [r7, #14]	@ movhi
 948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Output Idle state */
 949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmpcr2 |= (uint16_t)(TIM_OCInitStruct->TIM_OCIdleState << 6);
 1677              		.loc 1 949 0
 1678 009c 3B68     		ldr	r3, [r7]
 1679 009e 1B8A     		ldrh	r3, [r3, #16]
 1680 00a0 9B01     		lsls	r3, r3, #6
 1681 00a2 9AB2     		uxth	r2, r3
 1682 00a4 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1683 00a6 1343     		orrs	r3, r3, r2
 1684 00a8 FB81     		strh	r3, [r7, #14]	@ movhi
 1685              	.L56:
 950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
 951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CR2 */
 952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 = tmpcr2;
 1686              		.loc 1 952 0
 1687 00aa 7B68     		ldr	r3, [r7, #4]
 1688 00ac FA89     		ldrh	r2, [r7, #14]	@ movhi
 1689 00ae 9A80     		strh	r2, [r3, #4]	@ movhi
 953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */  
 955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 1690              		.loc 1 955 0
 1691 00b0 7B68     		ldr	r3, [r7, #4]
 1692 00b2 BA89     		ldrh	r2, [r7, #12]	@ movhi
 1693 00b4 9A83     		strh	r2, [r3, #28]	@ movhi
 956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
 957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare Register value */
 958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR4 = TIM_OCInitStruct->TIM_Pulse;
 1694              		.loc 1 958 0
 1695 00b6 3B68     		ldr	r3, [r7]
 1696 00b8 9A68     		ldr	r2, [r3, #8]
 1697 00ba 7B68     		ldr	r3, [r7, #4]
 1698 00bc 1A64     		str	r2, [r3, #64]
 959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
 960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
 961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 1699              		.loc 1 961 0
 1700 00be 7B68     		ldr	r3, [r7, #4]
 1701 00c0 7A89     		ldrh	r2, [r7, #10]	@ movhi
 1702 00c2 1A84     		strh	r2, [r3, #32]	@ movhi
 962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1703              		.loc 1 962 0
 1704 00c4 1437     		adds	r7, r7, #20
 1705 00c6 BD46     		mov	sp, r7
 1706              		@ sp needed
 1707 00c8 5DF8047B 		ldr	r7, [sp], #4
 1708 00cc 7047     		bx	lr
 1709              		.cfi_endproc
 1710              	.LFE128:
 1712 00ce 00BF     		.section	.text.TIM_OCStructInit,"ax",%progbits
 1713              		.align	2
 1714              		.global	TIM_OCStructInit
 1715              		.thumb
 1716              		.thumb_func
 1718              	TIM_OCStructInit:
 1719              	.LFB129:
 963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_OCInitStruct member with its default value.
 966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCInitStruct: pointer to a TIM_OCInitTypeDef structure which will
 967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         be initialized.
 968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
 969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
 970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OCStructInit(TIM_OCInitTypeDef* TIM_OCInitStruct)
 971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1720              		.loc 1 971 0
 1721              		.cfi_startproc
 1722              		@ args = 0, pretend = 0, frame = 8
 1723              		@ frame_needed = 1, uses_anonymous_args = 0
 1724              		@ link register save eliminated.
 1725 0000 80B4     		push	{r7}
 1726              	.LCFI57:
 1727              		.cfi_def_cfa_offset 4
 1728              		.cfi_offset 7, -4
 1729 0002 83B0     		sub	sp, sp, #12
 1730              	.LCFI58:
 1731              		.cfi_def_cfa_offset 16
 1732 0004 00AF     		add	r7, sp, #0
 1733              	.LCFI59:
 1734              		.cfi_def_cfa_register 7
 1735 0006 7860     		str	r0, [r7, #4]
 972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
 973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCMode = TIM_OCMode_Timing;
 1736              		.loc 1 973 0
 1737 0008 7B68     		ldr	r3, [r7, #4]
 1738 000a 0022     		movs	r2, #0
 1739 000c 1A80     		strh	r2, [r3]	@ movhi
 974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputState = TIM_OutputState_Disable;
 1740              		.loc 1 974 0
 1741 000e 7B68     		ldr	r3, [r7, #4]
 1742 0010 0022     		movs	r2, #0
 1743 0012 5A80     		strh	r2, [r3, #2]	@ movhi
 975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OutputNState = TIM_OutputNState_Disable;
 1744              		.loc 1 975 0
 1745 0014 7B68     		ldr	r3, [r7, #4]
 1746 0016 0022     		movs	r2, #0
 1747 0018 9A80     		strh	r2, [r3, #4]	@ movhi
 976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_Pulse = 0x00000000;
 1748              		.loc 1 976 0
 1749 001a 7B68     		ldr	r3, [r7, #4]
 1750 001c 0022     		movs	r2, #0
 1751 001e 9A60     		str	r2, [r3, #8]
 977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCPolarity = TIM_OCPolarity_High;
 1752              		.loc 1 977 0
 1753 0020 7B68     		ldr	r3, [r7, #4]
 1754 0022 0022     		movs	r2, #0
 1755 0024 9A81     		strh	r2, [r3, #12]	@ movhi
 978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNPolarity = TIM_OCPolarity_High;
 1756              		.loc 1 978 0
 1757 0026 7B68     		ldr	r3, [r7, #4]
 1758 0028 0022     		movs	r2, #0
 1759 002a DA81     		strh	r2, [r3, #14]	@ movhi
 979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCIdleState = TIM_OCIdleState_Reset;
 1760              		.loc 1 979 0
 1761 002c 7B68     		ldr	r3, [r7, #4]
 1762 002e 0022     		movs	r2, #0
 1763 0030 1A82     		strh	r2, [r3, #16]	@ movhi
 980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_OCInitStruct->TIM_OCNIdleState = TIM_OCNIdleState_Reset;
 1764              		.loc 1 980 0
 1765 0032 7B68     		ldr	r3, [r7, #4]
 1766 0034 0022     		movs	r2, #0
 1767 0036 5A82     		strh	r2, [r3, #18]	@ movhi
 981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1768              		.loc 1 981 0
 1769 0038 0C37     		adds	r7, r7, #12
 1770 003a BD46     		mov	sp, r7
 1771              		@ sp needed
 1772 003c 5DF8047B 		ldr	r7, [sp], #4
 1773 0040 7047     		bx	lr
 1774              		.cfi_endproc
 1775              	.LFE129:
 1777 0042 00BF     		.section	.text.TIM_SelectOCxM,"ax",%progbits
 1778              		.align	2
 1779              		.global	TIM_SelectOCxM
 1780              		.thumb
 1781              		.thumb_func
 1783              	TIM_SelectOCxM:
 1784              	.LFB130:
 982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
 983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
 984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIM Output Compare Mode.
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   This function disables the selected channel before changing the Output
 986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         Compare Mode. If needed, user has to enable this channel using
 987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         TIM_CCxCmd() and TIM_CCxNCmd() functions.
 988:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
 989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
 990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
 991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
 992:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
 993:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
 994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
 995:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCMode: specifies the TIM Output Compare Mode.
 996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *           This parameter can be one of the following values:
 997:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Timing
 998:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Active
 999:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_Toggle
1000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_PWM1
1001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCMode_PWM2
1002:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active
1003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive
1004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1006:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOCxM(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_OCMode)
1007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1785              		.loc 1 1007 0
 1786              		.cfi_startproc
 1787              		@ args = 0, pretend = 0, frame = 16
 1788              		@ frame_needed = 1, uses_anonymous_args = 0
 1789              		@ link register save eliminated.
 1790 0000 80B4     		push	{r7}
 1791              	.LCFI60:
 1792              		.cfi_def_cfa_offset 4
 1793              		.cfi_offset 7, -4
 1794 0002 85B0     		sub	sp, sp, #20
 1795              	.LCFI61:
 1796              		.cfi_def_cfa_offset 24
 1797 0004 00AF     		add	r7, sp, #0
 1798              	.LCFI62:
 1799              		.cfi_def_cfa_register 7
 1800 0006 7860     		str	r0, [r7, #4]
 1801 0008 1346     		mov	r3, r2
 1802 000a 0A46     		mov	r2, r1	@ movhi
 1803 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 1804 000e 3B80     		strh	r3, [r7]	@ movhi
1008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint32_t tmp = 0;
 1805              		.loc 1 1008 0
 1806 0010 0023     		movs	r3, #0
 1807 0012 FB60     		str	r3, [r7, #12]
1009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp1 = 0;
 1808              		.loc 1 1009 0
 1809 0014 0023     		movs	r3, #0
 1810 0016 7B81     		strh	r3, [r7, #10]	@ movhi
1010:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1013:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1014:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCM(TIM_OCMode));
1015:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1016:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint32_t) TIMx;
 1811              		.loc 1 1016 0
 1812 0018 7B68     		ldr	r3, [r7, #4]
 1813 001a FB60     		str	r3, [r7, #12]
1017:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp += CCMR_OFFSET;
 1814              		.loc 1 1017 0
 1815 001c FB68     		ldr	r3, [r7, #12]
 1816 001e 1833     		adds	r3, r3, #24
 1817 0020 FB60     		str	r3, [r7, #12]
1018:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1019:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp1 = CCER_CCE_SET << (uint16_t)TIM_Channel;
 1818              		.loc 1 1019 0
 1819 0022 7B88     		ldrh	r3, [r7, #2]
 1820 0024 0122     		movs	r2, #1
 1821 0026 02FA03F3 		lsl	r3, r2, r3
 1822 002a 7B81     		strh	r3, [r7, #10]	@ movhi
1020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1021:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel: Reset the CCxE Bit */
1022:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp1;
 1823              		.loc 1 1022 0
 1824 002c 7B68     		ldr	r3, [r7, #4]
 1825 002e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 1826 0030 9AB2     		uxth	r2, r3
 1827 0032 7B89     		ldrh	r3, [r7, #10]	@ movhi
 1828 0034 DB43     		mvns	r3, r3
 1829 0036 9BB2     		uxth	r3, r3
 1830 0038 1340     		ands	r3, r3, r2
 1831 003a 9AB2     		uxth	r2, r3
 1832 003c 7B68     		ldr	r3, [r7, #4]
 1833 003e 1A84     		strh	r2, [r3, #32]	@ movhi
1023:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if((TIM_Channel == TIM_Channel_1) ||(TIM_Channel == TIM_Channel_3))
 1834              		.loc 1 1024 0
 1835 0040 7B88     		ldrh	r3, [r7, #2]
 1836 0042 002B     		cmp	r3, #0
 1837 0044 02D0     		beq	.L59
 1838              		.loc 1 1024 0 is_stmt 0 discriminator 1
 1839 0046 7B88     		ldrh	r3, [r7, #2]
 1840 0048 082B     		cmp	r3, #8
 1841 004a 13D1     		bne	.L60
 1842              	.L59:
1025:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1026:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmp += (TIM_Channel>>1);
 1843              		.loc 1 1026 0 is_stmt 1
 1844 004c 7B88     		ldrh	r3, [r7, #2]
 1845 004e 5B08     		lsrs	r3, r3, #1
 1846 0050 9BB2     		uxth	r3, r3
 1847 0052 FA68     		ldr	r2, [r7, #12]
 1848 0054 1344     		add	r3, r3, r2
 1849 0056 FB60     		str	r3, [r7, #12]
1027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1029:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC13M_MASK;
 1850              		.loc 1 1029 0
 1851 0058 FA68     		ldr	r2, [r7, #12]
 1852 005a FB68     		ldr	r3, [r7, #12]
 1853 005c 1968     		ldr	r1, [r3]
 1854 005e 4FF68F73 		movw	r3, #65423
 1855 0062 0B40     		ands	r3, r3, r1
 1856 0064 1360     		str	r3, [r2]
1030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1031:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1032:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp |= TIM_OCMode;
 1857              		.loc 1 1032 0
 1858 0066 FB68     		ldr	r3, [r7, #12]
 1859 0068 FA68     		ldr	r2, [r7, #12]
 1860 006a 1168     		ldr	r1, [r2]
 1861 006c 3A88     		ldrh	r2, [r7]
 1862 006e 0A43     		orrs	r2, r2, r1
 1863 0070 1A60     		str	r2, [r3]
 1864 0072 16E0     		b	.L58
 1865              	.L60:
1033:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1034:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     tmp += (uint16_t)(TIM_Channel - (uint16_t)4)>> (uint16_t)1;
 1866              		.loc 1 1036 0
 1867 0074 7B88     		ldrh	r3, [r7, #2]	@ movhi
 1868 0076 043B     		subs	r3, r3, #4
 1869 0078 9BB2     		uxth	r3, r3
 1870 007a 5B08     		lsrs	r3, r3, #1
 1871 007c 9BB2     		uxth	r3, r3
 1872 007e FA68     		ldr	r2, [r7, #12]
 1873 0080 1344     		add	r3, r3, r2
 1874 0082 FB60     		str	r3, [r7, #12]
1037:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1038:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the OCxM bits in the CCMRx register */
1039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp &= CCMR_OC24M_MASK;
 1875              		.loc 1 1039 0
 1876 0084 FA68     		ldr	r2, [r7, #12]
 1877 0086 FB68     		ldr	r3, [r7, #12]
 1878 0088 1968     		ldr	r1, [r3]
 1879 008a 48F6FF73 		movw	r3, #36863
 1880 008e 0B40     		ands	r3, r3, r1
 1881 0090 1360     		str	r3, [r2]
1040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
1041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Configure the OCxM bits in the CCMRx register */
1042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     *(__IO uint32_t *) tmp |= (uint16_t)(TIM_OCMode << 8);
 1882              		.loc 1 1042 0
 1883 0092 FB68     		ldr	r3, [r7, #12]
 1884 0094 FA68     		ldr	r2, [r7, #12]
 1885 0096 1168     		ldr	r1, [r2]
 1886 0098 3A88     		ldrh	r2, [r7]	@ movhi
 1887 009a 1202     		lsls	r2, r2, #8
 1888 009c 92B2     		uxth	r2, r2
 1889 009e 0A43     		orrs	r2, r2, r1
 1890 00a0 1A60     		str	r2, [r3]
 1891              	.L58:
1043:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1044:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1892              		.loc 1 1044 0
 1893 00a2 1437     		adds	r7, r7, #20
 1894 00a4 BD46     		mov	sp, r7
 1895              		@ sp needed
 1896 00a6 5DF8047B 		ldr	r7, [sp], #4
 1897 00aa 7047     		bx	lr
 1898              		.cfi_endproc
 1899              	.LFE130:
 1901              		.section	.text.TIM_SetCompare1,"ax",%progbits
 1902              		.align	2
 1903              		.global	TIM_SetCompare1
 1904              		.thumb
 1905              		.thumb_func
 1907              	TIM_SetCompare1:
 1908              	.LFB131:
1045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare1 Register value
1048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1049:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare1: specifies the Capture Compare1 register new value.
1050:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1051:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1052:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare1(TIM_TypeDef* TIMx, uint32_t Compare1)
1053:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1909              		.loc 1 1053 0
 1910              		.cfi_startproc
 1911              		@ args = 0, pretend = 0, frame = 8
 1912              		@ frame_needed = 1, uses_anonymous_args = 0
 1913              		@ link register save eliminated.
 1914 0000 80B4     		push	{r7}
 1915              	.LCFI63:
 1916              		.cfi_def_cfa_offset 4
 1917              		.cfi_offset 7, -4
 1918 0002 83B0     		sub	sp, sp, #12
 1919              	.LCFI64:
 1920              		.cfi_def_cfa_offset 16
 1921 0004 00AF     		add	r7, sp, #0
 1922              	.LCFI65:
 1923              		.cfi_def_cfa_register 7
 1924 0006 7860     		str	r0, [r7, #4]
 1925 0008 3960     		str	r1, [r7]
1054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1057:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare1 Register value */
1058:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR1 = Compare1;
 1926              		.loc 1 1058 0
 1927 000a 7B68     		ldr	r3, [r7, #4]
 1928 000c 3A68     		ldr	r2, [r7]
 1929 000e 5A63     		str	r2, [r3, #52]
1059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1930              		.loc 1 1059 0
 1931 0010 0C37     		adds	r7, r7, #12
 1932 0012 BD46     		mov	sp, r7
 1933              		@ sp needed
 1934 0014 5DF8047B 		ldr	r7, [sp], #4
 1935 0018 7047     		bx	lr
 1936              		.cfi_endproc
 1937              	.LFE131:
 1939 001a 00BF     		.section	.text.TIM_SetCompare2,"ax",%progbits
 1940              		.align	2
 1941              		.global	TIM_SetCompare2
 1942              		.thumb
 1943              		.thumb_func
 1945              	TIM_SetCompare2:
 1946              	.LFB132:
1060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1062:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare2 Register value
1063:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1064:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1065:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare2: specifies the Capture Compare2 register new value.
1066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare2(TIM_TypeDef* TIMx, uint32_t Compare2)
1069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1947              		.loc 1 1069 0
 1948              		.cfi_startproc
 1949              		@ args = 0, pretend = 0, frame = 8
 1950              		@ frame_needed = 1, uses_anonymous_args = 0
 1951              		@ link register save eliminated.
 1952 0000 80B4     		push	{r7}
 1953              	.LCFI66:
 1954              		.cfi_def_cfa_offset 4
 1955              		.cfi_offset 7, -4
 1956 0002 83B0     		sub	sp, sp, #12
 1957              	.LCFI67:
 1958              		.cfi_def_cfa_offset 16
 1959 0004 00AF     		add	r7, sp, #0
 1960              	.LCFI68:
 1961              		.cfi_def_cfa_register 7
 1962 0006 7860     		str	r0, [r7, #4]
 1963 0008 3960     		str	r1, [r7]
1070:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1071:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1073:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare2 Register value */
1074:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR2 = Compare2;
 1964              		.loc 1 1074 0
 1965 000a 7B68     		ldr	r3, [r7, #4]
 1966 000c 3A68     		ldr	r2, [r7]
 1967 000e 9A63     		str	r2, [r3, #56]
1075:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 1968              		.loc 1 1075 0
 1969 0010 0C37     		adds	r7, r7, #12
 1970 0012 BD46     		mov	sp, r7
 1971              		@ sp needed
 1972 0014 5DF8047B 		ldr	r7, [sp], #4
 1973 0018 7047     		bx	lr
 1974              		.cfi_endproc
 1975              	.LFE132:
 1977 001a 00BF     		.section	.text.TIM_SetCompare3,"ax",%progbits
 1978              		.align	2
 1979              		.global	TIM_SetCompare3
 1980              		.thumb
 1981              		.thumb_func
 1983              	TIM_SetCompare3:
 1984              	.LFB133:
1076:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1077:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1078:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare3 Register value
1079:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1080:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare3: specifies the Capture Compare3 register new value.
1081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1082:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1083:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare3(TIM_TypeDef* TIMx, uint32_t Compare3)
1084:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 1985              		.loc 1 1084 0
 1986              		.cfi_startproc
 1987              		@ args = 0, pretend = 0, frame = 8
 1988              		@ frame_needed = 1, uses_anonymous_args = 0
 1989              		@ link register save eliminated.
 1990 0000 80B4     		push	{r7}
 1991              	.LCFI69:
 1992              		.cfi_def_cfa_offset 4
 1993              		.cfi_offset 7, -4
 1994 0002 83B0     		sub	sp, sp, #12
 1995              	.LCFI70:
 1996              		.cfi_def_cfa_offset 16
 1997 0004 00AF     		add	r7, sp, #0
 1998              	.LCFI71:
 1999              		.cfi_def_cfa_register 7
 2000 0006 7860     		str	r0, [r7, #4]
 2001 0008 3960     		str	r1, [r7]
1085:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1086:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1087:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1088:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare3 Register value */
1089:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR3 = Compare3;
 2002              		.loc 1 1089 0
 2003 000a 7B68     		ldr	r3, [r7, #4]
 2004 000c 3A68     		ldr	r2, [r7]
 2005 000e DA63     		str	r2, [r3, #60]
1090:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2006              		.loc 1 1090 0
 2007 0010 0C37     		adds	r7, r7, #12
 2008 0012 BD46     		mov	sp, r7
 2009              		@ sp needed
 2010 0014 5DF8047B 		ldr	r7, [sp], #4
 2011 0018 7047     		bx	lr
 2012              		.cfi_endproc
 2013              	.LFE133:
 2015 001a 00BF     		.section	.text.TIM_SetCompare4,"ax",%progbits
 2016              		.align	2
 2017              		.global	TIM_SetCompare4
 2018              		.thumb
 2019              		.thumb_func
 2021              	TIM_SetCompare4:
 2022              	.LFB134:
1091:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1092:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1093:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Capture Compare4 Register value
1094:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1095:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  Compare4: specifies the Capture Compare4 register new value.
1096:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1097:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1098:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetCompare4(TIM_TypeDef* TIMx, uint32_t Compare4)
1099:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2023              		.loc 1 1099 0
 2024              		.cfi_startproc
 2025              		@ args = 0, pretend = 0, frame = 8
 2026              		@ frame_needed = 1, uses_anonymous_args = 0
 2027              		@ link register save eliminated.
 2028 0000 80B4     		push	{r7}
 2029              	.LCFI72:
 2030              		.cfi_def_cfa_offset 4
 2031              		.cfi_offset 7, -4
 2032 0002 83B0     		sub	sp, sp, #12
 2033              	.LCFI73:
 2034              		.cfi_def_cfa_offset 16
 2035 0004 00AF     		add	r7, sp, #0
 2036              	.LCFI74:
 2037              		.cfi_def_cfa_register 7
 2038 0006 7860     		str	r0, [r7, #4]
 2039 0008 3960     		str	r1, [r7]
1100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Capture Compare4 Register value */
1104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCR4 = Compare4;
 2040              		.loc 1 1104 0
 2041 000a 7B68     		ldr	r3, [r7, #4]
 2042 000c 3A68     		ldr	r2, [r7]
 2043 000e 1A64     		str	r2, [r3, #64]
1105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2044              		.loc 1 1105 0
 2045 0010 0C37     		adds	r7, r7, #12
 2046 0012 BD46     		mov	sp, r7
 2047              		@ sp needed
 2048 0014 5DF8047B 		ldr	r7, [sp], #4
 2049 0018 7047     		bx	lr
 2050              		.cfi_endproc
 2051              	.LFE134:
 2053 001a 00BF     		.section	.text.TIM_ForcedOC1Config,"ax",%progbits
 2054              		.align	2
 2055              		.global	TIM_ForcedOC1Config
 2056              		.thumb
 2057              		.thumb_func
 2059              	TIM_ForcedOC1Config:
 2060              	.LFB135:
1106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 1 waveform to active or inactive level.
1109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC1REF
1113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC1REF.
1114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC1Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2061              		.loc 1 1117 0
 2062              		.cfi_startproc
 2063              		@ args = 0, pretend = 0, frame = 16
 2064              		@ frame_needed = 1, uses_anonymous_args = 0
 2065              		@ link register save eliminated.
 2066 0000 80B4     		push	{r7}
 2067              	.LCFI75:
 2068              		.cfi_def_cfa_offset 4
 2069              		.cfi_offset 7, -4
 2070 0002 85B0     		sub	sp, sp, #20
 2071              	.LCFI76:
 2072              		.cfi_def_cfa_offset 24
 2073 0004 00AF     		add	r7, sp, #0
 2074              	.LCFI77:
 2075              		.cfi_def_cfa_register 7
 2076 0006 7860     		str	r0, [r7, #4]
 2077 0008 0B46     		mov	r3, r1
 2078 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2079              		.loc 1 1118 0
 2080 000c 0023     		movs	r3, #0
 2081 000e FB81     		strh	r3, [r7, #14]	@ movhi
1119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2082              		.loc 1 1123 0
 2083 0010 7B68     		ldr	r3, [r7, #4]
 2084 0012 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2085 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1M Bits */
1126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1M;
 2086              		.loc 1 1126 0
 2087 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2088 0018 23F07003 		bic	r3, r3, #112
 2089 001c FB81     		strh	r3, [r7, #14]	@ movhi
1127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_ForcedAction;
 2090              		.loc 1 1129 0
 2091 001e FA89     		ldrh	r2, [r7, #14]	@ movhi
 2092 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2093 0022 1343     		orrs	r3, r3, r2
 2094 0024 FB81     		strh	r3, [r7, #14]	@ movhi
1130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2095              		.loc 1 1132 0
 2096 0026 7B68     		ldr	r3, [r7, #4]
 2097 0028 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2098 002a 1A83     		strh	r2, [r3, #24]	@ movhi
1133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2099              		.loc 1 1133 0
 2100 002c 1437     		adds	r7, r7, #20
 2101 002e BD46     		mov	sp, r7
 2102              		@ sp needed
 2103 0030 5DF8047B 		ldr	r7, [sp], #4
 2104 0034 7047     		bx	lr
 2105              		.cfi_endproc
 2106              	.LFE135:
 2108 0036 00BF     		.section	.text.TIM_ForcedOC2Config,"ax",%progbits
 2109              		.align	2
 2110              		.global	TIM_ForcedOC2Config
 2111              		.thumb
 2112              		.thumb_func
 2114              	TIM_ForcedOC2Config:
 2115              	.LFB136:
1134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 2 waveform to active or inactive level.
1137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC2REF
1142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC2REF.
1143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC2Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2116              		.loc 1 1146 0
 2117              		.cfi_startproc
 2118              		@ args = 0, pretend = 0, frame = 16
 2119              		@ frame_needed = 1, uses_anonymous_args = 0
 2120              		@ link register save eliminated.
 2121 0000 80B4     		push	{r7}
 2122              	.LCFI78:
 2123              		.cfi_def_cfa_offset 4
 2124              		.cfi_offset 7, -4
 2125 0002 85B0     		sub	sp, sp, #20
 2126              	.LCFI79:
 2127              		.cfi_def_cfa_offset 24
 2128 0004 00AF     		add	r7, sp, #0
 2129              	.LCFI80:
 2130              		.cfi_def_cfa_register 7
 2131 0006 7860     		str	r0, [r7, #4]
 2132 0008 0B46     		mov	r3, r1
 2133 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2134              		.loc 1 1147 0
 2135 000c 0023     		movs	r3, #0
 2136 000e FB81     		strh	r3, [r7, #14]	@ movhi
1148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2137              		.loc 1 1152 0
 2138 0010 7B68     		ldr	r3, [r7, #4]
 2139 0012 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2140 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2M Bits */
1155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2M;
 2141              		.loc 1 1155 0
 2142 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2143 0018 23F4E043 		bic	r3, r3, #28672
 2144 001c FB81     		strh	r3, [r7, #14]	@ movhi
1156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ForcedAction << 8);
 2145              		.loc 1 1158 0
 2146 001e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2147 0020 1B02     		lsls	r3, r3, #8
 2148 0022 9AB2     		uxth	r2, r3
 2149 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2150 0026 1343     		orrs	r3, r3, r2
 2151 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2152              		.loc 1 1161 0
 2153 002a 7B68     		ldr	r3, [r7, #4]
 2154 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2155 002e 1A83     		strh	r2, [r3, #24]	@ movhi
1162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2156              		.loc 1 1162 0
 2157 0030 1437     		adds	r7, r7, #20
 2158 0032 BD46     		mov	sp, r7
 2159              		@ sp needed
 2160 0034 5DF8047B 		ldr	r7, [sp], #4
 2161 0038 7047     		bx	lr
 2162              		.cfi_endproc
 2163              	.LFE136:
 2165 003a 00BF     		.section	.text.TIM_ForcedOC3Config,"ax",%progbits
 2166              		.align	2
 2167              		.global	TIM_ForcedOC3Config
 2168              		.thumb
 2169              		.thumb_func
 2171              	TIM_ForcedOC3Config:
 2172              	.LFB137:
1163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 3 waveform to active or inactive level.
1166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC3REF
1170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC3REF.
1171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC3Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2173              		.loc 1 1174 0
 2174              		.cfi_startproc
 2175              		@ args = 0, pretend = 0, frame = 16
 2176              		@ frame_needed = 1, uses_anonymous_args = 0
 2177              		@ link register save eliminated.
 2178 0000 80B4     		push	{r7}
 2179              	.LCFI81:
 2180              		.cfi_def_cfa_offset 4
 2181              		.cfi_offset 7, -4
 2182 0002 85B0     		sub	sp, sp, #20
 2183              	.LCFI82:
 2184              		.cfi_def_cfa_offset 24
 2185 0004 00AF     		add	r7, sp, #0
 2186              	.LCFI83:
 2187              		.cfi_def_cfa_register 7
 2188 0006 7860     		str	r0, [r7, #4]
 2189 0008 0B46     		mov	r3, r1
 2190 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2191              		.loc 1 1175 0
 2192 000c 0023     		movs	r3, #0
 2193 000e FB81     		strh	r3, [r7, #14]	@ movhi
1176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2194              		.loc 1 1181 0
 2195 0010 7B68     		ldr	r3, [r7, #4]
 2196 0012 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2197 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1M Bits */
1184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3M;
 2198              		.loc 1 1184 0
 2199 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2200 0018 23F07003 		bic	r3, r3, #112
 2201 001c FB81     		strh	r3, [r7, #14]	@ movhi
1185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_ForcedAction;
 2202              		.loc 1 1187 0
 2203 001e FA89     		ldrh	r2, [r7, #14]	@ movhi
 2204 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2205 0022 1343     		orrs	r3, r3, r2
 2206 0024 FB81     		strh	r3, [r7, #14]	@ movhi
1188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2207              		.loc 1 1190 0
 2208 0026 7B68     		ldr	r3, [r7, #4]
 2209 0028 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2210 002a 9A83     		strh	r2, [r3, #28]	@ movhi
1191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2211              		.loc 1 1191 0
 2212 002c 1437     		adds	r7, r7, #20
 2213 002e BD46     		mov	sp, r7
 2214              		@ sp needed
 2215 0030 5DF8047B 		ldr	r7, [sp], #4
 2216 0034 7047     		bx	lr
 2217              		.cfi_endproc
 2218              	.LFE137:
 2220 0036 00BF     		.section	.text.TIM_ForcedOC4Config,"ax",%progbits
 2221              		.align	2
 2222              		.global	TIM_ForcedOC4Config
 2223              		.thumb
 2224              		.thumb_func
 2226              	TIM_ForcedOC4Config:
 2227              	.LFB138:
1192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Forces the TIMx output 4 waveform to active or inactive level.
1195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ForcedAction: specifies the forced Action to be set to the output waveform.
1197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_Active: Force active level on OC4REF
1199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ForcedAction_InActive: Force inactive level on OC4REF.
1200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ForcedOC4Config(TIM_TypeDef* TIMx, uint16_t TIM_ForcedAction)
1203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2228              		.loc 1 1203 0
 2229              		.cfi_startproc
 2230              		@ args = 0, pretend = 0, frame = 16
 2231              		@ frame_needed = 1, uses_anonymous_args = 0
 2232              		@ link register save eliminated.
 2233 0000 80B4     		push	{r7}
 2234              	.LCFI84:
 2235              		.cfi_def_cfa_offset 4
 2236              		.cfi_offset 7, -4
 2237 0002 85B0     		sub	sp, sp, #20
 2238              	.LCFI85:
 2239              		.cfi_def_cfa_offset 24
 2240 0004 00AF     		add	r7, sp, #0
 2241              	.LCFI86:
 2242              		.cfi_def_cfa_register 7
 2243 0006 7860     		str	r0, [r7, #4]
 2244 0008 0B46     		mov	r3, r1
 2245 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2246              		.loc 1 1204 0
 2247 000c 0023     		movs	r3, #0
 2248 000e FB81     		strh	r3, [r7, #14]	@ movhi
1205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_FORCED_ACTION(TIM_ForcedAction));
1209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2249              		.loc 1 1209 0
 2250 0010 7B68     		ldr	r3, [r7, #4]
 2251 0012 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2252 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2M Bits */
1212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4M;
 2253              		.loc 1 1212 0
 2254 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2255 0018 23F4E043 		bic	r3, r3, #28672
 2256 001c FB81     		strh	r3, [r7, #14]	@ movhi
1213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure The Forced output Mode */
1215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ForcedAction << 8);
 2257              		.loc 1 1215 0
 2258 001e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2259 0020 1B02     		lsls	r3, r3, #8
 2260 0022 9AB2     		uxth	r2, r3
 2261 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2262 0026 1343     		orrs	r3, r3, r2
 2263 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2264              		.loc 1 1218 0
 2265 002a 7B68     		ldr	r3, [r7, #4]
 2266 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2267 002e 9A83     		strh	r2, [r3, #28]	@ movhi
1219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2268              		.loc 1 1219 0
 2269 0030 1437     		adds	r7, r7, #20
 2270 0032 BD46     		mov	sp, r7
 2271              		@ sp needed
 2272 0034 5DF8047B 		ldr	r7, [sp], #4
 2273 0038 7047     		bx	lr
 2274              		.cfi_endproc
 2275              	.LFE138:
 2277 003a 00BF     		.section	.text.TIM_OC1PreloadConfig,"ax",%progbits
 2278              		.align	2
 2279              		.global	TIM_OC1PreloadConfig
 2280              		.thumb
 2281              		.thumb_func
 2283              	TIM_OC1PreloadConfig:
 2284              	.LFB139:
1220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR1.
1223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2285              		.loc 1 1231 0
 2286              		.cfi_startproc
 2287              		@ args = 0, pretend = 0, frame = 16
 2288              		@ frame_needed = 1, uses_anonymous_args = 0
 2289              		@ link register save eliminated.
 2290 0000 80B4     		push	{r7}
 2291              	.LCFI87:
 2292              		.cfi_def_cfa_offset 4
 2293              		.cfi_offset 7, -4
 2294 0002 85B0     		sub	sp, sp, #20
 2295              	.LCFI88:
 2296              		.cfi_def_cfa_offset 24
 2297 0004 00AF     		add	r7, sp, #0
 2298              	.LCFI89:
 2299              		.cfi_def_cfa_register 7
 2300 0006 7860     		str	r0, [r7, #4]
 2301 0008 0B46     		mov	r3, r1
 2302 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2303              		.loc 1 1232 0
 2304 000c 0023     		movs	r3, #0
 2305 000e FB81     		strh	r3, [r7, #14]	@ movhi
1233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2306              		.loc 1 1238 0
 2307 0010 7B68     		ldr	r3, [r7, #4]
 2308 0012 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2309 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1PE Bit */
1241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC1PE);
 2310              		.loc 1 1241 0
 2311 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2312 0018 23F00803 		bic	r3, r3, #8
 2313 001c FB81     		strh	r3, [r7, #14]	@ movhi
1242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCPreload;
 2314              		.loc 1 1244 0
 2315 001e FA89     		ldrh	r2, [r7, #14]	@ movhi
 2316 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2317 0022 1343     		orrs	r3, r3, r2
 2318 0024 FB81     		strh	r3, [r7, #14]	@ movhi
1245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2319              		.loc 1 1247 0
 2320 0026 7B68     		ldr	r3, [r7, #4]
 2321 0028 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2322 002a 1A83     		strh	r2, [r3, #24]	@ movhi
1248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2323              		.loc 1 1248 0
 2324 002c 1437     		adds	r7, r7, #20
 2325 002e BD46     		mov	sp, r7
 2326              		@ sp needed
 2327 0030 5DF8047B 		ldr	r7, [sp], #4
 2328 0034 7047     		bx	lr
 2329              		.cfi_endproc
 2330              	.LFE139:
 2332 0036 00BF     		.section	.text.TIM_OC2PreloadConfig,"ax",%progbits
 2333              		.align	2
 2334              		.global	TIM_OC2PreloadConfig
 2335              		.thumb
 2336              		.thumb_func
 2338              	TIM_OC2PreloadConfig:
 2339              	.LFB140:
1249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR2.
1252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2340              		.loc 1 1261 0
 2341              		.cfi_startproc
 2342              		@ args = 0, pretend = 0, frame = 16
 2343              		@ frame_needed = 1, uses_anonymous_args = 0
 2344              		@ link register save eliminated.
 2345 0000 80B4     		push	{r7}
 2346              	.LCFI90:
 2347              		.cfi_def_cfa_offset 4
 2348              		.cfi_offset 7, -4
 2349 0002 85B0     		sub	sp, sp, #20
 2350              	.LCFI91:
 2351              		.cfi_def_cfa_offset 24
 2352 0004 00AF     		add	r7, sp, #0
 2353              	.LCFI92:
 2354              		.cfi_def_cfa_register 7
 2355 0006 7860     		str	r0, [r7, #4]
 2356 0008 0B46     		mov	r3, r1
 2357 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2358              		.loc 1 1262 0
 2359 000c 0023     		movs	r3, #0
 2360 000e FB81     		strh	r3, [r7, #14]	@ movhi
1263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2361              		.loc 1 1268 0
 2362 0010 7B68     		ldr	r3, [r7, #4]
 2363 0012 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2364 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2PE Bit */
1271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2PE);
 2365              		.loc 1 1271 0
 2366 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2367 0018 23F40063 		bic	r3, r3, #2048
 2368 001c FB81     		strh	r3, [r7, #14]	@ movhi
1272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCPreload << 8);
 2369              		.loc 1 1274 0
 2370 001e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2371 0020 1B02     		lsls	r3, r3, #8
 2372 0022 9AB2     		uxth	r2, r3
 2373 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2374 0026 1343     		orrs	r3, r3, r2
 2375 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2376              		.loc 1 1277 0
 2377 002a 7B68     		ldr	r3, [r7, #4]
 2378 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2379 002e 1A83     		strh	r2, [r3, #24]	@ movhi
1278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2380              		.loc 1 1278 0
 2381 0030 1437     		adds	r7, r7, #20
 2382 0032 BD46     		mov	sp, r7
 2383              		@ sp needed
 2384 0034 5DF8047B 		ldr	r7, [sp], #4
 2385 0038 7047     		bx	lr
 2386              		.cfi_endproc
 2387              	.LFE140:
 2389 003a 00BF     		.section	.text.TIM_OC3PreloadConfig,"ax",%progbits
 2390              		.align	2
 2391              		.global	TIM_OC3PreloadConfig
 2392              		.thumb
 2393              		.thumb_func
 2395              	TIM_OC3PreloadConfig:
 2396              	.LFB141:
1279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR3.
1282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2397              		.loc 1 1290 0
 2398              		.cfi_startproc
 2399              		@ args = 0, pretend = 0, frame = 16
 2400              		@ frame_needed = 1, uses_anonymous_args = 0
 2401              		@ link register save eliminated.
 2402 0000 80B4     		push	{r7}
 2403              	.LCFI93:
 2404              		.cfi_def_cfa_offset 4
 2405              		.cfi_offset 7, -4
 2406 0002 85B0     		sub	sp, sp, #20
 2407              	.LCFI94:
 2408              		.cfi_def_cfa_offset 24
 2409 0004 00AF     		add	r7, sp, #0
 2410              	.LCFI95:
 2411              		.cfi_def_cfa_register 7
 2412 0006 7860     		str	r0, [r7, #4]
 2413 0008 0B46     		mov	r3, r1
 2414 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2415              		.loc 1 1291 0
 2416 000c 0023     		movs	r3, #0
 2417 000e FB81     		strh	r3, [r7, #14]	@ movhi
1292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2418              		.loc 1 1297 0
 2419 0010 7B68     		ldr	r3, [r7, #4]
 2420 0012 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2421 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3PE Bit */
1300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC3PE);
 2422              		.loc 1 1300 0
 2423 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2424 0018 23F00803 		bic	r3, r3, #8
 2425 001c FB81     		strh	r3, [r7, #14]	@ movhi
1301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCPreload;
 2426              		.loc 1 1303 0
 2427 001e FA89     		ldrh	r2, [r7, #14]	@ movhi
 2428 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2429 0022 1343     		orrs	r3, r3, r2
 2430 0024 FB81     		strh	r3, [r7, #14]	@ movhi
1304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2431              		.loc 1 1306 0
 2432 0026 7B68     		ldr	r3, [r7, #4]
 2433 0028 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2434 002a 9A83     		strh	r2, [r3, #28]	@ movhi
1307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2435              		.loc 1 1307 0
 2436 002c 1437     		adds	r7, r7, #20
 2437 002e BD46     		mov	sp, r7
 2438              		@ sp needed
 2439 0030 5DF8047B 		ldr	r7, [sp], #4
 2440 0034 7047     		bx	lr
 2441              		.cfi_endproc
 2442              	.LFE141:
 2444 0036 00BF     		.section	.text.TIM_OC4PreloadConfig,"ax",%progbits
 2445              		.align	2
 2446              		.global	TIM_OC4PreloadConfig
 2447              		.thumb
 2448              		.thumb_func
 2450              	TIM_OC4PreloadConfig:
 2451              	.LFB142:
1308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx peripheral Preload register on CCR4.
1311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPreload: new state of the TIMx peripheral Preload register
1313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Enable
1315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPreload_Disable
1316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4PreloadConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPreload)
1319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2452              		.loc 1 1319 0
 2453              		.cfi_startproc
 2454              		@ args = 0, pretend = 0, frame = 16
 2455              		@ frame_needed = 1, uses_anonymous_args = 0
 2456              		@ link register save eliminated.
 2457 0000 80B4     		push	{r7}
 2458              	.LCFI96:
 2459              		.cfi_def_cfa_offset 4
 2460              		.cfi_offset 7, -4
 2461 0002 85B0     		sub	sp, sp, #20
 2462              	.LCFI97:
 2463              		.cfi_def_cfa_offset 24
 2464 0004 00AF     		add	r7, sp, #0
 2465              	.LCFI98:
 2466              		.cfi_def_cfa_register 7
 2467 0006 7860     		str	r0, [r7, #4]
 2468 0008 0B46     		mov	r3, r1
 2469 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2470              		.loc 1 1320 0
 2471 000c 0023     		movs	r3, #0
 2472 000e FB81     		strh	r3, [r7, #14]	@ movhi
1321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCPRELOAD_STATE(TIM_OCPreload));
1325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2473              		.loc 1 1326 0
 2474 0010 7B68     		ldr	r3, [r7, #4]
 2475 0012 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2476 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4PE Bit */
1329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4PE);
 2477              		.loc 1 1329 0
 2478 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2479 0018 23F40063 		bic	r3, r3, #2048
 2480 001c FB81     		strh	r3, [r7, #14]	@ movhi
1330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Preload feature */
1332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCPreload << 8);
 2481              		.loc 1 1332 0
 2482 001e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2483 0020 1B02     		lsls	r3, r3, #8
 2484 0022 9AB2     		uxth	r2, r3
 2485 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2486 0026 1343     		orrs	r3, r3, r2
 2487 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2488              		.loc 1 1335 0
 2489 002a 7B68     		ldr	r3, [r7, #4]
 2490 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2491 002e 9A83     		strh	r2, [r3, #28]	@ movhi
1336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2492              		.loc 1 1336 0
 2493 0030 1437     		adds	r7, r7, #20
 2494 0032 BD46     		mov	sp, r7
 2495              		@ sp needed
 2496 0034 5DF8047B 		ldr	r7, [sp], #4
 2497 0038 7047     		bx	lr
 2498              		.cfi_endproc
 2499              	.LFE142:
 2501 003a 00BF     		.section	.text.TIM_OC1FastConfig,"ax",%progbits
 2502              		.align	2
 2503              		.global	TIM_OC1FastConfig
 2504              		.thumb
 2505              		.thumb_func
 2507              	TIM_OC1FastConfig:
 2508              	.LFB143:
1337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 1 Fast feature.
1340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2509              		.loc 1 1348 0
 2510              		.cfi_startproc
 2511              		@ args = 0, pretend = 0, frame = 16
 2512              		@ frame_needed = 1, uses_anonymous_args = 0
 2513              		@ link register save eliminated.
 2514 0000 80B4     		push	{r7}
 2515              	.LCFI99:
 2516              		.cfi_def_cfa_offset 4
 2517              		.cfi_offset 7, -4
 2518 0002 85B0     		sub	sp, sp, #20
 2519              	.LCFI100:
 2520              		.cfi_def_cfa_offset 24
 2521 0004 00AF     		add	r7, sp, #0
 2522              	.LCFI101:
 2523              		.cfi_def_cfa_register 7
 2524 0006 7860     		str	r0, [r7, #4]
 2525 0008 0B46     		mov	r3, r1
 2526 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2527              		.loc 1 1349 0
 2528 000c 0023     		movs	r3, #0
 2529 000e FB81     		strh	r3, [r7, #14]	@ movhi
1350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2530              		.loc 1 1356 0
 2531 0010 7B68     		ldr	r3, [r7, #4]
 2532 0012 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2533 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1FE Bit */
1359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1FE;
 2534              		.loc 1 1359 0
 2535 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2536 0018 23F00403 		bic	r3, r3, #4
 2537 001c FB81     		strh	r3, [r7, #14]	@ movhi
1360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCFast;
 2538              		.loc 1 1362 0
 2539 001e FA89     		ldrh	r2, [r7, #14]	@ movhi
 2540 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2541 0022 1343     		orrs	r3, r3, r2
 2542 0024 FB81     		strh	r3, [r7, #14]	@ movhi
1363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
1365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2543              		.loc 1 1365 0
 2544 0026 7B68     		ldr	r3, [r7, #4]
 2545 0028 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2546 002a 1A83     		strh	r2, [r3, #24]	@ movhi
1366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2547              		.loc 1 1366 0
 2548 002c 1437     		adds	r7, r7, #20
 2549 002e BD46     		mov	sp, r7
 2550              		@ sp needed
 2551 0030 5DF8047B 		ldr	r7, [sp], #4
 2552 0034 7047     		bx	lr
 2553              		.cfi_endproc
 2554              	.LFE143:
 2556 0036 00BF     		.section	.text.TIM_OC2FastConfig,"ax",%progbits
 2557              		.align	2
 2558              		.global	TIM_OC2FastConfig
 2559              		.thumb
 2560              		.thumb_func
 2562              	TIM_OC2FastConfig:
 2563              	.LFB144:
1367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 2 Fast feature.
1370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2564              		.loc 1 1379 0
 2565              		.cfi_startproc
 2566              		@ args = 0, pretend = 0, frame = 16
 2567              		@ frame_needed = 1, uses_anonymous_args = 0
 2568              		@ link register save eliminated.
 2569 0000 80B4     		push	{r7}
 2570              	.LCFI102:
 2571              		.cfi_def_cfa_offset 4
 2572              		.cfi_offset 7, -4
 2573 0002 85B0     		sub	sp, sp, #20
 2574              	.LCFI103:
 2575              		.cfi_def_cfa_offset 24
 2576 0004 00AF     		add	r7, sp, #0
 2577              	.LCFI104:
 2578              		.cfi_def_cfa_register 7
 2579 0006 7860     		str	r0, [r7, #4]
 2580 0008 0B46     		mov	r3, r1
 2581 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2582              		.loc 1 1380 0
 2583 000c 0023     		movs	r3, #0
 2584 000e FB81     		strh	r3, [r7, #14]	@ movhi
1381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
1387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2585              		.loc 1 1387 0
 2586 0010 7B68     		ldr	r3, [r7, #4]
 2587 0012 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2588 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2FE Bit */
1390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)(~TIM_CCMR1_OC2FE);
 2589              		.loc 1 1390 0
 2590 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2591 0018 23F48063 		bic	r3, r3, #1024
 2592 001c FB81     		strh	r3, [r7, #14]	@ movhi
1391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCFast << 8);
 2593              		.loc 1 1393 0
 2594 001e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2595 0020 1B02     		lsls	r3, r3, #8
 2596 0022 9AB2     		uxth	r2, r3
 2597 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2598 0026 1343     		orrs	r3, r3, r2
 2599 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
1396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2600              		.loc 1 1396 0
 2601 002a 7B68     		ldr	r3, [r7, #4]
 2602 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2603 002e 1A83     		strh	r2, [r3, #24]	@ movhi
1397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2604              		.loc 1 1397 0
 2605 0030 1437     		adds	r7, r7, #20
 2606 0032 BD46     		mov	sp, r7
 2607              		@ sp needed
 2608 0034 5DF8047B 		ldr	r7, [sp], #4
 2609 0038 7047     		bx	lr
 2610              		.cfi_endproc
 2611              	.LFE144:
 2613 003a 00BF     		.section	.text.TIM_OC3FastConfig,"ax",%progbits
 2614              		.align	2
 2615              		.global	TIM_OC3FastConfig
 2616              		.thumb
 2617              		.thumb_func
 2619              	TIM_OC3FastConfig:
 2620              	.LFB145:
1398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 3 Fast feature.
1401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2621              		.loc 1 1409 0
 2622              		.cfi_startproc
 2623              		@ args = 0, pretend = 0, frame = 16
 2624              		@ frame_needed = 1, uses_anonymous_args = 0
 2625              		@ link register save eliminated.
 2626 0000 80B4     		push	{r7}
 2627              	.LCFI105:
 2628              		.cfi_def_cfa_offset 4
 2629              		.cfi_offset 7, -4
 2630 0002 85B0     		sub	sp, sp, #20
 2631              	.LCFI106:
 2632              		.cfi_def_cfa_offset 24
 2633 0004 00AF     		add	r7, sp, #0
 2634              	.LCFI107:
 2635              		.cfi_def_cfa_register 7
 2636 0006 7860     		str	r0, [r7, #4]
 2637 0008 0B46     		mov	r3, r1
 2638 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2639              		.loc 1 1410 0
 2640 000c 0023     		movs	r3, #0
 2641 000e FB81     		strh	r3, [r7, #14]	@ movhi
1411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2642              		.loc 1 1417 0
 2643 0010 7B68     		ldr	r3, [r7, #4]
 2644 0012 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2645 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3FE Bit */
1420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3FE;
 2646              		.loc 1 1420 0
 2647 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2648 0018 23F00403 		bic	r3, r3, #4
 2649 001c FB81     		strh	r3, [r7, #14]	@ movhi
1421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCFast;
 2650              		.loc 1 1423 0
 2651 001e FA89     		ldrh	r2, [r7, #14]	@ movhi
 2652 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2653 0022 1343     		orrs	r3, r3, r2
 2654 0024 FB81     		strh	r3, [r7, #14]	@ movhi
1424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
1426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2655              		.loc 1 1426 0
 2656 0026 7B68     		ldr	r3, [r7, #4]
 2657 0028 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2658 002a 9A83     		strh	r2, [r3, #28]	@ movhi
1427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2659              		.loc 1 1427 0
 2660 002c 1437     		adds	r7, r7, #20
 2661 002e BD46     		mov	sp, r7
 2662              		@ sp needed
 2663 0030 5DF8047B 		ldr	r7, [sp], #4
 2664 0034 7047     		bx	lr
 2665              		.cfi_endproc
 2666              	.LFE145:
 2668 0036 00BF     		.section	.text.TIM_OC4FastConfig,"ax",%progbits
 2669              		.align	2
 2670              		.global	TIM_OC4FastConfig
 2671              		.thumb
 2672              		.thumb_func
 2674              	TIM_OC4FastConfig:
 2675              	.LFB146:
1428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Output Compare 4 Fast feature.
1431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCFast: new state of the Output Compare Fast Enable Bit.
1433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Enable: TIM output compare fast enable
1435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCFast_Disable: TIM output compare fast disable
1436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4FastConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCFast)
1439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2676              		.loc 1 1439 0
 2677              		.cfi_startproc
 2678              		@ args = 0, pretend = 0, frame = 16
 2679              		@ frame_needed = 1, uses_anonymous_args = 0
 2680              		@ link register save eliminated.
 2681 0000 80B4     		push	{r7}
 2682              	.LCFI108:
 2683              		.cfi_def_cfa_offset 4
 2684              		.cfi_offset 7, -4
 2685 0002 85B0     		sub	sp, sp, #20
 2686              	.LCFI109:
 2687              		.cfi_def_cfa_offset 24
 2688 0004 00AF     		add	r7, sp, #0
 2689              	.LCFI110:
 2690              		.cfi_def_cfa_register 7
 2691 0006 7860     		str	r0, [r7, #4]
 2692 0008 0B46     		mov	r3, r1
 2693 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2694              		.loc 1 1440 0
 2695 000c 0023     		movs	r3, #0
 2696 000e FB81     		strh	r3, [r7, #14]	@ movhi
1441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCFAST_STATE(TIM_OCFast));
1445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR2 register value */
1447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2697              		.loc 1 1447 0
 2698 0010 7B68     		ldr	r3, [r7, #4]
 2699 0012 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2700 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4FE Bit */
1450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)(~TIM_CCMR2_OC4FE);
 2701              		.loc 1 1450 0
 2702 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2703 0018 23F48063 		bic	r3, r3, #1024
 2704 001c FB81     		strh	r3, [r7, #14]	@ movhi
1451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Fast Bit */
1453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCFast << 8);
 2705              		.loc 1 1453 0
 2706 001e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2707 0020 1B02     		lsls	r3, r3, #8
 2708 0022 9AB2     		uxth	r2, r3
 2709 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2710 0026 1343     		orrs	r3, r3, r2
 2711 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 */
1456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2712              		.loc 1 1456 0
 2713 002a 7B68     		ldr	r3, [r7, #4]
 2714 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2715 002e 9A83     		strh	r2, [r3, #28]	@ movhi
1457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2716              		.loc 1 1457 0
 2717 0030 1437     		adds	r7, r7, #20
 2718 0032 BD46     		mov	sp, r7
 2719              		@ sp needed
 2720 0034 5DF8047B 		ldr	r7, [sp], #4
 2721 0038 7047     		bx	lr
 2722              		.cfi_endproc
 2723              	.LFE146:
 2725 003a 00BF     		.section	.text.TIM_ClearOC1Ref,"ax",%progbits
 2726              		.align	2
 2727              		.global	TIM_ClearOC1Ref
 2728              		.thumb
 2729              		.thumb_func
 2731              	TIM_ClearOC1Ref:
 2732              	.LFB147:
1458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF1 signal on an external event
1461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC1Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2733              		.loc 1 1469 0
 2734              		.cfi_startproc
 2735              		@ args = 0, pretend = 0, frame = 16
 2736              		@ frame_needed = 1, uses_anonymous_args = 0
 2737              		@ link register save eliminated.
 2738 0000 80B4     		push	{r7}
 2739              	.LCFI111:
 2740              		.cfi_def_cfa_offset 4
 2741              		.cfi_offset 7, -4
 2742 0002 85B0     		sub	sp, sp, #20
 2743              	.LCFI112:
 2744              		.cfi_def_cfa_offset 24
 2745 0004 00AF     		add	r7, sp, #0
 2746              	.LCFI113:
 2747              		.cfi_def_cfa_register 7
 2748 0006 7860     		str	r0, [r7, #4]
 2749 0008 0B46     		mov	r3, r1
 2750 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2751              		.loc 1 1470 0
 2752 000c 0023     		movs	r3, #0
 2753 000e FB81     		strh	r3, [r7, #14]	@ movhi
1471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2754              		.loc 1 1476 0
 2755 0010 7B68     		ldr	r3, [r7, #4]
 2756 0012 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2757 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC1CE Bit */
1479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC1CE;
 2758              		.loc 1 1479 0
 2759 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2760 0018 23F08003 		bic	r3, r3, #128
 2761 001c FB81     		strh	r3, [r7, #14]	@ movhi
1480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_OCClear;
 2762              		.loc 1 1482 0
 2763 001e FA89     		ldrh	r2, [r7, #14]	@ movhi
 2764 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2765 0022 1343     		orrs	r3, r3, r2
 2766 0024 FB81     		strh	r3, [r7, #14]	@ movhi
1483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2767              		.loc 1 1485 0
 2768 0026 7B68     		ldr	r3, [r7, #4]
 2769 0028 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2770 002a 1A83     		strh	r2, [r3, #24]	@ movhi
1486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2771              		.loc 1 1486 0
 2772 002c 1437     		adds	r7, r7, #20
 2773 002e BD46     		mov	sp, r7
 2774              		@ sp needed
 2775 0030 5DF8047B 		ldr	r7, [sp], #4
 2776 0034 7047     		bx	lr
 2777              		.cfi_endproc
 2778              	.LFE147:
 2780 0036 00BF     		.section	.text.TIM_ClearOC2Ref,"ax",%progbits
 2781              		.align	2
 2782              		.global	TIM_ClearOC2Ref
 2783              		.thumb
 2784              		.thumb_func
 2786              	TIM_ClearOC2Ref:
 2787              	.LFB148:
1487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF2 signal on an external event
1490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC2Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2788              		.loc 1 1499 0
 2789              		.cfi_startproc
 2790              		@ args = 0, pretend = 0, frame = 16
 2791              		@ frame_needed = 1, uses_anonymous_args = 0
 2792              		@ link register save eliminated.
 2793 0000 80B4     		push	{r7}
 2794              	.LCFI114:
 2795              		.cfi_def_cfa_offset 4
 2796              		.cfi_offset 7, -4
 2797 0002 85B0     		sub	sp, sp, #20
 2798              	.LCFI115:
 2799              		.cfi_def_cfa_offset 24
 2800 0004 00AF     		add	r7, sp, #0
 2801              	.LCFI116:
 2802              		.cfi_def_cfa_register 7
 2803 0006 7860     		str	r0, [r7, #4]
 2804 0008 0B46     		mov	r3, r1
 2805 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 2806              		.loc 1 1500 0
 2807 000c 0023     		movs	r3, #0
 2808 000e FB81     		strh	r3, [r7, #14]	@ movhi
1501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 2809              		.loc 1 1506 0
 2810 0010 7B68     		ldr	r3, [r7, #4]
 2811 0012 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2812 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC2CE Bit */
1509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= (uint16_t)~TIM_CCMR1_OC2CE;
 2813              		.loc 1 1509 0
 2814 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2815 0018 C3F30E03 		ubfx	r3, r3, #0, #15
 2816 001c FB81     		strh	r3, [r7, #14]	@ movhi
1510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_OCClear << 8);
 2817              		.loc 1 1512 0
 2818 001e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2819 0020 1B02     		lsls	r3, r3, #8
 2820 0022 9AB2     		uxth	r2, r3
 2821 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2822 0026 1343     		orrs	r3, r3, r2
 2823 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 register */
1515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 2824              		.loc 1 1515 0
 2825 002a 7B68     		ldr	r3, [r7, #4]
 2826 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2827 002e 1A83     		strh	r2, [r3, #24]	@ movhi
1516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2828              		.loc 1 1516 0
 2829 0030 1437     		adds	r7, r7, #20
 2830 0032 BD46     		mov	sp, r7
 2831              		@ sp needed
 2832 0034 5DF8047B 		ldr	r7, [sp], #4
 2833 0038 7047     		bx	lr
 2834              		.cfi_endproc
 2835              	.LFE148:
 2837 003a 00BF     		.section	.text.TIM_ClearOC3Ref,"ax",%progbits
 2838              		.align	2
 2839              		.global	TIM_ClearOC3Ref
 2840              		.thumb
 2841              		.thumb_func
 2843              	TIM_ClearOC3Ref:
 2844              	.LFB149:
1517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF3 signal on an external event
1520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC3Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2845              		.loc 1 1528 0
 2846              		.cfi_startproc
 2847              		@ args = 0, pretend = 0, frame = 16
 2848              		@ frame_needed = 1, uses_anonymous_args = 0
 2849              		@ link register save eliminated.
 2850 0000 80B4     		push	{r7}
 2851              	.LCFI117:
 2852              		.cfi_def_cfa_offset 4
 2853              		.cfi_offset 7, -4
 2854 0002 85B0     		sub	sp, sp, #20
 2855              	.LCFI118:
 2856              		.cfi_def_cfa_offset 24
 2857 0004 00AF     		add	r7, sp, #0
 2858              	.LCFI119:
 2859              		.cfi_def_cfa_register 7
 2860 0006 7860     		str	r0, [r7, #4]
 2861 0008 0B46     		mov	r3, r1
 2862 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2863              		.loc 1 1529 0
 2864 000c 0023     		movs	r3, #0
 2865 000e FB81     		strh	r3, [r7, #14]	@ movhi
1530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2866              		.loc 1 1535 0
 2867 0010 7B68     		ldr	r3, [r7, #4]
 2868 0012 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2869 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC3CE Bit */
1538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC3CE;
 2870              		.loc 1 1538 0
 2871 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2872 0018 23F08003 		bic	r3, r3, #128
 2873 001c FB81     		strh	r3, [r7, #14]	@ movhi
1539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= TIM_OCClear;
 2874              		.loc 1 1541 0
 2875 001e FA89     		ldrh	r2, [r7, #14]	@ movhi
 2876 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2877 0022 1343     		orrs	r3, r3, r2
 2878 0024 FB81     		strh	r3, [r7, #14]	@ movhi
1542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2879              		.loc 1 1544 0
 2880 0026 7B68     		ldr	r3, [r7, #4]
 2881 0028 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2882 002a 9A83     		strh	r2, [r3, #28]	@ movhi
1545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2883              		.loc 1 1545 0
 2884 002c 1437     		adds	r7, r7, #20
 2885 002e BD46     		mov	sp, r7
 2886              		@ sp needed
 2887 0030 5DF8047B 		ldr	r7, [sp], #4
 2888 0034 7047     		bx	lr
 2889              		.cfi_endproc
 2890              	.LFE149:
 2892 0036 00BF     		.section	.text.TIM_ClearOC4Ref,"ax",%progbits
 2893              		.align	2
 2894              		.global	TIM_ClearOC4Ref
 2895              		.thumb
 2896              		.thumb_func
 2898              	TIM_ClearOC4Ref:
 2899              	.LFB150:
1546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears or safeguards the OCREF4 signal on an external event
1549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCClear: new state of the Output Compare Clear Enable Bit.
1551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Enable: TIM Output clear enable
1553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCClear_Disable: TIM Output clear disable
1554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearOC4Ref(TIM_TypeDef* TIMx, uint16_t TIM_OCClear)
1557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2900              		.loc 1 1557 0
 2901              		.cfi_startproc
 2902              		@ args = 0, pretend = 0, frame = 16
 2903              		@ frame_needed = 1, uses_anonymous_args = 0
 2904              		@ link register save eliminated.
 2905 0000 80B4     		push	{r7}
 2906              	.LCFI120:
 2907              		.cfi_def_cfa_offset 4
 2908              		.cfi_offset 7, -4
 2909 0002 85B0     		sub	sp, sp, #20
 2910              	.LCFI121:
 2911              		.cfi_def_cfa_offset 24
 2912 0004 00AF     		add	r7, sp, #0
 2913              	.LCFI122:
 2914              		.cfi_def_cfa_register 7
 2915 0006 7860     		str	r0, [r7, #4]
 2916 0008 0B46     		mov	r3, r1
 2917 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0;
 2918              		.loc 1 1558 0
 2919 000c 0023     		movs	r3, #0
 2920 000e FB81     		strh	r3, [r7, #14]	@ movhi
1559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCCLEAR_STATE(TIM_OCClear));
1563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 2921              		.loc 1 1564 0
 2922 0010 7B68     		ldr	r3, [r7, #4]
 2923 0012 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 2924 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the OC4CE Bit */
1567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= (uint16_t)~TIM_CCMR2_OC4CE;
 2925              		.loc 1 1567 0
 2926 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2927 0018 C3F30E03 		ubfx	r3, r3, #0, #15
 2928 001c FB81     		strh	r3, [r7, #14]	@ movhi
1568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable or Disable the Output Compare Clear Bit */
1570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_OCClear << 8);
 2929              		.loc 1 1570 0
 2930 001e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2931 0020 1B02     		lsls	r3, r3, #8
 2932 0022 9AB2     		uxth	r2, r3
 2933 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2934 0026 1343     		orrs	r3, r3, r2
 2935 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 register */
1573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 2936              		.loc 1 1573 0
 2937 002a 7B68     		ldr	r3, [r7, #4]
 2938 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 2939 002e 9A83     		strh	r2, [r3, #28]	@ movhi
1574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2940              		.loc 1 1574 0
 2941 0030 1437     		adds	r7, r7, #20
 2942 0032 BD46     		mov	sp, r7
 2943              		@ sp needed
 2944 0034 5DF8047B 		ldr	r7, [sp], #4
 2945 0038 7047     		bx	lr
 2946              		.cfi_endproc
 2947              	.LFE150:
 2949 003a 00BF     		.section	.text.TIM_OC1PolarityConfig,"ax",%progbits
 2950              		.align	2
 2951              		.global	TIM_OC1PolarityConfig
 2952              		.thumb
 2953              		.thumb_func
 2955              	TIM_OC1PolarityConfig:
 2956              	.LFB151:
1575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 1 polarity.
1578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC1 Polarity
1580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 2957              		.loc 1 1586 0
 2958              		.cfi_startproc
 2959              		@ args = 0, pretend = 0, frame = 16
 2960              		@ frame_needed = 1, uses_anonymous_args = 0
 2961              		@ link register save eliminated.
 2962 0000 80B4     		push	{r7}
 2963              	.LCFI123:
 2964              		.cfi_def_cfa_offset 4
 2965              		.cfi_offset 7, -4
 2966 0002 85B0     		sub	sp, sp, #20
 2967              	.LCFI124:
 2968              		.cfi_def_cfa_offset 24
 2969 0004 00AF     		add	r7, sp, #0
 2970              	.LCFI125:
 2971              		.cfi_def_cfa_register 7
 2972 0006 7860     		str	r0, [r7, #4]
 2973 0008 0B46     		mov	r3, r1
 2974 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 2975              		.loc 1 1587 0
 2976 000c 0023     		movs	r3, #0
 2977 000e FB81     		strh	r3, [r7, #14]	@ movhi
1588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 2978              		.loc 1 1593 0
 2979 0010 7B68     		ldr	r3, [r7, #4]
 2980 0012 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 2981 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC1P Bit */
1596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC1P);
 2982              		.loc 1 1596 0
 2983 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 2984 0018 23F00203 		bic	r3, r3, #2
 2985 001c FB81     		strh	r3, [r7, #14]	@ movhi
1597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCPolarity;
 2986              		.loc 1 1597 0
 2987 001e FA89     		ldrh	r2, [r7, #14]	@ movhi
 2988 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 2989 0022 1343     		orrs	r3, r3, r2
 2990 0024 FB81     		strh	r3, [r7, #14]	@ movhi
1598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 2991              		.loc 1 1600 0
 2992 0026 7B68     		ldr	r3, [r7, #4]
 2993 0028 FA89     		ldrh	r2, [r7, #14]	@ movhi
 2994 002a 1A84     		strh	r2, [r3, #32]	@ movhi
1601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 2995              		.loc 1 1601 0
 2996 002c 1437     		adds	r7, r7, #20
 2997 002e BD46     		mov	sp, r7
 2998              		@ sp needed
 2999 0030 5DF8047B 		ldr	r7, [sp], #4
 3000 0034 7047     		bx	lr
 3001              		.cfi_endproc
 3002              	.LFE151:
 3004 0036 00BF     		.section	.text.TIM_OC1NPolarityConfig,"ax",%progbits
 3005              		.align	2
 3006              		.global	TIM_OC1NPolarityConfig
 3007              		.thumb
 3008              		.thumb_func
 3010              	TIM_OC1NPolarityConfig:
 3011              	.LFB152:
1602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 1N polarity.
1605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC1N Polarity
1607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC1NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3012              		.loc 1 1613 0
 3013              		.cfi_startproc
 3014              		@ args = 0, pretend = 0, frame = 16
 3015              		@ frame_needed = 1, uses_anonymous_args = 0
 3016              		@ link register save eliminated.
 3017 0000 80B4     		push	{r7}
 3018              	.LCFI126:
 3019              		.cfi_def_cfa_offset 4
 3020              		.cfi_offset 7, -4
 3021 0002 85B0     		sub	sp, sp, #20
 3022              	.LCFI127:
 3023              		.cfi_def_cfa_offset 24
 3024 0004 00AF     		add	r7, sp, #0
 3025              	.LCFI128:
 3026              		.cfi_def_cfa_register 7
 3027 0006 7860     		str	r0, [r7, #4]
 3028 0008 0B46     		mov	r3, r1
 3029 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3030              		.loc 1 1614 0
 3031 000c 0023     		movs	r3, #0
 3032 000e FB81     		strh	r3, [r7, #14]	@ movhi
1615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3033              		.loc 1 1619 0
 3034 0010 7B68     		ldr	r3, [r7, #4]
 3035 0012 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3036 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC1NP Bit */
1622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC1NP;
 3037              		.loc 1 1622 0
 3038 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3039 0018 23F00803 		bic	r3, r3, #8
 3040 001c FB81     		strh	r3, [r7, #14]	@ movhi
1623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= TIM_OCNPolarity;
 3041              		.loc 1 1623 0
 3042 001e FA89     		ldrh	r2, [r7, #14]	@ movhi
 3043 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3044 0022 1343     		orrs	r3, r3, r2
 3045 0024 FB81     		strh	r3, [r7, #14]	@ movhi
1624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3046              		.loc 1 1626 0
 3047 0026 7B68     		ldr	r3, [r7, #4]
 3048 0028 FA89     		ldrh	r2, [r7, #14]	@ movhi
 3049 002a 1A84     		strh	r2, [r3, #32]	@ movhi
1627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3050              		.loc 1 1627 0
 3051 002c 1437     		adds	r7, r7, #20
 3052 002e BD46     		mov	sp, r7
 3053              		@ sp needed
 3054 0030 5DF8047B 		ldr	r7, [sp], #4
 3055 0034 7047     		bx	lr
 3056              		.cfi_endproc
 3057              	.LFE152:
 3059 0036 00BF     		.section	.text.TIM_OC2PolarityConfig,"ax",%progbits
 3060              		.align	2
 3061              		.global	TIM_OC2PolarityConfig
 3062              		.thumb
 3063              		.thumb_func
 3065              	TIM_OC2PolarityConfig:
 3066              	.LFB153:
1628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 2 polarity.
1631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
1632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC2 Polarity
1634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3067              		.loc 1 1640 0
 3068              		.cfi_startproc
 3069              		@ args = 0, pretend = 0, frame = 16
 3070              		@ frame_needed = 1, uses_anonymous_args = 0
 3071              		@ link register save eliminated.
 3072 0000 80B4     		push	{r7}
 3073              	.LCFI129:
 3074              		.cfi_def_cfa_offset 4
 3075              		.cfi_offset 7, -4
 3076 0002 85B0     		sub	sp, sp, #20
 3077              	.LCFI130:
 3078              		.cfi_def_cfa_offset 24
 3079 0004 00AF     		add	r7, sp, #0
 3080              	.LCFI131:
 3081              		.cfi_def_cfa_register 7
 3082 0006 7860     		str	r0, [r7, #4]
 3083 0008 0B46     		mov	r3, r1
 3084 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3085              		.loc 1 1641 0
 3086 000c 0023     		movs	r3, #0
 3087 000e FB81     		strh	r3, [r7, #14]	@ movhi
1642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3088              		.loc 1 1647 0
 3089 0010 7B68     		ldr	r3, [r7, #4]
 3090 0012 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3091 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC2P Bit */
1650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)(~TIM_CCER_CC2P);
 3092              		.loc 1 1650 0
 3093 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3094 0018 23F02003 		bic	r3, r3, #32
 3095 001c FB81     		strh	r3, [r7, #14]	@ movhi
1651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 4);
 3096              		.loc 1 1651 0
 3097 001e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3098 0020 1B01     		lsls	r3, r3, #4
 3099 0022 9AB2     		uxth	r2, r3
 3100 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3101 0026 1343     		orrs	r3, r3, r2
 3102 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3103              		.loc 1 1654 0
 3104 002a 7B68     		ldr	r3, [r7, #4]
 3105 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 3106 002e 1A84     		strh	r2, [r3, #32]	@ movhi
1655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3107              		.loc 1 1655 0
 3108 0030 1437     		adds	r7, r7, #20
 3109 0032 BD46     		mov	sp, r7
 3110              		@ sp needed
 3111 0034 5DF8047B 		ldr	r7, [sp], #4
 3112 0038 7047     		bx	lr
 3113              		.cfi_endproc
 3114              	.LFE153:
 3116 003a 00BF     		.section	.text.TIM_OC2NPolarityConfig,"ax",%progbits
 3117              		.align	2
 3118              		.global	TIM_OC2NPolarityConfig
 3119              		.thumb
 3120              		.thumb_func
 3122              	TIM_OC2NPolarityConfig:
 3123              	.LFB154:
1656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 2N polarity.
1659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC2N Polarity
1661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC2NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3124              		.loc 1 1667 0
 3125              		.cfi_startproc
 3126              		@ args = 0, pretend = 0, frame = 16
 3127              		@ frame_needed = 1, uses_anonymous_args = 0
 3128              		@ link register save eliminated.
 3129 0000 80B4     		push	{r7}
 3130              	.LCFI132:
 3131              		.cfi_def_cfa_offset 4
 3132              		.cfi_offset 7, -4
 3133 0002 85B0     		sub	sp, sp, #20
 3134              	.LCFI133:
 3135              		.cfi_def_cfa_offset 24
 3136 0004 00AF     		add	r7, sp, #0
 3137              	.LCFI134:
 3138              		.cfi_def_cfa_register 7
 3139 0006 7860     		str	r0, [r7, #4]
 3140 0008 0B46     		mov	r3, r1
 3141 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3142              		.loc 1 1668 0
 3143 000c 0023     		movs	r3, #0
 3144 000e FB81     		strh	r3, [r7, #14]	@ movhi
1669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3145              		.loc 1 1674 0
 3146 0010 7B68     		ldr	r3, [r7, #4]
 3147 0012 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3148 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC2NP Bit */
1677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC2NP;
 3149              		.loc 1 1677 0
 3150 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3151 0018 23F08003 		bic	r3, r3, #128
 3152 001c FB81     		strh	r3, [r7, #14]	@ movhi
1678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 4);
 3153              		.loc 1 1678 0
 3154 001e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3155 0020 1B01     		lsls	r3, r3, #4
 3156 0022 9AB2     		uxth	r2, r3
 3157 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3158 0026 1343     		orrs	r3, r3, r2
 3159 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3160              		.loc 1 1681 0
 3161 002a 7B68     		ldr	r3, [r7, #4]
 3162 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 3163 002e 1A84     		strh	r2, [r3, #32]	@ movhi
1682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3164              		.loc 1 1682 0
 3165 0030 1437     		adds	r7, r7, #20
 3166 0032 BD46     		mov	sp, r7
 3167              		@ sp needed
 3168 0034 5DF8047B 		ldr	r7, [sp], #4
 3169 0038 7047     		bx	lr
 3170              		.cfi_endproc
 3171              	.LFE154:
 3173 003a 00BF     		.section	.text.TIM_OC3PolarityConfig,"ax",%progbits
 3174              		.align	2
 3175              		.global	TIM_OC3PolarityConfig
 3176              		.thumb
 3177              		.thumb_func
 3179              	TIM_OC3PolarityConfig:
 3180              	.LFB155:
1683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 3 polarity.
1686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC3 Polarity
1688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3181              		.loc 1 1694 0
 3182              		.cfi_startproc
 3183              		@ args = 0, pretend = 0, frame = 16
 3184              		@ frame_needed = 1, uses_anonymous_args = 0
 3185              		@ link register save eliminated.
 3186 0000 80B4     		push	{r7}
 3187              	.LCFI135:
 3188              		.cfi_def_cfa_offset 4
 3189              		.cfi_offset 7, -4
 3190 0002 85B0     		sub	sp, sp, #20
 3191              	.LCFI136:
 3192              		.cfi_def_cfa_offset 24
 3193 0004 00AF     		add	r7, sp, #0
 3194              	.LCFI137:
 3195              		.cfi_def_cfa_register 7
 3196 0006 7860     		str	r0, [r7, #4]
 3197 0008 0B46     		mov	r3, r1
 3198 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3199              		.loc 1 1695 0
 3200 000c 0023     		movs	r3, #0
 3201 000e FB81     		strh	r3, [r7, #14]	@ movhi
1696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3202              		.loc 1 1701 0
 3203 0010 7B68     		ldr	r3, [r7, #4]
 3204 0012 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3205 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC3P Bit */
1704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3P;
 3206              		.loc 1 1704 0
 3207 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3208 0018 23F40073 		bic	r3, r3, #512
 3209 001c FB81     		strh	r3, [r7, #14]	@ movhi
1705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 8);
 3210              		.loc 1 1705 0
 3211 001e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3212 0020 1B02     		lsls	r3, r3, #8
 3213 0022 9AB2     		uxth	r2, r3
 3214 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3215 0026 1343     		orrs	r3, r3, r2
 3216 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3217              		.loc 1 1708 0
 3218 002a 7B68     		ldr	r3, [r7, #4]
 3219 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 3220 002e 1A84     		strh	r2, [r3, #32]	@ movhi
1709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3221              		.loc 1 1709 0
 3222 0030 1437     		adds	r7, r7, #20
 3223 0032 BD46     		mov	sp, r7
 3224              		@ sp needed
 3225 0034 5DF8047B 		ldr	r7, [sp], #4
 3226 0038 7047     		bx	lr
 3227              		.cfi_endproc
 3228              	.LFE155:
 3230 003a 00BF     		.section	.text.TIM_OC3NPolarityConfig,"ax",%progbits
 3231              		.align	2
 3232              		.global	TIM_OC3NPolarityConfig
 3233              		.thumb
 3234              		.thumb_func
 3236              	TIM_OC3NPolarityConfig:
 3237              	.LFB156:
1710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Channel 3N polarity.
1713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCNPolarity: specifies the OC3N Polarity
1715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_High: Output Compare active high
1717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCNPolarity_Low: Output Compare active low
1718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC3NPolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCNPolarity)
1721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3238              		.loc 1 1721 0
 3239              		.cfi_startproc
 3240              		@ args = 0, pretend = 0, frame = 16
 3241              		@ frame_needed = 1, uses_anonymous_args = 0
 3242              		@ link register save eliminated.
 3243 0000 80B4     		push	{r7}
 3244              	.LCFI138:
 3245              		.cfi_def_cfa_offset 4
 3246              		.cfi_offset 7, -4
 3247 0002 85B0     		sub	sp, sp, #20
 3248              	.LCFI139:
 3249              		.cfi_def_cfa_offset 24
 3250 0004 00AF     		add	r7, sp, #0
 3251              	.LCFI140:
 3252              		.cfi_def_cfa_register 7
 3253 0006 7860     		str	r0, [r7, #4]
 3254 0008 0B46     		mov	r3, r1
 3255 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3256              		.loc 1 1722 0
 3257 000c 0023     		movs	r3, #0
 3258 000e FB81     		strh	r3, [r7, #14]	@ movhi
1723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
1724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OCN_POLARITY(TIM_OCNPolarity));
1727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
1728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3259              		.loc 1 1728 0
 3260 0010 7B68     		ldr	r3, [r7, #4]
 3261 0012 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3262 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC3NP Bit */
1731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC3NP;
 3263              		.loc 1 1731 0
 3264 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3265 0018 23F40063 		bic	r3, r3, #2048
 3266 001c FB81     		strh	r3, [r7, #14]	@ movhi
1732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCNPolarity << 8);
 3267              		.loc 1 1732 0
 3268 001e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3269 0020 1B02     		lsls	r3, r3, #8
 3270 0022 9AB2     		uxth	r2, r3
 3271 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3272 0026 1343     		orrs	r3, r3, r2
 3273 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3274              		.loc 1 1735 0
 3275 002a 7B68     		ldr	r3, [r7, #4]
 3276 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 3277 002e 1A84     		strh	r2, [r3, #32]	@ movhi
1736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3278              		.loc 1 1736 0
 3279 0030 1437     		adds	r7, r7, #20
 3280 0032 BD46     		mov	sp, r7
 3281              		@ sp needed
 3282 0034 5DF8047B 		ldr	r7, [sp], #4
 3283 0038 7047     		bx	lr
 3284              		.cfi_endproc
 3285              	.LFE156:
 3287 003a 00BF     		.section	.text.TIM_OC4PolarityConfig,"ax",%progbits
 3288              		.align	2
 3289              		.global	TIM_OC4PolarityConfig
 3290              		.thumb
 3291              		.thumb_func
 3293              	TIM_OC4PolarityConfig:
 3294              	.LFB157:
1737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx channel 4 polarity.
1740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
1741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_OCPolarity: specifies the OC4 Polarity
1742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_High: Output Compare active high
1744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_OCPolarity_Low: Output Compare active low
1745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_OC4PolarityConfig(TIM_TypeDef* TIMx, uint16_t TIM_OCPolarity)
1748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3295              		.loc 1 1748 0
 3296              		.cfi_startproc
 3297              		@ args = 0, pretend = 0, frame = 16
 3298              		@ frame_needed = 1, uses_anonymous_args = 0
 3299              		@ link register save eliminated.
 3300 0000 80B4     		push	{r7}
 3301              	.LCFI141:
 3302              		.cfi_def_cfa_offset 4
 3303              		.cfi_offset 7, -4
 3304 0002 85B0     		sub	sp, sp, #20
 3305              	.LCFI142:
 3306              		.cfi_def_cfa_offset 24
 3307 0004 00AF     		add	r7, sp, #0
 3308              	.LCFI143:
 3309              		.cfi_def_cfa_register 7
 3310 0006 7860     		str	r0, [r7, #4]
 3311 0008 0B46     		mov	r3, r1
 3312 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 3313              		.loc 1 1749 0
 3314 000c 0023     		movs	r3, #0
 3315 000e FB81     		strh	r3, [r7, #14]	@ movhi
1750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
1753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OC_POLARITY(TIM_OCPolarity));
1754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 3316              		.loc 1 1755 0
 3317 0010 7B68     		ldr	r3, [r7, #4]
 3318 0012 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3319 0014 FB81     		strh	r3, [r7, #14]	@ movhi
1756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the CC4P Bit */
1758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~TIM_CCER_CC4P;
 3320              		.loc 1 1758 0
 3321 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3322 0018 23F40053 		bic	r3, r3, #8192
 3323 001c FB81     		strh	r3, [r7, #14]	@ movhi
1759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_OCPolarity << 12);
 3324              		.loc 1 1759 0
 3325 001e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3326 0020 1B03     		lsls	r3, r3, #12
 3327 0022 9AB2     		uxth	r2, r3
 3328 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3329 0026 1343     		orrs	r3, r3, r2
 3330 0028 FB81     		strh	r3, [r7, #14]	@ movhi
1760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER register */
1762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 3331              		.loc 1 1762 0
 3332 002a 7B68     		ldr	r3, [r7, #4]
 3333 002c FA89     		ldrh	r2, [r7, #14]	@ movhi
 3334 002e 1A84     		strh	r2, [r3, #32]	@ movhi
1763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3335              		.loc 1 1763 0
 3336 0030 1437     		adds	r7, r7, #20
 3337 0032 BD46     		mov	sp, r7
 3338              		@ sp needed
 3339 0034 5DF8047B 		ldr	r7, [sp], #4
 3340 0038 7047     		bx	lr
 3341              		.cfi_endproc
 3342              	.LFE157:
 3344 003a 00BF     		.section	.text.TIM_CCxCmd,"ax",%progbits
 3345              		.align	2
 3346              		.global	TIM_CCxCmd
 3347              		.thumb
 3348              		.thumb_func
 3350              	TIM_CCxCmd:
 3351              	.LFB158:
1764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel x.
1767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_4: TIM Channel 4
1774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CCx: specifies the TIM Channel CCxE bit new state.
1775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: TIM_CCx_Enable or TIM_CCx_Disable. 
1776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCxCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCx)
1779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3352              		.loc 1 1779 0
 3353              		.cfi_startproc
 3354              		@ args = 0, pretend = 0, frame = 16
 3355              		@ frame_needed = 1, uses_anonymous_args = 0
 3356              		@ link register save eliminated.
 3357 0000 80B4     		push	{r7}
 3358              	.LCFI144:
 3359              		.cfi_def_cfa_offset 4
 3360              		.cfi_offset 7, -4
 3361 0002 85B0     		sub	sp, sp, #20
 3362              	.LCFI145:
 3363              		.cfi_def_cfa_offset 24
 3364 0004 00AF     		add	r7, sp, #0
 3365              	.LCFI146:
 3366              		.cfi_def_cfa_register 7
 3367 0006 7860     		str	r0, [r7, #4]
 3368 0008 1346     		mov	r3, r2
 3369 000a 0A46     		mov	r2, r1	@ movhi
 3370 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 3371 000e 3B80     		strh	r3, [r7]	@ movhi
1780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp = 0;
 3372              		.loc 1 1780 0
 3373 0010 0023     		movs	r3, #0
 3374 0012 FB81     		strh	r3, [r7, #14]	@ movhi
1781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
1784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CHANNEL(TIM_Channel));
1785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CCX(TIM_CCx));
1786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = CCER_CCE_SET << TIM_Channel;
 3375              		.loc 1 1787 0
 3376 0014 7B88     		ldrh	r3, [r7, #2]
 3377 0016 0122     		movs	r2, #1
 3378 0018 02FA03F3 		lsl	r3, r2, r3
 3379 001c FB81     		strh	r3, [r7, #14]	@ movhi
1788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CCxE Bit */
1790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~ tmp;
 3380              		.loc 1 1790 0
 3381 001e 7B68     		ldr	r3, [r7, #4]
 3382 0020 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3383 0022 9AB2     		uxth	r2, r3
 3384 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3385 0026 DB43     		mvns	r3, r3
 3386 0028 9BB2     		uxth	r3, r3
 3387 002a 1340     		ands	r3, r3, r2
 3388 002c 9AB2     		uxth	r2, r3
 3389 002e 7B68     		ldr	r3, [r7, #4]
 3390 0030 1A84     		strh	r2, [r3, #32]	@ movhi
1791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the CCxE Bit */ 
1793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCx << TIM_Channel);
 3391              		.loc 1 1793 0
 3392 0032 7B68     		ldr	r3, [r7, #4]
 3393 0034 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3394 0036 9AB2     		uxth	r2, r3
 3395 0038 3988     		ldrh	r1, [r7]
 3396 003a 7B88     		ldrh	r3, [r7, #2]
 3397 003c 01FA03F3 		lsl	r3, r1, r3
 3398 0040 9BB2     		uxth	r3, r3
 3399 0042 1343     		orrs	r3, r3, r2
 3400 0044 9AB2     		uxth	r2, r3
 3401 0046 7B68     		ldr	r3, [r7, #4]
 3402 0048 1A84     		strh	r2, [r3, #32]	@ movhi
1794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3403              		.loc 1 1794 0
 3404 004a 1437     		adds	r7, r7, #20
 3405 004c BD46     		mov	sp, r7
 3406              		@ sp needed
 3407 004e 5DF8047B 		ldr	r7, [sp], #4
 3408 0052 7047     		bx	lr
 3409              		.cfi_endproc
 3410              	.LFE158:
 3412              		.section	.text.TIM_CCxNCmd,"ax",%progbits
 3413              		.align	2
 3414              		.global	TIM_CCxNCmd
 3415              		.thumb
 3416              		.thumb_func
 3418              	TIM_CCxNCmd:
 3419              	.LFB159:
1795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel xN.
1798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIM peripheral.
1799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Channel: specifies the TIM Channel
1800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
1801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_1: TIM Channel 1
1802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_2: TIM Channel 2
1803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_Channel_3: TIM Channel 3
1804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_CCxN: specifies the TIM Channel CCxNE bit new state.
1805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: TIM_CCxN_Enable or TIM_CCxN_Disable. 
1806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCxNCmd(TIM_TypeDef* TIMx, uint16_t TIM_Channel, uint16_t TIM_CCxN)
1809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3420              		.loc 1 1809 0
 3421              		.cfi_startproc
 3422              		@ args = 0, pretend = 0, frame = 16
 3423              		@ frame_needed = 1, uses_anonymous_args = 0
 3424              		@ link register save eliminated.
 3425 0000 80B4     		push	{r7}
 3426              	.LCFI147:
 3427              		.cfi_def_cfa_offset 4
 3428              		.cfi_offset 7, -4
 3429 0002 85B0     		sub	sp, sp, #20
 3430              	.LCFI148:
 3431              		.cfi_def_cfa_offset 24
 3432 0004 00AF     		add	r7, sp, #0
 3433              	.LCFI149:
 3434              		.cfi_def_cfa_register 7
 3435 0006 7860     		str	r0, [r7, #4]
 3436 0008 1346     		mov	r3, r2
 3437 000a 0A46     		mov	r2, r1	@ movhi
 3438 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 3439 000e 3B80     		strh	r3, [r7]	@ movhi
1810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmp = 0;
 3440              		.loc 1 1810 0
 3441 0010 0023     		movs	r3, #0
 3442 0012 FB81     		strh	r3, [r7, #14]	@ movhi
1811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
1814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_COMPLEMENTARY_CHANNEL(TIM_Channel));
1815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_CCXN(TIM_CCxN));
1816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = CCER_CCNE_SET << TIM_Channel;
 3443              		.loc 1 1817 0
 3444 0014 7B88     		ldrh	r3, [r7, #2]
 3445 0016 0422     		movs	r2, #4
 3446 0018 02FA03F3 		lsl	r3, r2, r3
 3447 001c FB81     		strh	r3, [r7, #14]	@ movhi
1818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the CCxNE Bit */
1820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t) ~tmp;
 3448              		.loc 1 1820 0
 3449 001e 7B68     		ldr	r3, [r7, #4]
 3450 0020 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3451 0022 9AB2     		uxth	r2, r3
 3452 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 3453 0026 DB43     		mvns	r3, r3
 3454 0028 9BB2     		uxth	r3, r3
 3455 002a 1340     		ands	r3, r3, r2
 3456 002c 9AB2     		uxth	r2, r3
 3457 002e 7B68     		ldr	r3, [r7, #4]
 3458 0030 1A84     		strh	r2, [r3, #32]	@ movhi
1821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or reset the CCxNE Bit */ 
1823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER |=  (uint16_t)(TIM_CCxN << TIM_Channel);
 3459              		.loc 1 1823 0
 3460 0032 7B68     		ldr	r3, [r7, #4]
 3461 0034 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 3462 0036 9AB2     		uxth	r2, r3
 3463 0038 3988     		ldrh	r1, [r7]
 3464 003a 7B88     		ldrh	r3, [r7, #2]
 3465 003c 01FA03F3 		lsl	r3, r1, r3
 3466 0040 9BB2     		uxth	r3, r3
 3467 0042 1343     		orrs	r3, r3, r2
 3468 0044 9AB2     		uxth	r2, r3
 3469 0046 7B68     		ldr	r3, [r7, #4]
 3470 0048 1A84     		strh	r2, [r3, #32]	@ movhi
1824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3471              		.loc 1 1824 0
 3472 004a 1437     		adds	r7, r7, #20
 3473 004c BD46     		mov	sp, r7
 3474              		@ sp needed
 3475 004e 5DF8047B 		ldr	r7, [sp], #4
 3476 0052 7047     		bx	lr
 3477              		.cfi_endproc
 3478              	.LFE159:
 3480              		.section	.text.TIM_ICInit,"ax",%progbits
 3481              		.align	2
 3482              		.global	TIM_ICInit
 3483              		.thumb
 3484              		.thumb_func
 3486              	TIM_ICInit:
 3487              	.LFB160:
1825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
1827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group3 Input Capture management functions
1830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Input Capture management functions 
1831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
1832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
1833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
1834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                       Input Capture management functions
1835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
1836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
1837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
1838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in Input Capture Mode
1839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
1840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        To use the Timer in Input Capture mode, the following steps are mandatory:
1841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Enable TIM clock using RCC_APBxPeriphClockCmd(RCC_APBxPeriph_TIMx, ENABLE) function
1843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the TIM pins by configuring the corresponding GPIO pins
1845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Time base unit as described in the first part of this driver,
1847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           if needed, else the Timer will run with the default configuration:
1848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Autoreload value = 0xFFFF
1849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Prescaler value = 0x0000
1850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Counter mode = Up counting
1851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - Clock Division = TIM_CKD_DIV1
1852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Fill the TIM_ICInitStruct with the desired parameters including:
1854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Channel: TIM_Channel
1855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture polarity: TIM_ICPolarity
1856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture selection: TIM_ICSelection
1857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input Capture Prescaler: TIM_ICPrescaler
1858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - TIM Input CApture filter value: TIM_ICFilter
1859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Call TIM_ICInit(TIMx, &TIM_ICInitStruct) to configure the desired channel with the 
1861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration and to measure only frequency or duty cycle of the input sign
1862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           or,
1863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Call TIM_PWMIConfig(TIMx, &TIM_ICInitStruct) to configure the desired channels with the 
1864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           corresponding configuration and to measure the frequency and the duty cycle of the input 
1865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        5. Enable the NVIC or the DMA to read the measured frequency. 
1867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
1868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        6. Enable the corresponding interrupt (or DMA request) to read the Captured value,
1869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           using the function TIM_ITConfig(TIMx, TIM_IT_CCx) (or TIM_DMA_Cmd(TIMx, TIM_DMA_CCx)) 
1870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        7. Call the TIM_Cmd(ENABLE) function to enable the TIM counter.
1872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        8. Use TIM_GetCapturex(TIMx); to read the captured value.
1874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        
1875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Note1: All other functions can be used separately to modify, if needed,
1876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               a specific feature of the Timer. 
1877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
1879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
1880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Initializes the TIM peripheral according to the specified parameters
1884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_ICInitStruct.
1885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
1886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
1887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
1888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ICInit(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3488              		.loc 1 1891 0
 3489              		.cfi_startproc
 3490              		@ args = 0, pretend = 0, frame = 8
 3491              		@ frame_needed = 1, uses_anonymous_args = 0
 3492 0000 80B5     		push	{r7, lr}
 3493              	.LCFI150:
 3494              		.cfi_def_cfa_offset 8
 3495              		.cfi_offset 7, -8
 3496              		.cfi_offset 14, -4
 3497 0002 82B0     		sub	sp, sp, #8
 3498              	.LCFI151:
 3499              		.cfi_def_cfa_offset 16
 3500 0004 00AF     		add	r7, sp, #0
 3501              	.LCFI152:
 3502              		.cfi_def_cfa_register 7
 3503 0006 7860     		str	r0, [r7, #4]
 3504 0008 3960     		str	r1, [r7]
1892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
1894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICInitStruct->TIM_ICPolarity));
1895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_SELECTION(TIM_ICInitStruct->TIM_ICSelection));
1896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICInitStruct->TIM_ICPrescaler));
1897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(TIM_ICInitStruct->TIM_ICFilter));
1898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
1899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 3505              		.loc 1 1899 0
 3506 000a 3B68     		ldr	r3, [r7]
 3507 000c 1B88     		ldrh	r3, [r3]
 3508 000e 002B     		cmp	r3, #0
 3509 0010 0FD1     		bne	.L92
1900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
1902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3510              		.loc 1 1902 0
 3511 0012 3B68     		ldr	r3, [r7]
 3512 0014 5988     		ldrh	r1, [r3, #2]
 3513 0016 3B68     		ldr	r3, [r7]
 3514 0018 9A88     		ldrh	r2, [r3, #4]
 3515 001a 3B68     		ldr	r3, [r7]
 3516 001c 1B89     		ldrh	r3, [r3, #8]
 3517 001e 7868     		ldr	r0, [r7, #4]
 3518 0020 FFF7FEFF 		bl	TI1_Config
1903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
1904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3519              		.loc 1 1906 0
 3520 0024 3B68     		ldr	r3, [r7]
 3521 0026 DB88     		ldrh	r3, [r3, #6]
 3522 0028 7868     		ldr	r0, [r7, #4]
 3523 002a 1946     		mov	r1, r3
 3524 002c FFF7FEFF 		bl	TIM_SetIC1Prescaler
 3525 0030 36E0     		b	.L91
 3526              	.L92:
1907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_2)
 3527              		.loc 1 1908 0
 3528 0032 3B68     		ldr	r3, [r7]
 3529 0034 1B88     		ldrh	r3, [r3]
 3530 0036 042B     		cmp	r3, #4
 3531 0038 0FD1     		bne	.L94
1909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
1911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3532              		.loc 1 1911 0
 3533 003a 3B68     		ldr	r3, [r7]
 3534 003c 5988     		ldrh	r1, [r3, #2]
 3535 003e 3B68     		ldr	r3, [r7]
 3536 0040 9A88     		ldrh	r2, [r3, #4]
 3537 0042 3B68     		ldr	r3, [r7]
 3538 0044 1B89     		ldrh	r3, [r3, #8]
 3539 0046 7868     		ldr	r0, [r7, #4]
 3540 0048 FFF7FEFF 		bl	TI2_Config
1912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
1913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3541              		.loc 1 1915 0
 3542 004c 3B68     		ldr	r3, [r7]
 3543 004e DB88     		ldrh	r3, [r3, #6]
 3544 0050 7868     		ldr	r0, [r7, #4]
 3545 0052 1946     		mov	r1, r3
 3546 0054 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 3547 0058 22E0     		b	.L91
 3548              	.L94:
1916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_3)
 3549              		.loc 1 1917 0
 3550 005a 3B68     		ldr	r3, [r7]
 3551 005c 1B88     		ldrh	r3, [r3]
 3552 005e 082B     		cmp	r3, #8
 3553 0060 0FD1     		bne	.L95
1918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI3 Configuration */
1920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI3_Config(TIMx,  TIM_ICInitStruct->TIM_ICPolarity,
 3554              		.loc 1 1920 0
 3555 0062 3B68     		ldr	r3, [r7]
 3556 0064 5988     		ldrh	r1, [r3, #2]
 3557 0066 3B68     		ldr	r3, [r7]
 3558 0068 9A88     		ldrh	r2, [r3, #4]
 3559 006a 3B68     		ldr	r3, [r7]
 3560 006c 1B89     		ldrh	r3, [r3, #8]
 3561 006e 7868     		ldr	r0, [r7, #4]
 3562 0070 FFF7FEFF 		bl	TI3_Config
1921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
1922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC3Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3563              		.loc 1 1924 0
 3564 0074 3B68     		ldr	r3, [r7]
 3565 0076 DB88     		ldrh	r3, [r3, #6]
 3566 0078 7868     		ldr	r0, [r7, #4]
 3567 007a 1946     		mov	r1, r3
 3568 007c FFF7FEFF 		bl	TIM_SetIC3Prescaler
 3569 0080 0EE0     		b	.L91
 3570              	.L95:
1925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI4 Configuration */
1929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI4_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity,
 3571              		.loc 1 1929 0
 3572 0082 3B68     		ldr	r3, [r7]
 3573 0084 5988     		ldrh	r1, [r3, #2]
 3574 0086 3B68     		ldr	r3, [r7]
 3575 0088 9A88     		ldrh	r2, [r3, #4]
 3576 008a 3B68     		ldr	r3, [r7]
 3577 008c 1B89     		ldrh	r3, [r3, #8]
 3578 008e 7868     		ldr	r0, [r7, #4]
 3579 0090 FFF7FEFF 		bl	TI4_Config
1930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICSelection,
1931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC4Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3580              		.loc 1 1933 0
 3581 0094 3B68     		ldr	r3, [r7]
 3582 0096 DB88     		ldrh	r3, [r3, #6]
 3583 0098 7868     		ldr	r0, [r7, #4]
 3584 009a 1946     		mov	r1, r3
 3585 009c FFF7FEFF 		bl	TIM_SetIC4Prescaler
 3586              	.L91:
1934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3587              		.loc 1 1935 0
 3588 00a0 0837     		adds	r7, r7, #8
 3589 00a2 BD46     		mov	sp, r7
 3590              		@ sp needed
 3591 00a4 80BD     		pop	{r7, pc}
 3592              		.cfi_endproc
 3593              	.LFE160:
 3595 00a6 00BF     		.section	.text.TIM_ICStructInit,"ax",%progbits
 3596              		.align	2
 3597              		.global	TIM_ICStructInit
 3598              		.thumb
 3599              		.thumb_func
 3601              	TIM_ICStructInit:
 3602              	.LFB161:
1936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_ICInitStruct member with its default value.
1939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure which will
1940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         be initialized.
1941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ICStructInit(TIM_ICInitTypeDef* TIM_ICInitStruct)
1944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3603              		.loc 1 1944 0
 3604              		.cfi_startproc
 3605              		@ args = 0, pretend = 0, frame = 8
 3606              		@ frame_needed = 1, uses_anonymous_args = 0
 3607              		@ link register save eliminated.
 3608 0000 80B4     		push	{r7}
 3609              	.LCFI153:
 3610              		.cfi_def_cfa_offset 4
 3611              		.cfi_offset 7, -4
 3612 0002 83B0     		sub	sp, sp, #12
 3613              	.LCFI154:
 3614              		.cfi_def_cfa_offset 16
 3615 0004 00AF     		add	r7, sp, #0
 3616              	.LCFI155:
 3617              		.cfi_def_cfa_register 7
 3618 0006 7860     		str	r0, [r7, #4]
1945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
1946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_Channel = TIM_Channel_1;
 3619              		.loc 1 1946 0
 3620 0008 7B68     		ldr	r3, [r7, #4]
 3621 000a 0022     		movs	r2, #0
 3622 000c 1A80     		strh	r2, [r3]	@ movhi
1947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPolarity = TIM_ICPolarity_Rising;
 3623              		.loc 1 1947 0
 3624 000e 7B68     		ldr	r3, [r7, #4]
 3625 0010 0022     		movs	r2, #0
 3626 0012 5A80     		strh	r2, [r3, #2]	@ movhi
1948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICSelection = TIM_ICSelection_DirectTI;
 3627              		.loc 1 1948 0
 3628 0014 7B68     		ldr	r3, [r7, #4]
 3629 0016 0122     		movs	r2, #1
 3630 0018 9A80     		strh	r2, [r3, #4]	@ movhi
1949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICPrescaler = TIM_ICPSC_DIV1;
 3631              		.loc 1 1949 0
 3632 001a 7B68     		ldr	r3, [r7, #4]
 3633 001c 0022     		movs	r2, #0
 3634 001e DA80     		strh	r2, [r3, #6]	@ movhi
1950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ICInitStruct->TIM_ICFilter = 0x00;
 3635              		.loc 1 1950 0
 3636 0020 7B68     		ldr	r3, [r7, #4]
 3637 0022 0022     		movs	r2, #0
 3638 0024 1A81     		strh	r2, [r3, #8]	@ movhi
1951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3639              		.loc 1 1951 0
 3640 0026 0C37     		adds	r7, r7, #12
 3641 0028 BD46     		mov	sp, r7
 3642              		@ sp needed
 3643 002a 5DF8047B 		ldr	r7, [sp], #4
 3644 002e 7047     		bx	lr
 3645              		.cfi_endproc
 3646              	.LFE161:
 3648              		.section	.text.TIM_PWMIConfig,"ax",%progbits
 3649              		.align	2
 3650              		.global	TIM_PWMIConfig
 3651              		.thumb
 3652              		.thumb_func
 3654              	TIM_PWMIConfig:
 3655              	.LFB162:
1952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
1954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIM peripheral according to the specified parameters
1955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         in the TIM_ICInitStruct to measure an external PWM signal.
1956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5,8, 9 or 12 to select the TIM 
1957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
1958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICInitStruct: pointer to a TIM_ICInitTypeDef structure that contains
1959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         the configuration information for the specified TIM peripheral.
1960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
1961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
1962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_PWMIConfig(TIM_TypeDef* TIMx, TIM_ICInitTypeDef* TIM_ICInitStruct)
1963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3656              		.loc 1 1963 0
 3657              		.cfi_startproc
 3658              		@ args = 0, pretend = 0, frame = 16
 3659              		@ frame_needed = 1, uses_anonymous_args = 0
 3660 0000 80B5     		push	{r7, lr}
 3661              	.LCFI156:
 3662              		.cfi_def_cfa_offset 8
 3663              		.cfi_offset 7, -8
 3664              		.cfi_offset 14, -4
 3665 0002 84B0     		sub	sp, sp, #16
 3666              	.LCFI157:
 3667              		.cfi_def_cfa_offset 24
 3668 0004 00AF     		add	r7, sp, #0
 3669              	.LCFI158:
 3670              		.cfi_def_cfa_register 7
 3671 0006 7860     		str	r0, [r7, #4]
 3672 0008 3960     		str	r1, [r7]
1964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t icoppositepolarity = TIM_ICPolarity_Rising;
 3673              		.loc 1 1964 0
 3674 000a 0023     		movs	r3, #0
 3675 000c FB81     		strh	r3, [r7, #14]	@ movhi
1965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t icoppositeselection = TIM_ICSelection_DirectTI;
 3676              		.loc 1 1965 0
 3677 000e 0123     		movs	r3, #1
 3678 0010 BB81     		strh	r3, [r7, #12]	@ movhi
1966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
1968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
1969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
1970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Opposite Input Polarity */
1971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICPolarity == TIM_ICPolarity_Rising)
 3679              		.loc 1 1971 0
 3680 0012 3B68     		ldr	r3, [r7]
 3681 0014 5B88     		ldrh	r3, [r3, #2]
 3682 0016 002B     		cmp	r3, #0
 3683 0018 02D1     		bne	.L98
1972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Falling;
 3684              		.loc 1 1973 0
 3685 001a 0223     		movs	r3, #2
 3686 001c FB81     		strh	r3, [r7, #14]	@ movhi
 3687 001e 01E0     		b	.L99
 3688              	.L98:
1974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositepolarity = TIM_ICPolarity_Rising;
 3689              		.loc 1 1977 0
 3690 0020 0023     		movs	r3, #0
 3691 0022 FB81     		strh	r3, [r7, #14]	@ movhi
 3692              	.L99:
1978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Opposite Input */
1980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_ICSelection == TIM_ICSelection_DirectTI)
 3693              		.loc 1 1980 0
 3694 0024 3B68     		ldr	r3, [r7]
 3695 0026 9B88     		ldrh	r3, [r3, #4]
 3696 0028 012B     		cmp	r3, #1
 3697 002a 02D1     		bne	.L100
1981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositeselection = TIM_ICSelection_IndirectTI;
 3698              		.loc 1 1982 0
 3699 002c 0223     		movs	r3, #2
 3700 002e BB81     		strh	r3, [r7, #12]	@ movhi
 3701 0030 01E0     		b	.L101
 3702              	.L100:
1983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
1985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     icoppositeselection = TIM_ICSelection_DirectTI;
 3703              		.loc 1 1986 0
 3704 0032 0123     		movs	r3, #1
 3705 0034 BB81     		strh	r3, [r7, #12]	@ movhi
 3706              	.L101:
1987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
1988:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_ICInitStruct->TIM_Channel == TIM_Channel_1)
 3707              		.loc 1 1988 0
 3708 0036 3B68     		ldr	r3, [r7]
 3709 0038 1B88     		ldrh	r3, [r3]
 3710 003a 002B     		cmp	r3, #0
 3711 003c 1CD1     		bne	.L102
1989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
1990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
1991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3712              		.loc 1 1991 0
 3713 003e 3B68     		ldr	r3, [r7]
 3714 0040 5988     		ldrh	r1, [r3, #2]
 3715 0042 3B68     		ldr	r3, [r7]
 3716 0044 9A88     		ldrh	r2, [r3, #4]
 3717 0046 3B68     		ldr	r3, [r7]
 3718 0048 1B89     		ldrh	r3, [r3, #8]
 3719 004a 7868     		ldr	r0, [r7, #4]
 3720 004c FFF7FEFF 		bl	TI1_Config
1992:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
1993:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3721              		.loc 1 1994 0
 3722 0050 3B68     		ldr	r3, [r7]
 3723 0052 DB88     		ldrh	r3, [r3, #6]
 3724 0054 7868     		ldr	r0, [r7, #4]
 3725 0056 1946     		mov	r1, r3
 3726 0058 FFF7FEFF 		bl	TIM_SetIC1Prescaler
1995:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
1996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 3727              		.loc 1 1996 0
 3728 005c 3B68     		ldr	r3, [r7]
 3729 005e 1B89     		ldrh	r3, [r3, #8]
 3730 0060 F989     		ldrh	r1, [r7, #14]
 3731 0062 BA89     		ldrh	r2, [r7, #12]
 3732 0064 7868     		ldr	r0, [r7, #4]
 3733 0066 FFF7FEFF 		bl	TI2_Config
1997:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
1998:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3734              		.loc 1 1998 0
 3735 006a 3B68     		ldr	r3, [r7]
 3736 006c DB88     		ldrh	r3, [r3, #6]
 3737 006e 7868     		ldr	r0, [r7, #4]
 3738 0070 1946     		mov	r1, r3
 3739 0072 FFF7FEFF 		bl	TIM_SetIC2Prescaler
 3740 0076 1BE0     		b	.L97
 3741              	.L102:
1999:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   { 
2002:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI2 Configuration */
2003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICInitStruct->TIM_ICPolarity, TIM_ICInitStruct->TIM_ICSelection,
 3742              		.loc 1 2003 0
 3743 0078 3B68     		ldr	r3, [r7]
 3744 007a 5988     		ldrh	r1, [r3, #2]
 3745 007c 3B68     		ldr	r3, [r7]
 3746 007e 9A88     		ldrh	r2, [r3, #4]
 3747 0080 3B68     		ldr	r3, [r7]
 3748 0082 1B89     		ldrh	r3, [r3, #8]
 3749 0084 7868     		ldr	r0, [r7, #4]
 3750 0086 FFF7FEFF 		bl	TI2_Config
2004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                TIM_ICInitStruct->TIM_ICFilter);
2005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2006:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC2Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3751              		.loc 1 2006 0
 3752 008a 3B68     		ldr	r3, [r7]
 3753 008c DB88     		ldrh	r3, [r3, #6]
 3754 008e 7868     		ldr	r0, [r7, #4]
 3755 0090 1946     		mov	r1, r3
 3756 0092 FFF7FEFF 		bl	TIM_SetIC2Prescaler
2007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* TI1 Configuration */
2008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, icoppositepolarity, icoppositeselection, TIM_ICInitStruct->TIM_ICFilter);
 3757              		.loc 1 2008 0
 3758 0096 3B68     		ldr	r3, [r7]
 3759 0098 1B89     		ldrh	r3, [r3, #8]
 3760 009a F989     		ldrh	r1, [r7, #14]
 3761 009c BA89     		ldrh	r2, [r7, #12]
 3762 009e 7868     		ldr	r0, [r7, #4]
 3763 00a0 FFF7FEFF 		bl	TI1_Config
2009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the Input Capture Prescaler value */
2010:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIM_SetIC1Prescaler(TIMx, TIM_ICInitStruct->TIM_ICPrescaler);
 3764              		.loc 1 2010 0
 3765 00a4 3B68     		ldr	r3, [r7]
 3766 00a6 DB88     		ldrh	r3, [r3, #6]
 3767 00a8 7868     		ldr	r0, [r7, #4]
 3768 00aa 1946     		mov	r1, r3
 3769 00ac FFF7FEFF 		bl	TIM_SetIC1Prescaler
 3770              	.L97:
2011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3771              		.loc 1 2012 0
 3772 00b0 1037     		adds	r7, r7, #16
 3773 00b2 BD46     		mov	sp, r7
 3774              		@ sp needed
 3775 00b4 80BD     		pop	{r7, pc}
 3776              		.cfi_endproc
 3777              	.LFE162:
 3779 00b6 00BF     		.section	.text.TIM_GetCapture1,"ax",%progbits
 3780              		.align	2
 3781              		.global	TIM_GetCapture1
 3782              		.thumb
 3783              		.thumb_func
 3785              	TIM_GetCapture1:
 3786              	.LFB163:
2013:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2014:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2015:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 1 value.
2016:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
2017:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 1 Register value.
2018:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2019:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture1(TIM_TypeDef* TIMx)
2020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3787              		.loc 1 2020 0
 3788              		.cfi_startproc
 3789              		@ args = 0, pretend = 0, frame = 8
 3790              		@ frame_needed = 1, uses_anonymous_args = 0
 3791              		@ link register save eliminated.
 3792 0000 80B4     		push	{r7}
 3793              	.LCFI159:
 3794              		.cfi_def_cfa_offset 4
 3795              		.cfi_offset 7, -4
 3796 0002 83B0     		sub	sp, sp, #12
 3797              	.LCFI160:
 3798              		.cfi_def_cfa_offset 16
 3799 0004 00AF     		add	r7, sp, #0
 3800              	.LCFI161:
 3801              		.cfi_def_cfa_register 7
 3802 0006 7860     		str	r0, [r7, #4]
2021:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2022:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2023:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 1 Register value */
2025:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR1;
 3803              		.loc 1 2025 0
 3804 0008 7B68     		ldr	r3, [r7, #4]
 3805 000a 5B6B     		ldr	r3, [r3, #52]
2026:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3806              		.loc 1 2026 0
 3807 000c 1846     		mov	r0, r3
 3808 000e 0C37     		adds	r7, r7, #12
 3809 0010 BD46     		mov	sp, r7
 3810              		@ sp needed
 3811 0012 5DF8047B 		ldr	r7, [sp], #4
 3812 0016 7047     		bx	lr
 3813              		.cfi_endproc
 3814              	.LFE163:
 3816              		.section	.text.TIM_GetCapture2,"ax",%progbits
 3817              		.align	2
 3818              		.global	TIM_GetCapture2
 3819              		.thumb
 3820              		.thumb_func
 3822              	TIM_GetCapture2:
 3823              	.LFB164:
2027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2029:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 2 value.
2030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2031:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2032:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 2 Register value.
2033:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2034:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture2(TIM_TypeDef* TIMx)
2035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3824              		.loc 1 2035 0
 3825              		.cfi_startproc
 3826              		@ args = 0, pretend = 0, frame = 8
 3827              		@ frame_needed = 1, uses_anonymous_args = 0
 3828              		@ link register save eliminated.
 3829 0000 80B4     		push	{r7}
 3830              	.LCFI162:
 3831              		.cfi_def_cfa_offset 4
 3832              		.cfi_offset 7, -4
 3833 0002 83B0     		sub	sp, sp, #12
 3834              	.LCFI163:
 3835              		.cfi_def_cfa_offset 16
 3836 0004 00AF     		add	r7, sp, #0
 3837              	.LCFI164:
 3838              		.cfi_def_cfa_register 7
 3839 0006 7860     		str	r0, [r7, #4]
2036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2037:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2038:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 2 Register value */
2040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR2;
 3840              		.loc 1 2040 0
 3841 0008 7B68     		ldr	r3, [r7, #4]
 3842 000a 9B6B     		ldr	r3, [r3, #56]
2041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3843              		.loc 1 2041 0
 3844 000c 1846     		mov	r0, r3
 3845 000e 0C37     		adds	r7, r7, #12
 3846 0010 BD46     		mov	sp, r7
 3847              		@ sp needed
 3848 0012 5DF8047B 		ldr	r7, [sp], #4
 3849 0016 7047     		bx	lr
 3850              		.cfi_endproc
 3851              	.LFE164:
 3853              		.section	.text.TIM_GetCapture3,"ax",%progbits
 3854              		.align	2
 3855              		.global	TIM_GetCapture3
 3856              		.thumb
 3857              		.thumb_func
 3859              	TIM_GetCapture3:
 3860              	.LFB165:
2042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2043:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2044:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 3 value.
2045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 3 Register value.
2047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture3(TIM_TypeDef* TIMx)
2049:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3861              		.loc 1 2049 0
 3862              		.cfi_startproc
 3863              		@ args = 0, pretend = 0, frame = 8
 3864              		@ frame_needed = 1, uses_anonymous_args = 0
 3865              		@ link register save eliminated.
 3866 0000 80B4     		push	{r7}
 3867              	.LCFI165:
 3868              		.cfi_def_cfa_offset 4
 3869              		.cfi_offset 7, -4
 3870 0002 83B0     		sub	sp, sp, #12
 3871              	.LCFI166:
 3872              		.cfi_def_cfa_offset 16
 3873 0004 00AF     		add	r7, sp, #0
 3874              	.LCFI167:
 3875              		.cfi_def_cfa_register 7
 3876 0006 7860     		str	r0, [r7, #4]
2050:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2051:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx)); 
2052:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2053:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 3 Register value */
2054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR3;
 3877              		.loc 1 2054 0
 3878 0008 7B68     		ldr	r3, [r7, #4]
 3879 000a DB6B     		ldr	r3, [r3, #60]
2055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3880              		.loc 1 2055 0
 3881 000c 1846     		mov	r0, r3
 3882 000e 0C37     		adds	r7, r7, #12
 3883 0010 BD46     		mov	sp, r7
 3884              		@ sp needed
 3885 0012 5DF8047B 		ldr	r7, [sp], #4
 3886 0016 7047     		bx	lr
 3887              		.cfi_endproc
 3888              	.LFE165:
 3890              		.section	.text.TIM_GetCapture4,"ax",%progbits
 3891              		.align	2
 3892              		.global	TIM_GetCapture4
 3893              		.thumb
 3894              		.thumb_func
 3896              	TIM_GetCapture4:
 3897              	.LFB166:
2056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2057:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2058:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Gets the TIMx Input Capture 4 value.
2059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval Capture Compare 4 Register value.
2061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2062:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** uint32_t TIM_GetCapture4(TIM_TypeDef* TIMx)
2063:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3898              		.loc 1 2063 0
 3899              		.cfi_startproc
 3900              		@ args = 0, pretend = 0, frame = 8
 3901              		@ frame_needed = 1, uses_anonymous_args = 0
 3902              		@ link register save eliminated.
 3903 0000 80B4     		push	{r7}
 3904              	.LCFI168:
 3905              		.cfi_def_cfa_offset 4
 3906              		.cfi_offset 7, -4
 3907 0002 83B0     		sub	sp, sp, #12
 3908              	.LCFI169:
 3909              		.cfi_def_cfa_offset 16
 3910 0004 00AF     		add	r7, sp, #0
 3911              	.LCFI170:
 3912              		.cfi_def_cfa_register 7
 3913 0006 7860     		str	r0, [r7, #4]
2064:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2065:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the Capture 4 Register value */
2068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return TIMx->CCR4;
 3914              		.loc 1 2068 0
 3915 0008 7B68     		ldr	r3, [r7, #4]
 3916 000a 1B6C     		ldr	r3, [r3, #64]
2069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3917              		.loc 1 2069 0
 3918 000c 1846     		mov	r0, r3
 3919 000e 0C37     		adds	r7, r7, #12
 3920 0010 BD46     		mov	sp, r7
 3921              		@ sp needed
 3922 0012 5DF8047B 		ldr	r7, [sp], #4
 3923 0016 7047     		bx	lr
 3924              		.cfi_endproc
 3925              	.LFE166:
 3927              		.section	.text.TIM_SetIC1Prescaler,"ax",%progbits
 3928              		.align	2
 3929              		.global	TIM_SetIC1Prescaler
 3930              		.thumb
 3931              		.thumb_func
 3933              	TIM_SetIC1Prescaler:
 3934              	.LFB167:
2070:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2071:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 1 prescaler.
2073:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 except 6 and 7, to select the TIM peripheral.
2074:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture1 prescaler new value.
2075:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2076:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2077:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2078:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2079:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2080:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2082:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC1Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2083:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3935              		.loc 1 2083 0
 3936              		.cfi_startproc
 3937              		@ args = 0, pretend = 0, frame = 8
 3938              		@ frame_needed = 1, uses_anonymous_args = 0
 3939              		@ link register save eliminated.
 3940 0000 80B4     		push	{r7}
 3941              	.LCFI171:
 3942              		.cfi_def_cfa_offset 4
 3943              		.cfi_offset 7, -4
 3944 0002 83B0     		sub	sp, sp, #12
 3945              	.LCFI172:
 3946              		.cfi_def_cfa_offset 16
 3947 0004 00AF     		add	r7, sp, #0
 3948              	.LCFI173:
 3949              		.cfi_def_cfa_register 7
 3950 0006 7860     		str	r0, [r7, #4]
 3951 0008 0B46     		mov	r3, r1
 3952 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2084:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2085:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2086:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2087:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2088:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC1PSC Bits */
2089:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC1PSC;
 3953              		.loc 1 2089 0
 3954 000c 7B68     		ldr	r3, [r7, #4]
 3955 000e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3956 0010 9BB2     		uxth	r3, r3
 3957 0012 23F00C03 		bic	r3, r3, #12
 3958 0016 9AB2     		uxth	r2, r3
 3959 0018 7B68     		ldr	r3, [r7, #4]
 3960 001a 1A83     		strh	r2, [r3, #24]	@ movhi
2090:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2091:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC1PSC value */
2092:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 |= TIM_ICPSC;
 3961              		.loc 1 2092 0
 3962 001c 7B68     		ldr	r3, [r7, #4]
 3963 001e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3964 0020 9AB2     		uxth	r2, r3
 3965 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 3966 0024 1343     		orrs	r3, r3, r2
 3967 0026 9AB2     		uxth	r2, r3
 3968 0028 7B68     		ldr	r3, [r7, #4]
 3969 002a 1A83     		strh	r2, [r3, #24]	@ movhi
2093:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 3970              		.loc 1 2093 0
 3971 002c 0C37     		adds	r7, r7, #12
 3972 002e BD46     		mov	sp, r7
 3973              		@ sp needed
 3974 0030 5DF8047B 		ldr	r7, [sp], #4
 3975 0034 7047     		bx	lr
 3976              		.cfi_endproc
 3977              	.LFE167:
 3979 0036 00BF     		.section	.text.TIM_SetIC2Prescaler,"ax",%progbits
 3980              		.align	2
 3981              		.global	TIM_SetIC2Prescaler
 3982              		.thumb
 3983              		.thumb_func
 3985              	TIM_SetIC2Prescaler:
 3986              	.LFB168:
2094:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2095:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2096:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 2 prescaler.
2097:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2098:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2099:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture2 prescaler new value.
2100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC2Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 3987              		.loc 1 2108 0
 3988              		.cfi_startproc
 3989              		@ args = 0, pretend = 0, frame = 8
 3990              		@ frame_needed = 1, uses_anonymous_args = 0
 3991              		@ link register save eliminated.
 3992 0000 80B4     		push	{r7}
 3993              	.LCFI174:
 3994              		.cfi_def_cfa_offset 4
 3995              		.cfi_offset 7, -4
 3996 0002 83B0     		sub	sp, sp, #12
 3997              	.LCFI175:
 3998              		.cfi_def_cfa_offset 16
 3999 0004 00AF     		add	r7, sp, #0
 4000              	.LCFI176:
 4001              		.cfi_def_cfa_register 7
 4002 0006 7860     		str	r0, [r7, #4]
 4003 0008 0B46     		mov	r3, r1
 4004 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC2PSC Bits */
2114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 &= (uint16_t)~TIM_CCMR1_IC2PSC;
 4005              		.loc 1 2114 0
 4006 000c 7B68     		ldr	r3, [r7, #4]
 4007 000e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 4008 0010 9BB2     		uxth	r3, r3
 4009 0012 23F44063 		bic	r3, r3, #3072
 4010 0016 9AB2     		uxth	r2, r3
 4011 0018 7B68     		ldr	r3, [r7, #4]
 4012 001a 1A83     		strh	r2, [r3, #24]	@ movhi
2115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC2PSC value */
2117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 |= (uint16_t)(TIM_ICPSC << 8);
 4013              		.loc 1 2117 0
 4014 001c 7B68     		ldr	r3, [r7, #4]
 4015 001e 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 4016 0020 9AB2     		uxth	r2, r3
 4017 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4018 0024 1B02     		lsls	r3, r3, #8
 4019 0026 9BB2     		uxth	r3, r3
 4020 0028 1343     		orrs	r3, r3, r2
 4021 002a 9AB2     		uxth	r2, r3
 4022 002c 7B68     		ldr	r3, [r7, #4]
 4023 002e 1A83     		strh	r2, [r3, #24]	@ movhi
2118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4024              		.loc 1 2118 0
 4025 0030 0C37     		adds	r7, r7, #12
 4026 0032 BD46     		mov	sp, r7
 4027              		@ sp needed
 4028 0034 5DF8047B 		ldr	r7, [sp], #4
 4029 0038 7047     		bx	lr
 4030              		.cfi_endproc
 4031              	.LFE168:
 4033 003a 00BF     		.section	.text.TIM_SetIC3Prescaler,"ax",%progbits
 4034              		.align	2
 4035              		.global	TIM_SetIC3Prescaler
 4036              		.thumb
 4037              		.thumb_func
 4039              	TIM_SetIC3Prescaler:
 4040              	.LFB169:
2119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 3 prescaler.
2122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture3 prescaler new value.
2124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC3Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4041              		.loc 1 2132 0
 4042              		.cfi_startproc
 4043              		@ args = 0, pretend = 0, frame = 8
 4044              		@ frame_needed = 1, uses_anonymous_args = 0
 4045              		@ link register save eliminated.
 4046 0000 80B4     		push	{r7}
 4047              	.LCFI177:
 4048              		.cfi_def_cfa_offset 4
 4049              		.cfi_offset 7, -4
 4050 0002 83B0     		sub	sp, sp, #12
 4051              	.LCFI178:
 4052              		.cfi_def_cfa_offset 16
 4053 0004 00AF     		add	r7, sp, #0
 4054              	.LCFI179:
 4055              		.cfi_def_cfa_register 7
 4056 0006 7860     		str	r0, [r7, #4]
 4057 0008 0B46     		mov	r3, r1
 4058 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC3PSC Bits */
2138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC3PSC;
 4059              		.loc 1 2138 0
 4060 000c 7B68     		ldr	r3, [r7, #4]
 4061 000e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 4062 0010 9BB2     		uxth	r3, r3
 4063 0012 23F00C03 		bic	r3, r3, #12
 4064 0016 9AB2     		uxth	r2, r3
 4065 0018 7B68     		ldr	r3, [r7, #4]
 4066 001a 9A83     		strh	r2, [r3, #28]	@ movhi
2139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC3PSC value */
2141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 |= TIM_ICPSC;
 4067              		.loc 1 2141 0
 4068 001c 7B68     		ldr	r3, [r7, #4]
 4069 001e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 4070 0020 9AB2     		uxth	r2, r3
 4071 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4072 0024 1343     		orrs	r3, r3, r2
 4073 0026 9AB2     		uxth	r2, r3
 4074 0028 7B68     		ldr	r3, [r7, #4]
 4075 002a 9A83     		strh	r2, [r3, #28]	@ movhi
2142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4076              		.loc 1 2142 0
 4077 002c 0C37     		adds	r7, r7, #12
 4078 002e BD46     		mov	sp, r7
 4079              		@ sp needed
 4080 0030 5DF8047B 		ldr	r7, [sp], #4
 4081 0034 7047     		bx	lr
 4082              		.cfi_endproc
 4083              	.LFE169:
 4085 0036 00BF     		.section	.text.TIM_SetIC4Prescaler,"ax",%progbits
 4086              		.align	2
 4087              		.global	TIM_SetIC4Prescaler
 4088              		.thumb
 4089              		.thumb_func
 4091              	TIM_SetIC4Prescaler:
 4092              	.LFB170:
2143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets the TIMx Input Capture 4 prescaler.
2146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPSC: specifies the Input Capture4 prescaler new value.
2148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV1: no prescaler
2150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV2: capture is done once every 2 events
2151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV4: capture is done once every 4 events
2152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPSC_DIV8: capture is done once every 8 events
2153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SetIC4Prescaler(TIM_TypeDef* TIMx, uint16_t TIM_ICPSC)
2156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 4093              		.loc 1 2156 0
 4094              		.cfi_startproc
 4095              		@ args = 0, pretend = 0, frame = 8
 4096              		@ frame_needed = 1, uses_anonymous_args = 0
 4097              		@ link register save eliminated.
 4098 0000 80B4     		push	{r7}
 4099              	.LCFI180:
 4100              		.cfi_def_cfa_offset 4
 4101              		.cfi_offset 7, -4
 4102 0002 83B0     		sub	sp, sp, #12
 4103              	.LCFI181:
 4104              		.cfi_def_cfa_offset 16
 4105 0004 00AF     		add	r7, sp, #0
 4106              	.LCFI182:
 4107              		.cfi_def_cfa_register 7
 4108 0006 7860     		str	r0, [r7, #4]
 4109 0008 0B46     		mov	r3, r1
 4110 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(TIM_ICPSC));
2160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the IC4PSC Bits */
2162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 &= (uint16_t)~TIM_CCMR2_IC4PSC;
 4111              		.loc 1 2162 0
 4112 000c 7B68     		ldr	r3, [r7, #4]
 4113 000e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 4114 0010 9BB2     		uxth	r3, r3
 4115 0012 23F44063 		bic	r3, r3, #3072
 4116 0016 9AB2     		uxth	r2, r3
 4117 0018 7B68     		ldr	r3, [r7, #4]
 4118 001a 9A83     		strh	r2, [r3, #28]	@ movhi
2163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the IC4PSC value */
2165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 |= (uint16_t)(TIM_ICPSC << 8);
 4119              		.loc 1 2165 0
 4120 001c 7B68     		ldr	r3, [r7, #4]
 4121 001e 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 4122 0020 9AB2     		uxth	r2, r3
 4123 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4124 0024 1B02     		lsls	r3, r3, #8
 4125 0026 9BB2     		uxth	r3, r3
 4126 0028 1343     		orrs	r3, r3, r2
 4127 002a 9AB2     		uxth	r2, r3
 4128 002c 7B68     		ldr	r3, [r7, #4]
 4129 002e 9A83     		strh	r2, [r3, #28]	@ movhi
2166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4130              		.loc 1 2166 0
 4131 0030 0C37     		adds	r7, r7, #12
 4132 0032 BD46     		mov	sp, r7
 4133              		@ sp needed
 4134 0034 5DF8047B 		ldr	r7, [sp], #4
 4135 0038 7047     		bx	lr
 4136              		.cfi_endproc
 4137              	.LFE170:
 4139 003a 00BF     		.section	.text.TIM_BDTRConfig,"ax",%progbits
 4140              		.align	2
 4141              		.global	TIM_BDTRConfig
 4142              		.thumb
 4143              		.thumb_func
 4145              	TIM_BDTRConfig:
 4146              	.LFB171:
2167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group4 Advanced-control timers (TIM1 and TIM8) specific features
2172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   Advanced-control timers (TIM1 and TIM8) specific features
2173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Advanced-control timers (TIM1 and TIM8) specific features
2177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
2180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use the Break feature
2181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
2182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        After configuring the Timer channel(s) in the appropriate Output Compare mode: 
2183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                          
2184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Fill the TIM_BDTRInitStruct with the desired parameters for the Timer
2185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           Break Polarity, dead time, Lock level, the OSSI/OSSR State and the 
2186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           AOE(automatic output enable).
2187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                
2188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Call TIM_BDTRConfig(TIMx, &TIM_BDTRInitStruct) to configure the Timer
2189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        3. Enable the Main Output using TIM_CtrlPWMOutputs(TIM1, ENABLE) 
2191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        4. Once the break even occurs, the Timer's output signals are put in reset
2193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           state or in a known state (according to the configuration made in
2194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           TIM_BDTRConfig() function).
2195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the Break feature, dead time, Lock level, OSSI/OSSR State
2202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         and the AOE(automatic output enable).
2203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIM 
2204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure that
2205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         contains the BDTR Register configuration  information for the TIM peripheral.
2206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_BDTRConfig(TIM_TypeDef* TIMx, TIM_BDTRInitTypeDef *TIM_BDTRInitStruct)
2209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4147              		.loc 1 2209 0
 4148              		.cfi_startproc
 4149              		@ args = 0, pretend = 0, frame = 8
 4150              		@ frame_needed = 1, uses_anonymous_args = 0
 4151              		@ link register save eliminated.
 4152 0000 80B4     		push	{r7}
 4153              	.LCFI183:
 4154              		.cfi_def_cfa_offset 4
 4155              		.cfi_offset 7, -4
 4156 0002 83B0     		sub	sp, sp, #12
 4157              	.LCFI184:
 4158              		.cfi_def_cfa_offset 16
 4159 0004 00AF     		add	r7, sp, #0
 4160              	.LCFI185:
 4161              		.cfi_def_cfa_register 7
 4162 0006 7860     		str	r0, [r7, #4]
 4163 0008 3960     		str	r1, [r7]
2210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OSSR_STATE(TIM_BDTRInitStruct->TIM_OSSRState));
2213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_OSSI_STATE(TIM_BDTRInitStruct->TIM_OSSIState));
2214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LOCK_LEVEL(TIM_BDTRInitStruct->TIM_LOCKLevel));
2215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_BREAK_STATE(TIM_BDTRInitStruct->TIM_Break));
2216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_BREAK_POLARITY(TIM_BDTRInitStruct->TIM_BreakPolarity));
2217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_AUTOMATIC_OUTPUT_STATE(TIM_BDTRInitStruct->TIM_AutomaticOutput));
2218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Lock level, the Break enable Bit and the Polarity, the OSSR State,
2220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****      the OSSI State, the dead time value and the Automatic Output Enable Bit */
2221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->BDTR = (uint32_t)TIM_BDTRInitStruct->TIM_OSSRState | TIM_BDTRInitStruct->TIM_OSSIState |
 4164              		.loc 1 2221 0
 4165 000a 3B68     		ldr	r3, [r7]
 4166 000c 1A88     		ldrh	r2, [r3]
 4167 000e 3B68     		ldr	r3, [r7]
 4168 0010 5B88     		ldrh	r3, [r3, #2]
 4169 0012 1343     		orrs	r3, r3, r2
 4170 0014 9AB2     		uxth	r2, r3
2222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 4171              		.loc 1 2222 0
 4172 0016 3B68     		ldr	r3, [r7]
 4173 0018 9B88     		ldrh	r3, [r3, #4]
2221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 4174              		.loc 1 2221 0
 4175 001a 1343     		orrs	r3, r3, r2
 4176 001c 9AB2     		uxth	r2, r3
 4177              		.loc 1 2222 0
 4178 001e 3B68     		ldr	r3, [r7]
 4179 0020 DB88     		ldrh	r3, [r3, #6]
2221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 4180              		.loc 1 2221 0
 4181 0022 1343     		orrs	r3, r3, r2
 4182 0024 9AB2     		uxth	r2, r3
2223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_Break | TIM_BDTRInitStruct->TIM_BreakPolarity |
 4183              		.loc 1 2223 0
 4184 0026 3B68     		ldr	r3, [r7]
 4185 0028 1B89     		ldrh	r3, [r3, #8]
2221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 4186              		.loc 1 2221 0
 4187 002a 1343     		orrs	r3, r3, r2
 4188 002c 9AB2     		uxth	r2, r3
 4189              		.loc 1 2223 0
 4190 002e 3B68     		ldr	r3, [r7]
 4191 0030 5B89     		ldrh	r3, [r3, #10]
2221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 4192              		.loc 1 2221 0
 4193 0032 1343     		orrs	r3, r3, r2
 4194 0034 9AB2     		uxth	r2, r3
2224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_AutomaticOutput;
 4195              		.loc 1 2224 0
 4196 0036 3B68     		ldr	r3, [r7]
 4197 0038 9B89     		ldrh	r3, [r3, #12]
2221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****              TIM_BDTRInitStruct->TIM_LOCKLevel | TIM_BDTRInitStruct->TIM_DeadTime |
 4198              		.loc 1 2221 0
 4199 003a 1343     		orrs	r3, r3, r2
 4200 003c 9AB2     		uxth	r2, r3
 4201 003e 7B68     		ldr	r3, [r7, #4]
 4202 0040 A3F84420 		strh	r2, [r3, #68]	@ movhi
2225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4203              		.loc 1 2225 0
 4204 0044 0C37     		adds	r7, r7, #12
 4205 0046 BD46     		mov	sp, r7
 4206              		@ sp needed
 4207 0048 5DF8047B 		ldr	r7, [sp], #4
 4208 004c 7047     		bx	lr
 4209              		.cfi_endproc
 4210              	.LFE171:
 4212 004e 00BF     		.section	.text.TIM_BDTRStructInit,"ax",%progbits
 4213              		.align	2
 4214              		.global	TIM_BDTRStructInit
 4215              		.thumb
 4216              		.thumb_func
 4218              	TIM_BDTRStructInit:
 4219              	.LFB172:
2226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Fills each TIM_BDTRInitStruct member with its default value.
2229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_BDTRInitStruct: pointer to a TIM_BDTRInitTypeDef structure which
2230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         will be initialized.
2231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_BDTRStructInit(TIM_BDTRInitTypeDef* TIM_BDTRInitStruct)
2234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4220              		.loc 1 2234 0
 4221              		.cfi_startproc
 4222              		@ args = 0, pretend = 0, frame = 8
 4223              		@ frame_needed = 1, uses_anonymous_args = 0
 4224              		@ link register save eliminated.
 4225 0000 80B4     		push	{r7}
 4226              	.LCFI186:
 4227              		.cfi_def_cfa_offset 4
 4228              		.cfi_offset 7, -4
 4229 0002 83B0     		sub	sp, sp, #12
 4230              	.LCFI187:
 4231              		.cfi_def_cfa_offset 16
 4232 0004 00AF     		add	r7, sp, #0
 4233              	.LCFI188:
 4234              		.cfi_def_cfa_register 7
 4235 0006 7860     		str	r0, [r7, #4]
2235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the default configuration */
2236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSRState = TIM_OSSRState_Disable;
 4236              		.loc 1 2236 0
 4237 0008 7B68     		ldr	r3, [r7, #4]
 4238 000a 0022     		movs	r2, #0
 4239 000c 1A80     		strh	r2, [r3]	@ movhi
2237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_OSSIState = TIM_OSSIState_Disable;
 4240              		.loc 1 2237 0
 4241 000e 7B68     		ldr	r3, [r7, #4]
 4242 0010 0022     		movs	r2, #0
 4243 0012 5A80     		strh	r2, [r3, #2]	@ movhi
2238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_LOCKLevel = TIM_LOCKLevel_OFF;
 4244              		.loc 1 2238 0
 4245 0014 7B68     		ldr	r3, [r7, #4]
 4246 0016 0022     		movs	r2, #0
 4247 0018 9A80     		strh	r2, [r3, #4]	@ movhi
2239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_DeadTime = 0x00;
 4248              		.loc 1 2239 0
 4249 001a 7B68     		ldr	r3, [r7, #4]
 4250 001c 0022     		movs	r2, #0
 4251 001e DA80     		strh	r2, [r3, #6]	@ movhi
2240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_Break = TIM_Break_Disable;
 4252              		.loc 1 2240 0
 4253 0020 7B68     		ldr	r3, [r7, #4]
 4254 0022 0022     		movs	r2, #0
 4255 0024 1A81     		strh	r2, [r3, #8]	@ movhi
2241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_BreakPolarity = TIM_BreakPolarity_Low;
 4256              		.loc 1 2241 0
 4257 0026 7B68     		ldr	r3, [r7, #4]
 4258 0028 0022     		movs	r2, #0
 4259 002a 5A81     		strh	r2, [r3, #10]	@ movhi
2242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_BDTRInitStruct->TIM_AutomaticOutput = TIM_AutomaticOutput_Disable;
 4260              		.loc 1 2242 0
 4261 002c 7B68     		ldr	r3, [r7, #4]
 4262 002e 0022     		movs	r2, #0
 4263 0030 9A81     		strh	r2, [r3, #12]	@ movhi
2243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4264              		.loc 1 2243 0
 4265 0032 0C37     		adds	r7, r7, #12
 4266 0034 BD46     		mov	sp, r7
 4267              		@ sp needed
 4268 0036 5DF8047B 		ldr	r7, [sp], #4
 4269 003a 7047     		bx	lr
 4270              		.cfi_endproc
 4271              	.LFE172:
 4273              		.section	.text.TIM_CtrlPWMOutputs,"ax",%progbits
 4274              		.align	2
 4275              		.global	TIM_CtrlPWMOutputs
 4276              		.thumb
 4277              		.thumb_func
 4279              	TIM_CtrlPWMOutputs:
 4280              	.LFB173:
2244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIM peripheral Main Outputs.
2247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 or 8 to select the TIMx peripheral.
2248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIM peripheral Main Outputs.
2249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CtrlPWMOutputs(TIM_TypeDef* TIMx, FunctionalState NewState)
2253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4281              		.loc 1 2253 0
 4282              		.cfi_startproc
 4283              		@ args = 0, pretend = 0, frame = 8
 4284              		@ frame_needed = 1, uses_anonymous_args = 0
 4285              		@ link register save eliminated.
 4286 0000 80B4     		push	{r7}
 4287              	.LCFI189:
 4288              		.cfi_def_cfa_offset 4
 4289              		.cfi_offset 7, -4
 4290 0002 83B0     		sub	sp, sp, #12
 4291              	.LCFI190:
 4292              		.cfi_def_cfa_offset 16
 4293 0004 00AF     		add	r7, sp, #0
 4294              	.LCFI191:
 4295              		.cfi_def_cfa_register 7
 4296 0006 7860     		str	r0, [r7, #4]
 4297 0008 0B46     		mov	r3, r1
 4298 000a FB70     		strb	r3, [r7, #3]
2254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4299              		.loc 1 2258 0
 4300 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4301 000e 002B     		cmp	r3, #0
 4302 0010 0CD0     		beq	.L119
2259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the TIM Main Output */
2261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->BDTR |= TIM_BDTR_MOE;
 4303              		.loc 1 2261 0
 4304 0012 7B68     		ldr	r3, [r7, #4]
 4305 0014 B3F84430 		ldrh	r3, [r3, #68]	@ movhi
 4306 0018 9BB2     		uxth	r3, r3
 4307 001a 6FEA4343 		mvn	r3, r3, lsl #17
 4308 001e 6FEA5343 		mvn	r3, r3, lsr #17
 4309 0022 9AB2     		uxth	r2, r3
 4310 0024 7B68     		ldr	r3, [r7, #4]
 4311 0026 A3F84420 		strh	r2, [r3, #68]	@ movhi
 4312 002a 09E0     		b	.L118
 4313              	.L119:
2262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the TIM Main Output */
2266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->BDTR &= (uint16_t)~TIM_BDTR_MOE;
 4314              		.loc 1 2266 0
 4315 002c 7B68     		ldr	r3, [r7, #4]
 4316 002e B3F84430 		ldrh	r3, [r3, #68]	@ movhi
 4317 0032 9BB2     		uxth	r3, r3
 4318 0034 C3F30E03 		ubfx	r3, r3, #0, #15
 4319 0038 9AB2     		uxth	r2, r3
 4320 003a 7B68     		ldr	r3, [r7, #4]
 4321 003c A3F84420 		strh	r2, [r3, #68]	@ movhi
 4322              	.L118:
2267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }  
2268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4323              		.loc 1 2268 0
 4324 0040 0C37     		adds	r7, r7, #12
 4325 0042 BD46     		mov	sp, r7
 4326              		@ sp needed
 4327 0044 5DF8047B 		ldr	r7, [sp], #4
 4328 0048 7047     		bx	lr
 4329              		.cfi_endproc
 4330              	.LFE173:
 4332 004a 00BF     		.section	.text.TIM_SelectCOM,"ax",%progbits
 4333              		.align	2
 4334              		.global	TIM_SelectCOM
 4335              		.thumb
 4336              		.thumb_func
 4338              	TIM_SelectCOM:
 4339              	.LFB174:
2269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIM peripheral Commutation event.
2272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
2273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Commutation event.
2274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectCOM(TIM_TypeDef* TIMx, FunctionalState NewState)
2278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4340              		.loc 1 2278 0
 4341              		.cfi_startproc
 4342              		@ args = 0, pretend = 0, frame = 8
 4343              		@ frame_needed = 1, uses_anonymous_args = 0
 4344              		@ link register save eliminated.
 4345 0000 80B4     		push	{r7}
 4346              	.LCFI192:
 4347              		.cfi_def_cfa_offset 4
 4348              		.cfi_offset 7, -4
 4349 0002 83B0     		sub	sp, sp, #12
 4350              	.LCFI193:
 4351              		.cfi_def_cfa_offset 16
 4352 0004 00AF     		add	r7, sp, #0
 4353              	.LCFI194:
 4354              		.cfi_def_cfa_register 7
 4355 0006 7860     		str	r0, [r7, #4]
 4356 0008 0B46     		mov	r3, r1
 4357 000a FB70     		strb	r3, [r7, #3]
2279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4358              		.loc 1 2283 0
 4359 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4360 000e 002B     		cmp	r3, #0
 4361 0010 08D0     		beq	.L122
2284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the COM Bit */
2286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCUS;
 4362              		.loc 1 2286 0
 4363 0012 7B68     		ldr	r3, [r7, #4]
 4364 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4365 0016 9BB2     		uxth	r3, r3
 4366 0018 43F00403 		orr	r3, r3, #4
 4367 001c 9AB2     		uxth	r2, r3
 4368 001e 7B68     		ldr	r3, [r7, #4]
 4369 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 4370 0022 07E0     		b	.L121
 4371              	.L122:
2287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the COM Bit */
2291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCUS;
 4372              		.loc 1 2291 0
 4373 0024 7B68     		ldr	r3, [r7, #4]
 4374 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4375 0028 9BB2     		uxth	r3, r3
 4376 002a 23F00403 		bic	r3, r3, #4
 4377 002e 9AB2     		uxth	r2, r3
 4378 0030 7B68     		ldr	r3, [r7, #4]
 4379 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 4380              	.L121:
2292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4381              		.loc 1 2293 0
 4382 0034 0C37     		adds	r7, r7, #12
 4383 0036 BD46     		mov	sp, r7
 4384              		@ sp needed
 4385 0038 5DF8047B 		ldr	r7, [sp], #4
 4386 003c 7047     		bx	lr
 4387              		.cfi_endproc
 4388              	.LFE174:
 4390 003e 00BF     		.section	.text.TIM_CCPreloadControl,"ax",%progbits
 4391              		.align	2
 4392              		.global	TIM_CCPreloadControl
 4393              		.thumb
 4394              		.thumb_func
 4396              	TIM_CCPreloadControl:
 4397              	.LFB175:
2294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets or Resets the TIM peripheral Capture Compare Preload Control bit.
2297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1 or 8 to select the TIMx peripheral
2298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Capture Compare Preload Control bit
2299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_CCPreloadControl(TIM_TypeDef* TIMx, FunctionalState NewState)
2303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 4398              		.loc 1 2303 0
 4399              		.cfi_startproc
 4400              		@ args = 0, pretend = 0, frame = 8
 4401              		@ frame_needed = 1, uses_anonymous_args = 0
 4402              		@ link register save eliminated.
 4403 0000 80B4     		push	{r7}
 4404              	.LCFI195:
 4405              		.cfi_def_cfa_offset 4
 4406              		.cfi_offset 7, -4
 4407 0002 83B0     		sub	sp, sp, #12
 4408              	.LCFI196:
 4409              		.cfi_def_cfa_offset 16
 4410 0004 00AF     		add	r7, sp, #0
 4411              	.LCFI197:
 4412              		.cfi_def_cfa_register 7
 4413 0006 7860     		str	r0, [r7, #4]
 4414 0008 0B46     		mov	r3, r1
 4415 000a FB70     		strb	r3, [r7, #3]
2304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST4_PERIPH(TIMx));
2306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4416              		.loc 1 2307 0
 4417 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4418 000e 002B     		cmp	r3, #0
 4419 0010 08D0     		beq	.L125
2308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the CCPC Bit */
2310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCPC;
 4420              		.loc 1 2310 0
 4421 0012 7B68     		ldr	r3, [r7, #4]
 4422 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4423 0016 9BB2     		uxth	r3, r3
 4424 0018 43F00103 		orr	r3, r3, #1
 4425 001c 9AB2     		uxth	r2, r3
 4426 001e 7B68     		ldr	r3, [r7, #4]
 4427 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 4428 0022 07E0     		b	.L124
 4429              	.L125:
2311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the CCPC Bit */
2315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCPC;
 4430              		.loc 1 2315 0
 4431 0024 7B68     		ldr	r3, [r7, #4]
 4432 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4433 0028 9BB2     		uxth	r3, r3
 4434 002a 23F00103 		bic	r3, r3, #1
 4435 002e 9AB2     		uxth	r2, r3
 4436 0030 7B68     		ldr	r3, [r7, #4]
 4437 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 4438              	.L124:
2316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4439              		.loc 1 2317 0
 4440 0034 0C37     		adds	r7, r7, #12
 4441 0036 BD46     		mov	sp, r7
 4442              		@ sp needed
 4443 0038 5DF8047B 		ldr	r7, [sp], #4
 4444 003c 7047     		bx	lr
 4445              		.cfi_endproc
 4446              	.LFE175:
 4448 003e 00BF     		.section	.text.TIM_ITConfig,"ax",%progbits
 4449              		.align	2
 4450              		.global	TIM_ITConfig
 4451              		.thumb
 4452              		.thumb_func
 4454              	TIM_ITConfig:
 4455              	.LFB176:
2318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group5 Interrupts DMA and flags management functions
2323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Interrupts, DMA and flags management functions 
2324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                  Interrupts, DMA and flags management functions
2328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the specified TIM interrupts.
2336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIMx peripheral.
2337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupts sources to be enabled or disabled.
2338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  
2348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM6 and TIM7 only the parameter TIM_IT_Update can be used
2349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM9 and TIM12 only one of the following parameters can be used: TIM_IT_Update,
2350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          TIM_IT_CC1, TIM_IT_CC2 or TIM_IT_Trigger. 
2351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   For TIM10, TIM11, TIM13 and TIM14 only one of the following parameters can
2352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          be used: TIM_IT_Update or TIM_IT_CC1   
2353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break can be used only with TIM1 and TIM8 
2354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *        
2355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIM interrupts.
2356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ITConfig(TIM_TypeDef* TIMx, uint16_t TIM_IT, FunctionalState NewState)
2360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 4456              		.loc 1 2360 0
 4457              		.cfi_startproc
 4458              		@ args = 0, pretend = 0, frame = 8
 4459              		@ frame_needed = 1, uses_anonymous_args = 0
 4460              		@ link register save eliminated.
 4461 0000 80B4     		push	{r7}
 4462              	.LCFI198:
 4463              		.cfi_def_cfa_offset 4
 4464              		.cfi_offset 7, -4
 4465 0002 83B0     		sub	sp, sp, #12
 4466              	.LCFI199:
 4467              		.cfi_def_cfa_offset 16
 4468 0004 00AF     		add	r7, sp, #0
 4469              	.LCFI200:
 4470              		.cfi_def_cfa_register 7
 4471 0006 7860     		str	r0, [r7, #4]
 4472 0008 1346     		mov	r3, r2
 4473 000a 0A46     		mov	r2, r1	@ movhi
 4474 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 4475 000e 7B70     		strb	r3, [r7, #1]
2361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IT(TIM_IT));
2364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4476              		.loc 1 2366 0
 4477 0010 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4478 0012 002B     		cmp	r3, #0
 4479 0014 08D0     		beq	.L128
2367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the Interrupt sources */
2369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_IT;
 4480              		.loc 1 2369 0
 4481 0016 7B68     		ldr	r3, [r7, #4]
 4482 0018 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4483 001a 9AB2     		uxth	r2, r3
 4484 001c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4485 001e 1343     		orrs	r3, r3, r2
 4486 0020 9AB2     		uxth	r2, r3
 4487 0022 7B68     		ldr	r3, [r7, #4]
 4488 0024 9A81     		strh	r2, [r3, #12]	@ movhi
 4489 0026 09E0     		b	.L127
 4490              	.L128:
2370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the Interrupt sources */
2374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_IT;
 4491              		.loc 1 2374 0
 4492 0028 7B68     		ldr	r3, [r7, #4]
 4493 002a 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4494 002c 9AB2     		uxth	r2, r3
 4495 002e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4496 0030 DB43     		mvns	r3, r3
 4497 0032 9BB2     		uxth	r3, r3
 4498 0034 1340     		ands	r3, r3, r2
 4499 0036 9AB2     		uxth	r2, r3
 4500 0038 7B68     		ldr	r3, [r7, #4]
 4501 003a 9A81     		strh	r2, [r3, #12]	@ movhi
 4502              	.L127:
2375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4503              		.loc 1 2376 0
 4504 003c 0C37     		adds	r7, r7, #12
 4505 003e BD46     		mov	sp, r7
 4506              		@ sp needed
 4507 0040 5DF8047B 		ldr	r7, [sp], #4
 4508 0044 7047     		bx	lr
 4509              		.cfi_endproc
 4510              	.LFE176:
 4512 0046 00BF     		.section	.text.TIM_GenerateEvent,"ax",%progbits
 4513              		.align	2
 4514              		.global	TIM_GenerateEvent
 4515              		.thumb
 4516              		.thumb_func
 4518              	TIM_GenerateEvent:
 4519              	.LFB177:
2377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx event to be generate by software.
2380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_EventSource: specifies the event source.
2382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one or more of the following values:	   
2383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Update: Timer update Event source
2384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC1: Timer Capture Compare 1 Event source
2385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC2: Timer Capture Compare 2 Event source
2386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC3: Timer Capture Compare 3 Event source
2387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_CC4: Timer Capture Compare 4 Event source
2388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_COM: Timer COM event source  
2389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Trigger: Timer Trigger Event source
2390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EventSource_Break: Timer Break event source
2391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * 
2392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can only generate an update event. 
2393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_EventSource_COM and TIM_EventSource_Break are used only with TIM1 and TIM8.
2394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *        
2395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_GenerateEvent(TIM_TypeDef* TIMx, uint16_t TIM_EventSource)
2398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 4520              		.loc 1 2398 0
 4521              		.cfi_startproc
 4522              		@ args = 0, pretend = 0, frame = 8
 4523              		@ frame_needed = 1, uses_anonymous_args = 0
 4524              		@ link register save eliminated.
 4525 0000 80B4     		push	{r7}
 4526              	.LCFI201:
 4527              		.cfi_def_cfa_offset 4
 4528              		.cfi_offset 7, -4
 4529 0002 83B0     		sub	sp, sp, #12
 4530              	.LCFI202:
 4531              		.cfi_def_cfa_offset 16
 4532 0004 00AF     		add	r7, sp, #0
 4533              	.LCFI203:
 4534              		.cfi_def_cfa_register 7
 4535 0006 7860     		str	r0, [r7, #4]
 4536 0008 0B46     		mov	r3, r1
 4537 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EVENT_SOURCE(TIM_EventSource));
2402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  
2403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the event sources */
2404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->EGR = TIM_EventSource;
 4538              		.loc 1 2404 0
 4539 000c 7B68     		ldr	r3, [r7, #4]
 4540 000e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 4541 0010 9A82     		strh	r2, [r3, #20]	@ movhi
2405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4542              		.loc 1 2405 0
 4543 0012 0C37     		adds	r7, r7, #12
 4544 0014 BD46     		mov	sp, r7
 4545              		@ sp needed
 4546 0016 5DF8047B 		ldr	r7, [sp], #4
 4547 001a 7047     		bx	lr
 4548              		.cfi_endproc
 4549              	.LFE177:
 4551              		.section	.text.TIM_GetFlagStatus,"ax",%progbits
 4552              		.align	2
 4553              		.global	TIM_GetFlagStatus
 4554              		.thumb
 4555              		.thumb_func
 4557              	TIM_GetFlagStatus:
 4558              	.LFB178:
2406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Checks whether the specified TIM flag is set or not.
2409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_FLAG: specifies the flag to check.
2411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
2413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
2418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
2419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
2420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
2421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
2422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
2423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
2424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
2426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.    
2427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval The new state of TIM_FLAG (SET or RESET).
2429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** FlagStatus TIM_GetFlagStatus(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 4559              		.loc 1 2431 0
 4560              		.cfi_startproc
 4561              		@ args = 0, pretend = 0, frame = 16
 4562              		@ frame_needed = 1, uses_anonymous_args = 0
 4563              		@ link register save eliminated.
 4564 0000 80B4     		push	{r7}
 4565              	.LCFI204:
 4566              		.cfi_def_cfa_offset 4
 4567              		.cfi_offset 7, -4
 4568 0002 85B0     		sub	sp, sp, #20
 4569              	.LCFI205:
 4570              		.cfi_def_cfa_offset 24
 4571 0004 00AF     		add	r7, sp, #0
 4572              	.LCFI206:
 4573              		.cfi_def_cfa_register 7
 4574 0006 7860     		str	r0, [r7, #4]
 4575 0008 0B46     		mov	r3, r1
 4576 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ITStatus bitstatus = RESET;  
 4577              		.loc 1 2432 0
 4578 000c 0023     		movs	r3, #0
 4579 000e FB73     		strb	r3, [r7, #15]
2433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_GET_FLAG(TIM_FLAG));
2436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((TIMx->SR & TIM_FLAG) != (uint16_t)RESET)
 4580              		.loc 1 2438 0
 4581 0010 7B68     		ldr	r3, [r7, #4]
 4582 0012 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 4583 0014 9AB2     		uxth	r2, r3
 4584 0016 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4585 0018 1340     		ands	r3, r3, r2
 4586 001a 9BB2     		uxth	r3, r3
 4587 001c 002B     		cmp	r3, #0
 4588 001e 02D0     		beq	.L132
2439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = SET;
 4589              		.loc 1 2440 0
 4590 0020 0123     		movs	r3, #1
 4591 0022 FB73     		strb	r3, [r7, #15]
 4592 0024 01E0     		b	.L133
 4593              	.L132:
2441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = RESET;
 4594              		.loc 1 2444 0
 4595 0026 0023     		movs	r3, #0
 4596 0028 FB73     		strb	r3, [r7, #15]
 4597              	.L133:
2445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return bitstatus;
 4598              		.loc 1 2446 0
 4599 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4600              		.loc 1 2447 0
 4601 002c 1846     		mov	r0, r3
 4602 002e 1437     		adds	r7, r7, #20
 4603 0030 BD46     		mov	sp, r7
 4604              		@ sp needed
 4605 0032 5DF8047B 		ldr	r7, [sp], #4
 4606 0036 7047     		bx	lr
 4607              		.cfi_endproc
 4608              	.LFE178:
 4610              		.section	.text.TIM_ClearFlag,"ax",%progbits
 4611              		.align	2
 4612              		.global	TIM_ClearFlag
 4613              		.thumb
 4614              		.thumb_func
 4616              	TIM_ClearFlag:
 4617              	.LFB179:
2448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears the TIMx's pending flags.
2451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_FLAG: specifies the flag bit to clear.
2453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Update: TIM update Flag
2455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1: TIM Capture Compare 1 Flag
2456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2: TIM Capture Compare 2 Flag
2457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3: TIM Capture Compare 3 Flag
2458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4: TIM Capture Compare 4 Flag
2459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_COM: TIM Commutation Flag
2460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Trigger: TIM Trigger Flag
2461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_Break: TIM Break Flag
2462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC1OF: TIM Capture Compare 1 over capture Flag
2463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC2OF: TIM Capture Compare 2 over capture Flag
2464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC3OF: TIM Capture Compare 3 over capture Flag
2465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_FLAG_CC4OF: TIM Capture Compare 4 over capture Flag
2466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can have only one update flag. 
2468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_FLAG_COM and TIM_FLAG_Break are used only with TIM1 and TIM8.
2469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *    
2470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearFlag(TIM_TypeDef* TIMx, uint16_t TIM_FLAG)
2473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {  
 4618              		.loc 1 2473 0
 4619              		.cfi_startproc
 4620              		@ args = 0, pretend = 0, frame = 8
 4621              		@ frame_needed = 1, uses_anonymous_args = 0
 4622              		@ link register save eliminated.
 4623 0000 80B4     		push	{r7}
 4624              	.LCFI207:
 4625              		.cfi_def_cfa_offset 4
 4626              		.cfi_offset 7, -4
 4627 0002 83B0     		sub	sp, sp, #12
 4628              	.LCFI208:
 4629              		.cfi_def_cfa_offset 16
 4630 0004 00AF     		add	r7, sp, #0
 4631              	.LCFI209:
 4632              		.cfi_def_cfa_register 7
 4633 0006 7860     		str	r0, [r7, #4]
 4634 0008 0B46     		mov	r3, r1
 4635 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
2477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Clear the flags */
2478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_FLAG;
 4636              		.loc 1 2478 0
 4637 000c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4638 000e DB43     		mvns	r3, r3
 4639 0010 9AB2     		uxth	r2, r3
 4640 0012 7B68     		ldr	r3, [r7, #4]
 4641 0014 1A82     		strh	r2, [r3, #16]	@ movhi
2479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4642              		.loc 1 2479 0
 4643 0016 0C37     		adds	r7, r7, #12
 4644 0018 BD46     		mov	sp, r7
 4645              		@ sp needed
 4646 001a 5DF8047B 		ldr	r7, [sp], #4
 4647 001e 7047     		bx	lr
 4648              		.cfi_endproc
 4649              	.LFE179:
 4651              		.section	.text.TIM_GetITStatus,"ax",%progbits
 4652              		.align	2
 4653              		.global	TIM_GetITStatus
 4654              		.thumb
 4655              		.thumb_func
 4657              	TIM_GetITStatus:
 4658              	.LFB180:
2480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Checks whether the TIM interrupt has occurred or not.
2483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the TIM interrupt source to check.
2485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM update Interrupt source
2487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
2496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
2497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
2498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval The new state of the TIM_IT(SET or RESET).
2499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** ITStatus TIM_GetITStatus(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4659              		.loc 1 2501 0
 4660              		.cfi_startproc
 4661              		@ args = 0, pretend = 0, frame = 16
 4662              		@ frame_needed = 1, uses_anonymous_args = 0
 4663              		@ link register save eliminated.
 4664 0000 80B4     		push	{r7}
 4665              	.LCFI210:
 4666              		.cfi_def_cfa_offset 4
 4667              		.cfi_offset 7, -4
 4668 0002 85B0     		sub	sp, sp, #20
 4669              	.LCFI211:
 4670              		.cfi_def_cfa_offset 24
 4671 0004 00AF     		add	r7, sp, #0
 4672              	.LCFI212:
 4673              		.cfi_def_cfa_register 7
 4674 0006 7860     		str	r0, [r7, #4]
 4675 0008 0B46     		mov	r3, r1
 4676 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   ITStatus bitstatus = RESET;  
 4677              		.loc 1 2502 0
 4678 000c 0023     		movs	r3, #0
 4679 000e FB73     		strb	r3, [r7, #15]
2503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t itstatus = 0x0, itenable = 0x0;
 4680              		.loc 1 2503 0
 4681 0010 0023     		movs	r3, #0
 4682 0012 BB81     		strh	r3, [r7, #12]	@ movhi
 4683 0014 0023     		movs	r3, #0
 4684 0016 7B81     		strh	r3, [r7, #10]	@ movhi
2504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_GET_IT(TIM_IT));
2507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****    
2508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   itstatus = TIMx->SR & TIM_IT;
 4685              		.loc 1 2508 0
 4686 0018 7B68     		ldr	r3, [r7, #4]
 4687 001a 1B8A     		ldrh	r3, [r3, #16]	@ movhi
 4688 001c 9AB2     		uxth	r2, r3
 4689 001e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4690 0020 1340     		ands	r3, r3, r2
 4691 0022 BB81     		strh	r3, [r7, #12]	@ movhi
2509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   itenable = TIMx->DIER & TIM_IT;
 4692              		.loc 1 2510 0
 4693 0024 7B68     		ldr	r3, [r7, #4]
 4694 0026 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4695 0028 9AB2     		uxth	r2, r3
 4696 002a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4697 002c 1340     		ands	r3, r3, r2
 4698 002e 7B81     		strh	r3, [r7, #10]	@ movhi
2511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if ((itstatus != (uint16_t)RESET) && (itenable != (uint16_t)RESET))
 4699              		.loc 1 2511 0
 4700 0030 BB89     		ldrh	r3, [r7, #12]
 4701 0032 002B     		cmp	r3, #0
 4702 0034 05D0     		beq	.L137
 4703              		.loc 1 2511 0 is_stmt 0 discriminator 1
 4704 0036 7B89     		ldrh	r3, [r7, #10]
 4705 0038 002B     		cmp	r3, #0
 4706 003a 02D0     		beq	.L137
2512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = SET;
 4707              		.loc 1 2513 0 is_stmt 1
 4708 003c 0123     		movs	r3, #1
 4709 003e FB73     		strb	r3, [r7, #15]
 4710 0040 01E0     		b	.L138
 4711              	.L137:
2514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     bitstatus = RESET;
 4712              		.loc 1 2517 0
 4713 0042 0023     		movs	r3, #0
 4714 0044 FB73     		strb	r3, [r7, #15]
 4715              	.L138:
2518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   return bitstatus;
 4716              		.loc 1 2519 0
 4717 0046 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4718              		.loc 1 2520 0
 4719 0048 1846     		mov	r0, r3
 4720 004a 1437     		adds	r7, r7, #20
 4721 004c BD46     		mov	sp, r7
 4722              		@ sp needed
 4723 004e 5DF8047B 		ldr	r7, [sp], #4
 4724 0052 7047     		bx	lr
 4725              		.cfi_endproc
 4726              	.LFE180:
 4728              		.section	.text.TIM_ClearITPendingBit,"ax",%progbits
 4729              		.align	2
 4730              		.global	TIM_ClearITPendingBit
 4731              		.thumb
 4732              		.thumb_func
 4734              	TIM_ClearITPendingBit:
 4735              	.LFB181:
2521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Clears the TIMx's interrupt pending bits.
2524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1 to 14 to select the TIM peripheral.
2525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IT: specifies the pending bit to clear.
2526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Update: TIM1 update Interrupt source
2528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC1: TIM Capture Compare 1 Interrupt source
2529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC2: TIM Capture Compare 2 Interrupt source
2530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC3: TIM Capture Compare 3 Interrupt source
2531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_CC4: TIM Capture Compare 4 Interrupt source
2532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_COM: TIM Commutation Interrupt source
2533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Trigger: TIM Trigger Interrupt source
2534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_IT_Break: TIM Break Interrupt source
2535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM6 and TIM7 can generate only an update interrupt.
2537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @note   TIM_IT_COM and TIM_IT_Break are used only with TIM1 and TIM8.
2538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *      
2539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ClearITPendingBit(TIM_TypeDef* TIMx, uint16_t TIM_IT)
2542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4736              		.loc 1 2542 0
 4737              		.cfi_startproc
 4738              		@ args = 0, pretend = 0, frame = 8
 4739              		@ frame_needed = 1, uses_anonymous_args = 0
 4740              		@ link register save eliminated.
 4741 0000 80B4     		push	{r7}
 4742              	.LCFI213:
 4743              		.cfi_def_cfa_offset 4
 4744              		.cfi_offset 7, -4
 4745 0002 83B0     		sub	sp, sp, #12
 4746              	.LCFI214:
 4747              		.cfi_def_cfa_offset 16
 4748 0004 00AF     		add	r7, sp, #0
 4749              	.LCFI215:
 4750              		.cfi_def_cfa_register 7
 4751 0006 7860     		str	r0, [r7, #4]
 4752 0008 0B46     		mov	r3, r1
 4753 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ALL_PERIPH(TIMx));
2545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Clear the IT pending Bit */
2547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SR = (uint16_t)~TIM_IT;
 4754              		.loc 1 2547 0
 4755 000c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4756 000e DB43     		mvns	r3, r3
 4757 0010 9AB2     		uxth	r2, r3
 4758 0012 7B68     		ldr	r3, [r7, #4]
 4759 0014 1A82     		strh	r2, [r3, #16]	@ movhi
2548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4760              		.loc 1 2548 0
 4761 0016 0C37     		adds	r7, r7, #12
 4762 0018 BD46     		mov	sp, r7
 4763              		@ sp needed
 4764 001a 5DF8047B 		ldr	r7, [sp], #4
 4765 001e 7047     		bx	lr
 4766              		.cfi_endproc
 4767              	.LFE181:
 4769              		.section	.text.TIM_DMAConfig,"ax",%progbits
 4770              		.align	2
 4771              		.global	TIM_DMAConfig
 4772              		.thumb
 4773              		.thumb_func
 4775              	TIM_DMAConfig:
 4776              	.LFB182:
2549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx's DMA interface.
2552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMABase: DMA Base address.
2554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CR1  
2556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CR2
2557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_SMCR
2558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_DIER
2559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM1_DMABase_SR
2560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_EGR
2561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCMR1
2562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCMR2
2563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCER
2564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CNT   
2565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_PSC   
2566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_ARR
2567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_RCR
2568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR1
2569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR2
2570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR3  
2571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_CCR4
2572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_BDTR
2573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMABase_DCR
2574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMABurstLength: DMA Burst length. This parameter can be one value
2575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         between: TIM_DMABurstLength_1Transfer and TIM_DMABurstLength_18Transfers.
2576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DMAConfig(TIM_TypeDef* TIMx, uint16_t TIM_DMABase, uint16_t TIM_DMABurstLength)
2579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4777              		.loc 1 2579 0
 4778              		.cfi_startproc
 4779              		@ args = 0, pretend = 0, frame = 8
 4780              		@ frame_needed = 1, uses_anonymous_args = 0
 4781              		@ link register save eliminated.
 4782 0000 80B4     		push	{r7}
 4783              	.LCFI216:
 4784              		.cfi_def_cfa_offset 4
 4785              		.cfi_offset 7, -4
 4786 0002 83B0     		sub	sp, sp, #12
 4787              	.LCFI217:
 4788              		.cfi_def_cfa_offset 16
 4789 0004 00AF     		add	r7, sp, #0
 4790              	.LCFI218:
 4791              		.cfi_def_cfa_register 7
 4792 0006 7860     		str	r0, [r7, #4]
 4793 0008 1346     		mov	r3, r2
 4794 000a 0A46     		mov	r2, r1	@ movhi
 4795 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 4796 000e 3B80     		strh	r3, [r7]	@ movhi
2580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_BASE(TIM_DMABase)); 
2583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(TIM_DMABurstLength));
2584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the DMA Base and the DMA Burst Length */
2586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->DCR = TIM_DMABase | TIM_DMABurstLength;
 4797              		.loc 1 2586 0
 4798 0010 7A88     		ldrh	r2, [r7, #2]	@ movhi
 4799 0012 3B88     		ldrh	r3, [r7]	@ movhi
 4800 0014 1343     		orrs	r3, r3, r2
 4801 0016 9AB2     		uxth	r2, r3
 4802 0018 7B68     		ldr	r3, [r7, #4]
 4803 001a A3F84820 		strh	r2, [r3, #72]	@ movhi
2587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4804              		.loc 1 2587 0
 4805 001e 0C37     		adds	r7, r7, #12
 4806 0020 BD46     		mov	sp, r7
 4807              		@ sp needed
 4808 0022 5DF8047B 		ldr	r7, [sp], #4
 4809 0026 7047     		bx	lr
 4810              		.cfi_endproc
 4811              	.LFE182:
 4813              		.section	.text.TIM_DMACmd,"ax",%progbits
 4814              		.align	2
 4815              		.global	TIM_DMACmd
 4816              		.thumb
 4817              		.thumb_func
 4819              	TIM_DMACmd:
 4820              	.LFB183:
2588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx's DMA Requests.
2591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the TIM peripheral.
2592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_DMASource: specifies the DMA Request sources.
2593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be any combination of the following values:
2594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_Update: TIM update Interrupt source
2595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
2596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
2597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
2598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
2599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
2600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_DMA_Trigger: TIM Trigger DMA source
2601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the DMA Request sources.
2602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_DMACmd(TIM_TypeDef* TIMx, uint16_t TIM_DMASource, FunctionalState NewState)
2606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** { 
 4821              		.loc 1 2606 0
 4822              		.cfi_startproc
 4823              		@ args = 0, pretend = 0, frame = 8
 4824              		@ frame_needed = 1, uses_anonymous_args = 0
 4825              		@ link register save eliminated.
 4826 0000 80B4     		push	{r7}
 4827              	.LCFI219:
 4828              		.cfi_def_cfa_offset 4
 4829              		.cfi_offset 7, -4
 4830 0002 83B0     		sub	sp, sp, #12
 4831              	.LCFI220:
 4832              		.cfi_def_cfa_offset 16
 4833 0004 00AF     		add	r7, sp, #0
 4834              	.LCFI221:
 4835              		.cfi_def_cfa_register 7
 4836 0006 7860     		str	r0, [r7, #4]
 4837 0008 1346     		mov	r3, r2
 4838 000a 0A46     		mov	r2, r1	@ movhi
 4839 000c 7A80     		strh	r2, [r7, #2]	@ movhi
 4840 000e 7B70     		strb	r3, [r7, #1]
2607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx)); 
2609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(TIM_DMASource));
2610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4841              		.loc 1 2612 0
 4842 0010 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 4843 0012 002B     		cmp	r3, #0
 4844 0014 08D0     		beq	.L143
2613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Enable the DMA sources */
2615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER |= TIM_DMASource; 
 4845              		.loc 1 2615 0
 4846 0016 7B68     		ldr	r3, [r7, #4]
 4847 0018 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4848 001a 9AB2     		uxth	r2, r3
 4849 001c 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4850 001e 1343     		orrs	r3, r3, r2
 4851 0020 9AB2     		uxth	r2, r3
 4852 0022 7B68     		ldr	r3, [r7, #4]
 4853 0024 9A81     		strh	r2, [r3, #12]	@ movhi
 4854 0026 09E0     		b	.L142
 4855              	.L143:
2616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Disable the DMA sources */
2620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->DIER &= (uint16_t)~TIM_DMASource;
 4856              		.loc 1 2620 0
 4857 0028 7B68     		ldr	r3, [r7, #4]
 4858 002a 9B89     		ldrh	r3, [r3, #12]	@ movhi
 4859 002c 9AB2     		uxth	r2, r3
 4860 002e 7B88     		ldrh	r3, [r7, #2]	@ movhi
 4861 0030 DB43     		mvns	r3, r3
 4862 0032 9BB2     		uxth	r3, r3
 4863 0034 1340     		ands	r3, r3, r2
 4864 0036 9AB2     		uxth	r2, r3
 4865 0038 7B68     		ldr	r3, [r7, #4]
 4866 003a 9A81     		strh	r2, [r3, #12]	@ movhi
 4867              	.L142:
2621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4868              		.loc 1 2622 0
 4869 003c 0C37     		adds	r7, r7, #12
 4870 003e BD46     		mov	sp, r7
 4871              		@ sp needed
 4872 0040 5DF8047B 		ldr	r7, [sp], #4
 4873 0044 7047     		bx	lr
 4874              		.cfi_endproc
 4875              	.LFE183:
 4877 0046 00BF     		.section	.text.TIM_SelectCCDMA,"ax",%progbits
 4878              		.align	2
 4879              		.global	TIM_SelectCCDMA
 4880              		.thumb
 4881              		.thumb_func
 4883              	TIM_SelectCCDMA:
 4884              	.LFB184:
2623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx peripheral Capture Compare DMA source.
2626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the Capture Compare DMA source
2628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
2629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectCCDMA(TIM_TypeDef* TIMx, FunctionalState NewState)
2632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4885              		.loc 1 2632 0
 4886              		.cfi_startproc
 4887              		@ args = 0, pretend = 0, frame = 8
 4888              		@ frame_needed = 1, uses_anonymous_args = 0
 4889              		@ link register save eliminated.
 4890 0000 80B4     		push	{r7}
 4891              	.LCFI222:
 4892              		.cfi_def_cfa_offset 4
 4893              		.cfi_offset 7, -4
 4894 0002 83B0     		sub	sp, sp, #12
 4895              	.LCFI223:
 4896              		.cfi_def_cfa_offset 16
 4897 0004 00AF     		add	r7, sp, #0
 4898              	.LCFI224:
 4899              		.cfi_def_cfa_register 7
 4900 0006 7860     		str	r0, [r7, #4]
 4901 0008 0B46     		mov	r3, r1
 4902 000a FB70     		strb	r3, [r7, #3]
2633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
2636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 4903              		.loc 1 2637 0
 4904 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 4905 000e 002B     		cmp	r3, #0
 4906 0010 08D0     		beq	.L146
2638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the CCDS Bit */
2640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_CCDS;
 4907              		.loc 1 2640 0
 4908 0012 7B68     		ldr	r3, [r7, #4]
 4909 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4910 0016 9BB2     		uxth	r3, r3
 4911 0018 43F00803 		orr	r3, r3, #8
 4912 001c 9AB2     		uxth	r2, r3
 4913 001e 7B68     		ldr	r3, [r7, #4]
 4914 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 4915 0022 07E0     		b	.L145
 4916              	.L146:
2641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the CCDS Bit */
2645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_CCDS;
 4917              		.loc 1 2645 0
 4918 0024 7B68     		ldr	r3, [r7, #4]
 4919 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 4920 0028 9BB2     		uxth	r3, r3
 4921 002a 23F00803 		bic	r3, r3, #8
 4922 002e 9AB2     		uxth	r2, r3
 4923 0030 7B68     		ldr	r3, [r7, #4]
 4924 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 4925              	.L145:
2646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4926              		.loc 1 2647 0
 4927 0034 0C37     		adds	r7, r7, #12
 4928 0036 BD46     		mov	sp, r7
 4929              		@ sp needed
 4930 0038 5DF8047B 		ldr	r7, [sp], #4
 4931 003c 7047     		bx	lr
 4932              		.cfi_endproc
 4933              	.LFE184:
 4935 003e 00BF     		.section	.text.TIM_InternalClockConfig,"ax",%progbits
 4936              		.align	2
 4937              		.global	TIM_InternalClockConfig
 4938              		.thumb
 4939              		.thumb_func
 4941              	TIM_InternalClockConfig:
 4942              	.LFB185:
2648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group6 Clocks management functions
2653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Clocks management functions
2654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                          Clocks management functions
2658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx internal Clock
2666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_InternalClockConfig(TIM_TypeDef* TIMx)
2671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4943              		.loc 1 2671 0
 4944              		.cfi_startproc
 4945              		@ args = 0, pretend = 0, frame = 8
 4946              		@ frame_needed = 1, uses_anonymous_args = 0
 4947              		@ link register save eliminated.
 4948 0000 80B4     		push	{r7}
 4949              	.LCFI225:
 4950              		.cfi_def_cfa_offset 4
 4951              		.cfi_offset 7, -4
 4952 0002 83B0     		sub	sp, sp, #12
 4953              	.LCFI226:
 4954              		.cfi_def_cfa_offset 16
 4955 0004 00AF     		add	r7, sp, #0
 4956              	.LCFI227:
 4957              		.cfi_def_cfa_register 7
 4958 0006 7860     		str	r0, [r7, #4]
2672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable slave mode to clock the prescaler directly with the internal clock */
2676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &=  (uint16_t)~TIM_SMCR_SMS;
 4959              		.loc 1 2676 0
 4960 0008 7B68     		ldr	r3, [r7, #4]
 4961 000a 1B89     		ldrh	r3, [r3, #8]	@ movhi
 4962 000c 9BB2     		uxth	r3, r3
 4963 000e 23F00703 		bic	r3, r3, #7
 4964 0012 9AB2     		uxth	r2, r3
 4965 0014 7B68     		ldr	r3, [r7, #4]
 4966 0016 1A81     		strh	r2, [r3, #8]	@ movhi
2677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 4967              		.loc 1 2677 0
 4968 0018 0C37     		adds	r7, r7, #12
 4969 001a BD46     		mov	sp, r7
 4970              		@ sp needed
 4971 001c 5DF8047B 		ldr	r7, [sp], #4
 4972 0020 7047     		bx	lr
 4973              		.cfi_endproc
 4974              	.LFE185:
 4976 0022 00BF     		.section	.text.TIM_ITRxExternalClockConfig,"ax",%progbits
 4977              		.align	2
 4978              		.global	TIM_ITRxExternalClockConfig
 4979              		.thumb
 4980              		.thumb_func
 4982              	TIM_ITRxExternalClockConfig:
 4983              	.LFB186:
2678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Internal Trigger as External Clock
2681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
2682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
2683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_InputTriggerSource: Trigger source.
2684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
2686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
2687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
2688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
2689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ITRxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 4984              		.loc 1 2692 0
 4985              		.cfi_startproc
 4986              		@ args = 0, pretend = 0, frame = 8
 4987              		@ frame_needed = 1, uses_anonymous_args = 0
 4988 0000 80B5     		push	{r7, lr}
 4989              	.LCFI228:
 4990              		.cfi_def_cfa_offset 8
 4991              		.cfi_offset 7, -8
 4992              		.cfi_offset 14, -4
 4993 0002 82B0     		sub	sp, sp, #8
 4994              	.LCFI229:
 4995              		.cfi_def_cfa_offset 16
 4996 0004 00AF     		add	r7, sp, #0
 4997              	.LCFI230:
 4998              		.cfi_def_cfa_register 7
 4999 0006 7860     		str	r0, [r7, #4]
 5000 0008 0B46     		mov	r3, r1
 5001 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_INTERNAL_TRIGGER_SELECTION(TIM_InputTriggerSource));
2696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Internal Trigger */
2698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_InputTriggerSource);
 5002              		.loc 1 2698 0
 5003 000c 7B88     		ldrh	r3, [r7, #2]
 5004 000e 7868     		ldr	r0, [r7, #4]
 5005 0010 1946     		mov	r1, r3
 5006 0012 FFF7FEFF 		bl	TIM_SelectInputTrigger
2699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 5007              		.loc 1 2701 0
 5008 0016 7B68     		ldr	r3, [r7, #4]
 5009 0018 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5010 001a 9BB2     		uxth	r3, r3
 5011 001c 43F00703 		orr	r3, r3, #7
 5012 0020 9AB2     		uxth	r2, r3
 5013 0022 7B68     		ldr	r3, [r7, #4]
 5014 0024 1A81     		strh	r2, [r3, #8]	@ movhi
2702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5015              		.loc 1 2702 0
 5016 0026 0837     		adds	r7, r7, #8
 5017 0028 BD46     		mov	sp, r7
 5018              		@ sp needed
 5019 002a 80BD     		pop	{r7, pc}
 5020              		.cfi_endproc
 5021              	.LFE186:
 5023              		.section	.text.TIM_TIxExternalClockConfig,"ax",%progbits
 5024              		.align	2
 5025              		.global	TIM_TIxExternalClockConfig
 5026              		.thumb
 5027              		.thumb_func
 5029              	TIM_TIxExternalClockConfig:
 5030              	.LFB187:
2703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Trigger as External Clock
2706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14  
2707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
2708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TIxExternalCLKSource: Trigger source.
2709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1ED: TI1 Edge Detector
2711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI1: Filtered Timer Input 1
2712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TIxExternalCLK1Source_TI2: Filtered Timer Input 2
2713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity: specifies the TIx Polarity.
2714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
2716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
2717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ICFilter: specifies the filter value.
2718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x0 and 0xF.
2719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_TIxExternalClockConfig(TIM_TypeDef* TIMx, uint16_t TIM_TIxExternalCLKSource,
2722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                 uint16_t TIM_ICPolarity, uint16_t ICFilter)
2723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5031              		.loc 1 2723 0
 5032              		.cfi_startproc
 5033              		@ args = 0, pretend = 0, frame = 16
 5034              		@ frame_needed = 1, uses_anonymous_args = 0
 5035 0000 80B5     		push	{r7, lr}
 5036              	.LCFI231:
 5037              		.cfi_def_cfa_offset 8
 5038              		.cfi_offset 7, -8
 5039              		.cfi_offset 14, -4
 5040 0002 84B0     		sub	sp, sp, #16
 5041              	.LCFI232:
 5042              		.cfi_def_cfa_offset 24
 5043 0004 00AF     		add	r7, sp, #0
 5044              	.LCFI233:
 5045              		.cfi_def_cfa_register 7
 5046 0006 F860     		str	r0, [r7, #12]
 5047 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5048 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5049 000c FB80     		strh	r3, [r7, #6]	@ movhi
2724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx));
2726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_ICPolarity));
2727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_FILTER(ICFilter));
2728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the Timer Input Clock Source */
2730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (TIM_TIxExternalCLKSource == TIM_TIxExternalCLK1Source_TI2)
 5050              		.loc 1 2730 0
 5051 000e 7B89     		ldrh	r3, [r7, #10]
 5052 0010 602B     		cmp	r3, #96
 5053 0012 07D1     		bne	.L151
2731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI2_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 5054              		.loc 1 2732 0
 5055 0014 3A89     		ldrh	r2, [r7, #8]
 5056 0016 FB88     		ldrh	r3, [r7, #6]
 5057 0018 F868     		ldr	r0, [r7, #12]
 5058 001a 1146     		mov	r1, r2
 5059 001c 0122     		movs	r2, #1
 5060 001e FFF7FEFF 		bl	TI2_Config
 5061 0022 06E0     		b	.L152
 5062              	.L151:
2733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
2735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
2736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TI1_Config(TIMx, TIM_ICPolarity, TIM_ICSelection_DirectTI, ICFilter);
 5063              		.loc 1 2736 0
 5064 0024 3A89     		ldrh	r2, [r7, #8]
 5065 0026 FB88     		ldrh	r3, [r7, #6]
 5066 0028 F868     		ldr	r0, [r7, #12]
 5067 002a 1146     		mov	r1, r2
 5068 002c 0122     		movs	r2, #1
 5069 002e FFF7FEFF 		bl	TI1_Config
 5070              	.L152:
2737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
2738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Trigger source */
2739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_SelectInputTrigger(TIMx, TIM_TIxExternalCLKSource);
 5071              		.loc 1 2739 0
 5072 0032 7B89     		ldrh	r3, [r7, #10]
 5073 0034 F868     		ldr	r0, [r7, #12]
 5074 0036 1946     		mov	r1, r3
 5075 0038 FFF7FEFF 		bl	TIM_SelectInputTrigger
2740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode_External1;
 5076              		.loc 1 2741 0
 5077 003c FB68     		ldr	r3, [r7, #12]
 5078 003e 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5079 0040 9BB2     		uxth	r3, r3
 5080 0042 43F00703 		orr	r3, r3, #7
 5081 0046 9AB2     		uxth	r2, r3
 5082 0048 FB68     		ldr	r3, [r7, #12]
 5083 004a 1A81     		strh	r2, [r3, #8]	@ movhi
2742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5084              		.loc 1 2742 0
 5085 004c 1037     		adds	r7, r7, #16
 5086 004e BD46     		mov	sp, r7
 5087              		@ sp needed
 5088 0050 80BD     		pop	{r7, pc}
 5089              		.cfi_endproc
 5090              	.LFE187:
 5092 0052 00BF     		.section	.text.TIM_ETRClockMode1Config,"ax",%progbits
 5093              		.align	2
 5094              		.global	TIM_ETRClockMode1Config
 5095              		.thumb
 5096              		.thumb_func
 5098              	TIM_ETRClockMode1Config:
 5099              	.LFB188:
2743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the External clock Mode1
2746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRClockMode1Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
2762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                             uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5100              		.loc 1 2763 0
 5101              		.cfi_startproc
 5102              		@ args = 0, pretend = 0, frame = 24
 5103              		@ frame_needed = 1, uses_anonymous_args = 0
 5104 0000 80B5     		push	{r7, lr}
 5105              	.LCFI234:
 5106              		.cfi_def_cfa_offset 8
 5107              		.cfi_offset 7, -8
 5108              		.cfi_offset 14, -4
 5109 0002 86B0     		sub	sp, sp, #24
 5110              	.LCFI235:
 5111              		.cfi_def_cfa_offset 32
 5112 0004 00AF     		add	r7, sp, #0
 5113              	.LCFI236:
 5114              		.cfi_def_cfa_register 7
 5115 0006 F860     		str	r0, [r7, #12]
 5116 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5117 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5118 000c FB80     		strh	r3, [r7, #6]	@ movhi
2764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 5119              		.loc 1 2764 0
 5120 000e 0023     		movs	r3, #0
 5121 0010 FB82     		strh	r3, [r7, #22]	@ movhi
2765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
2769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
2770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
2771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the ETR Clock source */
2772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 5122              		.loc 1 2772 0
 5123 0012 7989     		ldrh	r1, [r7, #10]
 5124 0014 3A89     		ldrh	r2, [r7, #8]
 5125 0016 FB88     		ldrh	r3, [r7, #6]
 5126 0018 F868     		ldr	r0, [r7, #12]
 5127 001a FFF7FEFF 		bl	TIM_ETRConfig
2773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
2775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5128              		.loc 1 2775 0
 5129 001e FB68     		ldr	r3, [r7, #12]
 5130 0020 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5131 0022 FB82     		strh	r3, [r7, #22]	@ movhi
2776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the SMS Bits */
2778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
 5132              		.loc 1 2778 0
 5133 0024 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5134 0026 23F00703 		bic	r3, r3, #7
 5135 002a FB82     		strh	r3, [r7, #22]	@ movhi
2779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the External clock mode1 */
2781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_SlaveMode_External1;
 5136              		.loc 1 2781 0
 5137 002c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5138 002e 43F00703 		orr	r3, r3, #7
 5139 0032 FB82     		strh	r3, [r7, #22]	@ movhi
2782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Trigger selection : ETRF */
2784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
 5140              		.loc 1 2784 0
 5141 0034 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5142 0036 23F07003 		bic	r3, r3, #112
 5143 003a FB82     		strh	r3, [r7, #22]	@ movhi
2785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_TS_ETRF;
 5144              		.loc 1 2785 0
 5145 003c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5146 003e 43F07003 		orr	r3, r3, #112
 5147 0042 FB82     		strh	r3, [r7, #22]	@ movhi
2786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
2788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5148              		.loc 1 2788 0
 5149 0044 FB68     		ldr	r3, [r7, #12]
 5150 0046 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5151 0048 1A81     		strh	r2, [r3, #8]	@ movhi
2789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5152              		.loc 1 2789 0
 5153 004a 1837     		adds	r7, r7, #24
 5154 004c BD46     		mov	sp, r7
 5155              		@ sp needed
 5156 004e 80BD     		pop	{r7, pc}
 5157              		.cfi_endproc
 5158              	.LFE188:
 5160              		.section	.text.TIM_ETRClockMode2Config,"ax",%progbits
 5161              		.align	2
 5162              		.global	TIM_ETRClockMode2Config
 5163              		.thumb
 5164              		.thumb_func
 5166              	TIM_ETRClockMode2Config:
 5167              	.LFB189:
2790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the External clock Mode2
2793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRClockMode2Config(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, 
2809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                              uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5168              		.loc 1 2810 0
 5169              		.cfi_startproc
 5170              		@ args = 0, pretend = 0, frame = 16
 5171              		@ frame_needed = 1, uses_anonymous_args = 0
 5172 0000 80B5     		push	{r7, lr}
 5173              	.LCFI237:
 5174              		.cfi_def_cfa_offset 8
 5175              		.cfi_offset 7, -8
 5176              		.cfi_offset 14, -4
 5177 0002 84B0     		sub	sp, sp, #16
 5178              	.LCFI238:
 5179              		.cfi_def_cfa_offset 24
 5180 0004 00AF     		add	r7, sp, #0
 5181              	.LCFI239:
 5182              		.cfi_def_cfa_register 7
 5183 0006 F860     		str	r0, [r7, #12]
 5184 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5185 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5186 000c FB80     		strh	r3, [r7, #6]	@ movhi
2811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
2813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
2814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
2815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
2816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Configure the ETR Clock source */
2818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIM_ETRConfig(TIMx, TIM_ExtTRGPrescaler, TIM_ExtTRGPolarity, ExtTRGFilter);
 5187              		.loc 1 2818 0
 5188 000e 7989     		ldrh	r1, [r7, #10]
 5189 0010 3A89     		ldrh	r2, [r7, #8]
 5190 0012 FB88     		ldrh	r3, [r7, #6]
 5191 0014 F868     		ldr	r0, [r7, #12]
 5192 0016 FFF7FEFF 		bl	TIM_ETRConfig
2819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Enable the External clock mode2 */
2821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SMCR_ECE;
 5193              		.loc 1 2821 0
 5194 001a FB68     		ldr	r3, [r7, #12]
 5195 001c 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5196 001e 9BB2     		uxth	r3, r3
 5197 0020 43F48043 		orr	r3, r3, #16384
 5198 0024 9AB2     		uxth	r2, r3
 5199 0026 FB68     		ldr	r3, [r7, #12]
 5200 0028 1A81     		strh	r2, [r3, #8]	@ movhi
2822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5201              		.loc 1 2822 0
 5202 002a 1037     		adds	r7, r7, #16
 5203 002c BD46     		mov	sp, r7
 5204              		@ sp needed
 5205 002e 80BD     		pop	{r7, pc}
 5206              		.cfi_endproc
 5207              	.LFE189:
 5209              		.section	.text.TIM_SelectInputTrigger,"ax",%progbits
 5210              		.align	2
 5211              		.global	TIM_SelectInputTrigger
 5212              		.thumb
 5213              		.thumb_func
 5215              	TIM_SelectInputTrigger:
 5216              	.LFB190:
2823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
2825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group7 Synchronization management functions
2828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Synchronization management functions 
2829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
2830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
2831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
2832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        Synchronization management functions
2833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
2834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    
2835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ===================================================================      
2836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****               TIM Driver: how to use it in synchronization Mode
2837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        =================================================================== 
2838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Case of two/several Timers
2839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        **************************
2840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Configure the Master Timers using the following functions:
2841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource); 
2842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode);  
2843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Slave Timers using the following functions: 
2844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
2845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
2846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           
2847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        Case of Timers and external trigger(ETR pin)
2848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        ********************************************       
2849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        1. Configure the External trigger using this function:
2850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler, uint16_t TIM_ExtTRG
2851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                uint16_t ExtTRGFilter);
2852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****        2. Configure the Slave Timers using the following functions: 
2853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource);  
2854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****           - void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode); 
2855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
2857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
2858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the Input Trigger source
2862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14  
2863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
2864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_InputTriggerSource: The Input Trigger source.
2865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
2867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
2868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
2869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
2870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI1F_ED: TI1 Edge Detector
2871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI1FP1: Filtered Timer Input 1
2872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
2873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TS_ETRF: External Trigger input
2874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectInputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_InputTriggerSource)
2877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5217              		.loc 1 2877 0
 5218              		.cfi_startproc
 5219              		@ args = 0, pretend = 0, frame = 16
 5220              		@ frame_needed = 1, uses_anonymous_args = 0
 5221              		@ link register save eliminated.
 5222 0000 80B4     		push	{r7}
 5223              	.LCFI240:
 5224              		.cfi_def_cfa_offset 4
 5225              		.cfi_offset 7, -4
 5226 0002 85B0     		sub	sp, sp, #20
 5227              	.LCFI241:
 5228              		.cfi_def_cfa_offset 24
 5229 0004 00AF     		add	r7, sp, #0
 5230              	.LCFI242:
 5231              		.cfi_def_cfa_register 7
 5232 0006 7860     		str	r0, [r7, #4]
 5233 0008 0B46     		mov	r3, r1
 5234 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 5235              		.loc 1 2878 0
 5236 000c 0023     		movs	r3, #0
 5237 000e FB81     		strh	r3, [r7, #14]	@ movhi
2879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST1_PERIPH(TIMx)); 
2882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(TIM_InputTriggerSource));
2883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
2885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5238              		.loc 1 2885 0
 5239 0010 7B68     		ldr	r3, [r7, #4]
 5240 0012 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5241 0014 FB81     		strh	r3, [r7, #14]	@ movhi
2886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the TS Bits */
2888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_TS;
 5242              		.loc 1 2888 0
 5243 0016 FB89     		ldrh	r3, [r7, #14]	@ movhi
 5244 0018 23F07003 		bic	r3, r3, #112
 5245 001c FB81     		strh	r3, [r7, #14]	@ movhi
2889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Input Trigger source */
2891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_InputTriggerSource;
 5246              		.loc 1 2891 0
 5247 001e FA89     		ldrh	r2, [r7, #14]	@ movhi
 5248 0020 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5249 0022 1343     		orrs	r3, r3, r2
 5250 0024 FB81     		strh	r3, [r7, #14]	@ movhi
2892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
2894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5251              		.loc 1 2894 0
 5252 0026 7B68     		ldr	r3, [r7, #4]
 5253 0028 FA89     		ldrh	r2, [r7, #14]	@ movhi
 5254 002a 1A81     		strh	r2, [r3, #8]	@ movhi
2895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5255              		.loc 1 2895 0
 5256 002c 1437     		adds	r7, r7, #20
 5257 002e BD46     		mov	sp, r7
 5258              		@ sp needed
 5259 0030 5DF8047B 		ldr	r7, [sp], #4
 5260 0034 7047     		bx	lr
 5261              		.cfi_endproc
 5262              	.LFE190:
 5264 0036 00BF     		.section	.text.TIM_SelectOutputTrigger,"ax",%progbits
 5265              		.align	2
 5266              		.global	TIM_SelectOutputTrigger
 5267              		.thumb
 5268              		.thumb_func
 5270              	TIM_SelectOutputTrigger:
 5271              	.LFB191:
2896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx Trigger Output Mode.
2899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 6, 7 or 8 to select the TIM peripheral.
2900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *     
2901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_TRGOSource: specifies the Trigger Output source.
2902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *   This parameter can be one of the following values:
2903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  - For all TIMx
2905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Reset:  The UG bit in the TIM_EGR register is used as the trigge
2906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Enable: The Counter Enable CEN is used as the trigger output(TRG
2907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_Update: The update event is selected as the trigger output(TRGO)
2908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *  - For all TIMx except TIM6 and TIM7
2910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC1: The trigger output sends a positive pulse when the CC1IF fl
2911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                     is to be set, as soon as a capture or compare match occurs(
2912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC1Ref: OC1REF signal is used as the trigger output(TRGO)
2913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC2Ref: OC2REF signal is used as the trigger output(TRGO)
2914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC3Ref: OC3REF signal is used as the trigger output(TRGO)
2915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_TRGOSource_OC4Ref: OC4REF signal is used as the trigger output(TRGO)
2916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *
2917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectOutputTrigger(TIM_TypeDef* TIMx, uint16_t TIM_TRGOSource)
2920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5272              		.loc 1 2920 0
 5273              		.cfi_startproc
 5274              		@ args = 0, pretend = 0, frame = 8
 5275              		@ frame_needed = 1, uses_anonymous_args = 0
 5276              		@ link register save eliminated.
 5277 0000 80B4     		push	{r7}
 5278              	.LCFI243:
 5279              		.cfi_def_cfa_offset 4
 5280              		.cfi_offset 7, -4
 5281 0002 83B0     		sub	sp, sp, #12
 5282              	.LCFI244:
 5283              		.cfi_def_cfa_offset 16
 5284 0004 00AF     		add	r7, sp, #0
 5285              	.LCFI245:
 5286              		.cfi_def_cfa_register 7
 5287 0006 7860     		str	r0, [r7, #4]
 5288 0008 0B46     		mov	r3, r1
 5289 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST5_PERIPH(TIMx));
2923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_TRGO_SOURCE(TIM_TRGOSource));
2924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the MMS Bits */
2926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 &= (uint16_t)~TIM_CR2_MMS;
 5290              		.loc 1 2926 0
 5291 000c 7B68     		ldr	r3, [r7, #4]
 5292 000e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5293 0010 9BB2     		uxth	r3, r3
 5294 0012 23F07003 		bic	r3, r3, #112
 5295 0016 9AB2     		uxth	r2, r3
 5296 0018 7B68     		ldr	r3, [r7, #4]
 5297 001a 9A80     		strh	r2, [r3, #4]	@ movhi
2927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the TRGO source */
2928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CR2 |=  TIM_TRGOSource;
 5298              		.loc 1 2928 0
 5299 001c 7B68     		ldr	r3, [r7, #4]
 5300 001e 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5301 0020 9AB2     		uxth	r2, r3
 5302 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5303 0024 1343     		orrs	r3, r3, r2
 5304 0026 9AB2     		uxth	r2, r3
 5305 0028 7B68     		ldr	r3, [r7, #4]
 5306 002a 9A80     		strh	r2, [r3, #4]	@ movhi
2929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5307              		.loc 1 2929 0
 5308 002c 0C37     		adds	r7, r7, #12
 5309 002e BD46     		mov	sp, r7
 5310              		@ sp needed
 5311 0030 5DF8047B 		ldr	r7, [sp], #4
 5312 0034 7047     		bx	lr
 5313              		.cfi_endproc
 5314              	.LFE191:
 5316 0036 00BF     		.section	.text.TIM_SelectSlaveMode,"ax",%progbits
 5317              		.align	2
 5318              		.global	TIM_SelectSlaveMode
 5319              		.thumb
 5320              		.thumb_func
 5322              	TIM_SelectSlaveMode:
 5323              	.LFB192:
2930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Selects the TIMx Slave Mode.
2933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM peripheral.
2934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_SlaveMode: specifies the Timer Slave Mode.
2935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Reset: Rising edge of the selected trigger signal(TRGI) reinitial
2937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                      the counter and triggers an update of the registers
2938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Gated:     The counter clock is enabled when the trigger signal (
2939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_Trigger:   The counter starts at a rising edge of the trigger TRG
2940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_SlaveMode_External1: Rising edges of the selected trigger (TRGI) clock the 
2941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_SlaveMode)
2944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5324              		.loc 1 2944 0
 5325              		.cfi_startproc
 5326              		@ args = 0, pretend = 0, frame = 8
 5327              		@ frame_needed = 1, uses_anonymous_args = 0
 5328              		@ link register save eliminated.
 5329 0000 80B4     		push	{r7}
 5330              	.LCFI246:
 5331              		.cfi_def_cfa_offset 4
 5332              		.cfi_offset 7, -4
 5333 0002 83B0     		sub	sp, sp, #12
 5334              	.LCFI247:
 5335              		.cfi_def_cfa_offset 16
 5336 0004 00AF     		add	r7, sp, #0
 5337              	.LCFI248:
 5338              		.cfi_def_cfa_register 7
 5339 0006 7860     		str	r0, [r7, #4]
 5340 0008 0B46     		mov	r3, r1
 5341 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(TIM_SlaveMode));
2948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the SMS Bits */
2950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_SMS;
 5342              		.loc 1 2950 0
 5343 000c 7B68     		ldr	r3, [r7, #4]
 5344 000e 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5345 0010 9BB2     		uxth	r3, r3
 5346 0012 23F00703 		bic	r3, r3, #7
 5347 0016 9AB2     		uxth	r2, r3
 5348 0018 7B68     		ldr	r3, [r7, #4]
 5349 001a 1A81     		strh	r2, [r3, #8]	@ movhi
2951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Slave Mode */
2953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_SlaveMode;
 5350              		.loc 1 2953 0
 5351 001c 7B68     		ldr	r3, [r7, #4]
 5352 001e 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5353 0020 9AB2     		uxth	r2, r3
 5354 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5355 0024 1343     		orrs	r3, r3, r2
 5356 0026 9AB2     		uxth	r2, r3
 5357 0028 7B68     		ldr	r3, [r7, #4]
 5358 002a 1A81     		strh	r2, [r3, #8]	@ movhi
2954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5359              		.loc 1 2954 0
 5360 002c 0C37     		adds	r7, r7, #12
 5361 002e BD46     		mov	sp, r7
 5362              		@ sp needed
 5363 0030 5DF8047B 		ldr	r7, [sp], #4
 5364 0034 7047     		bx	lr
 5365              		.cfi_endproc
 5366              	.LFE192:
 5368 0036 00BF     		.section	.text.TIM_SelectMasterSlaveMode,"ax",%progbits
 5369              		.align	2
 5370              		.global	TIM_SelectMasterSlaveMode
 5371              		.thumb
 5372              		.thumb_func
 5374              	TIM_SelectMasterSlaveMode:
 5375              	.LFB193:
2955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Sets or Resets the TIMx Master/Slave Mode.
2958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM peripheral.
2959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_MasterSlaveMode: specifies the Timer Master Slave Mode.
2960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_MasterSlaveMode_Enable: synchronization between the current timer
2962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                             and its slaves (through TRGO)
2963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_MasterSlaveMode_Disable: No action
2964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectMasterSlaveMode(TIM_TypeDef* TIMx, uint16_t TIM_MasterSlaveMode)
2967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5376              		.loc 1 2967 0
 5377              		.cfi_startproc
 5378              		@ args = 0, pretend = 0, frame = 8
 5379              		@ frame_needed = 1, uses_anonymous_args = 0
 5380              		@ link register save eliminated.
 5381 0000 80B4     		push	{r7}
 5382              	.LCFI249:
 5383              		.cfi_def_cfa_offset 4
 5384              		.cfi_offset 7, -4
 5385 0002 83B0     		sub	sp, sp, #12
 5386              	.LCFI250:
 5387              		.cfi_def_cfa_offset 16
 5388 0004 00AF     		add	r7, sp, #0
 5389              	.LCFI251:
 5390              		.cfi_def_cfa_register 7
 5391 0006 7860     		str	r0, [r7, #4]
 5392 0008 0B46     		mov	r3, r1
 5393 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
2969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
2970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_MSM_STATE(TIM_MasterSlaveMode));
2971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the MSM Bit */
2973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR &= (uint16_t)~TIM_SMCR_MSM;
 5394              		.loc 1 2973 0
 5395 000c 7B68     		ldr	r3, [r7, #4]
 5396 000e 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5397 0010 9BB2     		uxth	r3, r3
 5398 0012 23F08003 		bic	r3, r3, #128
 5399 0016 9AB2     		uxth	r2, r3
 5400 0018 7B68     		ldr	r3, [r7, #4]
 5401 001a 1A81     		strh	r2, [r3, #8]	@ movhi
2974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   
2975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set or Reset the MSM Bit */
2976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR |= TIM_MasterSlaveMode;
 5402              		.loc 1 2976 0
 5403 001c 7B68     		ldr	r3, [r7, #4]
 5404 001e 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5405 0020 9AB2     		uxth	r2, r3
 5406 0022 7B88     		ldrh	r3, [r7, #2]	@ movhi
 5407 0024 1343     		orrs	r3, r3, r2
 5408 0026 9AB2     		uxth	r2, r3
 5409 0028 7B68     		ldr	r3, [r7, #4]
 5410 002a 1A81     		strh	r2, [r3, #8]	@ movhi
2977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5411              		.loc 1 2977 0
 5412 002c 0C37     		adds	r7, r7, #12
 5413 002e BD46     		mov	sp, r7
 5414              		@ sp needed
 5415 0030 5DF8047B 		ldr	r7, [sp], #4
 5416 0034 7047     		bx	lr
 5417              		.cfi_endproc
 5418              	.LFE193:
 5420 0036 00BF     		.section	.text.TIM_ETRConfig,"ax",%progbits
 5421              		.align	2
 5422              		.global	TIM_ETRConfig
 5423              		.thumb
 5424              		.thumb_func
 5426              	TIM_ETRConfig:
 5427              	.LFB194:
2978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
2979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
2980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx External Trigger (ETR).
2981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be  1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
2982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
2983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_OFF: ETRP Prescaler OFF.
2985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV2: ETRP frequency divided by 2.
2986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV4: ETRP frequency divided by 4.
2987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPSC_DIV8: ETRP frequency divided by 8.
2988:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
2989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
2990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_Inverted: active low or falling edge active.
2991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ExtTRGPolarity_NonInverted: active high or rising edge active.
2992:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
2993:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
2994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
2995:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
2996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_ETRConfig(TIM_TypeDef* TIMx, uint16_t TIM_ExtTRGPrescaler,
2997:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                    uint16_t TIM_ExtTRGPolarity, uint16_t ExtTRGFilter)
2998:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5428              		.loc 1 2998 0
 5429              		.cfi_startproc
 5430              		@ args = 0, pretend = 0, frame = 24
 5431              		@ frame_needed = 1, uses_anonymous_args = 0
 5432              		@ link register save eliminated.
 5433 0000 80B4     		push	{r7}
 5434              	.LCFI252:
 5435              		.cfi_def_cfa_offset 4
 5436              		.cfi_offset 7, -4
 5437 0002 87B0     		sub	sp, sp, #28
 5438              	.LCFI253:
 5439              		.cfi_def_cfa_offset 32
 5440 0004 00AF     		add	r7, sp, #0
 5441              	.LCFI254:
 5442              		.cfi_def_cfa_register 7
 5443 0006 F860     		str	r0, [r7, #12]
 5444 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5445 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5446 000c FB80     		strh	r3, [r7, #6]	@ movhi
2999:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 5447              		.loc 1 2999 0
 5448 000e 0023     		movs	r3, #0
 5449 0010 FB82     		strh	r3, [r7, #22]	@ movhi
3000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3002:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST3_PERIPH(TIMx));
3003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_PRESCALER(TIM_ExtTRGPrescaler));
3004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_POLARITY(TIM_ExtTRGPolarity));
3005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_EXT_FILTER(ExtTRGFilter));
3006:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5450              		.loc 1 3007 0
 5451 0012 FB68     		ldr	r3, [r7, #12]
 5452 0014 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5453 0016 FB82     		strh	r3, [r7, #22]	@ movhi
3008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Reset the ETR Bits */
3010:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= SMCR_ETR_MASK;
 5454              		.loc 1 3010 0
 5455 0018 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5456 001a DBB2     		uxtb	r3, r3
 5457 001c FB82     		strh	r3, [r7, #22]	@ movhi
3011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
3013:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= (uint16_t)(TIM_ExtTRGPrescaler | (uint16_t)(TIM_ExtTRGPolarity | (uint16_t)(ExtTRGFilt
 5458              		.loc 1 3013 0
 5459 001e FB88     		ldrh	r3, [r7, #6]	@ movhi
 5460 0020 1B02     		lsls	r3, r3, #8
 5461 0022 9AB2     		uxth	r2, r3
 5462 0024 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5463 0026 1343     		orrs	r3, r3, r2
 5464 0028 9AB2     		uxth	r2, r3
 5465 002a 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5466 002c 1343     		orrs	r3, r3, r2
 5467 002e 9AB2     		uxth	r2, r3
 5468 0030 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5469 0032 1343     		orrs	r3, r3, r2
 5470 0034 FB82     		strh	r3, [r7, #22]	@ movhi
3014:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3015:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
3016:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5471              		.loc 1 3016 0
 5472 0036 FB68     		ldr	r3, [r7, #12]
 5473 0038 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5474 003a 1A81     		strh	r2, [r3, #8]	@ movhi
3017:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5475              		.loc 1 3017 0
 5476 003c 1C37     		adds	r7, r7, #28
 5477 003e BD46     		mov	sp, r7
 5478              		@ sp needed
 5479 0040 5DF8047B 		ldr	r7, [sp], #4
 5480 0044 7047     		bx	lr
 5481              		.cfi_endproc
 5482              	.LFE194:
 5484 0046 00BF     		.section	.text.TIM_EncoderInterfaceConfig,"ax",%progbits
 5485              		.align	2
 5486              		.global	TIM_EncoderInterfaceConfig
 5487              		.thumb
 5488              		.thumb_func
 5490              	TIM_EncoderInterfaceConfig:
 5491              	.LFB195:
3018:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3019:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3021:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3022:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group8 Specific interface management functions
3023:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief    Specific interface management functions 
3024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
3025:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
3026:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
3027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                     Specific interface management functions
3028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
3029:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
3031:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
3032:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3033:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3034:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIMx Encoder Interface.
3036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3037:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3038:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_EncoderMode: specifies the TIMx Encoder Mode.
3039:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3040:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI1: Counter counts on TI1FP1 edge depending on TI2FP2 level.
3041:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI2: Counter counts on TI2FP2 edge depending on TI1FP1 level.
3042:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_EncoderMode_TI12: Counter counts on both TI1FP1 and TI2FP2 edges depending
3043:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                       on the level of the other input.
3044:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IC1Polarity: specifies the IC1 Polarity
3045:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3046:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3047:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3048:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_IC2Polarity: specifies the IC2 Polarity
3049:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3050:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling: IC Falling edge.
3051:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising: IC Rising edge.
3052:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3053:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3054:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_EncoderInterfaceConfig(TIM_TypeDef* TIMx, uint16_t TIM_EncoderMode,
3055:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                                 uint16_t TIM_IC1Polarity, uint16_t TIM_IC2Polarity)
3056:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5492              		.loc 1 3056 0
 5493              		.cfi_startproc
 5494              		@ args = 0, pretend = 0, frame = 24
 5495              		@ frame_needed = 1, uses_anonymous_args = 0
 5496              		@ link register save eliminated.
 5497 0000 80B4     		push	{r7}
 5498              	.LCFI255:
 5499              		.cfi_def_cfa_offset 4
 5500              		.cfi_offset 7, -4
 5501 0002 87B0     		sub	sp, sp, #28
 5502              	.LCFI256:
 5503              		.cfi_def_cfa_offset 32
 5504 0004 00AF     		add	r7, sp, #0
 5505              	.LCFI257:
 5506              		.cfi_def_cfa_register 7
 5507 0006 F860     		str	r0, [r7, #12]
 5508 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5509 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5510 000c FB80     		strh	r3, [r7, #6]	@ movhi
3057:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpsmcr = 0;
 5511              		.loc 1 3057 0
 5512 000e 0023     		movs	r3, #0
 5513 0010 FB82     		strh	r3, [r7, #22]	@ movhi
3058:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0;
 5514              		.loc 1 3058 0
 5515 0012 0023     		movs	r3, #0
 5516 0014 BB82     		strh	r3, [r7, #20]	@ movhi
3059:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccer = 0;
 5517              		.loc 1 3059 0
 5518 0016 0023     		movs	r3, #0
 5519 0018 7B82     		strh	r3, [r7, #18]	@ movhi
3060:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     
3061:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3062:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3063:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_ENCODER_MODE(TIM_EncoderMode));
3064:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC1Polarity));
3065:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_IC_POLARITY(TIM_IC2Polarity));
3066:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3067:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx SMCR register value */
3068:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr = TIMx->SMCR;
 5520              		.loc 1 3068 0
 5521 001a FB68     		ldr	r3, [r7, #12]
 5522 001c 1B89     		ldrh	r3, [r3, #8]	@ movhi
 5523 001e FB82     		strh	r3, [r7, #22]	@ movhi
3069:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3070:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCMR1 register value */
3071:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5524              		.loc 1 3071 0
 5525 0020 FB68     		ldr	r3, [r7, #12]
 5526 0022 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5527 0024 BB82     		strh	r3, [r7, #20]	@ movhi
3072:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3073:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Get the TIMx CCER register value */
3074:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5528              		.loc 1 3074 0
 5529 0026 FB68     		ldr	r3, [r7, #12]
 5530 0028 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5531 002a 7B82     		strh	r3, [r7, #18]	@ movhi
3075:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3076:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the encoder Mode */
3077:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr &= (uint16_t)~TIM_SMCR_SMS;
 5532              		.loc 1 3077 0
 5533 002c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5534 002e 23F00703 		bic	r3, r3, #7
 5535 0032 FB82     		strh	r3, [r7, #22]	@ movhi
3078:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpsmcr |= TIM_EncoderMode;
 5536              		.loc 1 3078 0
 5537 0034 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5538 0036 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5539 0038 1343     		orrs	r3, r3, r2
 5540 003a FB82     		strh	r3, [r7, #22]	@ movhi
3079:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3080:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Capture Compare 1 and the Capture Compare 2 as input */
3081:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_CC2S);
 5541              		.loc 1 3081 0
 5542 003c BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5543 003e 23F44073 		bic	r3, r3, #768
 5544 0042 23F00303 		bic	r3, r3, #3
 5545 0046 BB82     		strh	r3, [r7, #20]	@ movhi
3082:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= TIM_CCMR1_CC1S_0 | TIM_CCMR1_CC2S_0;
 5546              		.loc 1 3082 0
 5547 0048 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5548 004a 43F48073 		orr	r3, r3, #256
 5549 004e 43F00103 		orr	r3, r3, #1
 5550 0052 BB82     		strh	r3, [r7, #20]	@ movhi
3083:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3084:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the TI1 and the TI2 Polarities */
3085:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= ((uint16_t)~TIM_CCER_CC1P) & ((uint16_t)~TIM_CCER_CC2P);
 5551              		.loc 1 3085 0
 5552 0054 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 5553 0056 23F02203 		bic	r3, r3, #34
 5554 005a 7B82     		strh	r3, [r7, #18]	@ movhi
3086:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_IC1Polarity | (uint16_t)(TIM_IC2Polarity << (uint16_t)4));
 5555              		.loc 1 3086 0
 5556 005c FB88     		ldrh	r3, [r7, #6]	@ movhi
 5557 005e 1B01     		lsls	r3, r3, #4
 5558 0060 9AB2     		uxth	r2, r3
 5559 0062 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5560 0064 1343     		orrs	r3, r3, r2
 5561 0066 9AB2     		uxth	r2, r3
 5562 0068 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 5563 006a 1343     		orrs	r3, r3, r2
 5564 006c 7B82     		strh	r3, [r7, #18]	@ movhi
3087:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3088:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx SMCR */
3089:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->SMCR = tmpsmcr;
 5565              		.loc 1 3089 0
 5566 006e FB68     		ldr	r3, [r7, #12]
 5567 0070 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5568 0072 1A81     		strh	r2, [r3, #8]	@ movhi
3090:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3091:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 */
3092:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 5569              		.loc 1 3092 0
 5570 0074 FB68     		ldr	r3, [r7, #12]
 5571 0076 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5572 0078 1A83     		strh	r2, [r3, #24]	@ movhi
3093:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3094:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCER */
3095:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 5573              		.loc 1 3095 0
 5574 007a FB68     		ldr	r3, [r7, #12]
 5575 007c 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5576 007e 1A84     		strh	r2, [r3, #32]	@ movhi
3096:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5577              		.loc 1 3096 0
 5578 0080 1C37     		adds	r7, r7, #28
 5579 0082 BD46     		mov	sp, r7
 5580              		@ sp needed
 5581 0084 5DF8047B 		ldr	r7, [sp], #4
 5582 0088 7047     		bx	lr
 5583              		.cfi_endproc
 5584              	.LFE195:
 5586 008a 00BF     		.section	.text.TIM_SelectHallSensor,"ax",%progbits
 5587              		.align	2
 5588              		.global	TIM_SelectHallSensor
 5589              		.thumb
 5590              		.thumb_func
 5592              	TIM_SelectHallSensor:
 5593              	.LFB196:
3097:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3098:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3099:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Enables or disables the TIMx's Hall sensor interface.
3100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  NewState: new state of the TIMx Hall sensor interface.
3103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be: ENABLE or DISABLE.
3104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_SelectHallSensor(TIM_TypeDef* TIMx, FunctionalState NewState)
3107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5594              		.loc 1 3107 0
 5595              		.cfi_startproc
 5596              		@ args = 0, pretend = 0, frame = 8
 5597              		@ frame_needed = 1, uses_anonymous_args = 0
 5598              		@ link register save eliminated.
 5599 0000 80B4     		push	{r7}
 5600              	.LCFI258:
 5601              		.cfi_def_cfa_offset 4
 5602              		.cfi_offset 7, -4
 5603 0002 83B0     		sub	sp, sp, #12
 5604              	.LCFI259:
 5605              		.cfi_def_cfa_offset 16
 5606 0004 00AF     		add	r7, sp, #0
 5607              	.LCFI260:
 5608              		.cfi_def_cfa_register 7
 5609 0006 7860     		str	r0, [r7, #4]
 5610 0008 0B46     		mov	r3, r1
 5611 000a FB70     		strb	r3, [r7, #3]
3108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Check the parameters */
3109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST2_PERIPH(TIMx));
3110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
3111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   if (NewState != DISABLE)
 5612              		.loc 1 3112 0
 5613 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 5614 000e 002B     		cmp	r3, #0
 5615 0010 08D0     		beq	.L162
3113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
3114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Set the TI1S Bit */
3115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 |= TIM_CR2_TI1S;
 5616              		.loc 1 3115 0
 5617 0012 7B68     		ldr	r3, [r7, #4]
 5618 0014 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5619 0016 9BB2     		uxth	r3, r3
 5620 0018 43F08003 		orr	r3, r3, #128
 5621 001c 9AB2     		uxth	r2, r3
 5622 001e 7B68     		ldr	r3, [r7, #4]
 5623 0020 9A80     		strh	r2, [r3, #4]	@ movhi
 5624 0022 07E0     		b	.L161
 5625              	.L162:
3116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
3117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   else
3118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   {
3119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     /* Reset the TI1S Bit */
3120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****     TIMx->CR2 &= (uint16_t)~TIM_CR2_TI1S;
 5626              		.loc 1 3120 0
 5627 0024 7B68     		ldr	r3, [r7, #4]
 5628 0026 9B88     		ldrh	r3, [r3, #4]	@ movhi
 5629 0028 9BB2     		uxth	r3, r3
 5630 002a 23F08003 		bic	r3, r3, #128
 5631 002e 9AB2     		uxth	r2, r3
 5632 0030 7B68     		ldr	r3, [r7, #4]
 5633 0032 9A80     		strh	r2, [r3, #4]	@ movhi
 5634              	.L161:
3121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   }
3122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5635              		.loc 1 3122 0
 5636 0034 0C37     		adds	r7, r7, #12
 5637 0036 BD46     		mov	sp, r7
 5638              		@ sp needed
 5639 0038 5DF8047B 		ldr	r7, [sp], #4
 5640 003c 7047     		bx	lr
 5641              		.cfi_endproc
 5642              	.LFE196:
 5644 003e 00BF     		.section	.text.TIM_RemapConfig,"ax",%progbits
 5645              		.align	2
 5646              		.global	TIM_RemapConfig
 5647              		.thumb
 5648              		.thumb_func
 5650              	TIM_RemapConfig:
 5651              	.LFB197:
3123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /** @defgroup TIM_Group9 Specific remapping management function
3128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *  @brief   Specific remapping management function
3129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  *
3130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @verbatim   
3131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================
3132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                      Specific remapping management function
3133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  ===============================================================================  
3134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** @endverbatim
3136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @{
3137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configures the TIM2, TIM5 and TIM11 Remapping input capabilities.
3141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 2, 5 or 11 to select the TIM peripheral.
3142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_Remap: specifies the TIM input remapping source.
3143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_TIM8_TRGO: TIM2 ITR1 input is connected to TIM8 Trigger output(default)
3145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_ETH_PTP:   TIM2 ITR1 input is connected to ETH PTP trogger output.
3146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_USBFS_SOF: TIM2 ITR1 input is connected to USB FS SOF. 
3147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM2_USBHS_SOF: TIM2 ITR1 input is connected to USB HS SOF. 
3148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_GPIO:      TIM5 CH4 input is connected to dedicated Timer pin(default)
3149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_LSI:       TIM5 CH4 input is connected to LSI clock.
3150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_LSE:       TIM5 CH4 input is connected to LSE clock.
3151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM5_RTC:       TIM5 CH4 input is connected to RTC Output event.
3152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM11_GPIO:     TIM11 CH4 input is connected to dedicated Timer pin(default) 
3153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM11_HSE:      TIM11 CH4 input is connected to HSE_RTC clock
3154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *                                 (HSE divided by a programmable prescaler)  
3155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** void TIM_RemapConfig(TIM_TypeDef* TIMx, uint16_t TIM_Remap)
3158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5652              		.loc 1 3158 0
 5653              		.cfi_startproc
 5654              		@ args = 0, pretend = 0, frame = 8
 5655              		@ frame_needed = 1, uses_anonymous_args = 0
 5656              		@ link register save eliminated.
 5657 0000 80B4     		push	{r7}
 5658              	.LCFI261:
 5659              		.cfi_def_cfa_offset 4
 5660              		.cfi_offset 7, -4
 5661 0002 83B0     		sub	sp, sp, #12
 5662              	.LCFI262:
 5663              		.cfi_def_cfa_offset 16
 5664 0004 00AF     		add	r7, sp, #0
 5665              	.LCFI263:
 5666              		.cfi_def_cfa_register 7
 5667 0006 7860     		str	r0, [r7, #4]
 5668 0008 0B46     		mov	r3, r1
 5669 000a 7B80     		strh	r3, [r7, #2]	@ movhi
3159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****  /* Check the parameters */
3160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_LIST6_PERIPH(TIMx));
3161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   assert_param(IS_TIM_REMAP(TIM_Remap));
3162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Set the Timer remapping configuration */
3164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->OR =  TIM_Remap;
 5670              		.loc 1 3164 0
 5671 000c 7B68     		ldr	r3, [r7, #4]
 5672 000e 7A88     		ldrh	r2, [r7, #2]	@ movhi
 5673 0010 A3F85020 		strh	r2, [r3, #80]	@ movhi
3165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5674              		.loc 1 3165 0
 5675 0014 0C37     		adds	r7, r7, #12
 5676 0016 BD46     		mov	sp, r7
 5677              		@ sp needed
 5678 0018 5DF8047B 		ldr	r7, [sp], #4
 5679 001c 7047     		bx	lr
 5680              		.cfi_endproc
 5681              	.LFE197:
 5683 001e 00BF     		.section	.text.TI1_Config,"ax",%progbits
 5684              		.align	2
 5685              		.thumb
 5686              		.thumb_func
 5688              	TI1_Config:
 5689              	.LFB198:
3166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @}
3168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI1 as Input.
3172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13 or 14 
3173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         to select the TIM peripheral.
3174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge  
3179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 1 is selected to be connected to IC1.
3182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 1 is selected to be connected to IC2.
3183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 1 is selected to be connected to TRC.
3184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI1_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5690              		.loc 1 3190 0
 5691              		.cfi_startproc
 5692              		@ args = 0, pretend = 0, frame = 24
 5693              		@ frame_needed = 1, uses_anonymous_args = 0
 5694              		@ link register save eliminated.
 5695 0000 80B4     		push	{r7}
 5696              	.LCFI264:
 5697              		.cfi_def_cfa_offset 4
 5698              		.cfi_offset 7, -4
 5699 0002 87B0     		sub	sp, sp, #28
 5700              	.LCFI265:
 5701              		.cfi_def_cfa_offset 32
 5702 0004 00AF     		add	r7, sp, #0
 5703              	.LCFI266:
 5704              		.cfi_def_cfa_register 7
 5705 0006 F860     		str	r0, [r7, #12]
 5706 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5707 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5708 000c FB80     		strh	r3, [r7, #6]	@ movhi
3191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0;
 5709              		.loc 1 3191 0
 5710 000e 0023     		movs	r3, #0
 5711 0010 FB82     		strh	r3, [r7, #22]	@ movhi
 5712 0012 0023     		movs	r3, #0
 5713 0014 BB82     		strh	r3, [r7, #20]	@ movhi
3192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
3194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC1E;
 5714              		.loc 1 3194 0
 5715 0016 FB68     		ldr	r3, [r7, #12]
 5716 0018 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5717 001a 9BB2     		uxth	r3, r3
 5718 001c 23F00103 		bic	r3, r3, #1
 5719 0020 9AB2     		uxth	r2, r3
 5720 0022 FB68     		ldr	r3, [r7, #12]
 5721 0024 1A84     		strh	r2, [r3, #32]	@ movhi
3195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5722              		.loc 1 3195 0
 5723 0026 FB68     		ldr	r3, [r7, #12]
 5724 0028 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5725 002a FB82     		strh	r3, [r7, #22]	@ movhi
3196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5726              		.loc 1 3196 0
 5727 002c FB68     		ldr	r3, [r7, #12]
 5728 002e 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5729 0030 BB82     		strh	r3, [r7, #20]	@ movhi
3197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR1_IC1F);
 5730              		.loc 1 3199 0
 5731 0032 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5732 0034 23F0F303 		bic	r3, r3, #243
 5733 0038 FB82     		strh	r3, [r7, #22]	@ movhi
3200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 5734              		.loc 1 3200 0
 5735 003a FB88     		ldrh	r3, [r7, #6]	@ movhi
 5736 003c 1B01     		lsls	r3, r3, #4
 5737 003e 9AB2     		uxth	r2, r3
 5738 0040 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5739 0042 1343     		orrs	r3, r3, r2
 5740 0044 9AB2     		uxth	r2, r3
 5741 0046 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5742 0048 1343     		orrs	r3, r3, r2
 5743 004a FB82     		strh	r3, [r7, #22]	@ movhi
3201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC1E Bit */
3203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 5744              		.loc 1 3203 0
 5745 004c BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5746 004e 23F00A03 		bic	r3, r3, #10
 5747 0052 BB82     		strh	r3, [r7, #20]	@ movhi
3204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(TIM_ICPolarity | (uint16_t)TIM_CCER_CC1E);
 5748              		.loc 1 3204 0
 5749 0054 7A89     		ldrh	r2, [r7, #10]	@ movhi
 5750 0056 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5751 0058 1343     		orrs	r3, r3, r2
 5752 005a 9BB2     		uxth	r3, r3
 5753 005c 43F00103 		orr	r3, r3, #1
 5754 0060 BB82     		strh	r3, [r7, #20]	@ movhi
3205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 5755              		.loc 1 3207 0
 5756 0062 FB68     		ldr	r3, [r7, #12]
 5757 0064 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5758 0066 1A83     		strh	r2, [r3, #24]	@ movhi
3208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 5759              		.loc 1 3208 0
 5760 0068 FB68     		ldr	r3, [r7, #12]
 5761 006a BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5762 006c 1A84     		strh	r2, [r3, #32]	@ movhi
3209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5763              		.loc 1 3209 0
 5764 006e 1C37     		adds	r7, r7, #28
 5765 0070 BD46     		mov	sp, r7
 5766              		@ sp needed
 5767 0072 5DF8047B 		ldr	r7, [sp], #4
 5768 0076 7047     		bx	lr
 5769              		.cfi_endproc
 5770              	.LFE198:
 5772              		.section	.text.TI2_Config,"ax",%progbits
 5773              		.align	2
 5774              		.thumb
 5775              		.thumb_func
 5777              	TI2_Config:
 5778              	.LFB199:
3210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI2 as Input.
3213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5, 8, 9 or 12 to select the TIM 
3214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *         peripheral.
3215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge   
3220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 2 is selected to be connected to IC2.
3223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 2 is selected to be connected to IC1.
3224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 2 is selected to be connected to TRC.
3225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI2_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5779              		.loc 1 3231 0
 5780              		.cfi_startproc
 5781              		@ args = 0, pretend = 0, frame = 24
 5782              		@ frame_needed = 1, uses_anonymous_args = 0
 5783              		@ link register save eliminated.
 5784 0000 80B4     		push	{r7}
 5785              	.LCFI267:
 5786              		.cfi_def_cfa_offset 4
 5787              		.cfi_offset 7, -4
 5788 0002 87B0     		sub	sp, sp, #28
 5789              	.LCFI268:
 5790              		.cfi_def_cfa_offset 32
 5791 0004 00AF     		add	r7, sp, #0
 5792              	.LCFI269:
 5793              		.cfi_def_cfa_register 7
 5794 0006 F860     		str	r0, [r7, #12]
 5795 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5796 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5797 000c FB80     		strh	r3, [r7, #6]	@ movhi
3232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr1 = 0, tmpccer = 0, tmp = 0;
 5798              		.loc 1 3232 0
 5799 000e 0023     		movs	r3, #0
 5800 0010 FB82     		strh	r3, [r7, #22]	@ movhi
 5801 0012 0023     		movs	r3, #0
 5802 0014 BB82     		strh	r3, [r7, #20]	@ movhi
 5803 0016 0023     		movs	r3, #0
 5804 0018 7B82     		strh	r3, [r7, #18]	@ movhi
3233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
3235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC2E;
 5805              		.loc 1 3235 0
 5806 001a FB68     		ldr	r3, [r7, #12]
 5807 001c 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5808 001e 9BB2     		uxth	r3, r3
 5809 0020 23F01003 		bic	r3, r3, #16
 5810 0024 9AB2     		uxth	r2, r3
 5811 0026 FB68     		ldr	r3, [r7, #12]
 5812 0028 1A84     		strh	r2, [r3, #32]	@ movhi
3236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 5813              		.loc 1 3236 0
 5814 002a FB68     		ldr	r3, [r7, #12]
 5815 002c 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 5816 002e FB82     		strh	r3, [r7, #22]	@ movhi
3237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5817              		.loc 1 3237 0
 5818 0030 FB68     		ldr	r3, [r7, #12]
 5819 0032 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5820 0034 BB82     		strh	r3, [r7, #20]	@ movhi
3238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 4);
 5821              		.loc 1 3238 0
 5822 0036 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5823 0038 1B01     		lsls	r3, r3, #4
 5824 003a 7B82     		strh	r3, [r7, #18]	@ movhi
3239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 5825              		.loc 1 3241 0
 5826 003c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5827 003e 23F44073 		bic	r3, r3, #768
 5828 0042 1B05     		lsls	r3, r3, #20
 5829 0044 1B0D     		lsrs	r3, r3, #20
 5830 0046 FB82     		strh	r3, [r7, #22]	@ movhi
3242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICFilter << 12);
 5831              		.loc 1 3242 0
 5832 0048 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5833 004a 1B03     		lsls	r3, r3, #12
 5834 004c 9AB2     		uxth	r2, r3
 5835 004e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5836 0050 1343     		orrs	r3, r3, r2
 5837 0052 FB82     		strh	r3, [r7, #22]	@ movhi
3243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr1 |= (uint16_t)(TIM_ICSelection << 8);
 5838              		.loc 1 3243 0
 5839 0054 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5840 0056 1B02     		lsls	r3, r3, #8
 5841 0058 9AB2     		uxth	r2, r3
 5842 005a FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5843 005c 1343     		orrs	r3, r3, r2
 5844 005e FB82     		strh	r3, [r7, #22]	@ movhi
3244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC2E Bit */
3246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 5845              		.loc 1 3246 0
 5846 0060 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5847 0062 23F0A003 		bic	r3, r3, #160
 5848 0066 BB82     		strh	r3, [r7, #20]	@ movhi
3247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |=  (uint16_t)(tmp | (uint16_t)TIM_CCER_CC2E);
 5849              		.loc 1 3247 0
 5850 0068 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5851 006a BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5852 006c 1343     		orrs	r3, r3, r2
 5853 006e 9BB2     		uxth	r3, r3
 5854 0070 43F01003 		orr	r3, r3, #16
 5855 0074 BB82     		strh	r3, [r7, #20]	@ movhi
3248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
3250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 5856              		.loc 1 3250 0
 5857 0076 FB68     		ldr	r3, [r7, #12]
 5858 0078 FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5859 007a 1A83     		strh	r2, [r3, #24]	@ movhi
3251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 5860              		.loc 1 3251 0
 5861 007c FB68     		ldr	r3, [r7, #12]
 5862 007e BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5863 0080 1A84     		strh	r2, [r3, #32]	@ movhi
3252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5864              		.loc 1 3252 0
 5865 0082 1C37     		adds	r7, r7, #28
 5866 0084 BD46     		mov	sp, r7
 5867              		@ sp needed
 5868 0086 5DF8047B 		ldr	r7, [sp], #4
 5869 008a 7047     		bx	lr
 5870              		.cfi_endproc
 5871              	.LFE199:
 5873              		.section	.text.TI3_Config,"ax",%progbits
 5874              		.align	2
 5875              		.thumb
 5876              		.thumb_func
 5878              	TI3_Config:
 5879              	.LFB200:
3253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI3 as Input.
3256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge         
3262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 3 is selected to be connected to IC3.
3265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 3 is selected to be connected to IC4.
3266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 3 is selected to be connected to TRC.
3267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI3_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5880              		.loc 1 3273 0
 5881              		.cfi_startproc
 5882              		@ args = 0, pretend = 0, frame = 24
 5883              		@ frame_needed = 1, uses_anonymous_args = 0
 5884              		@ link register save eliminated.
 5885 0000 80B4     		push	{r7}
 5886              	.LCFI270:
 5887              		.cfi_def_cfa_offset 4
 5888              		.cfi_offset 7, -4
 5889 0002 87B0     		sub	sp, sp, #28
 5890              	.LCFI271:
 5891              		.cfi_def_cfa_offset 32
 5892 0004 00AF     		add	r7, sp, #0
 5893              	.LCFI272:
 5894              		.cfi_def_cfa_register 7
 5895 0006 F860     		str	r0, [r7, #12]
 5896 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5897 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5898 000c FB80     		strh	r3, [r7, #6]	@ movhi
3274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
 5899              		.loc 1 3274 0
 5900 000e 0023     		movs	r3, #0
 5901 0010 FB82     		strh	r3, [r7, #22]	@ movhi
 5902 0012 0023     		movs	r3, #0
 5903 0014 BB82     		strh	r3, [r7, #20]	@ movhi
 5904 0016 0023     		movs	r3, #0
 5905 0018 7B82     		strh	r3, [r7, #18]	@ movhi
3275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 3: Reset the CC3E Bit */
3277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC3E;
 5906              		.loc 1 3277 0
 5907 001a FB68     		ldr	r3, [r7, #12]
 5908 001c 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5909 001e 9BB2     		uxth	r3, r3
 5910 0020 23F48073 		bic	r3, r3, #256
 5911 0024 9AB2     		uxth	r2, r3
 5912 0026 FB68     		ldr	r3, [r7, #12]
 5913 0028 1A84     		strh	r2, [r3, #32]	@ movhi
3278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 5914              		.loc 1 3278 0
 5915 002a FB68     		ldr	r3, [r7, #12]
 5916 002c 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 5917 002e FB82     		strh	r3, [r7, #22]	@ movhi
3279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 5918              		.loc 1 3279 0
 5919 0030 FB68     		ldr	r3, [r7, #12]
 5920 0032 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 5921 0034 BB82     		strh	r3, [r7, #20]	@ movhi
3280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 8);
 5922              		.loc 1 3280 0
 5923 0036 7B89     		ldrh	r3, [r7, #10]	@ movhi
 5924 0038 1B02     		lsls	r3, r3, #8
 5925 003a 7B82     		strh	r3, [r7, #18]	@ movhi
3281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC1S) & ((uint16_t)~TIM_CCMR2_IC3F);
 5926              		.loc 1 3283 0
 5927 003c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5928 003e 23F0F303 		bic	r3, r3, #243
 5929 0042 FB82     		strh	r3, [r7, #22]	@ movhi
3284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection | (uint16_t)(TIM_ICFilter << (uint16_t)4));
 5930              		.loc 1 3284 0
 5931 0044 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5932 0046 1B01     		lsls	r3, r3, #4
 5933 0048 9AB2     		uxth	r2, r3
 5934 004a 3B89     		ldrh	r3, [r7, #8]	@ movhi
 5935 004c 1343     		orrs	r3, r3, r2
 5936 004e 9AB2     		uxth	r2, r3
 5937 0050 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 5938 0052 1343     		orrs	r3, r3, r2
 5939 0054 FB82     		strh	r3, [r7, #22]	@ movhi
3285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC3E Bit */
3287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC3P | TIM_CCER_CC3NP);
 5940              		.loc 1 3287 0
 5941 0056 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5942 0058 23F42063 		bic	r3, r3, #2560
 5943 005c BB82     		strh	r3, [r7, #20]	@ movhi
3288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC3E);
 5944              		.loc 1 3288 0
 5945 005e 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 5946 0060 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 5947 0062 1343     		orrs	r3, r3, r2
 5948 0064 9BB2     		uxth	r3, r3
 5949 0066 43F48073 		orr	r3, r3, #256
 5950 006a BB82     		strh	r3, [r7, #20]	@ movhi
3289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 5951              		.loc 1 3291 0
 5952 006c FB68     		ldr	r3, [r7, #12]
 5953 006e FA8A     		ldrh	r2, [r7, #22]	@ movhi
 5954 0070 9A83     		strh	r2, [r3, #28]	@ movhi
3292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer;
 5955              		.loc 1 3292 0
 5956 0072 FB68     		ldr	r3, [r7, #12]
 5957 0074 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 5958 0076 1A84     		strh	r2, [r3, #32]	@ movhi
3293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 5959              		.loc 1 3293 0
 5960 0078 1C37     		adds	r7, r7, #28
 5961 007a BD46     		mov	sp, r7
 5962              		@ sp needed
 5963 007c 5DF8047B 		ldr	r7, [sp], #4
 5964 0080 7047     		bx	lr
 5965              		.cfi_endproc
 5966              	.LFE200:
 5968 0082 00BF     		.section	.text.TI4_Config,"ax",%progbits
 5969              		.align	2
 5970              		.thumb
 5971              		.thumb_func
 5973              	TI4_Config:
 5974              	.LFB201:
3294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** /**
3296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @brief  Configure the TI4 as Input.
3297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIMx: where x can be 1, 2, 3, 4, 5 or 8 to select the TIM peripheral.
3298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
3299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Rising
3301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_Falling
3302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICPolarity_BothEdge     
3303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
3304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter can be one of the following values:
3305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_DirectTI: TIM Input 4 is selected to be connected to IC4.
3306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_IndirectTI: TIM Input 4 is selected to be connected to IC3.
3307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *            @arg TIM_ICSelection_TRC: TIM Input 4 is selected to be connected to TRC.
3308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
3309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
3310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   * @retval None
3311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   */
3312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** static void TI4_Config(TIM_TypeDef* TIMx, uint16_t TIM_ICPolarity, uint16_t TIM_ICSelection,
3313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****                        uint16_t TIM_ICFilter)
3314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** {
 5975              		.loc 1 3314 0
 5976              		.cfi_startproc
 5977              		@ args = 0, pretend = 0, frame = 24
 5978              		@ frame_needed = 1, uses_anonymous_args = 0
 5979              		@ link register save eliminated.
 5980 0000 80B4     		push	{r7}
 5981              	.LCFI273:
 5982              		.cfi_def_cfa_offset 4
 5983              		.cfi_offset 7, -4
 5984 0002 87B0     		sub	sp, sp, #28
 5985              	.LCFI274:
 5986              		.cfi_def_cfa_offset 32
 5987 0004 00AF     		add	r7, sp, #0
 5988              	.LCFI275:
 5989              		.cfi_def_cfa_register 7
 5990 0006 F860     		str	r0, [r7, #12]
 5991 0008 7981     		strh	r1, [r7, #10]	@ movhi
 5992 000a 3A81     		strh	r2, [r7, #8]	@ movhi
 5993 000c FB80     		strh	r3, [r7, #6]	@ movhi
3315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   uint16_t tmpccmr2 = 0, tmpccer = 0, tmp = 0;
 5994              		.loc 1 3315 0
 5995 000e 0023     		movs	r3, #0
 5996 0010 FB82     		strh	r3, [r7, #22]	@ movhi
 5997 0012 0023     		movs	r3, #0
 5998 0014 BB82     		strh	r3, [r7, #20]	@ movhi
 5999 0016 0023     		movs	r3, #0
 6000 0018 7B82     		strh	r3, [r7, #18]	@ movhi
3316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
3318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER &= (uint16_t)~TIM_CCER_CC4E;
 6001              		.loc 1 3318 0
 6002 001a FB68     		ldr	r3, [r7, #12]
 6003 001c 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 6004 001e 9BB2     		uxth	r3, r3
 6005 0020 23F48053 		bic	r3, r3, #4096
 6006 0024 9AB2     		uxth	r2, r3
 6007 0026 FB68     		ldr	r3, [r7, #12]
 6008 0028 1A84     		strh	r2, [r3, #32]	@ movhi
3319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 6009              		.loc 1 3319 0
 6010 002a FB68     		ldr	r3, [r7, #12]
 6011 002c 9B8B     		ldrh	r3, [r3, #28]	@ movhi
 6012 002e FB82     		strh	r3, [r7, #22]	@ movhi
3320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer = TIMx->CCER;
 6013              		.loc 1 3320 0
 6014 0030 FB68     		ldr	r3, [r7, #12]
 6015 0032 1B8C     		ldrh	r3, [r3, #32]	@ movhi
 6016 0034 BB82     		strh	r3, [r7, #20]	@ movhi
3321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmp = (uint16_t)(TIM_ICPolarity << 12);
 6017              		.loc 1 3321 0
 6018 0036 7B89     		ldrh	r3, [r7, #10]	@ movhi
 6019 0038 1B03     		lsls	r3, r3, #12
 6020 003a 7B82     		strh	r3, [r7, #18]	@ movhi
3322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Input and set the filter */
3324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 &= ((uint16_t)~TIM_CCMR1_CC2S) & ((uint16_t)~TIM_CCMR1_IC2F);
 6021              		.loc 1 3324 0
 6022 003c FB8A     		ldrh	r3, [r7, #22]	@ movhi
 6023 003e 23F44073 		bic	r3, r3, #768
 6024 0042 1B05     		lsls	r3, r3, #20
 6025 0044 1B0D     		lsrs	r3, r3, #20
 6026 0046 FB82     		strh	r3, [r7, #22]	@ movhi
3325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICSelection << 8);
 6027              		.loc 1 3325 0
 6028 0048 3B89     		ldrh	r3, [r7, #8]	@ movhi
 6029 004a 1B02     		lsls	r3, r3, #8
 6030 004c 9AB2     		uxth	r2, r3
 6031 004e FB8A     		ldrh	r3, [r7, #22]	@ movhi
 6032 0050 1343     		orrs	r3, r3, r2
 6033 0052 FB82     		strh	r3, [r7, #22]	@ movhi
3326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccmr2 |= (uint16_t)(TIM_ICFilter << 12);
 6034              		.loc 1 3326 0
 6035 0054 FB88     		ldrh	r3, [r7, #6]	@ movhi
 6036 0056 1B03     		lsls	r3, r3, #12
 6037 0058 9AB2     		uxth	r2, r3
 6038 005a FB8A     		ldrh	r3, [r7, #22]	@ movhi
 6039 005c 1343     		orrs	r3, r3, r2
 6040 005e FB82     		strh	r3, [r7, #22]	@ movhi
3327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Select the Polarity and set the CC4E Bit */
3329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer &= (uint16_t)~(TIM_CCER_CC4P | TIM_CCER_CC4NP);
 6041              		.loc 1 3329 0
 6042 0060 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 6043 0062 23F40053 		bic	r3, r3, #8192
 6044 0066 5B04     		lsls	r3, r3, #17
 6045 0068 5B0C     		lsrs	r3, r3, #17
 6046 006a BB82     		strh	r3, [r7, #20]	@ movhi
3330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   tmpccer |= (uint16_t)(tmp | (uint16_t)TIM_CCER_CC4E);
 6047              		.loc 1 3330 0
 6048 006c 7A8A     		ldrh	r2, [r7, #18]	@ movhi
 6049 006e BB8A     		ldrh	r3, [r7, #20]	@ movhi
 6050 0070 1343     		orrs	r3, r3, r2
 6051 0072 9BB2     		uxth	r3, r3
 6052 0074 43F48053 		orr	r3, r3, #4096
 6053 0078 BB82     		strh	r3, [r7, #20]	@ movhi
3331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** 
3332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
3333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 6054              		.loc 1 3333 0
 6055 007a FB68     		ldr	r3, [r7, #12]
 6056 007c FA8A     		ldrh	r2, [r7, #22]	@ movhi
 6057 007e 9A83     		strh	r2, [r3, #28]	@ movhi
3334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c ****   TIMx->CCER = tmpccer ;
 6058              		.loc 1 3334 0
 6059 0080 FB68     		ldr	r3, [r7, #12]
 6060 0082 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 6061 0084 1A84     		strh	r2, [r3, #32]	@ movhi
3335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_tim.c **** }
 6062              		.loc 1 3335 0
 6063 0086 1C37     		adds	r7, r7, #28
 6064 0088 BD46     		mov	sp, r7
 6065              		@ sp needed
 6066 008a 5DF8047B 		ldr	r7, [sp], #4
 6067 008e 7047     		bx	lr
 6068              		.cfi_endproc
 6069              	.LFE201:
 6071              		.text
 6072              	.Letext0:
 6073              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 6074              		.file 3 "/usr/include/newlib/stdint.h"
 6075              		.file 4 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 6076              		.file 5 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_tim.h"
 6077              		.file 6 "libs/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_tim.c
     /tmp/ccRu3TKB.s:20     .text.TIM_DeInit:0000000000000000 $t
     /tmp/ccRu3TKB.s:25     .text.TIM_DeInit:0000000000000000 TIM_DeInit
     /tmp/ccRu3TKB.s:274    .text.TIM_TimeBaseInit:0000000000000000 $t
     /tmp/ccRu3TKB.s:279    .text.TIM_TimeBaseInit:0000000000000000 TIM_TimeBaseInit
     /tmp/ccRu3TKB.s:421    .text.TIM_TimeBaseStructInit:0000000000000000 $t
     /tmp/ccRu3TKB.s:426    .text.TIM_TimeBaseStructInit:0000000000000000 TIM_TimeBaseStructInit
     /tmp/ccRu3TKB.s:474    .text.TIM_PrescalerConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:479    .text.TIM_PrescalerConfig:0000000000000000 TIM_PrescalerConfig
     /tmp/ccRu3TKB.s:519    .text.TIM_CounterModeConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:524    .text.TIM_CounterModeConfig:0000000000000000 TIM_CounterModeConfig
     /tmp/ccRu3TKB.s:574    .text.TIM_SetCounter:0000000000000000 $t
     /tmp/ccRu3TKB.s:579    .text.TIM_SetCounter:0000000000000000 TIM_SetCounter
     /tmp/ccRu3TKB.s:612    .text.TIM_SetAutoreload:0000000000000000 $t
     /tmp/ccRu3TKB.s:617    .text.TIM_SetAutoreload:0000000000000000 TIM_SetAutoreload
     /tmp/ccRu3TKB.s:650    .text.TIM_GetCounter:0000000000000000 $t
     /tmp/ccRu3TKB.s:655    .text.TIM_GetCounter:0000000000000000 TIM_GetCounter
     /tmp/ccRu3TKB.s:687    .text.TIM_GetPrescaler:0000000000000000 $t
     /tmp/ccRu3TKB.s:692    .text.TIM_GetPrescaler:0000000000000000 TIM_GetPrescaler
     /tmp/ccRu3TKB.s:725    .text.TIM_UpdateDisableConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:730    .text.TIM_UpdateDisableConfig:0000000000000000 TIM_UpdateDisableConfig
     /tmp/ccRu3TKB.s:783    .text.TIM_UpdateRequestConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:788    .text.TIM_UpdateRequestConfig:0000000000000000 TIM_UpdateRequestConfig
     /tmp/ccRu3TKB.s:841    .text.TIM_ARRPreloadConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:846    .text.TIM_ARRPreloadConfig:0000000000000000 TIM_ARRPreloadConfig
     /tmp/ccRu3TKB.s:899    .text.TIM_SelectOnePulseMode:0000000000000000 $t
     /tmp/ccRu3TKB.s:904    .text.TIM_SelectOnePulseMode:0000000000000000 TIM_SelectOnePulseMode
     /tmp/ccRu3TKB.s:951    .text.TIM_SetClockDivision:0000000000000000 $t
     /tmp/ccRu3TKB.s:956    .text.TIM_SetClockDivision:0000000000000000 TIM_SetClockDivision
     /tmp/ccRu3TKB.s:1003   .text.TIM_Cmd:0000000000000000 $t
     /tmp/ccRu3TKB.s:1008   .text.TIM_Cmd:0000000000000000 TIM_Cmd
     /tmp/ccRu3TKB.s:1061   .text.TIM_OC1Init:0000000000000000 $t
     /tmp/ccRu3TKB.s:1066   .text.TIM_OC1Init:0000000000000000 TIM_OC1Init
     /tmp/ccRu3TKB.s:1223   .text.TIM_OC2Init:0000000000000000 $t
     /tmp/ccRu3TKB.s:1228   .text.TIM_OC2Init:0000000000000000 TIM_OC2Init
     /tmp/ccRu3TKB.s:1399   .text.TIM_OC3Init:0000000000000000 $t
     /tmp/ccRu3TKB.s:1404   .text.TIM_OC3Init:0000000000000000 TIM_OC3Init
     /tmp/ccRu3TKB.s:1573   .text.TIM_OC4Init:0000000000000000 $t
     /tmp/ccRu3TKB.s:1578   .text.TIM_OC4Init:0000000000000000 TIM_OC4Init
     /tmp/ccRu3TKB.s:1713   .text.TIM_OCStructInit:0000000000000000 $t
     /tmp/ccRu3TKB.s:1718   .text.TIM_OCStructInit:0000000000000000 TIM_OCStructInit
     /tmp/ccRu3TKB.s:1778   .text.TIM_SelectOCxM:0000000000000000 $t
     /tmp/ccRu3TKB.s:1783   .text.TIM_SelectOCxM:0000000000000000 TIM_SelectOCxM
     /tmp/ccRu3TKB.s:1902   .text.TIM_SetCompare1:0000000000000000 $t
     /tmp/ccRu3TKB.s:1907   .text.TIM_SetCompare1:0000000000000000 TIM_SetCompare1
     /tmp/ccRu3TKB.s:1940   .text.TIM_SetCompare2:0000000000000000 $t
     /tmp/ccRu3TKB.s:1945   .text.TIM_SetCompare2:0000000000000000 TIM_SetCompare2
     /tmp/ccRu3TKB.s:1978   .text.TIM_SetCompare3:0000000000000000 $t
     /tmp/ccRu3TKB.s:1983   .text.TIM_SetCompare3:0000000000000000 TIM_SetCompare3
     /tmp/ccRu3TKB.s:2016   .text.TIM_SetCompare4:0000000000000000 $t
     /tmp/ccRu3TKB.s:2021   .text.TIM_SetCompare4:0000000000000000 TIM_SetCompare4
     /tmp/ccRu3TKB.s:2054   .text.TIM_ForcedOC1Config:0000000000000000 $t
     /tmp/ccRu3TKB.s:2059   .text.TIM_ForcedOC1Config:0000000000000000 TIM_ForcedOC1Config
     /tmp/ccRu3TKB.s:2109   .text.TIM_ForcedOC2Config:0000000000000000 $t
     /tmp/ccRu3TKB.s:2114   .text.TIM_ForcedOC2Config:0000000000000000 TIM_ForcedOC2Config
     /tmp/ccRu3TKB.s:2166   .text.TIM_ForcedOC3Config:0000000000000000 $t
     /tmp/ccRu3TKB.s:2171   .text.TIM_ForcedOC3Config:0000000000000000 TIM_ForcedOC3Config
     /tmp/ccRu3TKB.s:2221   .text.TIM_ForcedOC4Config:0000000000000000 $t
     /tmp/ccRu3TKB.s:2226   .text.TIM_ForcedOC4Config:0000000000000000 TIM_ForcedOC4Config
     /tmp/ccRu3TKB.s:2278   .text.TIM_OC1PreloadConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:2283   .text.TIM_OC1PreloadConfig:0000000000000000 TIM_OC1PreloadConfig
     /tmp/ccRu3TKB.s:2333   .text.TIM_OC2PreloadConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:2338   .text.TIM_OC2PreloadConfig:0000000000000000 TIM_OC2PreloadConfig
     /tmp/ccRu3TKB.s:2390   .text.TIM_OC3PreloadConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:2395   .text.TIM_OC3PreloadConfig:0000000000000000 TIM_OC3PreloadConfig
     /tmp/ccRu3TKB.s:2445   .text.TIM_OC4PreloadConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:2450   .text.TIM_OC4PreloadConfig:0000000000000000 TIM_OC4PreloadConfig
     /tmp/ccRu3TKB.s:2502   .text.TIM_OC1FastConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:2507   .text.TIM_OC1FastConfig:0000000000000000 TIM_OC1FastConfig
     /tmp/ccRu3TKB.s:2557   .text.TIM_OC2FastConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:2562   .text.TIM_OC2FastConfig:0000000000000000 TIM_OC2FastConfig
     /tmp/ccRu3TKB.s:2614   .text.TIM_OC3FastConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:2619   .text.TIM_OC3FastConfig:0000000000000000 TIM_OC3FastConfig
     /tmp/ccRu3TKB.s:2669   .text.TIM_OC4FastConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:2674   .text.TIM_OC4FastConfig:0000000000000000 TIM_OC4FastConfig
     /tmp/ccRu3TKB.s:2726   .text.TIM_ClearOC1Ref:0000000000000000 $t
     /tmp/ccRu3TKB.s:2731   .text.TIM_ClearOC1Ref:0000000000000000 TIM_ClearOC1Ref
     /tmp/ccRu3TKB.s:2781   .text.TIM_ClearOC2Ref:0000000000000000 $t
     /tmp/ccRu3TKB.s:2786   .text.TIM_ClearOC2Ref:0000000000000000 TIM_ClearOC2Ref
     /tmp/ccRu3TKB.s:2838   .text.TIM_ClearOC3Ref:0000000000000000 $t
     /tmp/ccRu3TKB.s:2843   .text.TIM_ClearOC3Ref:0000000000000000 TIM_ClearOC3Ref
     /tmp/ccRu3TKB.s:2893   .text.TIM_ClearOC4Ref:0000000000000000 $t
     /tmp/ccRu3TKB.s:2898   .text.TIM_ClearOC4Ref:0000000000000000 TIM_ClearOC4Ref
     /tmp/ccRu3TKB.s:2950   .text.TIM_OC1PolarityConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:2955   .text.TIM_OC1PolarityConfig:0000000000000000 TIM_OC1PolarityConfig
     /tmp/ccRu3TKB.s:3005   .text.TIM_OC1NPolarityConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:3010   .text.TIM_OC1NPolarityConfig:0000000000000000 TIM_OC1NPolarityConfig
     /tmp/ccRu3TKB.s:3060   .text.TIM_OC2PolarityConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:3065   .text.TIM_OC2PolarityConfig:0000000000000000 TIM_OC2PolarityConfig
     /tmp/ccRu3TKB.s:3117   .text.TIM_OC2NPolarityConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:3122   .text.TIM_OC2NPolarityConfig:0000000000000000 TIM_OC2NPolarityConfig
     /tmp/ccRu3TKB.s:3174   .text.TIM_OC3PolarityConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:3179   .text.TIM_OC3PolarityConfig:0000000000000000 TIM_OC3PolarityConfig
     /tmp/ccRu3TKB.s:3231   .text.TIM_OC3NPolarityConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:3236   .text.TIM_OC3NPolarityConfig:0000000000000000 TIM_OC3NPolarityConfig
     /tmp/ccRu3TKB.s:3288   .text.TIM_OC4PolarityConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:3293   .text.TIM_OC4PolarityConfig:0000000000000000 TIM_OC4PolarityConfig
     /tmp/ccRu3TKB.s:3345   .text.TIM_CCxCmd:0000000000000000 $t
     /tmp/ccRu3TKB.s:3350   .text.TIM_CCxCmd:0000000000000000 TIM_CCxCmd
     /tmp/ccRu3TKB.s:3413   .text.TIM_CCxNCmd:0000000000000000 $t
     /tmp/ccRu3TKB.s:3418   .text.TIM_CCxNCmd:0000000000000000 TIM_CCxNCmd
     /tmp/ccRu3TKB.s:3481   .text.TIM_ICInit:0000000000000000 $t
     /tmp/ccRu3TKB.s:3486   .text.TIM_ICInit:0000000000000000 TIM_ICInit
     /tmp/ccRu3TKB.s:5688   .text.TI1_Config:0000000000000000 TI1_Config
     /tmp/ccRu3TKB.s:3933   .text.TIM_SetIC1Prescaler:0000000000000000 TIM_SetIC1Prescaler
     /tmp/ccRu3TKB.s:5777   .text.TI2_Config:0000000000000000 TI2_Config
     /tmp/ccRu3TKB.s:3985   .text.TIM_SetIC2Prescaler:0000000000000000 TIM_SetIC2Prescaler
     /tmp/ccRu3TKB.s:5878   .text.TI3_Config:0000000000000000 TI3_Config
     /tmp/ccRu3TKB.s:4039   .text.TIM_SetIC3Prescaler:0000000000000000 TIM_SetIC3Prescaler
     /tmp/ccRu3TKB.s:5973   .text.TI4_Config:0000000000000000 TI4_Config
     /tmp/ccRu3TKB.s:4091   .text.TIM_SetIC4Prescaler:0000000000000000 TIM_SetIC4Prescaler
     /tmp/ccRu3TKB.s:3596   .text.TIM_ICStructInit:0000000000000000 $t
     /tmp/ccRu3TKB.s:3601   .text.TIM_ICStructInit:0000000000000000 TIM_ICStructInit
     /tmp/ccRu3TKB.s:3649   .text.TIM_PWMIConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:3654   .text.TIM_PWMIConfig:0000000000000000 TIM_PWMIConfig
     /tmp/ccRu3TKB.s:3780   .text.TIM_GetCapture1:0000000000000000 $t
     /tmp/ccRu3TKB.s:3785   .text.TIM_GetCapture1:0000000000000000 TIM_GetCapture1
     /tmp/ccRu3TKB.s:3817   .text.TIM_GetCapture2:0000000000000000 $t
     /tmp/ccRu3TKB.s:3822   .text.TIM_GetCapture2:0000000000000000 TIM_GetCapture2
     /tmp/ccRu3TKB.s:3854   .text.TIM_GetCapture3:0000000000000000 $t
     /tmp/ccRu3TKB.s:3859   .text.TIM_GetCapture3:0000000000000000 TIM_GetCapture3
     /tmp/ccRu3TKB.s:3891   .text.TIM_GetCapture4:0000000000000000 $t
     /tmp/ccRu3TKB.s:3896   .text.TIM_GetCapture4:0000000000000000 TIM_GetCapture4
     /tmp/ccRu3TKB.s:3928   .text.TIM_SetIC1Prescaler:0000000000000000 $t
     /tmp/ccRu3TKB.s:3980   .text.TIM_SetIC2Prescaler:0000000000000000 $t
     /tmp/ccRu3TKB.s:4034   .text.TIM_SetIC3Prescaler:0000000000000000 $t
     /tmp/ccRu3TKB.s:4086   .text.TIM_SetIC4Prescaler:0000000000000000 $t
     /tmp/ccRu3TKB.s:4140   .text.TIM_BDTRConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:4145   .text.TIM_BDTRConfig:0000000000000000 TIM_BDTRConfig
     /tmp/ccRu3TKB.s:4213   .text.TIM_BDTRStructInit:0000000000000000 $t
     /tmp/ccRu3TKB.s:4218   .text.TIM_BDTRStructInit:0000000000000000 TIM_BDTRStructInit
     /tmp/ccRu3TKB.s:4274   .text.TIM_CtrlPWMOutputs:0000000000000000 $t
     /tmp/ccRu3TKB.s:4279   .text.TIM_CtrlPWMOutputs:0000000000000000 TIM_CtrlPWMOutputs
     /tmp/ccRu3TKB.s:4333   .text.TIM_SelectCOM:0000000000000000 $t
     /tmp/ccRu3TKB.s:4338   .text.TIM_SelectCOM:0000000000000000 TIM_SelectCOM
     /tmp/ccRu3TKB.s:4391   .text.TIM_CCPreloadControl:0000000000000000 $t
     /tmp/ccRu3TKB.s:4396   .text.TIM_CCPreloadControl:0000000000000000 TIM_CCPreloadControl
     /tmp/ccRu3TKB.s:4449   .text.TIM_ITConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:4454   .text.TIM_ITConfig:0000000000000000 TIM_ITConfig
     /tmp/ccRu3TKB.s:4513   .text.TIM_GenerateEvent:0000000000000000 $t
     /tmp/ccRu3TKB.s:4518   .text.TIM_GenerateEvent:0000000000000000 TIM_GenerateEvent
     /tmp/ccRu3TKB.s:4552   .text.TIM_GetFlagStatus:0000000000000000 $t
     /tmp/ccRu3TKB.s:4557   .text.TIM_GetFlagStatus:0000000000000000 TIM_GetFlagStatus
     /tmp/ccRu3TKB.s:4611   .text.TIM_ClearFlag:0000000000000000 $t
     /tmp/ccRu3TKB.s:4616   .text.TIM_ClearFlag:0000000000000000 TIM_ClearFlag
     /tmp/ccRu3TKB.s:4652   .text.TIM_GetITStatus:0000000000000000 $t
     /tmp/ccRu3TKB.s:4657   .text.TIM_GetITStatus:0000000000000000 TIM_GetITStatus
     /tmp/ccRu3TKB.s:4729   .text.TIM_ClearITPendingBit:0000000000000000 $t
     /tmp/ccRu3TKB.s:4734   .text.TIM_ClearITPendingBit:0000000000000000 TIM_ClearITPendingBit
     /tmp/ccRu3TKB.s:4770   .text.TIM_DMAConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:4775   .text.TIM_DMAConfig:0000000000000000 TIM_DMAConfig
     /tmp/ccRu3TKB.s:4814   .text.TIM_DMACmd:0000000000000000 $t
     /tmp/ccRu3TKB.s:4819   .text.TIM_DMACmd:0000000000000000 TIM_DMACmd
     /tmp/ccRu3TKB.s:4878   .text.TIM_SelectCCDMA:0000000000000000 $t
     /tmp/ccRu3TKB.s:4883   .text.TIM_SelectCCDMA:0000000000000000 TIM_SelectCCDMA
     /tmp/ccRu3TKB.s:4936   .text.TIM_InternalClockConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:4941   .text.TIM_InternalClockConfig:0000000000000000 TIM_InternalClockConfig
     /tmp/ccRu3TKB.s:4977   .text.TIM_ITRxExternalClockConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:4982   .text.TIM_ITRxExternalClockConfig:0000000000000000 TIM_ITRxExternalClockConfig
     /tmp/ccRu3TKB.s:5215   .text.TIM_SelectInputTrigger:0000000000000000 TIM_SelectInputTrigger
     /tmp/ccRu3TKB.s:5024   .text.TIM_TIxExternalClockConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:5029   .text.TIM_TIxExternalClockConfig:0000000000000000 TIM_TIxExternalClockConfig
     /tmp/ccRu3TKB.s:5093   .text.TIM_ETRClockMode1Config:0000000000000000 $t
     /tmp/ccRu3TKB.s:5098   .text.TIM_ETRClockMode1Config:0000000000000000 TIM_ETRClockMode1Config
     /tmp/ccRu3TKB.s:5426   .text.TIM_ETRConfig:0000000000000000 TIM_ETRConfig
     /tmp/ccRu3TKB.s:5161   .text.TIM_ETRClockMode2Config:0000000000000000 $t
     /tmp/ccRu3TKB.s:5166   .text.TIM_ETRClockMode2Config:0000000000000000 TIM_ETRClockMode2Config
     /tmp/ccRu3TKB.s:5210   .text.TIM_SelectInputTrigger:0000000000000000 $t
     /tmp/ccRu3TKB.s:5265   .text.TIM_SelectOutputTrigger:0000000000000000 $t
     /tmp/ccRu3TKB.s:5270   .text.TIM_SelectOutputTrigger:0000000000000000 TIM_SelectOutputTrigger
     /tmp/ccRu3TKB.s:5317   .text.TIM_SelectSlaveMode:0000000000000000 $t
     /tmp/ccRu3TKB.s:5322   .text.TIM_SelectSlaveMode:0000000000000000 TIM_SelectSlaveMode
     /tmp/ccRu3TKB.s:5369   .text.TIM_SelectMasterSlaveMode:0000000000000000 $t
     /tmp/ccRu3TKB.s:5374   .text.TIM_SelectMasterSlaveMode:0000000000000000 TIM_SelectMasterSlaveMode
     /tmp/ccRu3TKB.s:5421   .text.TIM_ETRConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:5485   .text.TIM_EncoderInterfaceConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:5490   .text.TIM_EncoderInterfaceConfig:0000000000000000 TIM_EncoderInterfaceConfig
     /tmp/ccRu3TKB.s:5587   .text.TIM_SelectHallSensor:0000000000000000 $t
     /tmp/ccRu3TKB.s:5592   .text.TIM_SelectHallSensor:0000000000000000 TIM_SelectHallSensor
     /tmp/ccRu3TKB.s:5645   .text.TIM_RemapConfig:0000000000000000 $t
     /tmp/ccRu3TKB.s:5650   .text.TIM_RemapConfig:0000000000000000 TIM_RemapConfig
     /tmp/ccRu3TKB.s:5684   .text.TI1_Config:0000000000000000 $t
     /tmp/ccRu3TKB.s:5773   .text.TI2_Config:0000000000000000 $t
     /tmp/ccRu3TKB.s:5874   .text.TI3_Config:0000000000000000 $t
     /tmp/ccRu3TKB.s:5969   .text.TI4_Config:0000000000000000 $t
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
RCC_APB1PeriphResetCmd
