   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"stm32f4xx_flash.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.FLASH_SetLatency,"ax",%progbits
  20              		.align	2
  21              		.global	FLASH_SetLatency
  22              		.thumb
  23              		.thumb_func
  25              	FLASH_SetLatency:
  26              	.LFB110:
  27              		.file 1 "libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c"
   1:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
   2:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   ******************************************************************************
   3:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @file    stm32f4xx_flash.c
   4:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @author  MCD Application Team
   5:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @version V1.0.0RC1
   6:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @date    25-August-2011
   7:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief   This file provides firmware functions to manage the following 
   8:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          functionalities of the FLASH peripheral:
   9:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            - FLASH Interface configuration
  10:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            - FLASH Memory Programming
  11:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            - Option Bytes Programming
  12:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            - Interrupts and flags management
  13:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *  
  14:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *  @verbatim
  15:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *  
  16:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          ===================================================================
  17:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                                 How to use this driver
  18:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          ===================================================================
  19:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                           
  20:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This driver provides functions to configure and program the FLASH 
  21:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          memory of all STM32F4xx devices.
  22:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          These functions are split in 4 groups:
  23:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * 
  24:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           1. FLASH Interface configuration functions: this group includes the
  25:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *              management of the following features:
  26:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Set the latency
  27:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Enable/Disable the prefetch buffer
  28:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Enable/Disable the Instruction cache and the Data cache
  29:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Reset the Instruction cache and the Data cache
  30:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *  
  31:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           2. FLASH Memory Programming functions: this group includes all needed
  32:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *              functions to erase and program the main memory:
  33:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Lock and Unlock the FLASH interface
  34:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Erase function: Erase sector, erase all sectors
  35:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Program functions: byte, half word, word and double word
  36:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *  
  37:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           3. Option Bytes Programming functions: this group includes all needed
  38:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *              functions to manage the Option Bytes:
  39:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Set/Reset the write protection
  40:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Set the Read protection Level
  41:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Set the BOR level
  42:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Program the user Option Bytes
  43:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Launch the Option Bytes loader
  44:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *  
  45:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           4. Interrupts and flags management functions: this group 
  46:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *              includes all needed functions to:
  47:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Enable/Disable the FLASH interrupt sources
  48:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Get flags status
  49:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Clear flags
  50:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Get FLASH operation status
  51:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                    - Wait for last FLASH operation
  52:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * 
  53:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *  @endverbatim
  54:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                      
  55:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   ******************************************************************************
  56:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @attention
  57:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *
  58:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  59:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  60:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  61:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  62:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  63:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  64:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *
  65:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  66:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   ******************************************************************************
  67:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
  68:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
  69:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /* Includes ------------------------------------------------------------------*/
  70:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** #include "stm32f4xx_flash.h"
  71:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
  72:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  73:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @{
  74:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
  75:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
  76:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /** @defgroup FLASH 
  77:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief FLASH driver modules
  78:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @{
  79:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */ 
  80:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
  81:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /* Private typedef -----------------------------------------------------------*/
  82:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /* Private define ------------------------------------------------------------*/ 
  83:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** #define SECTOR_MASK               ((uint32_t)0xFFFFFF07)
  84:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
  85:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /* Private macro -------------------------------------------------------------*/
  86:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /* Private variables ---------------------------------------------------------*/
  87:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /* Private function prototypes -----------------------------------------------*/
  88:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /* Private functions ---------------------------------------------------------*/
  89:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
  90:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /** @defgroup FLASH_Private_Functions
  91:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @{
  92:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */ 
  93:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
  94:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /** @defgroup FLASH_Group1 FLASH Interface configuration functions
  95:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *  @brief   FLASH Interface configuration functions 
  96:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  *
  97:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
  98:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** @verbatim   
  99:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  ===============================================================================
 100:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****                        FLASH Interface configuration functions
 101:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  ===============================================================================
 102:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 103:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    This group includes the following functions:
 104:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - void FLASH_SetLatency(uint32_t FLASH_Latency)
 105:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****        To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 106:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****        must be correctly programmed according to the frequency of the CPU clock 
 107:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       (HCLK) and the supply voltage of the device.
 108:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  +-------------------------------------------------------------------------------------+     
 109:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  | Latency       |                HCLK clock frequency (MHz)                           |
 110:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |               |---------------------------------------------------------------------|     
 111:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   |
 112:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   |
 113:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|           
 114:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |0WS(1CPU cycle)|0 < HCLK <= 30  |0 < HCLK <= 24  |0 < HCLK <= 18   |0 < HCLK <= 16   |
 115:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|   
 116:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |1WS(2CPU cycle)|30 < HCLK <= 60 |24 < HCLK <= 48 |18 < HCLK <= 36  |16 < HCLK <= 32  | 
 117:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|   
 118:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |2WS(3CPU cycle)|60 < HCLK <= 90 |48 < HCLK <= 72 |36 < HCLK <= 54  |32 < HCLK <= 48  |
 119:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------| 
 120:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |3WS(4CPU cycle)|90 < HCLK <= 120|72 < HCLK <= 96 |54 < HCLK <= 72  |48 < HCLK <= 64  |
 121:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------| 
 122:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |4WS(5CPU cycle)|      NA        |96 < HCLK <= 120|72 < HCLK <= 90  |64 < HCLK <= 80  |
 123:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------| 
 124:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |5WS(6CPU cycle)|      NA        |      NA        |90 < HCLK <= 108 |80 < HCLK <= 96  | 
 125:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------| 
 126:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |6WS(7CPU cycle)|      NA        |      NA        |108 < HCLK <= 120|96 < HCLK <= 112 | 
 127:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------| 
 128:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |7WS(8CPU cycle)|      NA        |      NA        |     NA          |112 < HCLK <= 120| 
 129:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |***************|****************|****************|*****************|*****************|***********
 130:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |               | voltage range  | voltage range  | voltage range   | voltage range   | voltage ra
 131:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |               | 2.7 V - 3.6 V  | 2.4 V - 2.7 V  | 2.1 V - 2.4 V   | 1.8 V - 2.1 V   | with Exter
 132:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|-----------
 133:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |Max Parallelism|      x32       |               x16                |       x8        |          x
 134:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |---------------|----------------|----------------|-----------------|-----------------|-----------
 135:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  |PSIZE[1:0]     |      10        |               01                 |       00        |           
 136:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  +-------------------------------------------------------------------------------------------------
 137:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     
 138:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - void FLASH_PrefetchBufferCmd(FunctionalState NewState)
 139:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - void FLASH_InstructionCacheCmd(FunctionalState NewState)
 140:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - void FLASH_DataCacheCmd(FunctionalState NewState)
 141:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - void FLASH_InstructionCacheReset(void)
 142:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - void FLASH_DataCacheReset(void)
 143:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    
 144:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    The unlock sequence is not needed for these functions.
 145:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  
 146:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** @endverbatim
 147:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @{
 148:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 149:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  
 150:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 151:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Sets the code latency value.
 152:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  FLASH_Latency: specifies the FLASH Latency value.
 153:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 154:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_0: FLASH Zero Latency cycle
 155:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_1: FLASH One Latency cycle
 156:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_2: FLASH Two Latency cycles
 157:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_3: FLASH Three Latency cycles
 158:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_4: FLASH Four Latency cycles 
 159:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_5: FLASH Five Latency cycles 
 160:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_6: FLASH Six Latency cycles
 161:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_Latency_7: FLASH Seven Latency cycles      
 162:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 163:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 164:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_SetLatency(uint32_t FLASH_Latency)
 165:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
  28              		.loc 1 165 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 83B0     		sub	sp, sp, #12
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 166:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 167:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_LATENCY(FLASH_Latency));
 168:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 169:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Perform Byte access to FLASH_ACR[8:0] to set the Latency value */
 170:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *(__IO uint8_t *)ACR_BYTE0_ADDRESS = (uint8_t)FLASH_Latency;
  44              		.loc 1 170 0
  45 0008 4FF47053 		mov	r3, #15360
  46 000c C4F20203 		movt	r3, 16386
  47 0010 7A68     		ldr	r2, [r7, #4]
  48 0012 D2B2     		uxtb	r2, r2
  49 0014 1A70     		strb	r2, [r3]
 171:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
  50              		.loc 1 171 0
  51 0016 0C37     		adds	r7, r7, #12
  52 0018 BD46     		mov	sp, r7
  53              		@ sp needed
  54 001a 5DF8047B 		ldr	r7, [sp], #4
  55 001e 7047     		bx	lr
  56              		.cfi_endproc
  57              	.LFE110:
  59              		.section	.text.FLASH_PrefetchBufferCmd,"ax",%progbits
  60              		.align	2
  61              		.global	FLASH_PrefetchBufferCmd
  62              		.thumb
  63              		.thumb_func
  65              	FLASH_PrefetchBufferCmd:
  66              	.LFB111:
 172:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 173:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 174:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Enables or disables the Prefetch Buffer.
 175:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  NewState: new state of the Prefetch Buffer.
 176:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter  can be: ENABLE or DISABLE.
 177:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 178:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 179:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_PrefetchBufferCmd(FunctionalState NewState)
 180:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
  67              		.loc 1 180 0
  68              		.cfi_startproc
  69              		@ args = 0, pretend = 0, frame = 8
  70              		@ frame_needed = 1, uses_anonymous_args = 0
  71              		@ link register save eliminated.
  72 0000 80B4     		push	{r7}
  73              	.LCFI3:
  74              		.cfi_def_cfa_offset 4
  75              		.cfi_offset 7, -4
  76 0002 83B0     		sub	sp, sp, #12
  77              	.LCFI4:
  78              		.cfi_def_cfa_offset 16
  79 0004 00AF     		add	r7, sp, #0
  80              	.LCFI5:
  81              		.cfi_def_cfa_register 7
  82 0006 0346     		mov	r3, r0
  83 0008 FB71     		strb	r3, [r7, #7]
 181:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 182:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 183:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 184:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Enable or disable the Prefetch Buffer */
 185:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(NewState != DISABLE)
  84              		.loc 1 185 0
  85 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  86 000c 002B     		cmp	r3, #0
  87 000e 0CD0     		beq	.L3
 186:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 187:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->ACR |= FLASH_ACR_PRFTEN;
  88              		.loc 1 187 0
  89 0010 4FF47053 		mov	r3, #15360
  90 0014 C4F20203 		movt	r3, 16386
  91 0018 4FF47052 		mov	r2, #15360
  92 001c C4F20202 		movt	r2, 16386
  93 0020 1268     		ldr	r2, [r2]
  94 0022 42F48072 		orr	r2, r2, #256
  95 0026 1A60     		str	r2, [r3]
  96 0028 0BE0     		b	.L2
  97              	.L3:
 188:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 189:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else
 190:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 191:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->ACR &= (~FLASH_ACR_PRFTEN);
  98              		.loc 1 191 0
  99 002a 4FF47053 		mov	r3, #15360
 100 002e C4F20203 		movt	r3, 16386
 101 0032 4FF47052 		mov	r2, #15360
 102 0036 C4F20202 		movt	r2, 16386
 103 003a 1268     		ldr	r2, [r2]
 104 003c 22F48072 		bic	r2, r2, #256
 105 0040 1A60     		str	r2, [r3]
 106              	.L2:
 192:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 193:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 107              		.loc 1 193 0
 108 0042 0C37     		adds	r7, r7, #12
 109 0044 BD46     		mov	sp, r7
 110              		@ sp needed
 111 0046 5DF8047B 		ldr	r7, [sp], #4
 112 004a 7047     		bx	lr
 113              		.cfi_endproc
 114              	.LFE111:
 116              		.section	.text.FLASH_InstructionCacheCmd,"ax",%progbits
 117              		.align	2
 118              		.global	FLASH_InstructionCacheCmd
 119              		.thumb
 120              		.thumb_func
 122              	FLASH_InstructionCacheCmd:
 123              	.LFB112:
 194:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 195:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 196:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Enables or disables the Instruction Cache feature.
 197:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  NewState: new state of the Instruction Cache.
 198:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter  can be: ENABLE or DISABLE.
 199:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 200:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 201:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_InstructionCacheCmd(FunctionalState NewState)
 202:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 124              		.loc 1 202 0
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 8
 127              		@ frame_needed = 1, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 129 0000 80B4     		push	{r7}
 130              	.LCFI6:
 131              		.cfi_def_cfa_offset 4
 132              		.cfi_offset 7, -4
 133 0002 83B0     		sub	sp, sp, #12
 134              	.LCFI7:
 135              		.cfi_def_cfa_offset 16
 136 0004 00AF     		add	r7, sp, #0
 137              	.LCFI8:
 138              		.cfi_def_cfa_register 7
 139 0006 0346     		mov	r3, r0
 140 0008 FB71     		strb	r3, [r7, #7]
 203:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 204:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 205:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 206:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(NewState != DISABLE)
 141              		.loc 1 206 0
 142 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 143 000c 002B     		cmp	r3, #0
 144 000e 0CD0     		beq	.L6
 207:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 208:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->ACR |= FLASH_ACR_ICEN;
 145              		.loc 1 208 0
 146 0010 4FF47053 		mov	r3, #15360
 147 0014 C4F20203 		movt	r3, 16386
 148 0018 4FF47052 		mov	r2, #15360
 149 001c C4F20202 		movt	r2, 16386
 150 0020 1268     		ldr	r2, [r2]
 151 0022 42F40072 		orr	r2, r2, #512
 152 0026 1A60     		str	r2, [r3]
 153 0028 0BE0     		b	.L5
 154              	.L6:
 209:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 210:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else
 211:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 212:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->ACR &= (~FLASH_ACR_ICEN);
 155              		.loc 1 212 0
 156 002a 4FF47053 		mov	r3, #15360
 157 002e C4F20203 		movt	r3, 16386
 158 0032 4FF47052 		mov	r2, #15360
 159 0036 C4F20202 		movt	r2, 16386
 160 003a 1268     		ldr	r2, [r2]
 161 003c 22F40072 		bic	r2, r2, #512
 162 0040 1A60     		str	r2, [r3]
 163              	.L5:
 213:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 214:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 164              		.loc 1 214 0
 165 0042 0C37     		adds	r7, r7, #12
 166 0044 BD46     		mov	sp, r7
 167              		@ sp needed
 168 0046 5DF8047B 		ldr	r7, [sp], #4
 169 004a 7047     		bx	lr
 170              		.cfi_endproc
 171              	.LFE112:
 173              		.section	.text.FLASH_DataCacheCmd,"ax",%progbits
 174              		.align	2
 175              		.global	FLASH_DataCacheCmd
 176              		.thumb
 177              		.thumb_func
 179              	FLASH_DataCacheCmd:
 180              	.LFB113:
 215:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 216:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 217:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Enables or disables the Data Cache feature.
 218:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  NewState: new state of the Data Cache.
 219:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter  can be: ENABLE or DISABLE.
 220:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 221:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 222:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_DataCacheCmd(FunctionalState NewState)
 223:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 181              		.loc 1 223 0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 8
 184              		@ frame_needed = 1, uses_anonymous_args = 0
 185              		@ link register save eliminated.
 186 0000 80B4     		push	{r7}
 187              	.LCFI9:
 188              		.cfi_def_cfa_offset 4
 189              		.cfi_offset 7, -4
 190 0002 83B0     		sub	sp, sp, #12
 191              	.LCFI10:
 192              		.cfi_def_cfa_offset 16
 193 0004 00AF     		add	r7, sp, #0
 194              	.LCFI11:
 195              		.cfi_def_cfa_register 7
 196 0006 0346     		mov	r3, r0
 197 0008 FB71     		strb	r3, [r7, #7]
 224:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 225:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 226:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 227:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(NewState != DISABLE)
 198              		.loc 1 227 0
 199 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 200 000c 002B     		cmp	r3, #0
 201 000e 0CD0     		beq	.L9
 228:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 229:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->ACR |= FLASH_ACR_DCEN;
 202              		.loc 1 229 0
 203 0010 4FF47053 		mov	r3, #15360
 204 0014 C4F20203 		movt	r3, 16386
 205 0018 4FF47052 		mov	r2, #15360
 206 001c C4F20202 		movt	r2, 16386
 207 0020 1268     		ldr	r2, [r2]
 208 0022 42F48062 		orr	r2, r2, #1024
 209 0026 1A60     		str	r2, [r3]
 210 0028 0BE0     		b	.L8
 211              	.L9:
 230:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 231:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else
 232:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 233:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->ACR &= (~FLASH_ACR_DCEN);
 212              		.loc 1 233 0
 213 002a 4FF47053 		mov	r3, #15360
 214 002e C4F20203 		movt	r3, 16386
 215 0032 4FF47052 		mov	r2, #15360
 216 0036 C4F20202 		movt	r2, 16386
 217 003a 1268     		ldr	r2, [r2]
 218 003c 22F48062 		bic	r2, r2, #1024
 219 0040 1A60     		str	r2, [r3]
 220              	.L8:
 234:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 235:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 221              		.loc 1 235 0
 222 0042 0C37     		adds	r7, r7, #12
 223 0044 BD46     		mov	sp, r7
 224              		@ sp needed
 225 0046 5DF8047B 		ldr	r7, [sp], #4
 226 004a 7047     		bx	lr
 227              		.cfi_endproc
 228              	.LFE113:
 230              		.section	.text.FLASH_InstructionCacheReset,"ax",%progbits
 231              		.align	2
 232              		.global	FLASH_InstructionCacheReset
 233              		.thumb
 234              		.thumb_func
 236              	FLASH_InstructionCacheReset:
 237              	.LFB114:
 236:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 237:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 238:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Resets the Instruction Cache.
 239:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @note   This function must be used only when the Instruction Cache is disabled.  
 240:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 241:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 242:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 243:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_InstructionCacheReset(void)
 244:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 238              		.loc 1 244 0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 1, uses_anonymous_args = 0
 242              		@ link register save eliminated.
 243 0000 80B4     		push	{r7}
 244              	.LCFI12:
 245              		.cfi_def_cfa_offset 4
 246              		.cfi_offset 7, -4
 247 0002 00AF     		add	r7, sp, #0
 248              	.LCFI13:
 249              		.cfi_def_cfa_register 7
 245:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH->ACR |= FLASH_ACR_ICRST;
 250              		.loc 1 245 0
 251 0004 4FF47053 		mov	r3, #15360
 252 0008 C4F20203 		movt	r3, 16386
 253 000c 4FF47052 		mov	r2, #15360
 254 0010 C4F20202 		movt	r2, 16386
 255 0014 1268     		ldr	r2, [r2]
 256 0016 42F40062 		orr	r2, r2, #2048
 257 001a 1A60     		str	r2, [r3]
 246:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 258              		.loc 1 246 0
 259 001c BD46     		mov	sp, r7
 260              		@ sp needed
 261 001e 5DF8047B 		ldr	r7, [sp], #4
 262 0022 7047     		bx	lr
 263              		.cfi_endproc
 264              	.LFE114:
 266              		.section	.text.FLASH_DataCacheReset,"ax",%progbits
 267              		.align	2
 268              		.global	FLASH_DataCacheReset
 269              		.thumb
 270              		.thumb_func
 272              	FLASH_DataCacheReset:
 273              	.LFB115:
 247:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 248:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 249:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Resets the Data Cache.
 250:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @note   This function must be used only when the Data Cache is disabled.  
 251:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 252:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 253:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 254:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_DataCacheReset(void)
 255:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 274              		.loc 1 255 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 1, uses_anonymous_args = 0
 278              		@ link register save eliminated.
 279 0000 80B4     		push	{r7}
 280              	.LCFI14:
 281              		.cfi_def_cfa_offset 4
 282              		.cfi_offset 7, -4
 283 0002 00AF     		add	r7, sp, #0
 284              	.LCFI15:
 285              		.cfi_def_cfa_register 7
 256:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH->ACR |= FLASH_ACR_DCRST;
 286              		.loc 1 256 0
 287 0004 4FF47053 		mov	r3, #15360
 288 0008 C4F20203 		movt	r3, 16386
 289 000c 4FF47052 		mov	r2, #15360
 290 0010 C4F20202 		movt	r2, 16386
 291 0014 1268     		ldr	r2, [r2]
 292 0016 42F48052 		orr	r2, r2, #4096
 293 001a 1A60     		str	r2, [r3]
 257:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 294              		.loc 1 257 0
 295 001c BD46     		mov	sp, r7
 296              		@ sp needed
 297 001e 5DF8047B 		ldr	r7, [sp], #4
 298 0022 7047     		bx	lr
 299              		.cfi_endproc
 300              	.LFE115:
 302              		.section	.text.FLASH_Unlock,"ax",%progbits
 303              		.align	2
 304              		.global	FLASH_Unlock
 305              		.thumb
 306              		.thumb_func
 308              	FLASH_Unlock:
 309              	.LFB116:
 258:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 259:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 260:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @}
 261:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 262:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 263:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /** @defgroup FLASH_Group2 FLASH Memory Programming functions
 264:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  *  @brief   FLASH Memory Programming functions
 265:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  *
 266:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** @verbatim   
 267:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  ===============================================================================
 268:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****                       FLASH Memory Programming functions
 269:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  ===============================================================================   
 270:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 271:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    This group includes the following functions:
 272:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - void FLASH_Unlock(void)
 273:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - void FLASH_Lock(void)
 274:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - FLASH_Status FLASH_EraseSector(uint32_t FLASH_Sector, uint8_t VoltageRange)
 275:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - FLASH_Status FLASH_EraseAllSectors(uint8_t VoltageRange)
 276:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - FLASH_Status FLASH_ProgramDoubleWord(uint32_t Address, uint64_t Data)
 277:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - FLASH_Status FLASH_ProgramWord(uint32_t Address, uint32_t Data)
 278:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - FLASH_Status FLASH_ProgramHalfWord(uint32_t Address, uint16_t Data)
 279:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     - FLASH_Status FLASH_ProgramByte(uint32_t Address, uint8_t Data)
 280:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    
 281:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    Any operation of erase or program should follow these steps:
 282:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    1. Call the FLASH_Unlock() function to enable the FLASH control register access
 283:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 284:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    2. Call the desired function to erase sector(s) or program data
 285:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 286:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    3. Call the FLASH_Lock() function to disable the FLASH control register access
 287:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       (recommended to protect the FLASH memory against possible unwanted operation)
 288:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     
 289:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** @endverbatim
 290:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @{
 291:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 292:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 293:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 294:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Unlocks the FLASH control register access
 295:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 296:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 297:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 298:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_Unlock(void)
 299:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 310              		.loc 1 299 0
 311              		.cfi_startproc
 312              		@ args = 0, pretend = 0, frame = 0
 313              		@ frame_needed = 1, uses_anonymous_args = 0
 314              		@ link register save eliminated.
 315 0000 80B4     		push	{r7}
 316              	.LCFI16:
 317              		.cfi_def_cfa_offset 4
 318              		.cfi_offset 7, -4
 319 0002 00AF     		add	r7, sp, #0
 320              	.LCFI17:
 321              		.cfi_def_cfa_register 7
 300:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if((FLASH->CR & FLASH_CR_LOCK) != RESET)
 322              		.loc 1 300 0
 323 0004 4FF47053 		mov	r3, #15360
 324 0008 C4F20203 		movt	r3, 16386
 325 000c 1B69     		ldr	r3, [r3, #16]
 326 000e 002B     		cmp	r3, #0
 327 0010 11DA     		bge	.L13
 301:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 302:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Authorize the FLASH Registers access */
 303:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->KEYR = FLASH_KEY1;
 328              		.loc 1 303 0
 329 0012 4FF47053 		mov	r3, #15360
 330 0016 C4F20203 		movt	r3, 16386
 331 001a 40F22312 		movw	r2, #291
 332 001e C4F26752 		movt	r2, 17767
 333 0022 5A60     		str	r2, [r3, #4]
 304:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->KEYR = FLASH_KEY2;
 334              		.loc 1 304 0
 335 0024 4FF47053 		mov	r3, #15360
 336 0028 C4F20203 		movt	r3, 16386
 337 002c 48F6AB12 		movw	r2, #35243
 338 0030 CCF6EF52 		movt	r2, 52719
 339 0034 5A60     		str	r2, [r3, #4]
 340              	.L13:
 305:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }  
 306:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 341              		.loc 1 306 0
 342 0036 BD46     		mov	sp, r7
 343              		@ sp needed
 344 0038 5DF8047B 		ldr	r7, [sp], #4
 345 003c 7047     		bx	lr
 346              		.cfi_endproc
 347              	.LFE116:
 349 003e 00BF     		.section	.text.FLASH_Lock,"ax",%progbits
 350              		.align	2
 351              		.global	FLASH_Lock
 352              		.thumb
 353              		.thumb_func
 355              	FLASH_Lock:
 356              	.LFB117:
 307:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 308:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 309:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Locks the FLASH control register access
 310:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 311:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 312:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 313:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_Lock(void)
 314:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 357              		.loc 1 314 0
 358              		.cfi_startproc
 359              		@ args = 0, pretend = 0, frame = 0
 360              		@ frame_needed = 1, uses_anonymous_args = 0
 361              		@ link register save eliminated.
 362 0000 80B4     		push	{r7}
 363              	.LCFI18:
 364              		.cfi_def_cfa_offset 4
 365              		.cfi_offset 7, -4
 366 0002 00AF     		add	r7, sp, #0
 367              	.LCFI19:
 368              		.cfi_def_cfa_register 7
 315:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Set the LOCK Bit to lock the FLASH Registers access */
 316:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH->CR |= FLASH_CR_LOCK;
 369              		.loc 1 316 0
 370 0004 4FF47053 		mov	r3, #15360
 371 0008 C4F20203 		movt	r3, 16386
 372 000c 4FF47052 		mov	r2, #15360
 373 0010 C4F20202 		movt	r2, 16386
 374 0014 1269     		ldr	r2, [r2, #16]
 375 0016 42F00042 		orr	r2, r2, #-2147483648
 376 001a 1A61     		str	r2, [r3, #16]
 317:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 377              		.loc 1 317 0
 378 001c BD46     		mov	sp, r7
 379              		@ sp needed
 380 001e 5DF8047B 		ldr	r7, [sp], #4
 381 0022 7047     		bx	lr
 382              		.cfi_endproc
 383              	.LFE117:
 385              		.section	.text.FLASH_EraseSector,"ax",%progbits
 386              		.align	2
 387              		.global	FLASH_EraseSector
 388              		.thumb
 389              		.thumb_func
 391              	FLASH_EraseSector:
 392              	.LFB118:
 318:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 319:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 320:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Erases a specified FLASH Sector.
 321:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *   
 322:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  FLASH_Sector: The Sector number to be erased.
 323:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be a value between FLASH_Sector_0 and FLASH_Sector_11
 324:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *    
 325:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  VoltageRange: The device voltage range which defines the erase parallelism.  
 326:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 327:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_1: when the device voltage range is 1.8V to 2.1V, 
 328:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                                  the operation will be done by byte (8-bit) 
 329:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_2: when the device voltage range is 2.1V to 2.7V,
 330:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                                  the operation will be done by half word (16-bit)
 331:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_3: when the device voltage range is 2.7V to 3.6V,
 332:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                                  the operation will be done by word (32-bit)
 333:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_4: when the device voltage range is 2.7V to 3.6V + External Vpp, 
 334:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                                  the operation will be done by double word (64-bit)
 335:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *       
 336:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 337:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 338:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 339:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FLASH_Status FLASH_EraseSector(uint32_t FLASH_Sector, uint8_t VoltageRange)
 340:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 393              		.loc 1 340 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 16
 396              		@ frame_needed = 1, uses_anonymous_args = 0
 397 0000 80B5     		push	{r7, lr}
 398              	.LCFI20:
 399              		.cfi_def_cfa_offset 8
 400              		.cfi_offset 7, -8
 401              		.cfi_offset 14, -4
 402 0002 84B0     		sub	sp, sp, #16
 403              	.LCFI21:
 404              		.cfi_def_cfa_offset 24
 405 0004 00AF     		add	r7, sp, #0
 406              	.LCFI22:
 407              		.cfi_def_cfa_register 7
 408 0006 7860     		str	r0, [r7, #4]
 409 0008 0B46     		mov	r3, r1
 410 000a FB70     		strb	r3, [r7, #3]
 341:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 411              		.loc 1 341 0
 412 000c 0023     		movs	r3, #0
 413 000e FB60     		str	r3, [r7, #12]
 342:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 414              		.loc 1 342 0
 415 0010 0823     		movs	r3, #8
 416 0012 FB72     		strb	r3, [r7, #11]
 343:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 344:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 345:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_SECTOR(FLASH_Sector));
 346:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 347:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 348:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(VoltageRange == VoltageRange_1)
 417              		.loc 1 348 0
 418 0014 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 419 0016 002B     		cmp	r3, #0
 420 0018 02D1     		bne	.L17
 349:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 350:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      tmp_psize = FLASH_PSIZE_BYTE;
 421              		.loc 1 350 0
 422 001a 0023     		movs	r3, #0
 423 001c FB60     		str	r3, [r7, #12]
 424 001e 10E0     		b	.L18
 425              	.L17:
 351:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 352:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_2)
 426              		.loc 1 352 0
 427 0020 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 428 0022 012B     		cmp	r3, #1
 429 0024 03D1     		bne	.L19
 353:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 354:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_HALF_WORD;
 430              		.loc 1 354 0
 431 0026 4FF48073 		mov	r3, #256
 432 002a FB60     		str	r3, [r7, #12]
 433 002c 09E0     		b	.L18
 434              	.L19:
 355:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 356:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_3)
 435              		.loc 1 356 0
 436 002e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 437 0030 022B     		cmp	r3, #2
 438 0032 03D1     		bne	.L20
 357:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 358:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_WORD;
 439              		.loc 1 358 0
 440 0034 4FF40073 		mov	r3, #512
 441 0038 FB60     		str	r3, [r7, #12]
 442 003a 02E0     		b	.L18
 443              	.L20:
 359:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 360:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else
 361:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 362:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_DOUBLE_WORD;
 444              		.loc 1 362 0
 445 003c 4FF44073 		mov	r3, #768
 446 0040 FB60     		str	r3, [r7, #12]
 447              	.L18:
 363:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 364:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 365:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 448              		.loc 1 365 0
 449 0042 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 450 0046 0346     		mov	r3, r0
 451 0048 FB72     		strb	r3, [r7, #11]
 366:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 367:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 452              		.loc 1 367 0
 453 004a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 454 004c 082B     		cmp	r3, #8
 455 004e 59D1     		bne	.L21
 368:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   { 
 369:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to erase the sector */
 370:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 456              		.loc 1 370 0
 457 0050 4FF47053 		mov	r3, #15360
 458 0054 C4F20203 		movt	r3, 16386
 459 0058 4FF47052 		mov	r2, #15360
 460 005c C4F20202 		movt	r2, 16386
 461 0060 1269     		ldr	r2, [r2, #16]
 462 0062 22F44072 		bic	r2, r2, #768
 463 0066 1A61     		str	r2, [r3, #16]
 371:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= tmp_psize;
 464              		.loc 1 371 0
 465 0068 4FF47053 		mov	r3, #15360
 466 006c C4F20203 		movt	r3, 16386
 467 0070 4FF47052 		mov	r2, #15360
 468 0074 C4F20202 		movt	r2, 16386
 469 0078 1169     		ldr	r1, [r2, #16]
 470 007a FA68     		ldr	r2, [r7, #12]
 471 007c 0A43     		orrs	r2, r2, r1
 472 007e 1A61     		str	r2, [r3, #16]
 372:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= SECTOR_MASK;
 473              		.loc 1 372 0
 474 0080 4FF47053 		mov	r3, #15360
 475 0084 C4F20203 		movt	r3, 16386
 476 0088 4FF47052 		mov	r2, #15360
 477 008c C4F20202 		movt	r2, 16386
 478 0090 1269     		ldr	r2, [r2, #16]
 479 0092 22F0F802 		bic	r2, r2, #248
 480 0096 1A61     		str	r2, [r3, #16]
 373:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_SER | FLASH_Sector;
 481              		.loc 1 373 0
 482 0098 4FF47053 		mov	r3, #15360
 483 009c C4F20203 		movt	r3, 16386
 484 00a0 4FF47052 		mov	r2, #15360
 485 00a4 C4F20202 		movt	r2, 16386
 486 00a8 1169     		ldr	r1, [r2, #16]
 487 00aa 7A68     		ldr	r2, [r7, #4]
 488 00ac 0A43     		orrs	r2, r2, r1
 489 00ae 42F00202 		orr	r2, r2, #2
 490 00b2 1A61     		str	r2, [r3, #16]
 374:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_STRT;
 491              		.loc 1 374 0
 492 00b4 4FF47053 		mov	r3, #15360
 493 00b8 C4F20203 		movt	r3, 16386
 494 00bc 4FF47052 		mov	r2, #15360
 495 00c0 C4F20202 		movt	r2, 16386
 496 00c4 1269     		ldr	r2, [r2, #16]
 497 00c6 42F48032 		orr	r2, r2, #65536
 498 00ca 1A61     		str	r2, [r3, #16]
 375:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     
 376:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 377:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 499              		.loc 1 377 0
 500 00cc FFF7FEFF 		bl	FLASH_WaitForLastOperation
 501 00d0 0346     		mov	r3, r0
 502 00d2 FB72     		strb	r3, [r7, #11]
 378:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     
 379:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the erase operation is completed, disable the SER Bit */
 380:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_SER);
 503              		.loc 1 380 0
 504 00d4 4FF47053 		mov	r3, #15360
 505 00d8 C4F20203 		movt	r3, 16386
 506 00dc 4FF47052 		mov	r2, #15360
 507 00e0 C4F20202 		movt	r2, 16386
 508 00e4 1269     		ldr	r2, [r2, #16]
 509 00e6 22F00202 		bic	r2, r2, #2
 510 00ea 1A61     		str	r2, [r3, #16]
 381:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= SECTOR_MASK; 
 511              		.loc 1 381 0
 512 00ec 4FF47053 		mov	r3, #15360
 513 00f0 C4F20203 		movt	r3, 16386
 514 00f4 4FF47052 		mov	r2, #15360
 515 00f8 C4F20202 		movt	r2, 16386
 516 00fc 1269     		ldr	r2, [r2, #16]
 517 00fe 22F0F802 		bic	r2, r2, #248
 518 0102 1A61     		str	r2, [r3, #16]
 519              	.L21:
 382:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 383:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the Erase Status */
 384:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return status;
 520              		.loc 1 384 0
 521 0104 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 385:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 522              		.loc 1 385 0
 523 0106 1846     		mov	r0, r3
 524 0108 1037     		adds	r7, r7, #16
 525 010a BD46     		mov	sp, r7
 526              		@ sp needed
 527 010c 80BD     		pop	{r7, pc}
 528              		.cfi_endproc
 529              	.LFE118:
 531 010e 00BF     		.section	.text.FLASH_EraseAllSectors,"ax",%progbits
 532              		.align	2
 533              		.global	FLASH_EraseAllSectors
 534              		.thumb
 535              		.thumb_func
 537              	FLASH_EraseAllSectors:
 538              	.LFB119:
 386:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 387:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 388:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Erases all FLASH Sectors.
 389:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *    
 390:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  VoltageRange: The device voltage range which defines the erase parallelism.  
 391:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 392:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_1: when the device voltage range is 1.8V to 2.1V, 
 393:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                                  the operation will be done by byte (8-bit) 
 394:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_2: when the device voltage range is 2.1V to 2.7V,
 395:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                                  the operation will be done by half word (16-bit)
 396:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_3: when the device voltage range is 2.7V to 3.6V,
 397:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                                  the operation will be done by word (32-bit)
 398:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg VoltageRange_4: when the device voltage range is 2.7V to 3.6V + External Vpp, 
 399:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                                  the operation will be done by double word (64-bit)
 400:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *       
 401:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 402:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 403:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 404:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FLASH_Status FLASH_EraseAllSectors(uint8_t VoltageRange)
 405:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 539              		.loc 1 405 0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 16
 542              		@ frame_needed = 1, uses_anonymous_args = 0
 543 0000 80B5     		push	{r7, lr}
 544              	.LCFI23:
 545              		.cfi_def_cfa_offset 8
 546              		.cfi_offset 7, -8
 547              		.cfi_offset 14, -4
 548 0002 84B0     		sub	sp, sp, #16
 549              	.LCFI24:
 550              		.cfi_def_cfa_offset 24
 551 0004 00AF     		add	r7, sp, #0
 552              	.LCFI25:
 553              		.cfi_def_cfa_register 7
 554 0006 0346     		mov	r3, r0
 555 0008 FB71     		strb	r3, [r7, #7]
 406:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   uint32_t tmp_psize = 0x0;
 556              		.loc 1 406 0
 557 000a 0023     		movs	r3, #0
 558 000c FB60     		str	r3, [r7, #12]
 407:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 559              		.loc 1 407 0
 560 000e 0823     		movs	r3, #8
 561 0010 FB72     		strb	r3, [r7, #11]
 408:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 409:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 410:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 562              		.loc 1 410 0
 563 0012 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 564 0016 0346     		mov	r3, r0
 565 0018 FB72     		strb	r3, [r7, #11]
 411:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_VOLTAGERANGE(VoltageRange));
 412:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 413:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(VoltageRange == VoltageRange_1)
 566              		.loc 1 413 0
 567 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 568 001c 002B     		cmp	r3, #0
 569 001e 02D1     		bne	.L24
 414:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 415:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      tmp_psize = FLASH_PSIZE_BYTE;
 570              		.loc 1 415 0
 571 0020 0023     		movs	r3, #0
 572 0022 FB60     		str	r3, [r7, #12]
 573 0024 10E0     		b	.L25
 574              	.L24:
 416:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 417:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_2)
 575              		.loc 1 417 0
 576 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 577 0028 012B     		cmp	r3, #1
 578 002a 03D1     		bne	.L26
 418:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 419:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_HALF_WORD;
 579              		.loc 1 419 0
 580 002c 4FF48073 		mov	r3, #256
 581 0030 FB60     		str	r3, [r7, #12]
 582 0032 09E0     		b	.L25
 583              	.L26:
 420:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 421:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else if(VoltageRange == VoltageRange_3)
 584              		.loc 1 421 0
 585 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 586 0036 022B     		cmp	r3, #2
 587 0038 03D1     		bne	.L27
 422:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 423:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_WORD;
 588              		.loc 1 423 0
 589 003a 4FF40073 		mov	r3, #512
 590 003e FB60     		str	r3, [r7, #12]
 591 0040 02E0     		b	.L25
 592              	.L27:
 424:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 425:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else
 426:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 427:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     tmp_psize = FLASH_PSIZE_DOUBLE_WORD;
 593              		.loc 1 427 0
 594 0042 4FF44073 		mov	r3, #768
 595 0046 FB60     		str	r3, [r7, #12]
 596              	.L25:
 428:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }  
 429:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 597              		.loc 1 429 0
 598 0048 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 599 004a 082B     		cmp	r3, #8
 600 004c 3FD1     		bne	.L28
 430:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 431:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to erase all sectors */
 432:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      FLASH->CR &= CR_PSIZE_MASK;
 601              		.loc 1 432 0
 602 004e 4FF47053 		mov	r3, #15360
 603 0052 C4F20203 		movt	r3, 16386
 604 0056 4FF47052 		mov	r2, #15360
 605 005a C4F20202 		movt	r2, 16386
 606 005e 1269     		ldr	r2, [r2, #16]
 607 0060 22F44072 		bic	r2, r2, #768
 608 0064 1A61     		str	r2, [r3, #16]
 433:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      FLASH->CR |= tmp_psize;
 609              		.loc 1 433 0
 610 0066 4FF47053 		mov	r3, #15360
 611 006a C4F20203 		movt	r3, 16386
 612 006e 4FF47052 		mov	r2, #15360
 613 0072 C4F20202 		movt	r2, 16386
 614 0076 1169     		ldr	r1, [r2, #16]
 615 0078 FA68     		ldr	r2, [r7, #12]
 616 007a 0A43     		orrs	r2, r2, r1
 617 007c 1A61     		str	r2, [r3, #16]
 434:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_MER;
 618              		.loc 1 434 0
 619 007e 4FF47053 		mov	r3, #15360
 620 0082 C4F20203 		movt	r3, 16386
 621 0086 4FF47052 		mov	r2, #15360
 622 008a C4F20202 		movt	r2, 16386
 623 008e 1269     		ldr	r2, [r2, #16]
 624 0090 42F00402 		orr	r2, r2, #4
 625 0094 1A61     		str	r2, [r3, #16]
 435:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      FLASH->CR |= FLASH_CR_STRT;
 626              		.loc 1 435 0
 627 0096 4FF47053 		mov	r3, #15360
 628 009a C4F20203 		movt	r3, 16386
 629 009e 4FF47052 		mov	r2, #15360
 630 00a2 C4F20202 		movt	r2, 16386
 631 00a6 1269     		ldr	r2, [r2, #16]
 632 00a8 42F48032 		orr	r2, r2, #65536
 633 00ac 1A61     		str	r2, [r3, #16]
 436:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     
 437:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 438:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 634              		.loc 1 438 0
 635 00ae FFF7FEFF 		bl	FLASH_WaitForLastOperation
 636 00b2 0346     		mov	r3, r0
 637 00b4 FB72     		strb	r3, [r7, #11]
 439:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 440:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the erase operation is completed, disable the MER Bit */
 441:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_MER);
 638              		.loc 1 441 0
 639 00b6 4FF47053 		mov	r3, #15360
 640 00ba C4F20203 		movt	r3, 16386
 641 00be 4FF47052 		mov	r2, #15360
 642 00c2 C4F20202 		movt	r2, 16386
 643 00c6 1269     		ldr	r2, [r2, #16]
 644 00c8 22F00402 		bic	r2, r2, #4
 645 00cc 1A61     		str	r2, [r3, #16]
 646              	.L28:
 442:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 443:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }   
 444:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the Erase Status */
 445:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return status;
 647              		.loc 1 445 0
 648 00ce FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 446:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 649              		.loc 1 446 0
 650 00d0 1846     		mov	r0, r3
 651 00d2 1037     		adds	r7, r7, #16
 652 00d4 BD46     		mov	sp, r7
 653              		@ sp needed
 654 00d6 80BD     		pop	{r7, pc}
 655              		.cfi_endproc
 656              	.LFE119:
 658              		.section	.text.FLASH_ProgramDoubleWord,"ax",%progbits
 659              		.align	2
 660              		.global	FLASH_ProgramDoubleWord
 661              		.thumb
 662              		.thumb_func
 664              	FLASH_ProgramDoubleWord:
 665              	.LFB120:
 447:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 448:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 449:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Programs a double word (64-bit) at a specified address.
 450:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @note   This function must be used when the device voltage range is from
 451:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *         2.7V to 3.6V and an External Vpp is present.           
 452:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  Address: specifies the address to be programmed.
 453:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  Data: specifies the data to be programmed.
 454:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 455:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 456:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 457:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FLASH_Status FLASH_ProgramDoubleWord(uint32_t Address, uint64_t Data)
 458:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 666              		.loc 1 458 0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 24
 669              		@ frame_needed = 1, uses_anonymous_args = 0
 670 0000 80B5     		push	{r7, lr}
 671              	.LCFI26:
 672              		.cfi_def_cfa_offset 8
 673              		.cfi_offset 7, -8
 674              		.cfi_offset 14, -4
 675 0002 86B0     		sub	sp, sp, #24
 676              	.LCFI27:
 677              		.cfi_def_cfa_offset 32
 678 0004 00AF     		add	r7, sp, #0
 679              	.LCFI28:
 680              		.cfi_def_cfa_register 7
 681 0006 F860     		str	r0, [r7, #12]
 682 0008 C7E90023 		strd	r2, [r7]
 459:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 683              		.loc 1 459 0
 684 000c 0823     		movs	r3, #8
 685 000e FB75     		strb	r3, [r7, #23]
 460:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 461:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 462:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 463:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 464:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 465:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 686              		.loc 1 465 0
 687 0010 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 688 0014 0346     		mov	r3, r0
 689 0016 FB75     		strb	r3, [r7, #23]
 466:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 467:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 690              		.loc 1 467 0
 691 0018 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 692 001a 082B     		cmp	r3, #8
 693 001c 38D1     		bne	.L31
 468:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 469:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to program the new data */
 470:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 694              		.loc 1 470 0
 695 001e 4FF47053 		mov	r3, #15360
 696 0022 C4F20203 		movt	r3, 16386
 697 0026 4FF47052 		mov	r2, #15360
 698 002a C4F20202 		movt	r2, 16386
 699 002e 1269     		ldr	r2, [r2, #16]
 700 0030 22F44072 		bic	r2, r2, #768
 701 0034 1A61     		str	r2, [r3, #16]
 471:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_DOUBLE_WORD;
 702              		.loc 1 471 0
 703 0036 4FF47053 		mov	r3, #15360
 704 003a C4F20203 		movt	r3, 16386
 705 003e 4FF47052 		mov	r2, #15360
 706 0042 C4F20202 		movt	r2, 16386
 707 0046 1269     		ldr	r2, [r2, #16]
 708 0048 42F44072 		orr	r2, r2, #768
 709 004c 1A61     		str	r2, [r3, #16]
 472:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 710              		.loc 1 472 0
 711 004e 4FF47053 		mov	r3, #15360
 712 0052 C4F20203 		movt	r3, 16386
 713 0056 4FF47052 		mov	r2, #15360
 714 005a C4F20202 		movt	r2, 16386
 715 005e 1269     		ldr	r2, [r2, #16]
 716 0060 42F00102 		orr	r2, r2, #1
 717 0064 1A61     		str	r2, [r3, #16]
 473:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 474:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     *(__IO uint64_t*)Address = Data;
 718              		.loc 1 474 0
 719 0066 F968     		ldr	r1, [r7, #12]
 720 0068 D7E90023 		ldrd	r2, [r7]
 721 006c C1E90023 		strd	r2, [r1]
 475:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         
 476:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 477:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 722              		.loc 1 477 0
 723 0070 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 724 0074 0346     		mov	r3, r0
 725 0076 FB75     		strb	r3, [r7, #23]
 478:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 479:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the program operation is completed, disable the PG Bit */
 480:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_PG);
 726              		.loc 1 480 0
 727 0078 4FF47053 		mov	r3, #15360
 728 007c C4F20203 		movt	r3, 16386
 729 0080 4FF47052 		mov	r2, #15360
 730 0084 C4F20202 		movt	r2, 16386
 731 0088 1269     		ldr	r2, [r2, #16]
 732 008a 22F00102 		bic	r2, r2, #1
 733 008e 1A61     		str	r2, [r3, #16]
 734              	.L31:
 481:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   } 
 482:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the Program Status */
 483:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return status;
 735              		.loc 1 483 0
 736 0090 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 484:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 737              		.loc 1 484 0
 738 0092 1846     		mov	r0, r3
 739 0094 1837     		adds	r7, r7, #24
 740 0096 BD46     		mov	sp, r7
 741              		@ sp needed
 742 0098 80BD     		pop	{r7, pc}
 743              		.cfi_endproc
 744              	.LFE120:
 746 009a 00BF     		.section	.text.FLASH_ProgramWord,"ax",%progbits
 747              		.align	2
 748              		.global	FLASH_ProgramWord
 749              		.thumb
 750              		.thumb_func
 752              	FLASH_ProgramWord:
 753              	.LFB121:
 485:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 486:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 487:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Programs a word (32-bit) at a specified address.
 488:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  Address: specifies the address to be programmed.
 489:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *         This parameter can be any address in Program memory zone or in OTP zone.  
 490:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @note   This function must be used when the device voltage range is from 2.7V to 3.6V. 
 491:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  Data: specifies the data to be programmed.
 492:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 493:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 494:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 495:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FLASH_Status FLASH_ProgramWord(uint32_t Address, uint32_t Data)
 496:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 754              		.loc 1 496 0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 16
 757              		@ frame_needed = 1, uses_anonymous_args = 0
 758 0000 80B5     		push	{r7, lr}
 759              	.LCFI29:
 760              		.cfi_def_cfa_offset 8
 761              		.cfi_offset 7, -8
 762              		.cfi_offset 14, -4
 763 0002 84B0     		sub	sp, sp, #16
 764              	.LCFI30:
 765              		.cfi_def_cfa_offset 24
 766 0004 00AF     		add	r7, sp, #0
 767              	.LCFI31:
 768              		.cfi_def_cfa_register 7
 769 0006 7860     		str	r0, [r7, #4]
 770 0008 3960     		str	r1, [r7]
 497:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 771              		.loc 1 497 0
 772 000a 0823     		movs	r3, #8
 773 000c FB73     		strb	r3, [r7, #15]
 498:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 499:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 500:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 501:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 502:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 503:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 774              		.loc 1 503 0
 775 000e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 776 0012 0346     		mov	r3, r0
 777 0014 FB73     		strb	r3, [r7, #15]
 504:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 505:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 778              		.loc 1 505 0
 779 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 780 0018 082B     		cmp	r3, #8
 781 001a 36D1     		bne	.L34
 506:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 507:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to program the new data */
 508:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 782              		.loc 1 508 0
 783 001c 4FF47053 		mov	r3, #15360
 784 0020 C4F20203 		movt	r3, 16386
 785 0024 4FF47052 		mov	r2, #15360
 786 0028 C4F20202 		movt	r2, 16386
 787 002c 1269     		ldr	r2, [r2, #16]
 788 002e 22F44072 		bic	r2, r2, #768
 789 0032 1A61     		str	r2, [r3, #16]
 509:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_WORD;
 790              		.loc 1 509 0
 791 0034 4FF47053 		mov	r3, #15360
 792 0038 C4F20203 		movt	r3, 16386
 793 003c 4FF47052 		mov	r2, #15360
 794 0040 C4F20202 		movt	r2, 16386
 795 0044 1269     		ldr	r2, [r2, #16]
 796 0046 42F40072 		orr	r2, r2, #512
 797 004a 1A61     		str	r2, [r3, #16]
 510:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 798              		.loc 1 510 0
 799 004c 4FF47053 		mov	r3, #15360
 800 0050 C4F20203 		movt	r3, 16386
 801 0054 4FF47052 		mov	r2, #15360
 802 0058 C4F20202 		movt	r2, 16386
 803 005c 1269     		ldr	r2, [r2, #16]
 804 005e 42F00102 		orr	r2, r2, #1
 805 0062 1A61     		str	r2, [r3, #16]
 511:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 512:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     *(__IO uint32_t*)Address = Data;
 806              		.loc 1 512 0
 807 0064 7B68     		ldr	r3, [r7, #4]
 808 0066 3A68     		ldr	r2, [r7]
 809 0068 1A60     		str	r2, [r3]
 513:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         
 514:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 515:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 810              		.loc 1 515 0
 811 006a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 812 006e 0346     		mov	r3, r0
 813 0070 FB73     		strb	r3, [r7, #15]
 516:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 517:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the program operation is completed, disable the PG Bit */
 518:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_PG);
 814              		.loc 1 518 0
 815 0072 4FF47053 		mov	r3, #15360
 816 0076 C4F20203 		movt	r3, 16386
 817 007a 4FF47052 		mov	r2, #15360
 818 007e C4F20202 		movt	r2, 16386
 819 0082 1269     		ldr	r2, [r2, #16]
 820 0084 22F00102 		bic	r2, r2, #1
 821 0088 1A61     		str	r2, [r3, #16]
 822              	.L34:
 519:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   } 
 520:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the Program Status */
 521:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return status;
 823              		.loc 1 521 0
 824 008a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 522:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 825              		.loc 1 522 0
 826 008c 1846     		mov	r0, r3
 827 008e 1037     		adds	r7, r7, #16
 828 0090 BD46     		mov	sp, r7
 829              		@ sp needed
 830 0092 80BD     		pop	{r7, pc}
 831              		.cfi_endproc
 832              	.LFE121:
 834              		.section	.text.FLASH_ProgramHalfWord,"ax",%progbits
 835              		.align	2
 836              		.global	FLASH_ProgramHalfWord
 837              		.thumb
 838              		.thumb_func
 840              	FLASH_ProgramHalfWord:
 841              	.LFB122:
 523:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 524:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 525:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Programs a half word (16-bit) at a specified address. 
 526:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @note   This function must be used when the device voltage range is from 2.1V to 3.6V.         
 527:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  Address: specifies the address to be programmed.
 528:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *         This parameter can be any address in Program memory zone or in OTP zone.  
 529:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  Data: specifies the data to be programmed.
 530:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 531:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 532:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 533:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FLASH_Status FLASH_ProgramHalfWord(uint32_t Address, uint16_t Data)
 534:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 842              		.loc 1 534 0
 843              		.cfi_startproc
 844              		@ args = 0, pretend = 0, frame = 16
 845              		@ frame_needed = 1, uses_anonymous_args = 0
 846 0000 80B5     		push	{r7, lr}
 847              	.LCFI32:
 848              		.cfi_def_cfa_offset 8
 849              		.cfi_offset 7, -8
 850              		.cfi_offset 14, -4
 851 0002 84B0     		sub	sp, sp, #16
 852              	.LCFI33:
 853              		.cfi_def_cfa_offset 24
 854 0004 00AF     		add	r7, sp, #0
 855              	.LCFI34:
 856              		.cfi_def_cfa_register 7
 857 0006 7860     		str	r0, [r7, #4]
 858 0008 0B46     		mov	r3, r1
 859 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 535:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 860              		.loc 1 535 0
 861 000c 0823     		movs	r3, #8
 862 000e FB73     		strb	r3, [r7, #15]
 536:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 537:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 538:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 539:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 540:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 541:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 863              		.loc 1 541 0
 864 0010 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 865 0014 0346     		mov	r3, r0
 866 0016 FB73     		strb	r3, [r7, #15]
 542:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 543:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 867              		.loc 1 543 0
 868 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 869 001a 082B     		cmp	r3, #8
 870 001c 36D1     		bne	.L37
 544:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 545:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to program the new data */
 546:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 871              		.loc 1 546 0
 872 001e 4FF47053 		mov	r3, #15360
 873 0022 C4F20203 		movt	r3, 16386
 874 0026 4FF47052 		mov	r2, #15360
 875 002a C4F20202 		movt	r2, 16386
 876 002e 1269     		ldr	r2, [r2, #16]
 877 0030 22F44072 		bic	r2, r2, #768
 878 0034 1A61     		str	r2, [r3, #16]
 547:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_HALF_WORD;
 879              		.loc 1 547 0
 880 0036 4FF47053 		mov	r3, #15360
 881 003a C4F20203 		movt	r3, 16386
 882 003e 4FF47052 		mov	r2, #15360
 883 0042 C4F20202 		movt	r2, 16386
 884 0046 1269     		ldr	r2, [r2, #16]
 885 0048 42F48072 		orr	r2, r2, #256
 886 004c 1A61     		str	r2, [r3, #16]
 548:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 887              		.loc 1 548 0
 888 004e 4FF47053 		mov	r3, #15360
 889 0052 C4F20203 		movt	r3, 16386
 890 0056 4FF47052 		mov	r2, #15360
 891 005a C4F20202 		movt	r2, 16386
 892 005e 1269     		ldr	r2, [r2, #16]
 893 0060 42F00102 		orr	r2, r2, #1
 894 0064 1A61     		str	r2, [r3, #16]
 549:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 550:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     *(__IO uint16_t*)Address = Data;
 895              		.loc 1 550 0
 896 0066 7B68     		ldr	r3, [r7, #4]
 897 0068 7A88     		ldrh	r2, [r7, #2]	@ movhi
 898 006a 1A80     		strh	r2, [r3]	@ movhi
 551:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         
 552:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 553:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 899              		.loc 1 553 0
 900 006c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 901 0070 0346     		mov	r3, r0
 902 0072 FB73     		strb	r3, [r7, #15]
 554:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 555:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the program operation is completed, disable the PG Bit */
 556:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_PG);
 903              		.loc 1 556 0
 904 0074 4FF47053 		mov	r3, #15360
 905 0078 C4F20203 		movt	r3, 16386
 906 007c 4FF47052 		mov	r2, #15360
 907 0080 C4F20202 		movt	r2, 16386
 908 0084 1269     		ldr	r2, [r2, #16]
 909 0086 22F00102 		bic	r2, r2, #1
 910 008a 1A61     		str	r2, [r3, #16]
 911              	.L37:
 557:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   } 
 558:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the Program Status */
 559:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return status;
 912              		.loc 1 559 0
 913 008c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 560:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 914              		.loc 1 560 0
 915 008e 1846     		mov	r0, r3
 916 0090 1037     		adds	r7, r7, #16
 917 0092 BD46     		mov	sp, r7
 918              		@ sp needed
 919 0094 80BD     		pop	{r7, pc}
 920              		.cfi_endproc
 921              	.LFE122:
 923 0096 00BF     		.section	.text.FLASH_ProgramByte,"ax",%progbits
 924              		.align	2
 925              		.global	FLASH_ProgramByte
 926              		.thumb
 927              		.thumb_func
 929              	FLASH_ProgramByte:
 930              	.LFB123:
 561:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 562:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 563:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Programs a byte (8-bit) at a specified address.
 564:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @note   This function can be used within all the device supply voltage ranges.               
 565:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  Address: specifies the address to be programmed.
 566:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *         This parameter can be any address in Program memory zone or in OTP zone.  
 567:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  Data: specifies the data to be programmed.
 568:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 569:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 570:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 571:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FLASH_Status FLASH_ProgramByte(uint32_t Address, uint8_t Data)
 572:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 931              		.loc 1 572 0
 932              		.cfi_startproc
 933              		@ args = 0, pretend = 0, frame = 16
 934              		@ frame_needed = 1, uses_anonymous_args = 0
 935 0000 80B5     		push	{r7, lr}
 936              	.LCFI35:
 937              		.cfi_def_cfa_offset 8
 938              		.cfi_offset 7, -8
 939              		.cfi_offset 14, -4
 940 0002 84B0     		sub	sp, sp, #16
 941              	.LCFI36:
 942              		.cfi_def_cfa_offset 24
 943 0004 00AF     		add	r7, sp, #0
 944              	.LCFI37:
 945              		.cfi_def_cfa_register 7
 946 0006 7860     		str	r0, [r7, #4]
 947 0008 0B46     		mov	r3, r1
 948 000a FB70     		strb	r3, [r7, #3]
 573:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 949              		.loc 1 573 0
 950 000c 0823     		movs	r3, #8
 951 000e FB73     		strb	r3, [r7, #15]
 574:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 575:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 576:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_ADDRESS(Address));
 577:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 578:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 579:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 952              		.loc 1 579 0
 953 0010 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 954 0014 0346     		mov	r3, r0
 955 0016 FB73     		strb	r3, [r7, #15]
 580:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 581:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 956              		.loc 1 581 0
 957 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 958 001a 082B     		cmp	r3, #8
 959 001c 34D1     		bne	.L40
 582:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 583:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the previous operation is completed, proceed to program the new data */
 584:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= CR_PSIZE_MASK;
 960              		.loc 1 584 0
 961 001e 4FF47053 		mov	r3, #15360
 962 0022 C4F20203 		movt	r3, 16386
 963 0026 4FF47052 		mov	r2, #15360
 964 002a C4F20202 		movt	r2, 16386
 965 002e 1269     		ldr	r2, [r2, #16]
 966 0030 22F44072 		bic	r2, r2, #768
 967 0034 1A61     		str	r2, [r3, #16]
 585:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_PSIZE_BYTE;
 968              		.loc 1 585 0
 969 0036 4FF47053 		mov	r3, #15360
 970 003a C4F20203 		movt	r3, 16386
 971 003e 4FF47052 		mov	r2, #15360
 972 0042 C4F20202 		movt	r2, 16386
 973 0046 1269     		ldr	r2, [r2, #16]
 974 0048 1A61     		str	r2, [r3, #16]
 586:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_CR_PG;
 975              		.loc 1 586 0
 976 004a 4FF47053 		mov	r3, #15360
 977 004e C4F20203 		movt	r3, 16386
 978 0052 4FF47052 		mov	r2, #15360
 979 0056 C4F20202 		movt	r2, 16386
 980 005a 1269     		ldr	r2, [r2, #16]
 981 005c 42F00102 		orr	r2, r2, #1
 982 0060 1A61     		str	r2, [r3, #16]
 587:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 588:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     *(__IO uint8_t*)Address = Data;
 983              		.loc 1 588 0
 984 0062 7B68     		ldr	r3, [r7, #4]
 985 0064 FA78     		ldrb	r2, [r7, #3]
 986 0066 1A70     		strb	r2, [r3]
 589:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         
 590:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Wait for last operation to be completed */
 591:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     status = FLASH_WaitForLastOperation();
 987              		.loc 1 591 0
 988 0068 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 989 006c 0346     		mov	r3, r0
 990 006e FB73     		strb	r3, [r7, #15]
 592:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 593:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* if the program operation is completed, disable the PG Bit */
 594:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= (~FLASH_CR_PG);
 991              		.loc 1 594 0
 992 0070 4FF47053 		mov	r3, #15360
 993 0074 C4F20203 		movt	r3, 16386
 994 0078 4FF47052 		mov	r2, #15360
 995 007c C4F20202 		movt	r2, 16386
 996 0080 1269     		ldr	r2, [r2, #16]
 997 0082 22F00102 		bic	r2, r2, #1
 998 0086 1A61     		str	r2, [r3, #16]
 999              	.L40:
 595:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   } 
 596:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 597:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the Program Status */
 598:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return status;
 1000              		.loc 1 598 0
 1001 0088 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 599:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1002              		.loc 1 599 0
 1003 008a 1846     		mov	r0, r3
 1004 008c 1037     		adds	r7, r7, #16
 1005 008e BD46     		mov	sp, r7
 1006              		@ sp needed
 1007 0090 80BD     		pop	{r7, pc}
 1008              		.cfi_endproc
 1009              	.LFE123:
 1011 0092 00BF     		.section	.text.FLASH_OB_Unlock,"ax",%progbits
 1012              		.align	2
 1013              		.global	FLASH_OB_Unlock
 1014              		.thumb
 1015              		.thumb_func
 1017              	FLASH_OB_Unlock:
 1018              	.LFB124:
 600:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 601:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 602:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @}
 603:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 604:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 605:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /** @defgroup FLASH_Group3 Option Bytes Programming functions
 606:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  *  @brief   Option Bytes Programming functions 
 607:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  *
 608:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** @verbatim   
 609:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  ===============================================================================
 610:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****                         Option Bytes Programming functions
 611:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  ===============================================================================  
 612:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  
 613:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    This group includes the following functions:
 614:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - void FLASH_OB_Unlock(void)
 615:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - void FLASH_OB_Lock(void)
 616:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - void FLASH_OB_WRPConfig(uint32_t OB_WRP, FunctionalState NewState)
 617:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - void FLASH_OB_RDPConfig(uint8_t OB_RDP)
 618:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - void FLASH_OB_UserConfig(uint8_t OB_IWDG, uint8_t OB_STOP, uint8_t OB_STDBY)
 619:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - void FLASH_OB_BORConfig(uint8_t OB_BOR)
 620:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - FLASH_Status FLASH_ProgramOTP(uint32_t Address, uint32_t Data)							
 621:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - FLASH_Status FLASH_OB_Launch(void)
 622:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - uint32_t FLASH_OB_GetUser(void)						
 623:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - uint8_t FLASH_OB_GetWRP(void)						
 624:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - uint8_t FLASH_OB_GetRDP(void)							
 625:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    - uint8_t FLASH_OB_GetBOR(void)
 626:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    
 627:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    Any operation of erase or program should follow these steps:
 628:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    1. Call the FLASH_OB_Unlock() function to enable the FLASH option control register access
 629:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 630:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    2. Call one or several functions to program the desired Option Bytes:
 631:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       - void FLASH_OB_WRPConfig(uint32_t OB_WRP, FunctionalState NewState) => to Enable/Disable 
 632:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         the desired sector write protection
 633:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       - void FLASH_OB_RDPConfig(uint8_t OB_RDP) => to set the desired read Protection Level
 634:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       - void FLASH_OB_UserConfig(uint8_t OB_IWDG, uint8_t OB_STOP, uint8_t OB_STDBY) => to configur
 635:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         the user Option Bytes.
 636:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       - void FLASH_OB_BORConfig(uint8_t OB_BOR) => to set the BOR Level 			 
 637:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 638:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    3. Once all needed Option Bytes to be programmed are correctly written, call the
 639:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       FLASH_OB_Launch() function to launch the Option Bytes programming process.
 640:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      
 641:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      @note When changing the IWDG mode from HW to SW or from SW to HW, a system 
 642:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****            reset is needed to make the change effective.  
 643:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 644:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    4. Call the FLASH_OB_Lock() function to disable the FLASH option control register
 645:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       access (recommended to protect the Option Bytes against possible unwanted operations)
 646:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     
 647:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** @endverbatim
 648:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @{
 649:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 650:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 651:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 652:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Unlocks the FLASH Option Control Registers access.
 653:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 654:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 655:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 656:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_OB_Unlock(void)
 657:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1019              		.loc 1 657 0
 1020              		.cfi_startproc
 1021              		@ args = 0, pretend = 0, frame = 0
 1022              		@ frame_needed = 1, uses_anonymous_args = 0
 1023              		@ link register save eliminated.
 1024 0000 80B4     		push	{r7}
 1025              	.LCFI38:
 1026              		.cfi_def_cfa_offset 4
 1027              		.cfi_offset 7, -4
 1028 0002 00AF     		add	r7, sp, #0
 1029              	.LCFI39:
 1030              		.cfi_def_cfa_register 7
 658:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if((FLASH->OPTCR & FLASH_OPTCR_OPTLOCK) != RESET)
 1031              		.loc 1 658 0
 1032 0004 4FF47053 		mov	r3, #15360
 1033 0008 C4F20203 		movt	r3, 16386
 1034 000c 5B69     		ldr	r3, [r3, #20]
 1035 000e 03F00103 		and	r3, r3, #1
 1036 0012 002B     		cmp	r3, #0
 1037 0014 11D0     		beq	.L42
 659:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 660:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Authorizes the Option Byte register programming */
 661:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->OPTKEYR = FLASH_OPT_KEY1;
 1038              		.loc 1 661 0
 1039 0016 4FF47053 		mov	r3, #15360
 1040 001a C4F20203 		movt	r3, 16386
 1041 001e 42F63B22 		movw	r2, #10811
 1042 0022 C0F61902 		movt	r2, 2073
 1043 0026 9A60     		str	r2, [r3, #8]
 662:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->OPTKEYR = FLASH_OPT_KEY2;
 1044              		.loc 1 662 0
 1045 0028 4FF47053 		mov	r3, #15360
 1046 002c C4F20203 		movt	r3, 16386
 1047 0030 46F67F62 		movw	r2, #28287
 1048 0034 C4F65D42 		movt	r2, 19549
 1049 0038 9A60     		str	r2, [r3, #8]
 1050              	.L42:
 663:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }  
 664:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1051              		.loc 1 664 0
 1052 003a BD46     		mov	sp, r7
 1053              		@ sp needed
 1054 003c 5DF8047B 		ldr	r7, [sp], #4
 1055 0040 7047     		bx	lr
 1056              		.cfi_endproc
 1057              	.LFE124:
 1059 0042 00BF     		.section	.text.FLASH_OB_Lock,"ax",%progbits
 1060              		.align	2
 1061              		.global	FLASH_OB_Lock
 1062              		.thumb
 1063              		.thumb_func
 1065              	FLASH_OB_Lock:
 1066              	.LFB125:
 665:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 666:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 667:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Locks the FLASH Option Control Registers access.
 668:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 669:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 670:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 671:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_OB_Lock(void)
 672:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1067              		.loc 1 672 0
 1068              		.cfi_startproc
 1069              		@ args = 0, pretend = 0, frame = 0
 1070              		@ frame_needed = 1, uses_anonymous_args = 0
 1071              		@ link register save eliminated.
 1072 0000 80B4     		push	{r7}
 1073              	.LCFI40:
 1074              		.cfi_def_cfa_offset 4
 1075              		.cfi_offset 7, -4
 1076 0002 00AF     		add	r7, sp, #0
 1077              	.LCFI41:
 1078              		.cfi_def_cfa_register 7
 673:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Set the OPTLOCK Bit to lock the FLASH Option Byte Registers access */
 674:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH->OPTCR |= FLASH_OPTCR_OPTLOCK;
 1079              		.loc 1 674 0
 1080 0004 4FF47053 		mov	r3, #15360
 1081 0008 C4F20203 		movt	r3, 16386
 1082 000c 4FF47052 		mov	r2, #15360
 1083 0010 C4F20202 		movt	r2, 16386
 1084 0014 5269     		ldr	r2, [r2, #20]
 1085 0016 42F00102 		orr	r2, r2, #1
 1086 001a 5A61     		str	r2, [r3, #20]
 675:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1087              		.loc 1 675 0
 1088 001c BD46     		mov	sp, r7
 1089              		@ sp needed
 1090 001e 5DF8047B 		ldr	r7, [sp], #4
 1091 0022 7047     		bx	lr
 1092              		.cfi_endproc
 1093              	.LFE125:
 1095              		.section	.text.FLASH_OB_WRPConfig,"ax",%progbits
 1096              		.align	2
 1097              		.global	FLASH_OB_WRPConfig
 1098              		.thumb
 1099              		.thumb_func
 1101              	FLASH_OB_WRPConfig:
 1102              	.LFB126:
 676:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 677:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 678:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Enables or disables the write protection of the desired sectors
 679:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  OB_WRP: specifies the sector(s) to be write protected or unprotected.
 680:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 681:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_WRP: A value between OB_WRP_Sector0 and OB_WRP_Sector11                     
 682:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_WRP_Sector_All
 683:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  Newstate: new state of the Write Protection.
 684:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be: ENABLE or DISABLE.
 685:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None  
 686:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 687:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_OB_WRPConfig(uint32_t OB_WRP, FunctionalState NewState)
 688:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** { 
 1103              		.loc 1 688 0
 1104              		.cfi_startproc
 1105              		@ args = 0, pretend = 0, frame = 16
 1106              		@ frame_needed = 1, uses_anonymous_args = 0
 1107 0000 80B5     		push	{r7, lr}
 1108              	.LCFI42:
 1109              		.cfi_def_cfa_offset 8
 1110              		.cfi_offset 7, -8
 1111              		.cfi_offset 14, -4
 1112 0002 84B0     		sub	sp, sp, #16
 1113              	.LCFI43:
 1114              		.cfi_def_cfa_offset 24
 1115 0004 00AF     		add	r7, sp, #0
 1116              	.LCFI44:
 1117              		.cfi_def_cfa_register 7
 1118 0006 7860     		str	r0, [r7, #4]
 1119 0008 0B46     		mov	r3, r1
 1120 000a FB70     		strb	r3, [r7, #3]
 689:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1121              		.loc 1 689 0
 1122 000c 0823     		movs	r3, #8
 1123 000e FB73     		strb	r3, [r7, #15]
 690:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 691:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 692:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_OB_WRP(OB_WRP));
 693:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 694:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     
 695:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 1124              		.loc 1 695 0
 1125 0010 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1126 0014 0346     		mov	r3, r0
 1127 0016 FB73     		strb	r3, [r7, #15]
 696:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 697:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 1128              		.loc 1 697 0
 1129 0018 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1130 001a 082B     		cmp	r3, #8
 1131 001c 23D1     		bne	.L45
 698:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   { 
 699:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     if(NewState != DISABLE)
 1132              		.loc 1 699 0
 1133 001e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1134 0020 002B     		cmp	r3, #0
 1135 0022 11D0     		beq	.L47
 700:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     {
 701:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS &= (~OB_WRP);
 1136              		.loc 1 701 0
 1137 0024 43F61643 		movw	r3, #15382
 1138 0028 C4F20203 		movt	r3, 16386
 1139 002c 43F61642 		movw	r2, #15382
 1140 0030 C4F20202 		movt	r2, 16386
 1141 0034 1288     		ldrh	r2, [r2]	@ movhi
 1142 0036 91B2     		uxth	r1, r2
 1143 0038 7A68     		ldr	r2, [r7, #4]
 1144 003a 92B2     		uxth	r2, r2
 1145 003c D243     		mvns	r2, r2
 1146 003e 92B2     		uxth	r2, r2
 1147 0040 0A40     		ands	r2, r2, r1
 1148 0042 92B2     		uxth	r2, r2
 1149 0044 1A80     		strh	r2, [r3]	@ movhi
 1150 0046 0EE0     		b	.L45
 1151              	.L47:
 702:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     }
 703:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     else
 704:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     {
 705:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       *(__IO uint16_t*)OPTCR_BYTE2_ADDRESS |= (uint16_t)OB_WRP;
 1152              		.loc 1 705 0
 1153 0048 43F61643 		movw	r3, #15382
 1154 004c C4F20203 		movt	r3, 16386
 1155 0050 43F61642 		movw	r2, #15382
 1156 0054 C4F20202 		movt	r2, 16386
 1157 0058 1288     		ldrh	r2, [r2]	@ movhi
 1158 005a 91B2     		uxth	r1, r2
 1159 005c 7A68     		ldr	r2, [r7, #4]
 1160 005e 92B2     		uxth	r2, r2
 1161 0060 0A43     		orrs	r2, r2, r1
 1162 0062 92B2     		uxth	r2, r2
 1163 0064 1A80     		strh	r2, [r3]	@ movhi
 1164              	.L45:
 706:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     }
 707:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 708:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1165              		.loc 1 708 0
 1166 0066 1037     		adds	r7, r7, #16
 1167 0068 BD46     		mov	sp, r7
 1168              		@ sp needed
 1169 006a 80BD     		pop	{r7, pc}
 1170              		.cfi_endproc
 1171              	.LFE126:
 1173              		.section	.text.FLASH_OB_RDPConfig,"ax",%progbits
 1174              		.align	2
 1175              		.global	FLASH_OB_RDPConfig
 1176              		.thumb
 1177              		.thumb_func
 1179              	FLASH_OB_RDPConfig:
 1180              	.LFB127:
 709:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 710:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 711:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Sets the read protection level.
 712:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  OB_RDP: specifies the read protection level.
 713:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 714:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_RDP_Level_0: No protection
 715:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_RDP_Level_1: Read protection of the memory
 716:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_RDP_Level_2: Full chip protection
 717:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *   
 718:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * !!!Warning!!! When enabling OB_RDP level 2 it's no more possible to go back to level 1 or 0
 719:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *    
 720:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 721:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 722:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_OB_RDPConfig(uint8_t OB_RDP)
 723:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1181              		.loc 1 723 0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 16
 1184              		@ frame_needed = 1, uses_anonymous_args = 0
 1185 0000 80B5     		push	{r7, lr}
 1186              	.LCFI45:
 1187              		.cfi_def_cfa_offset 8
 1188              		.cfi_offset 7, -8
 1189              		.cfi_offset 14, -4
 1190 0002 84B0     		sub	sp, sp, #16
 1191              	.LCFI46:
 1192              		.cfi_def_cfa_offset 24
 1193 0004 00AF     		add	r7, sp, #0
 1194              	.LCFI47:
 1195              		.cfi_def_cfa_register 7
 1196 0006 0346     		mov	r3, r0
 1197 0008 FB71     		strb	r3, [r7, #7]
 724:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1198              		.loc 1 724 0
 1199 000a 0823     		movs	r3, #8
 1200 000c FB73     		strb	r3, [r7, #15]
 725:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 726:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 727:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_OB_RDP(OB_RDP));
 728:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 729:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 1201              		.loc 1 729 0
 1202 000e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1203 0012 0346     		mov	r3, r0
 1204 0014 FB73     		strb	r3, [r7, #15]
 730:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 731:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 1205              		.loc 1 731 0
 1206 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1207 0018 082B     		cmp	r3, #8
 1208 001a 05D1     		bne	.L48
 732:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 733:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     *(__IO uint8_t*)OPTCR_BYTE1_ADDRESS = OB_RDP;
 1209              		.loc 1 733 0
 1210 001c 43F61543 		movw	r3, #15381
 1211 0020 C4F20203 		movt	r3, 16386
 1212 0024 FA79     		ldrb	r2, [r7, #7]
 1213 0026 1A70     		strb	r2, [r3]
 1214              	.L48:
 734:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 735:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 736:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1215              		.loc 1 736 0
 1216 0028 1037     		adds	r7, r7, #16
 1217 002a BD46     		mov	sp, r7
 1218              		@ sp needed
 1219 002c 80BD     		pop	{r7, pc}
 1220              		.cfi_endproc
 1221              	.LFE127:
 1223 002e 00BF     		.section	.text.FLASH_OB_UserConfig,"ax",%progbits
 1224              		.align	2
 1225              		.global	FLASH_OB_UserConfig
 1226              		.thumb
 1227              		.thumb_func
 1229              	FLASH_OB_UserConfig:
 1230              	.LFB128:
 737:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 738:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 739:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Programs the FLASH User Option Byte: IWDG_SW / RST_STOP / RST_STDBY.    
 740:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  OB_IWDG: Selects the IWDG mode
 741:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 742:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_IWDG_SW: Software IWDG selected
 743:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_IWDG_HW: Hardware IWDG selected
 744:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  OB_STOP: Reset event when entering STOP mode.
 745:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter  can be one of the following values:
 746:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_STOP_NoRST: No reset generated when entering in STOP
 747:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_STOP_RST: Reset generated when entering in STOP
 748:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  OB_STDBY: Reset event when entering Standby mode.
 749:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter  can be one of the following values:
 750:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_STDBY_NoRST: No reset generated when entering in STANDBY
 751:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_STDBY_RST: Reset generated when entering in STANDBY
 752:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 753:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 754:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_OB_UserConfig(uint8_t OB_IWDG, uint8_t OB_STOP, uint8_t OB_STDBY)
 755:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1231              		.loc 1 755 0
 1232              		.cfi_startproc
 1233              		@ args = 0, pretend = 0, frame = 16
 1234              		@ frame_needed = 1, uses_anonymous_args = 0
 1235 0000 80B5     		push	{r7, lr}
 1236              	.LCFI48:
 1237              		.cfi_def_cfa_offset 8
 1238              		.cfi_offset 7, -8
 1239              		.cfi_offset 14, -4
 1240 0002 84B0     		sub	sp, sp, #16
 1241              	.LCFI49:
 1242              		.cfi_def_cfa_offset 24
 1243 0004 00AF     		add	r7, sp, #0
 1244              	.LCFI50:
 1245              		.cfi_def_cfa_register 7
 1246 0006 1346     		mov	r3, r2
 1247 0008 0246     		mov	r2, r0
 1248 000a FA71     		strb	r2, [r7, #7]
 1249 000c 0A46     		mov	r2, r1
 1250 000e BA71     		strb	r2, [r7, #6]
 1251 0010 7B71     		strb	r3, [r7, #5]
 756:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   uint8_t optiontmp = 0xFF;
 1252              		.loc 1 756 0
 1253 0012 FF23     		movs	r3, #255
 1254 0014 FB73     		strb	r3, [r7, #15]
 757:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE; 
 1255              		.loc 1 757 0
 1256 0016 0823     		movs	r3, #8
 1257 0018 BB73     		strb	r3, [r7, #14]
 758:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 759:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 760:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_OB_IWDG_SOURCE(OB_IWDG));
 761:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_OB_STOP_SOURCE(OB_STOP));
 762:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_OB_STDBY_SOURCE(OB_STDBY));
 763:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 764:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 765:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 1258              		.loc 1 765 0
 1259 001a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1260 001e 0346     		mov	r3, r0
 1261 0020 BB73     		strb	r3, [r7, #14]
 766:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 767:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(status == FLASH_COMPLETE)
 1262              		.loc 1 767 0
 1263 0022 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1264 0024 082B     		cmp	r3, #8
 1265 0026 17D1     		bne	.L50
 768:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   { 
 769:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Mask OPTLOCK, OPTSTRT and BOR_LEV bits */
 770:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     optiontmp =  (uint8_t)((*(__IO uint8_t *)OPTCR_BYTE0_ADDRESS) & (uint8_t)0x0F); 
 1266              		.loc 1 770 0
 1267 0028 43F61443 		movw	r3, #15380
 1268 002c C4F20203 		movt	r3, 16386
 1269 0030 1B78     		ldrb	r3, [r3]
 1270 0032 DBB2     		uxtb	r3, r3
 1271 0034 03F00F03 		and	r3, r3, #15
 1272 0038 FB73     		strb	r3, [r7, #15]
 771:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 772:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Update User Option Byte */
 773:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS = OB_IWDG | (uint8_t)(OB_STDBY | (uint8_t)(OB_STOP | ((uin
 1273              		.loc 1 773 0
 1274 003a 43F61443 		movw	r3, #15380
 1275 003e C4F20203 		movt	r3, 16386
 1276 0042 B979     		ldrb	r1, [r7, #6]
 1277 0044 FA7B     		ldrb	r2, [r7, #15]
 1278 0046 0A43     		orrs	r2, r2, r1
 1279 0048 D1B2     		uxtb	r1, r2
 1280 004a 7A79     		ldrb	r2, [r7, #5]
 1281 004c 0A43     		orrs	r2, r2, r1
 1282 004e D1B2     		uxtb	r1, r2
 1283 0050 FA79     		ldrb	r2, [r7, #7]
 1284 0052 0A43     		orrs	r2, r2, r1
 1285 0054 D2B2     		uxtb	r2, r2
 1286 0056 1A70     		strb	r2, [r3]
 1287              	.L50:
 774:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }  
 775:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1288              		.loc 1 775 0
 1289 0058 1037     		adds	r7, r7, #16
 1290 005a BD46     		mov	sp, r7
 1291              		@ sp needed
 1292 005c 80BD     		pop	{r7, pc}
 1293              		.cfi_endproc
 1294              	.LFE128:
 1296              		.section	.text.FLASH_OB_BORConfig,"ax",%progbits
 1297              		.align	2
 1298              		.global	FLASH_OB_BORConfig
 1299              		.thumb
 1300              		.thumb_func
 1302              	FLASH_OB_BORConfig:
 1303              	.LFB129:
 776:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 777:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 778:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Sets the BOR Level. 
 779:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  OB_BOR: specifies the Option Bytes BOR Reset Level.
 780:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 781:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_BOR_LEVEL3: Supply voltage ranges from 2.7 to 3.6 V
 782:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_BOR_LEVEL2: Supply voltage ranges from 2.4 to 2.7 V
 783:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_BOR_LEVEL1: Supply voltage ranges from 2.1 to 2.4 V
 784:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg OB_BOR_OFF: Supply voltage ranges from 1.62 to 2.1 V
 785:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 786:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 787:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_OB_BORConfig(uint8_t OB_BOR)
 788:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1304              		.loc 1 788 0
 1305              		.cfi_startproc
 1306              		@ args = 0, pretend = 0, frame = 8
 1307              		@ frame_needed = 1, uses_anonymous_args = 0
 1308              		@ link register save eliminated.
 1309 0000 80B4     		push	{r7}
 1310              	.LCFI51:
 1311              		.cfi_def_cfa_offset 4
 1312              		.cfi_offset 7, -4
 1313 0002 83B0     		sub	sp, sp, #12
 1314              	.LCFI52:
 1315              		.cfi_def_cfa_offset 16
 1316 0004 00AF     		add	r7, sp, #0
 1317              	.LCFI53:
 1318              		.cfi_def_cfa_register 7
 1319 0006 0346     		mov	r3, r0
 1320 0008 FB71     		strb	r3, [r7, #7]
 789:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 790:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_OB_BOR(OB_BOR));
 791:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 792:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Set the BOR Level */
 793:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS &= (~FLASH_OPTCR_BOR_LEV);
 1321              		.loc 1 793 0
 1322 000a 43F61443 		movw	r3, #15380
 1323 000e C4F20203 		movt	r3, 16386
 1324 0012 43F61442 		movw	r2, #15380
 1325 0016 C4F20202 		movt	r2, 16386
 1326 001a 1278     		ldrb	r2, [r2]
 1327 001c D2B2     		uxtb	r2, r2
 1328 001e 22F00C02 		bic	r2, r2, #12
 1329 0022 D2B2     		uxtb	r2, r2
 1330 0024 1A70     		strb	r2, [r3]
 794:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS |= OB_BOR;
 1331              		.loc 1 794 0
 1332 0026 43F61443 		movw	r3, #15380
 1333 002a C4F20203 		movt	r3, 16386
 1334 002e 43F61442 		movw	r2, #15380
 1335 0032 C4F20202 		movt	r2, 16386
 1336 0036 1278     		ldrb	r2, [r2]
 1337 0038 D1B2     		uxtb	r1, r2
 1338 003a FA79     		ldrb	r2, [r7, #7]
 1339 003c 0A43     		orrs	r2, r2, r1
 1340 003e D2B2     		uxtb	r2, r2
 1341 0040 1A70     		strb	r2, [r3]
 795:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 796:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1342              		.loc 1 796 0
 1343 0042 0C37     		adds	r7, r7, #12
 1344 0044 BD46     		mov	sp, r7
 1345              		@ sp needed
 1346 0046 5DF8047B 		ldr	r7, [sp], #4
 1347 004a 7047     		bx	lr
 1348              		.cfi_endproc
 1349              	.LFE129:
 1351              		.section	.text.FLASH_OB_Launch,"ax",%progbits
 1352              		.align	2
 1353              		.global	FLASH_OB_Launch
 1354              		.thumb
 1355              		.thumb_func
 1357              	FLASH_OB_Launch:
 1358              	.LFB130:
 797:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 798:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 799:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Launch the option byte loading.
 800:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 801:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 802:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 803:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 804:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FLASH_Status FLASH_OB_Launch(void)
 805:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1359              		.loc 1 805 0
 1360              		.cfi_startproc
 1361              		@ args = 0, pretend = 0, frame = 8
 1362              		@ frame_needed = 1, uses_anonymous_args = 0
 1363 0000 80B5     		push	{r7, lr}
 1364              	.LCFI54:
 1365              		.cfi_def_cfa_offset 8
 1366              		.cfi_offset 7, -8
 1367              		.cfi_offset 14, -4
 1368 0002 82B0     		sub	sp, sp, #8
 1369              	.LCFI55:
 1370              		.cfi_def_cfa_offset 16
 1371 0004 00AF     		add	r7, sp, #0
 1372              	.LCFI56:
 1373              		.cfi_def_cfa_register 7
 806:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status status = FLASH_COMPLETE;
 1374              		.loc 1 806 0
 1375 0006 0823     		movs	r3, #8
 1376 0008 FB71     		strb	r3, [r7, #7]
 807:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 808:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Set the OPTSTRT bit in OPTCR register */
 809:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *(__IO uint8_t *)OPTCR_BYTE0_ADDRESS |= FLASH_OPTCR_OPTSTRT;
 1377              		.loc 1 809 0
 1378 000a 43F61443 		movw	r3, #15380
 1379 000e C4F20203 		movt	r3, 16386
 1380 0012 43F61442 		movw	r2, #15380
 1381 0016 C4F20202 		movt	r2, 16386
 1382 001a 1278     		ldrb	r2, [r2]
 1383 001c D2B2     		uxtb	r2, r2
 1384 001e 42F00202 		orr	r2, r2, #2
 1385 0022 D2B2     		uxtb	r2, r2
 1386 0024 1A70     		strb	r2, [r3]
 810:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 811:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Wait for last operation to be completed */
 812:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_WaitForLastOperation();
 1387              		.loc 1 812 0
 1388 0026 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1389 002a 0346     		mov	r3, r0
 1390 002c FB71     		strb	r3, [r7, #7]
 813:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 814:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return status;
 1391              		.loc 1 814 0
 1392 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 815:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1393              		.loc 1 815 0
 1394 0030 1846     		mov	r0, r3
 1395 0032 0837     		adds	r7, r7, #8
 1396 0034 BD46     		mov	sp, r7
 1397              		@ sp needed
 1398 0036 80BD     		pop	{r7, pc}
 1399              		.cfi_endproc
 1400              	.LFE130:
 1402              		.section	.text.FLASH_OB_GetUser,"ax",%progbits
 1403              		.align	2
 1404              		.global	FLASH_OB_GetUser
 1405              		.thumb
 1406              		.thumb_func
 1408              	FLASH_OB_GetUser:
 1409              	.LFB131:
 816:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 817:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 818:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Returns the FLASH User Option Bytes values.
 819:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 820:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval The FLASH User Option Bytes values: IWDG_SW(Bit0), RST_STOP(Bit1)
 821:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *         and RST_STDBY(Bit2).
 822:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 823:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** uint8_t FLASH_OB_GetUser(void)
 824:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1410              		.loc 1 824 0
 1411              		.cfi_startproc
 1412              		@ args = 0, pretend = 0, frame = 0
 1413              		@ frame_needed = 1, uses_anonymous_args = 0
 1414              		@ link register save eliminated.
 1415 0000 80B4     		push	{r7}
 1416              	.LCFI57:
 1417              		.cfi_def_cfa_offset 4
 1418              		.cfi_offset 7, -4
 1419 0002 00AF     		add	r7, sp, #0
 1420              	.LCFI58:
 1421              		.cfi_def_cfa_register 7
 825:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the User Option Byte */
 826:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return (uint8_t)(FLASH->OPTCR >> 5);
 1422              		.loc 1 826 0
 1423 0004 4FF47053 		mov	r3, #15360
 1424 0008 C4F20203 		movt	r3, 16386
 1425 000c 5B69     		ldr	r3, [r3, #20]
 1426 000e 5B09     		lsrs	r3, r3, #5
 1427 0010 DBB2     		uxtb	r3, r3
 827:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1428              		.loc 1 827 0
 1429 0012 1846     		mov	r0, r3
 1430 0014 BD46     		mov	sp, r7
 1431              		@ sp needed
 1432 0016 5DF8047B 		ldr	r7, [sp], #4
 1433 001a 7047     		bx	lr
 1434              		.cfi_endproc
 1435              	.LFE131:
 1437              		.section	.text.FLASH_OB_GetWRP,"ax",%progbits
 1438              		.align	2
 1439              		.global	FLASH_OB_GetWRP
 1440              		.thumb
 1441              		.thumb_func
 1443              	FLASH_OB_GetWRP:
 1444              	.LFB132:
 828:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 829:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 830:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Returns the FLASH Write Protection Option Bytes value.
 831:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 832:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval The FLASH Write Protection  Option Bytes value
 833:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 834:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** uint16_t FLASH_OB_GetWRP(void)
 835:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1445              		.loc 1 835 0
 1446              		.cfi_startproc
 1447              		@ args = 0, pretend = 0, frame = 0
 1448              		@ frame_needed = 1, uses_anonymous_args = 0
 1449              		@ link register save eliminated.
 1450 0000 80B4     		push	{r7}
 1451              	.LCFI59:
 1452              		.cfi_def_cfa_offset 4
 1453              		.cfi_offset 7, -4
 1454 0002 00AF     		add	r7, sp, #0
 1455              	.LCFI60:
 1456              		.cfi_def_cfa_register 7
 836:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the FLASH write protection Register value */
 837:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return (*(__IO uint16_t *)(OPTCR_BYTE2_ADDRESS));
 1457              		.loc 1 837 0
 1458 0004 43F61643 		movw	r3, #15382
 1459 0008 C4F20203 		movt	r3, 16386
 1460 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1461 000e 9BB2     		uxth	r3, r3
 838:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1462              		.loc 1 838 0
 1463 0010 1846     		mov	r0, r3
 1464 0012 BD46     		mov	sp, r7
 1465              		@ sp needed
 1466 0014 5DF8047B 		ldr	r7, [sp], #4
 1467 0018 7047     		bx	lr
 1468              		.cfi_endproc
 1469              	.LFE132:
 1471 001a 00BF     		.section	.text.FLASH_OB_GetRDP,"ax",%progbits
 1472              		.align	2
 1473              		.global	FLASH_OB_GetRDP
 1474              		.thumb
 1475              		.thumb_func
 1477              	FLASH_OB_GetRDP:
 1478              	.LFB133:
 839:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 840:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 841:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Returns the FLASH Read Protection level.
 842:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 843:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH ReadOut Protection Status:
 844:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           - SET, when OB_RDP_Level_1 or OB_RDP_Level_2 is set
 845:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           - RESET, when OB_RDP_Level_0 is set
 846:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 847:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FlagStatus FLASH_OB_GetRDP(void)
 848:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1479              		.loc 1 848 0
 1480              		.cfi_startproc
 1481              		@ args = 0, pretend = 0, frame = 8
 1482              		@ frame_needed = 1, uses_anonymous_args = 0
 1483              		@ link register save eliminated.
 1484 0000 80B4     		push	{r7}
 1485              	.LCFI61:
 1486              		.cfi_def_cfa_offset 4
 1487              		.cfi_offset 7, -4
 1488 0002 83B0     		sub	sp, sp, #12
 1489              	.LCFI62:
 1490              		.cfi_def_cfa_offset 16
 1491 0004 00AF     		add	r7, sp, #0
 1492              	.LCFI63:
 1493              		.cfi_def_cfa_register 7
 849:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FlagStatus readstatus = RESET;
 1494              		.loc 1 849 0
 1495 0006 0023     		movs	r3, #0
 1496 0008 FB71     		strb	r3, [r7, #7]
 850:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 851:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if ((*(__IO uint8_t*)(OPTCR_BYTE1_ADDRESS) != (uint8_t)OB_RDP_Level_0))
 1497              		.loc 1 851 0
 1498 000a 43F61543 		movw	r3, #15381
 1499 000e C4F20203 		movt	r3, 16386
 1500 0012 1B78     		ldrb	r3, [r3]
 1501 0014 DBB2     		uxtb	r3, r3
 1502 0016 AA2B     		cmp	r3, #170
 1503 0018 02D0     		beq	.L60
 852:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 853:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     readstatus = SET;
 1504              		.loc 1 853 0
 1505 001a 0123     		movs	r3, #1
 1506 001c FB71     		strb	r3, [r7, #7]
 1507 001e 01E0     		b	.L61
 1508              	.L60:
 854:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 855:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else
 856:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 857:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     readstatus = RESET;
 1509              		.loc 1 857 0
 1510 0020 0023     		movs	r3, #0
 1511 0022 FB71     		strb	r3, [r7, #7]
 1512              	.L61:
 858:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 859:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return readstatus;
 1513              		.loc 1 859 0
 1514 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 860:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1515              		.loc 1 860 0
 1516 0026 1846     		mov	r0, r3
 1517 0028 0C37     		adds	r7, r7, #12
 1518 002a BD46     		mov	sp, r7
 1519              		@ sp needed
 1520 002c 5DF8047B 		ldr	r7, [sp], #4
 1521 0030 7047     		bx	lr
 1522              		.cfi_endproc
 1523              	.LFE133:
 1525 0032 00BF     		.section	.text.FLASH_OB_GetBOR,"ax",%progbits
 1526              		.align	2
 1527              		.global	FLASH_OB_GetBOR
 1528              		.thumb
 1529              		.thumb_func
 1531              	FLASH_OB_GetBOR:
 1532              	.LFB134:
 861:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 862:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 863:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Returns the FLASH BOR level.
 864:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 865:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval The FLASH BOR level:
 866:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           - OB_BOR_LEVEL3: Supply voltage ranges from 2.7 to 3.6 V
 867:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           - OB_BOR_LEVEL2: Supply voltage ranges from 2.4 to 2.7 V
 868:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           - OB_BOR_LEVEL1: Supply voltage ranges from 2.1 to 2.4 V
 869:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *           - OB_BOR_OFF   : Supply voltage ranges from 1.62 to 2.1 V  
 870:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 871:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** uint8_t FLASH_OB_GetBOR(void)
 872:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1533              		.loc 1 872 0
 1534              		.cfi_startproc
 1535              		@ args = 0, pretend = 0, frame = 0
 1536              		@ frame_needed = 1, uses_anonymous_args = 0
 1537              		@ link register save eliminated.
 1538 0000 80B4     		push	{r7}
 1539              	.LCFI64:
 1540              		.cfi_def_cfa_offset 4
 1541              		.cfi_offset 7, -4
 1542 0002 00AF     		add	r7, sp, #0
 1543              	.LCFI65:
 1544              		.cfi_def_cfa_register 7
 873:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the FLASH BOR level */
 874:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return (uint8_t)(*(__IO uint8_t *)(OPTCR_BYTE0_ADDRESS) & (uint8_t)0x0C);
 1545              		.loc 1 874 0
 1546 0004 43F61443 		movw	r3, #15380
 1547 0008 C4F20203 		movt	r3, 16386
 1548 000c 1B78     		ldrb	r3, [r3]
 1549 000e DBB2     		uxtb	r3, r3
 1550 0010 03F00C03 		and	r3, r3, #12
 1551 0014 DBB2     		uxtb	r3, r3
 875:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1552              		.loc 1 875 0
 1553 0016 1846     		mov	r0, r3
 1554 0018 BD46     		mov	sp, r7
 1555              		@ sp needed
 1556 001a 5DF8047B 		ldr	r7, [sp], #4
 1557 001e 7047     		bx	lr
 1558              		.cfi_endproc
 1559              	.LFE134:
 1561              		.section	.text.FLASH_ITConfig,"ax",%progbits
 1562              		.align	2
 1563              		.global	FLASH_ITConfig
 1564              		.thumb
 1565              		.thumb_func
 1567              	FLASH_ITConfig:
 1568              	.LFB135:
 876:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 877:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 878:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @}
 879:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 880:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 881:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /** @defgroup FLASH_Group4 Interrupts and flags management functions
 882:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  *  @brief   Interrupts and flags management functions
 883:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  *
 884:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** @verbatim   
 885:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  ===============================================================================
 886:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****                   Interrupts and flags management functions
 887:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****  ===============================================================================  
 888:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 889:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** @endverbatim
 890:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @{
 891:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 892:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 893:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 894:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Enables or disables the specified FLASH interrupts.
 895:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  FLASH_IT: specifies the FLASH interrupt sources to be enabled or disabled.
 896:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be any combination of the following values:
 897:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_IT_ERR: FLASH Error Interrupt
 898:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_IT_EOP: FLASH end of operation Interrupt
 899:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None 
 900:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 901:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_ITConfig(uint32_t FLASH_IT, FunctionalState NewState)
 902:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1569              		.loc 1 902 0
 1570              		.cfi_startproc
 1571              		@ args = 0, pretend = 0, frame = 8
 1572              		@ frame_needed = 1, uses_anonymous_args = 0
 1573              		@ link register save eliminated.
 1574 0000 80B4     		push	{r7}
 1575              	.LCFI66:
 1576              		.cfi_def_cfa_offset 4
 1577              		.cfi_offset 7, -4
 1578 0002 83B0     		sub	sp, sp, #12
 1579              	.LCFI67:
 1580              		.cfi_def_cfa_offset 16
 1581 0004 00AF     		add	r7, sp, #0
 1582              	.LCFI68:
 1583              		.cfi_def_cfa_register 7
 1584 0006 7860     		str	r0, [r7, #4]
 1585 0008 0B46     		mov	r3, r1
 1586 000a FB70     		strb	r3, [r7, #3]
 903:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 904:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_IT(FLASH_IT)); 
 905:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 906:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 907:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if(NewState != DISABLE)
 1587              		.loc 1 907 0
 1588 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1589 000e 002B     		cmp	r3, #0
 1590 0010 0CD0     		beq	.L66
 908:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 909:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Enable the interrupt sources */
 910:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR |= FLASH_IT;
 1591              		.loc 1 910 0
 1592 0012 4FF47053 		mov	r3, #15360
 1593 0016 C4F20203 		movt	r3, 16386
 1594 001a 4FF47052 		mov	r2, #15360
 1595 001e C4F20202 		movt	r2, 16386
 1596 0022 1169     		ldr	r1, [r2, #16]
 1597 0024 7A68     		ldr	r2, [r7, #4]
 1598 0026 0A43     		orrs	r2, r2, r1
 1599 0028 1A61     		str	r2, [r3, #16]
 1600 002a 0CE0     		b	.L65
 1601              	.L66:
 911:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 912:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else
 913:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 914:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     /* Disable the interrupt sources */
 915:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     FLASH->CR &= ~(uint32_t)FLASH_IT;
 1602              		.loc 1 915 0
 1603 002c 4FF47053 		mov	r3, #15360
 1604 0030 C4F20203 		movt	r3, 16386
 1605 0034 4FF47052 		mov	r2, #15360
 1606 0038 C4F20202 		movt	r2, 16386
 1607 003c 1169     		ldr	r1, [r2, #16]
 1608 003e 7A68     		ldr	r2, [r7, #4]
 1609 0040 D243     		mvns	r2, r2
 1610 0042 0A40     		ands	r2, r2, r1
 1611 0044 1A61     		str	r2, [r3, #16]
 1612              	.L65:
 916:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 917:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1613              		.loc 1 917 0
 1614 0046 0C37     		adds	r7, r7, #12
 1615 0048 BD46     		mov	sp, r7
 1616              		@ sp needed
 1617 004a 5DF8047B 		ldr	r7, [sp], #4
 1618 004e 7047     		bx	lr
 1619              		.cfi_endproc
 1620              	.LFE135:
 1622              		.section	.text.FLASH_GetFlagStatus,"ax",%progbits
 1623              		.align	2
 1624              		.global	FLASH_GetFlagStatus
 1625              		.thumb
 1626              		.thumb_func
 1628              	FLASH_GetFlagStatus:
 1629              	.LFB136:
 918:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 919:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 920:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Checks whether the specified FLASH flag is set or not.
 921:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  FLASH_FLAG: specifies the FLASH flag to check.
 922:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be one of the following values:
 923:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_EOP: FLASH End of Operation flag 
 924:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_OPERR: FLASH operation Error flag 
 925:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_WRPERR: FLASH Write protected error flag 
 926:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGAERR: FLASH Programming Alignment error flag
 927:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGPERR: FLASH Programming Parallelism error flag
 928:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGSERR: FLASH Programming Sequence error flag
 929:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_BSY: FLASH Busy flag
 930:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval The new state of FLASH_FLAG (SET or RESET).
 931:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 932:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FlagStatus FLASH_GetFlagStatus(uint32_t FLASH_FLAG)
 933:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1630              		.loc 1 933 0
 1631              		.cfi_startproc
 1632              		@ args = 0, pretend = 0, frame = 16
 1633              		@ frame_needed = 1, uses_anonymous_args = 0
 1634              		@ link register save eliminated.
 1635 0000 80B4     		push	{r7}
 1636              	.LCFI69:
 1637              		.cfi_def_cfa_offset 4
 1638              		.cfi_offset 7, -4
 1639 0002 85B0     		sub	sp, sp, #20
 1640              	.LCFI70:
 1641              		.cfi_def_cfa_offset 24
 1642 0004 00AF     		add	r7, sp, #0
 1643              	.LCFI71:
 1644              		.cfi_def_cfa_register 7
 1645 0006 7860     		str	r0, [r7, #4]
 934:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FlagStatus bitstatus = RESET;
 1646              		.loc 1 934 0
 1647 0008 0023     		movs	r3, #0
 1648 000a FB73     		strb	r3, [r7, #15]
 935:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 936:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_GET_FLAG(FLASH_FLAG));
 937:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 938:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if((FLASH->SR & FLASH_FLAG) != (uint32_t)RESET)
 1649              		.loc 1 938 0
 1650 000c 4FF47053 		mov	r3, #15360
 1651 0010 C4F20203 		movt	r3, 16386
 1652 0014 DA68     		ldr	r2, [r3, #12]
 1653 0016 7B68     		ldr	r3, [r7, #4]
 1654 0018 1340     		ands	r3, r3, r2
 1655 001a 002B     		cmp	r3, #0
 1656 001c 02D0     		beq	.L69
 939:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 940:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     bitstatus = SET;
 1657              		.loc 1 940 0
 1658 001e 0123     		movs	r3, #1
 1659 0020 FB73     		strb	r3, [r7, #15]
 1660 0022 01E0     		b	.L70
 1661              	.L69:
 941:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 942:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else
 943:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 944:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     bitstatus = RESET;
 1662              		.loc 1 944 0
 1663 0024 0023     		movs	r3, #0
 1664 0026 FB73     		strb	r3, [r7, #15]
 1665              	.L70:
 945:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 946:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the new state of FLASH_FLAG (SET or RESET) */
 947:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return bitstatus; 
 1666              		.loc 1 947 0
 1667 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 948:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1668              		.loc 1 948 0
 1669 002a 1846     		mov	r0, r3
 1670 002c 1437     		adds	r7, r7, #20
 1671 002e BD46     		mov	sp, r7
 1672              		@ sp needed
 1673 0030 5DF8047B 		ldr	r7, [sp], #4
 1674 0034 7047     		bx	lr
 1675              		.cfi_endproc
 1676              	.LFE136:
 1678 0036 00BF     		.section	.text.FLASH_ClearFlag,"ax",%progbits
 1679              		.align	2
 1680              		.global	FLASH_ClearFlag
 1681              		.thumb
 1682              		.thumb_func
 1684              	FLASH_ClearFlag:
 1685              	.LFB137:
 949:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 950:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 951:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Clears the FLASH's pending flags.
 952:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  FLASH_FLAG: specifies the FLASH flags to clear.
 953:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *          This parameter can be any combination of the following values:
 954:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_EOP: FLASH End of Operation flag 
 955:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_OPERR: FLASH operation Error flag 
 956:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_WRPERR: FLASH Write protected error flag 
 957:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGAERR: FLASH Programming Alignment error flag 
 958:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGPERR: FLASH Programming Parallelism error flag
 959:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *            @arg FLASH_FLAG_PGSERR: FLASH Programming Sequence error flag
 960:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval None
 961:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 962:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** void FLASH_ClearFlag(uint32_t FLASH_FLAG)
 963:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1686              		.loc 1 963 0
 1687              		.cfi_startproc
 1688              		@ args = 0, pretend = 0, frame = 8
 1689              		@ frame_needed = 1, uses_anonymous_args = 0
 1690              		@ link register save eliminated.
 1691 0000 80B4     		push	{r7}
 1692              	.LCFI72:
 1693              		.cfi_def_cfa_offset 4
 1694              		.cfi_offset 7, -4
 1695 0002 83B0     		sub	sp, sp, #12
 1696              	.LCFI73:
 1697              		.cfi_def_cfa_offset 16
 1698 0004 00AF     		add	r7, sp, #0
 1699              	.LCFI74:
 1700              		.cfi_def_cfa_register 7
 1701 0006 7860     		str	r0, [r7, #4]
 964:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check the parameters */
 965:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   assert_param(IS_FLASH_CLEAR_FLAG(FLASH_FLAG));
 966:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 967:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Clear the flags */
 968:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH->SR = FLASH_FLAG;
 1702              		.loc 1 968 0
 1703 0008 4FF47053 		mov	r3, #15360
 1704 000c C4F20203 		movt	r3, 16386
 1705 0010 7A68     		ldr	r2, [r7, #4]
 1706 0012 DA60     		str	r2, [r3, #12]
 969:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1707              		.loc 1 969 0
 1708 0014 0C37     		adds	r7, r7, #12
 1709 0016 BD46     		mov	sp, r7
 1710              		@ sp needed
 1711 0018 5DF8047B 		ldr	r7, [sp], #4
 1712 001c 7047     		bx	lr
 1713              		.cfi_endproc
 1714              	.LFE137:
 1716 001e 00BF     		.section	.text.FLASH_GetStatus,"ax",%progbits
 1717              		.align	2
 1718              		.global	FLASH_GetStatus
 1719              		.thumb
 1720              		.thumb_func
 1722              	FLASH_GetStatus:
 1723              	.LFB138:
 970:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
 971:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
 972:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Returns the FLASH Status.
 973:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
 974:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
 975:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
 976:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
 977:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FLASH_Status FLASH_GetStatus(void)
 978:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** {
 1724              		.loc 1 978 0
 1725              		.cfi_startproc
 1726              		@ args = 0, pretend = 0, frame = 8
 1727              		@ frame_needed = 1, uses_anonymous_args = 0
 1728              		@ link register save eliminated.
 1729 0000 80B4     		push	{r7}
 1730              	.LCFI75:
 1731              		.cfi_def_cfa_offset 4
 1732              		.cfi_offset 7, -4
 1733 0002 83B0     		sub	sp, sp, #12
 1734              	.LCFI76:
 1735              		.cfi_def_cfa_offset 16
 1736 0004 00AF     		add	r7, sp, #0
 1737              	.LCFI77:
 1738              		.cfi_def_cfa_register 7
 979:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   FLASH_Status flashstatus = FLASH_COMPLETE;
 1739              		.loc 1 979 0
 1740 0006 0823     		movs	r3, #8
 1741 0008 FB71     		strb	r3, [r7, #7]
 980:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   
 981:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   if((FLASH->SR & FLASH_FLAG_BSY) == FLASH_FLAG_BSY) 
 1742              		.loc 1 981 0
 1743 000a 4FF47053 		mov	r3, #15360
 1744 000e C4F20203 		movt	r3, 16386
 1745 0012 DB68     		ldr	r3, [r3, #12]
 1746 0014 03F48033 		and	r3, r3, #65536
 1747 0018 002B     		cmp	r3, #0
 1748 001a 02D0     		beq	.L74
 982:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 983:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     flashstatus = FLASH_BUSY;
 1749              		.loc 1 983 0
 1750 001c 0123     		movs	r3, #1
 1751 001e FB71     		strb	r3, [r7, #7]
 1752 0020 25E0     		b	.L75
 1753              	.L74:
 984:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
 985:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   else 
 986:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {  
 987:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     if((FLASH->SR & FLASH_FLAG_WRPERR) != (uint32_t)0x00)
 1754              		.loc 1 987 0
 1755 0022 4FF47053 		mov	r3, #15360
 1756 0026 C4F20203 		movt	r3, 16386
 1757 002a DB68     		ldr	r3, [r3, #12]
 1758 002c 03F01003 		and	r3, r3, #16
 1759 0030 002B     		cmp	r3, #0
 1760 0032 02D0     		beq	.L76
 988:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     { 
 989:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       flashstatus = FLASH_ERROR_WRP;
 1761              		.loc 1 989 0
 1762 0034 0523     		movs	r3, #5
 1763 0036 FB71     		strb	r3, [r7, #7]
 1764 0038 19E0     		b	.L75
 1765              	.L76:
 990:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     }
 991:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     else 
 992:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     {
 993:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       if((FLASH->SR & (uint32_t)0xEF) != (uint32_t)0x00)
 1766              		.loc 1 993 0
 1767 003a 4FF47053 		mov	r3, #15360
 1768 003e C4F20203 		movt	r3, 16386
 1769 0042 DB68     		ldr	r3, [r3, #12]
 1770 0044 03F0EF03 		and	r3, r3, #239
 1771 0048 002B     		cmp	r3, #0
 1772 004a 02D0     		beq	.L77
 994:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       {
 995:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         flashstatus = FLASH_ERROR_PROGRAM; 
 1773              		.loc 1 995 0
 1774 004c 0623     		movs	r3, #6
 1775 004e FB71     		strb	r3, [r7, #7]
 1776 0050 0DE0     		b	.L75
 1777              	.L77:
 996:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       }
 997:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       else
 998:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       {
 999:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         if((FLASH->SR & FLASH_FLAG_OPERR) != (uint32_t)0x00)
 1778              		.loc 1 999 0
 1779 0052 4FF47053 		mov	r3, #15360
 1780 0056 C4F20203 		movt	r3, 16386
 1781 005a DB68     		ldr	r3, [r3, #12]
 1782 005c 03F00203 		and	r3, r3, #2
 1783 0060 002B     		cmp	r3, #0
 1784 0062 02D0     		beq	.L78
1000:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         {
1001:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****           flashstatus = FLASH_ERROR_OPERATION;
 1785              		.loc 1 1001 0
 1786 0064 0723     		movs	r3, #7
 1787 0066 FB71     		strb	r3, [r7, #7]
 1788 0068 01E0     		b	.L75
 1789              	.L78:
1002:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         }
1003:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         else
1004:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         {
1005:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****           flashstatus = FLASH_COMPLETE;
 1790              		.loc 1 1005 0
 1791 006a 0823     		movs	r3, #8
 1792 006c FB71     		strb	r3, [r7, #7]
 1793              	.L75:
1006:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****         }
1007:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****       }
1008:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     }
1009:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
1010:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the FLASH Status */
1011:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return flashstatus;
 1794              		.loc 1 1011 0
 1795 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1012:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1796              		.loc 1 1012 0
 1797 0070 1846     		mov	r0, r3
 1798 0072 0C37     		adds	r7, r7, #12
 1799 0074 BD46     		mov	sp, r7
 1800              		@ sp needed
 1801 0076 5DF8047B 		ldr	r7, [sp], #4
 1802 007a 7047     		bx	lr
 1803              		.cfi_endproc
 1804              	.LFE138:
 1806              		.section	.text.FLASH_WaitForLastOperation,"ax",%progbits
 1807              		.align	2
 1808              		.global	FLASH_WaitForLastOperation
 1809              		.thumb
 1810              		.thumb_func
 1812              	FLASH_WaitForLastOperation:
 1813              	.LFB139:
1013:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
1014:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** /**
1015:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @brief  Waits for a FLASH operation to complete.
1016:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @param  None
1017:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   * @retval FLASH Status: The returned value can be: FLASH_BUSY, FLASH_ERROR_PROGRAM,
1018:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   *                       FLASH_ERROR_WRP, FLASH_ERROR_OPERATION or FLASH_COMPLETE.
1019:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   */
1020:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** FLASH_Status FLASH_WaitForLastOperation(void)
1021:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** { 
 1814              		.loc 1 1021 0
 1815              		.cfi_startproc
 1816              		@ args = 0, pretend = 0, frame = 8
 1817              		@ frame_needed = 1, uses_anonymous_args = 0
 1818 0000 80B5     		push	{r7, lr}
 1819              	.LCFI78:
 1820              		.cfi_def_cfa_offset 8
 1821              		.cfi_offset 7, -8
 1822              		.cfi_offset 14, -4
 1823 0002 82B0     		sub	sp, sp, #8
 1824              	.LCFI79:
 1825              		.cfi_def_cfa_offset 16
 1826 0004 00AF     		add	r7, sp, #0
 1827              	.LCFI80:
 1828              		.cfi_def_cfa_register 7
1022:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   __IO FLASH_Status status = FLASH_COMPLETE;
 1829              		.loc 1 1022 0
 1830 0006 0823     		movs	r3, #8
 1831 0008 FB71     		strb	r3, [r7, #7]
1023:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****    
1024:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Check for the FLASH Status */
1025:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   status = FLASH_GetStatus();
 1832              		.loc 1 1025 0
 1833 000a FFF7FEFF 		bl	FLASH_GetStatus
 1834 000e 0346     		mov	r3, r0
 1835 0010 FB71     		strb	r3, [r7, #7]
1026:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** 
1027:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Wait for the FLASH operation to complete by polling on BUSY flag to be reset.
1028:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      Even if the FLASH operation fails, the BUSY flag will be reset and an error
1029:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****      flag will be set */
1030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   while(status == FLASH_BUSY)
 1836              		.loc 1 1030 0
 1837 0012 03E0     		b	.L81
 1838              	.L82:
1031:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
1032:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****     status = FLASH_GetStatus();
 1839              		.loc 1 1032 0
 1840 0014 FFF7FEFF 		bl	FLASH_GetStatus
 1841 0018 0346     		mov	r3, r0
 1842 001a FB71     		strb	r3, [r7, #7]
 1843              	.L81:
1030:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   {
 1844              		.loc 1 1030 0 discriminator 1
 1845 001c FB79     		ldrb	r3, [r7, #7]
 1846 001e DBB2     		uxtb	r3, r3
 1847 0020 012B     		cmp	r3, #1
 1848 0022 F7D0     		beq	.L82
1033:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   }
1034:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   /* Return the operation status */
1035:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c ****   return status;
 1849              		.loc 1 1035 0
 1850 0024 FB79     		ldrb	r3, [r7, #7]
 1851 0026 DBB2     		uxtb	r3, r3
1036:libs/STM32F4xx_StdPeriph_Driver/src/stm32f4xx_flash.c **** }
 1852              		.loc 1 1036 0
 1853 0028 1846     		mov	r0, r3
 1854 002a 0837     		adds	r7, r7, #8
 1855 002c BD46     		mov	sp, r7
 1856              		@ sp needed
 1857 002e 80BD     		pop	{r7, pc}
 1858              		.cfi_endproc
 1859              	.LFE139:
 1861              		.text
 1862              	.Letext0:
 1863              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 1864              		.file 3 "/usr/include/newlib/stdint.h"
 1865              		.file 4 "libs/Device/STM32F4xx/Include/stm32f4xx.h"
 1866              		.file 5 "libs/STM32F4xx_StdPeriph_Driver/inc/stm32f4xx_flash.h"
 1867              		.file 6 "libs/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_flash.c
     /tmp/ccQHvuZv.s:20     .text.FLASH_SetLatency:0000000000000000 $t
     /tmp/ccQHvuZv.s:25     .text.FLASH_SetLatency:0000000000000000 FLASH_SetLatency
     /tmp/ccQHvuZv.s:60     .text.FLASH_PrefetchBufferCmd:0000000000000000 $t
     /tmp/ccQHvuZv.s:65     .text.FLASH_PrefetchBufferCmd:0000000000000000 FLASH_PrefetchBufferCmd
     /tmp/ccQHvuZv.s:117    .text.FLASH_InstructionCacheCmd:0000000000000000 $t
     /tmp/ccQHvuZv.s:122    .text.FLASH_InstructionCacheCmd:0000000000000000 FLASH_InstructionCacheCmd
     /tmp/ccQHvuZv.s:174    .text.FLASH_DataCacheCmd:0000000000000000 $t
     /tmp/ccQHvuZv.s:179    .text.FLASH_DataCacheCmd:0000000000000000 FLASH_DataCacheCmd
     /tmp/ccQHvuZv.s:231    .text.FLASH_InstructionCacheReset:0000000000000000 $t
     /tmp/ccQHvuZv.s:236    .text.FLASH_InstructionCacheReset:0000000000000000 FLASH_InstructionCacheReset
     /tmp/ccQHvuZv.s:267    .text.FLASH_DataCacheReset:0000000000000000 $t
     /tmp/ccQHvuZv.s:272    .text.FLASH_DataCacheReset:0000000000000000 FLASH_DataCacheReset
     /tmp/ccQHvuZv.s:303    .text.FLASH_Unlock:0000000000000000 $t
     /tmp/ccQHvuZv.s:308    .text.FLASH_Unlock:0000000000000000 FLASH_Unlock
     /tmp/ccQHvuZv.s:350    .text.FLASH_Lock:0000000000000000 $t
     /tmp/ccQHvuZv.s:355    .text.FLASH_Lock:0000000000000000 FLASH_Lock
     /tmp/ccQHvuZv.s:386    .text.FLASH_EraseSector:0000000000000000 $t
     /tmp/ccQHvuZv.s:391    .text.FLASH_EraseSector:0000000000000000 FLASH_EraseSector
     /tmp/ccQHvuZv.s:1812   .text.FLASH_WaitForLastOperation:0000000000000000 FLASH_WaitForLastOperation
     /tmp/ccQHvuZv.s:532    .text.FLASH_EraseAllSectors:0000000000000000 $t
     /tmp/ccQHvuZv.s:537    .text.FLASH_EraseAllSectors:0000000000000000 FLASH_EraseAllSectors
     /tmp/ccQHvuZv.s:659    .text.FLASH_ProgramDoubleWord:0000000000000000 $t
     /tmp/ccQHvuZv.s:664    .text.FLASH_ProgramDoubleWord:0000000000000000 FLASH_ProgramDoubleWord
     /tmp/ccQHvuZv.s:747    .text.FLASH_ProgramWord:0000000000000000 $t
     /tmp/ccQHvuZv.s:752    .text.FLASH_ProgramWord:0000000000000000 FLASH_ProgramWord
     /tmp/ccQHvuZv.s:835    .text.FLASH_ProgramHalfWord:0000000000000000 $t
     /tmp/ccQHvuZv.s:840    .text.FLASH_ProgramHalfWord:0000000000000000 FLASH_ProgramHalfWord
     /tmp/ccQHvuZv.s:924    .text.FLASH_ProgramByte:0000000000000000 $t
     /tmp/ccQHvuZv.s:929    .text.FLASH_ProgramByte:0000000000000000 FLASH_ProgramByte
     /tmp/ccQHvuZv.s:1012   .text.FLASH_OB_Unlock:0000000000000000 $t
     /tmp/ccQHvuZv.s:1017   .text.FLASH_OB_Unlock:0000000000000000 FLASH_OB_Unlock
     /tmp/ccQHvuZv.s:1060   .text.FLASH_OB_Lock:0000000000000000 $t
     /tmp/ccQHvuZv.s:1065   .text.FLASH_OB_Lock:0000000000000000 FLASH_OB_Lock
     /tmp/ccQHvuZv.s:1096   .text.FLASH_OB_WRPConfig:0000000000000000 $t
     /tmp/ccQHvuZv.s:1101   .text.FLASH_OB_WRPConfig:0000000000000000 FLASH_OB_WRPConfig
     /tmp/ccQHvuZv.s:1174   .text.FLASH_OB_RDPConfig:0000000000000000 $t
     /tmp/ccQHvuZv.s:1179   .text.FLASH_OB_RDPConfig:0000000000000000 FLASH_OB_RDPConfig
     /tmp/ccQHvuZv.s:1224   .text.FLASH_OB_UserConfig:0000000000000000 $t
     /tmp/ccQHvuZv.s:1229   .text.FLASH_OB_UserConfig:0000000000000000 FLASH_OB_UserConfig
     /tmp/ccQHvuZv.s:1297   .text.FLASH_OB_BORConfig:0000000000000000 $t
     /tmp/ccQHvuZv.s:1302   .text.FLASH_OB_BORConfig:0000000000000000 FLASH_OB_BORConfig
     /tmp/ccQHvuZv.s:1352   .text.FLASH_OB_Launch:0000000000000000 $t
     /tmp/ccQHvuZv.s:1357   .text.FLASH_OB_Launch:0000000000000000 FLASH_OB_Launch
     /tmp/ccQHvuZv.s:1403   .text.FLASH_OB_GetUser:0000000000000000 $t
     /tmp/ccQHvuZv.s:1408   .text.FLASH_OB_GetUser:0000000000000000 FLASH_OB_GetUser
     /tmp/ccQHvuZv.s:1438   .text.FLASH_OB_GetWRP:0000000000000000 $t
     /tmp/ccQHvuZv.s:1443   .text.FLASH_OB_GetWRP:0000000000000000 FLASH_OB_GetWRP
     /tmp/ccQHvuZv.s:1472   .text.FLASH_OB_GetRDP:0000000000000000 $t
     /tmp/ccQHvuZv.s:1477   .text.FLASH_OB_GetRDP:0000000000000000 FLASH_OB_GetRDP
     /tmp/ccQHvuZv.s:1526   .text.FLASH_OB_GetBOR:0000000000000000 $t
     /tmp/ccQHvuZv.s:1531   .text.FLASH_OB_GetBOR:0000000000000000 FLASH_OB_GetBOR
     /tmp/ccQHvuZv.s:1562   .text.FLASH_ITConfig:0000000000000000 $t
     /tmp/ccQHvuZv.s:1567   .text.FLASH_ITConfig:0000000000000000 FLASH_ITConfig
     /tmp/ccQHvuZv.s:1623   .text.FLASH_GetFlagStatus:0000000000000000 $t
     /tmp/ccQHvuZv.s:1628   .text.FLASH_GetFlagStatus:0000000000000000 FLASH_GetFlagStatus
     /tmp/ccQHvuZv.s:1679   .text.FLASH_ClearFlag:0000000000000000 $t
     /tmp/ccQHvuZv.s:1684   .text.FLASH_ClearFlag:0000000000000000 FLASH_ClearFlag
     /tmp/ccQHvuZv.s:1717   .text.FLASH_GetStatus:0000000000000000 $t
     /tmp/ccQHvuZv.s:1722   .text.FLASH_GetStatus:0000000000000000 FLASH_GetStatus
     /tmp/ccQHvuZv.s:1807   .text.FLASH_WaitForLastOperation:0000000000000000 $t
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
